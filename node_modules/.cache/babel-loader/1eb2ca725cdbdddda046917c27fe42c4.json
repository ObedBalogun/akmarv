{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('code', 'required:true, eg:BIL099').build('item_code', 'required:true, eg:AT099').build('customer', 'required:true, eg:08038291822').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT, {\n      throw_error: true\n    });\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    params.method = \"GET\";\n    return _rave.request(`v3/bill-items/${params.item_code}/validate?code=${params.code}&customer=${params.customer}`, params);\n  }).then(resp => {\n    d.resolve(resp.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/bills/rave.validate-bill.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","throw_error","params","then","method","request","item_code","code","customer","resp","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAIA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GACXC,KADW,CACL,MADK,EACG,0BADH,EAEXA,KAFW,CAEL,WAFK,EAEQ,yBAFR,EAGXA,KAHW,CAGL,UAHK,EAGO,+BAHP,EAIXC,GAJW,EAAb;;AAQA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AACAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,EAA8C;AAACC,MAAAA,WAAW,EAAC;AAAb,KAA9C,CAAhB;AACA,QAAIC,MAAM,GAAGJ,SAAS,CAACI,MAAvB;AAEA,WAAQA,MAAR;AAEA,GAPF,EAQEC,IARF,CAQOD,MAAM,IAAI;AAGfA,IAAAA,MAAM,CAACE,MAAP,GAAgB,KAAhB;AACA,WAAOV,KAAK,CAACW,OAAN,CAAe,iBAAgBH,MAAM,CAACI,SAAU,kBAAiBJ,MAAM,CAACK,IAAK,aAAYL,MAAM,CAACM,QAAS,EAAzG,EAA4GN,MAA5G,CAAP;AACA,GAbF,EAcEC,IAdF,CAcOM,IAAI,IAAI;AAEbd,IAAAA,CAAC,CAACe,OAAF,CAAUD,IAAI,CAACE,IAAf;AAEA,GAlBF,EAmBEC,KAnBF,CAmBQC,GAAG,IAAI;AAEblB,IAAAA,CAAC,CAACmB,MAAF,CAASD,GAAT;AAEA,GAvBF;AAyBA,SAAOlB,CAAC,CAACoB,OAAT;AAEA;;AACDvB,OAAO,CAACwB,OAAR,GAAkB3B,IAAlB;AACA4B,MAAM,CAACC,OAAP,GAAiB1B,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\n\nconst spec = morx.spec()\n\t.build('code', 'required:true, eg:BIL099')\n\t.build('item_code', 'required:true, eg:AT099')\n\t.build('customer', 'required:true, eg:08038291822')\n\t.end();\n\n\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT, {throw_error:true});\n\t\t\tvar params = validated.params;\n\n\t\t\treturn (params);\n\n\t\t})\n\t\t.then(params => {\n\n\n\t\t\tparams.method = \"GET\"\n\t\t\treturn _rave.request(`v3/bill-items/${params.item_code}/validate?code=${params.code}&customer=${params.customer}`, params)\n\t\t})\n\t\t.then(resp => {\n\n\t\t\td.resolve(resp.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t});\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}