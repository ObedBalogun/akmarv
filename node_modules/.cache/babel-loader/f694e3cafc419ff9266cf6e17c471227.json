{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('account_bank', 'required:true, eg:044').build('account_number', 'required:true,validators:isNumeric, eg:06900021').build('amount', 'required:true, eg:10').build('narration', 'required:false,eg:New transfer').build('currency', 'required:true,eg:NGN').build('debit_currency', 'required:false, e.g:NGN').build('reference', 'required:required,eg:mk-902837-jk').build('destination_branch_code', 'required:false').build('beneficiary', 'required:false').build('beneficiary_name', 'required:false').build('callback_url', 'required:false').build('debit_currency', 'required:false').build('meta', 'required:false').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    return _rave.request('v3/transfers', params);\n  }).then(resp => {\n    d.resolve(resp.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/transfers/rave.initiate.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","params","then","request","resp","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAGA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GACXC,KADW,CACL,cADK,EACW,uBADX,EAEXA,KAFW,CAEL,gBAFK,EAEa,iDAFb,EAGXA,KAHW,CAGL,QAHK,EAGK,sBAHL,EAIXA,KAJW,CAIL,WAJK,EAIQ,gCAJR,EAKXA,KALW,CAKL,UALK,EAKO,sBALP,EAMXA,KANW,CAML,gBANK,EAMa,yBANb,EAOXA,KAPW,CAOL,WAPK,EAOQ,mCAPR,EAQXA,KARW,CAQL,yBARK,EAQsB,gBARtB,EASXA,KATW,CASL,aATK,EASU,gBATV,EAUXA,KAVW,CAUL,kBAVK,EAUe,gBAVf,EAWXA,KAXW,CAWL,cAXK,EAWW,gBAXX,EAYXA,KAZW,CAYL,gBAZK,EAYa,gBAZb,EAaXA,KAbW,CAaL,MAbK,EAaG,gBAbH,EAcXC,GAdW,EAAb;;AAiBA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AACAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,CAAhB;AACA,QAAIC,MAAM,GAAGH,SAAS,CAACG,MAAvB;AAEA,WAAQA,MAAR;AAEA,GAPF,EAQEC,IARF,CAQOD,MAAM,IAAI;AAEf,WAAOP,KAAK,CAACS,OAAN,CAAc,cAAd,EAA8BF,MAA9B,CAAP;AACA,GAXF,EAYEC,IAZF,CAYOE,IAAI,IAAI;AAEbT,IAAAA,CAAC,CAACU,OAAF,CAAUD,IAAI,CAACE,IAAf;AAEA,GAhBF,EAiBEC,KAjBF,CAiBQC,GAAG,IAAI;AAEbb,IAAAA,CAAC,CAACc,MAAF,CAASD,GAAT;AAEA,GArBF;AAuBA,SAAOb,CAAC,CAACe,OAAT;AAEA;;AACDlB,OAAO,CAACmB,OAAR,GAAkBtB,IAAlB;AACAuB,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\nconst spec = morx.spec()\n\t.build('account_bank', 'required:true, eg:044')\n\t.build('account_number', 'required:true,validators:isNumeric, eg:06900021')\n\t.build('amount', 'required:true, eg:10')\n\t.build('narration', 'required:false,eg:New transfer')\n\t.build('currency', 'required:true,eg:NGN')\n\t.build('debit_currency', 'required:false, e.g:NGN')\n\t.build('reference', 'required:required,eg:mk-902837-jk')\n\t.build('destination_branch_code', 'required:false')\n\t.build('beneficiary', 'required:false')\n\t.build('beneficiary_name', 'required:false')\n\t.build('callback_url', 'required:false')\n\t.build('debit_currency', 'required:false')\n\t.build('meta', 'required:false')\n\t.end();\n\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n\t\t\tvar params = validated.params;\n\n\t\t\treturn (params);\n\n\t\t})\n\t\t.then(params => {\n\n\t\t\treturn _rave.request('v3/transfers', params)\n\t\t})\n\t\t.then(resp => {\n\n\t\t\td.resolve(resp.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t});\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}