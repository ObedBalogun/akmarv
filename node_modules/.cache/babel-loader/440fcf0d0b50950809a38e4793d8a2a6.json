{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nvar spec = morx.spec().end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT, {\n      throw_error: true\n    });\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    // params.seckey = _rave.getSecretKey();\n    params.method = \"GET\";\n    var uri = `v3/billers`;\n    return _rave.request(uri, params);\n  }).then(response => {\n    d.resolve(response.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/bills/rave.get.bill-payment-agencies.js"],"names":["morx","require","q","spec","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","throw_error","params","then","method","uri","request","response","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAEA,IAAIE,IAAI,GAAGH,IAAI,CAACG,IAAL,GAETC,GAFS,EAAX;;AAKA,SAASC,OAAT,CAAiBC,IAAjB,EAAsBC,KAAtB,EAA6B;AAE5B,MAAIC,CAAC,GAAGN,CAAC,CAACO,KAAF,EAAR;AAEAP,EAAAA,CAAC,CAACQ,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGX,IAAI,CAACY,QAAL,CAAcN,IAAd,EAAmBH,IAAnB,EAAyBI,KAAK,CAACM,YAA/B,EAA8C;AAACC,MAAAA,WAAW,EAAC;AAAb,KAA9C,CAAhB;AACA,QAAIC,MAAM,GAAGJ,SAAS,CAACI,MAAvB;AAEA,WAAOA,MAAP;AAGA,GARF,EASEC,IATF,CASOD,MAAM,IAAI;AAEf;AACAA,IAAAA,MAAM,CAACE,MAAP,GAAgB,KAAhB;AACA,QAAIC,GAAG,GAAI,YAAX;AAEA,WAAOX,KAAK,CAACY,OAAN,CAAcD,GAAd,EAAmBH,MAAnB,CAAP;AAEA,GAjBF,EAkBEC,IAlBF,CAkBOI,QAAQ,IAAI;AAGjBZ,IAAAA,CAAC,CAACa,OAAF,CAAUD,QAAQ,CAACE,IAAnB;AAEA,GAvBF,EAwBEC,KAxBF,CAwBQC,GAAG,IAAI;AAEbhB,IAAAA,CAAC,CAACiB,MAAF,CAASD,GAAT;AAEA,GA5BF;AA8BA,SAAOhB,CAAC,CAACkB,OAAT;AAEA;;AACDrB,OAAO,CAACsB,OAAR,GAAkBxB,IAAlB;AACAyB,MAAM,CAACC,OAAP,GAAiBxB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\nvar spec = morx.spec()\n\n\t.end();\n\n\nfunction service(data,_rave) {\n\n\tvar d = q.defer();\n\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data,spec, _rave.MORX_DEFAULT , {throw_error:true});\n\t\t\tvar params = validated.params;\n\n\t\t\treturn params\n\n\n\t\t})\n\t\t.then(params => {\n\n\t\t\t// params.seckey = _rave.getSecretKey();\n\t\t\tparams.method = \"GET\";\n\t\t\tvar uri = `v3/billers`\n\n\t\t\treturn _rave.request(uri, params)\n\n\t\t})\n\t\t.then(response => {\n\n\n\t\t\td.resolve(response.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t})\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}