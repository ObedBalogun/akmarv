{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('amount', 'required:true, eg:5000').build('name', 'required:true, eg:Monthly Nepa Bill Collection').build('interval', 'required:true, eg:monthly').build('duration', 'required:true, eg:24').end();\n\nfunction service(data, _rave) {\n  const d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n    var params = validated.params; // _rave.params = params\n    // console.log(params)\n\n    return params;\n  }).then(params => {\n    // params.seckey = _rave.getSecretKey();\n    params.method = \"POST\";\n    var uri = `v3/payment-plans`;\n    return _rave.request(uri, params);\n  }).then(response => {\n    // console.log(response.body);\n    d.resolve(response.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/payment-plans/rave.create.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","params","then","method","uri","request","response","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAGA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GACXC,KADW,CACL,QADK,EACK,wBADL,EAEXA,KAFW,CAEL,MAFK,EAEG,gDAFH,EAGXA,KAHW,CAGL,UAHK,EAGO,2BAHP,EAIXA,KAJW,CAIL,UAJK,EAIO,sBAJP,EAKXC,GALW,EAAb;;AAOA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,QAAMC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAV;AAEAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,CAAhB;AACA,QAAIC,MAAM,GAAGH,SAAS,CAACG,MAAvB,CAHY,CAIZ;AACA;;AACA,WAAOA,MAAP;AAGA,GATF,EAUEC,IAVF,CAUOD,MAAM,IAAI;AAEf;AACAA,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAhB;AACA,QAAIC,GAAG,GAAI,kBAAX;AAEA,WAAOV,KAAK,CAACW,OAAN,CAAcD,GAAd,EAAmBH,MAAnB,CAAP;AAEA,GAlBF,EAmBEC,IAnBF,CAmBOI,QAAQ,IAAI;AAEjB;AACAX,IAAAA,CAAC,CAACY,OAAF,CAAUD,QAAQ,CAACE,IAAnB;AAEA,GAxBF,EAyBEC,KAzBF,CAyBQC,GAAG,IAAI;AAEbf,IAAAA,CAAC,CAACgB,MAAF,CAASD,GAAT;AAEA,GA7BF;AA+BA,SAAOf,CAAC,CAACiB,OAAT;AAEA;;AACDpB,OAAO,CAACqB,OAAR,GAAkBxB,IAAlB;AACAyB,MAAM,CAACC,OAAP,GAAiBvB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\nconst spec = morx.spec()\n\t.build('amount', 'required:true, eg:5000')\n\t.build('name', 'required:true, eg:Monthly Nepa Bill Collection')\n\t.build('interval', 'required:true, eg:monthly')\n\t.build('duration', 'required:true, eg:24')\n\t.end();\n\nfunction service(data, _rave) {\n\n\tconst d = q.defer();\n\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n\t\t\tvar params = validated.params;\n\t\t\t// _rave.params = params\n\t\t\t// console.log(params)\n\t\t\treturn params\n\n\n\t\t})\n\t\t.then(params => {\n\n\t\t\t// params.seckey = _rave.getSecretKey();\n\t\t\tparams.method = \"POST\";\n\t\t\tvar uri = `v3/payment-plans`\n\n\t\t\treturn _rave.request(uri, params)\n\n\t\t})\n\t\t.then(response => {\n\n\t\t\t// console.log(response.body);\n\t\t\td.resolve(response.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t})\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}