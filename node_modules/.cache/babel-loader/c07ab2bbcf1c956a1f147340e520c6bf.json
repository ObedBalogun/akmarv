{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('account_bank', 'required:true, eg:044').build('merchant_id', 'required:true,validators:isNumeric, eg:06900021').build('amount', 'required:true, eg:10').build('narration', 'required:false,eg:New transfer').build('currency', 'required:required,eg:NGN').build('debit_currency', 'required:required, e.g:NGN').build('reference', 'required:required,eg:mk-902837-jk').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    params.account_number = params.merchant_id;\n    return _rave.request('v3/transfers', params);\n  }).then(resp => {\n    d.resolve(resp.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/transfers/rave.wallet.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","params","then","account_number","merchant_id","request","resp","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAGA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GACXC,KADW,CACL,cADK,EACW,uBADX,EAEXA,KAFW,CAEL,aAFK,EAEU,iDAFV,EAGXA,KAHW,CAGL,QAHK,EAGK,sBAHL,EAIXA,KAJW,CAIL,WAJK,EAIQ,gCAJR,EAKXA,KALW,CAKL,UALK,EAKO,0BALP,EAMXA,KANW,CAML,gBANK,EAMa,4BANb,EAOXA,KAPW,CAOL,WAPK,EAOQ,mCAPR,EAQXC,GARW,EAAb;;AAWA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AACAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,CAAhB;AACS,QAAIC,MAAM,GAAGH,SAAS,CAACG,MAAvB;AAGT,WAAQA,MAAR;AAEA,GARF,EASEC,IATF,CASOD,MAAM,IAAI;AACPA,IAAAA,MAAM,CAACE,cAAP,GAAsBF,MAAM,CAACG,WAA7B;AACR,WAAOV,KAAK,CAACW,OAAN,CAAc,cAAd,EAA8BJ,MAA9B,CAAP;AACA,GAZF,EAaEC,IAbF,CAaOI,IAAI,IAAI;AAEbX,IAAAA,CAAC,CAACY,OAAF,CAAUD,IAAI,CAACE,IAAf;AAEA,GAjBF,EAkBEC,KAlBF,CAkBQC,GAAG,IAAI;AAEbf,IAAAA,CAAC,CAACgB,MAAF,CAASD,GAAT;AAEA,GAtBF;AAwBA,SAAOf,CAAC,CAACiB,OAAT;AAEA;;AACDpB,OAAO,CAACqB,OAAR,GAAkBxB,IAAlB;AACAyB,MAAM,CAACC,OAAP,GAAiBvB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\nconst spec = morx.spec()\n\t.build('account_bank', 'required:true, eg:044')\n\t.build('merchant_id', 'required:true,validators:isNumeric, eg:06900021')\n\t.build('amount', 'required:true, eg:10')\n\t.build('narration', 'required:false,eg:New transfer')\n\t.build('currency', 'required:required,eg:NGN')\n\t.build('debit_currency', 'required:required, e.g:NGN')\n\t.build('reference', 'required:required,eg:mk-902837-jk')\n\t.end();\n\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n            var params = validated.params;\n            \n\n\t\t\treturn (params);\n\n\t\t})\n\t\t.then(params => {\n           params.account_number=params.merchant_id\n\t\t\treturn _rave.request('v3/transfers', params)\n\t\t})\n\t\t.then(resp => {\n\n\t\t\td.resolve(resp.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t});\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}