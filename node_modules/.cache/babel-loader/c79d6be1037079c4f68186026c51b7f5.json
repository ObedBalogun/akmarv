{"ast":null,"code":"var morx = require('morx');\n\nvar q = require('q');\n\nvar spec = morx.spec().build('currency', 'required:true, eg:NGN').build('amount', 'required:true, eg:1000').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    // params.seckey = _rave.getSecretKey();\n    params.method = \"GET\";\n    var uri = `v3/transfers/fee?currency=${params.currency}&amount=${params.amount}`;\n    return _rave.request(uri, params);\n  }).then(response => {\n    // console.log(response.body);\n    d.resolve(response.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/transfers/rave.fee.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","params","then","method","uri","currency","amount","request","response","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAf;;AAGA,IAAIE,IAAI,GAAGH,IAAI,CAACG,IAAL,GACTC,KADS,CACH,UADG,EACS,uBADT,EAETA,KAFS,CAEH,QAFG,EAEO,wBAFP,EAGTC,GAHS,EAAX;;AAKA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AAEAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,CAAhB;AACA,QAAIC,MAAM,GAAGH,SAAS,CAACG,MAAvB;AAEA,WAAOA,MAAP;AAGA,GARF,EASEC,IATF,CASOD,MAAM,IAAI;AAEf;AACAA,IAAAA,MAAM,CAACE,MAAP,GAAgB,KAAhB;AACA,QAAIC,GAAG,GAAI,6BAA4BH,MAAM,CAACI,QAAS,WAAUJ,MAAM,CAACK,MAAO,EAA/E;AAEA,WAAOZ,KAAK,CAACa,OAAN,CAAcH,GAAd,EAAmBH,MAAnB,CAAP;AAEA,GAjBF,EAkBEC,IAlBF,CAkBOM,QAAQ,IAAI;AAEjB;AACAb,IAAAA,CAAC,CAACc,OAAF,CAAUD,QAAQ,CAACE,IAAnB;AAEA,GAvBF,EAwBEC,KAxBF,CAwBQC,GAAG,IAAI;AAEbjB,IAAAA,CAAC,CAACkB,MAAF,CAASD,GAAT;AAEA,GA5BF;AA8BA,SAAOjB,CAAC,CAACmB,OAAT;AAEA;;AACDtB,OAAO,CAACuB,OAAR,GAAkB1B,IAAlB;AACA2B,MAAM,CAACC,OAAP,GAAiBzB,OAAjB","sourcesContent":["var morx = require('morx');\nvar q = require('q');\n\n\nvar spec = morx.spec()\n\t.build('currency', 'required:true, eg:NGN')\n\t.build('amount', 'required:true, eg:1000')\n\t.end();\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n\t\t\tvar params = validated.params;\n\n\t\t\treturn params\n\n\n\t\t})\n\t\t.then(params => {\n\n\t\t\t// params.seckey = _rave.getSecretKey();\n\t\t\tparams.method = \"GET\";\n\t\t\tvar uri = `v3/transfers/fee?currency=${params.currency}&amount=${params.amount}`\n\n\t\t\treturn _rave.request(uri, params)\n\n\t\t})\n\t\t.then(response => {\n\n\t\t\t// console.log(response.body);\n\t\t\td.resolve(response.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t})\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}