{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('bulk_reference', 'required:true, eg:edf-12de5223d2f32').build('callback_url', 'required:true, eg:https://webhook.site/5f9a659a-11a2-4925-89cf-8a59ea6a019a').build('bulk_data', 'required:true, eg:[{\"country\": \"NG\", \"customer\": \"+23490803840303\",\"amount\": 500,\"recurrence\": \"WEEKLY\", \"type\": \"AIRTIME\", \"reference\": \"930049200929\" },{ \"country\": \"NG\",\"customer\": \"+23490803840304\",\"amount\": 500, \"recurrence\": \"WEEKLY\",\"type\": \"AIRTIME\", \"reference\": \"930004912332\" }]').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT, {\n      throw_error: true\n    });\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    params.method = \"POST\";\n    return _rave.request('v3/bulk-bills', params);\n  }).then(resp => {\n    d.resolve(resp.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/bills/rave.create-bulk.bills.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","throw_error","params","then","method","request","resp","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAIA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GAEXC,KAFW,CAEL,gBAFK,EAEa,qCAFb,EAGXA,KAHW,CAGL,cAHK,EAGW,6EAHX,EAIXA,KAJW,CAIL,WAJK,EAIQ,mSAJR,EAMXC,GANW,EAAb;;AAUA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AACAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,EAA+C;AAACC,MAAAA,WAAW,EAAC;AAAb,KAA/C,CAAhB;AACA,QAAIC,MAAM,GAAGJ,SAAS,CAACI,MAAvB;AAEA,WAAQA,MAAR;AAEA,GAPF,EAQEC,IARF,CAQOD,MAAM,IAAI;AACfA,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAhB;AAEA,WAAOV,KAAK,CAACW,OAAN,CAAc,eAAd,EAA+BH,MAA/B,CAAP;AACA,GAZF,EAaEC,IAbF,CAaOG,IAAI,IAAI;AAEbX,IAAAA,CAAC,CAACY,OAAF,CAAUD,IAAI,CAACE,IAAf;AAEA,GAjBF,EAkBEC,KAlBF,CAkBQC,GAAG,IAAI;AAEbf,IAAAA,CAAC,CAACgB,MAAF,CAASD,GAAT;AAEA,GAtBF;AAwBA,SAAOf,CAAC,CAACiB,OAAT;AAEA;;AACDpB,OAAO,CAACqB,OAAR,GAAkBxB,IAAlB;AACAyB,MAAM,CAACC,OAAP,GAAiBvB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\n\nconst spec = morx.spec()\n\n\t.build('bulk_reference', 'required:true, eg:edf-12de5223d2f32')\n\t.build('callback_url', 'required:true, eg:https://webhook.site/5f9a659a-11a2-4925-89cf-8a59ea6a019a')\n\t.build('bulk_data', 'required:true, eg:[{\"country\": \"NG\", \"customer\": \"+23490803840303\",\"amount\": 500,\"recurrence\": \"WEEKLY\", \"type\": \"AIRTIME\", \"reference\": \"930049200929\" },{ \"country\": \"NG\",\"customer\": \"+23490803840304\",\"amount\": 500, \"recurrence\": \"WEEKLY\",\"type\": \"AIRTIME\", \"reference\": \"930004912332\" }]')\n\n\t.end();\n\n\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT,  {throw_error:true});\n\t\t\tvar params = validated.params;\n\n\t\t\treturn (params);\n\n\t\t})\n\t\t.then(params => {\n\t\t\tparams.method = \"POST\"\n\n\t\t\treturn _rave.request('v3/bulk-bills', params)\n\t\t})\n\t\t.then(resp => {\n\n\t\t\td.resolve(resp.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t});\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}