{"ast":null,"code":"import $ from 'jquery';\n\nfunction getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  const csrftoken = getCookie('csrftoken');\n\n  function csrfSafeMethod(method) {\n    return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);\n  }\n\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n\n  if (method === 'GET') {\n    $.ajaxSetup({\n      beforeSend: function (xhr, settings) {\n        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n          xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n        }\n      }\n    });\n    $.ajax({\n      url: endpoint,\n      data: data,\n      type: method,\n      dataType: \"json\",\n      success: function (xhr) {\n        callback(xhr.data, xhr.status);\n      },\n      error: function (e) {\n        console.log(e);\n        callback({\n          \"message\": \"The request was an error\"\n        }, 400);\n      }\n    });\n  }\n\n  if (method === 'POST') {\n    $.ajaxSetup({\n      beforeSend: function (xhr, settings) {\n        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n          xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n        }\n      }\n    });\n    $.ajax({\n      url: endpoint,\n      data: data,\n      type: method,\n      dataType: \"json\",\n      beforeSend: function (xhr) {\n        callback(xhr.data, xhr.status);\n      },\n      error: function (e) {\n        console.log(e);\n        callback({\n          \"message\": \"The request was an error\"\n        }, 400);\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/AKMarv/akmarv-react/src/lookup/components.js"],"names":["$","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","csrftoken","csrfSafeMethod","test","JSON","stringify","ajaxSetup","beforeSend","xhr","settings","type","crossDomain","setRequestHeader","ajax","url","dataType","success","status","error","e","console","log"],"mappings":"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","sourcesContent":["import $ from 'jquery';\r\n\r\nfunction getCookie(name) {\r\n            var cookieValue = null;\r\n            if (document.cookie && document.cookie !== '') {\r\n                var cookies = document.cookie.split(';');\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = cookies[i].trim();\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        }\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    function csrfSafeMethod(method) {\r\n        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method))\r\n    }\r\n\r\n\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    if (method === 'GET') {\r\n        $.ajaxSetup({\r\n            beforeSend: function (xhr, settings) {\r\n                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n                    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n                }\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            url: endpoint,\r\n            data: data,\r\n            type: method,\r\n            dataType: \"json\",\r\n            success: function (xhr) {\r\n                callback(xhr.data, xhr.status)\r\n            },\r\n            error: function (e) {\r\n                console.log(e)\r\n                callback({\"message\": \"The request was an error\"}, 400)\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    if (method === 'POST'){\r\n        $.ajaxSetup({\r\n            beforeSend: function (xhr, settings) {\r\n                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n                    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n                }\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            url: endpoint,\r\n            data: data,\r\n            type: method,\r\n            dataType: \"json\",\r\n            beforeSend: function (xhr) {\r\n                callback(xhr.data, xhr.status)\r\n            },\r\n            error: function (e) {\r\n                console.log(e)\r\n                callback({\"message\": \"The request was an error\"}, 400)\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}