{"ast":null,"code":"import $ from'jquery';function getCookie(name){var cookieValue=null;if(document.cookie&&document.cookie!==''){var cookies=document.cookie.split(';');for(var i=0;i<cookies.length;i++){var cookie=cookies[i].trim();// Does this cookie string begin with the name we want?\nif(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}export function backendLookup(method,endpoint,callback,data){var jsonData;var csrftoken=getCookie('csrftoken');function csrfSafeMethod(method){return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);}if(data){jsonData=JSON.stringify(data);}if(method==='GET'){$.ajaxSetup({beforeSend:function beforeSend(xhr,settings){if(!csrfSafeMethod(settings.type)&&!this.crossDomain){xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);}}});$.ajax({url:endpoint,data:data,type:method,dataType:\"json\",success:function success(xhr){callback(xhr.data,xhr.status);},error:function error(e){console.log(e);callback({\"message\":\"The request was an error\"},400);}});}if(method==='POST'){$.ajaxSetup({beforeSend:function beforeSend(xhr,settings){if(!csrfSafeMethod(settings.type)&&!this.crossDomain){xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);}}});$.ajax({url:endpoint,data:data,type:method,dataType:\"json\",success:function success(xhr){callback(xhr.data,xhr.status);console.log(xhr.status);},error:function error(e){console.log(e);callback({\"message\":\"The request was an error\"},400);}});}}export function backendAuthentication(method,endpoint,callback,data){var csrftoken=getCookie('csrftoken');function csrfSafeMethod(method){return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);}$.ajaxSetup({beforeSend:function beforeSend(xhr,settings){if(!csrfSafeMethod(settings.type)&&!this.crossDomain){xhr.setRequestHeader(\"X-CSRFToken\",csrftoken);}}});$.ajax({url:endpoint,data:data,type:method,dataType:\"json\",success:function success(xhr){callback(xhr);},error:function error(e){console.log(e);callback({\"message\":\"The request was an error\"},400);}});}","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/src/lookup/components.js"],"names":["$","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","backendLookup","method","endpoint","callback","data","jsonData","csrftoken","csrfSafeMethod","test","JSON","stringify","ajaxSetup","beforeSend","xhr","settings","type","crossDomain","setRequestHeader","ajax","url","dataType","success","status","error","e","console","log","backendAuthentication"],"mappings":"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","sourcesContent":["import $ from 'jquery';\r\n\r\n\r\nfunction getCookie(name) {\r\n            var cookieValue = null;\r\n            if (document.cookie && document.cookie !== '') {\r\n                var cookies = document.cookie.split(';');\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = cookies[i].trim();\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        }\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    function csrfSafeMethod(method) {\r\n        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method))\r\n    }\r\n\r\n\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    if (method === 'GET') {\r\n        $.ajaxSetup({\r\n            beforeSend: function (xhr, settings) {\r\n                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n                    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n                }\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            url: endpoint,\r\n            data: data,\r\n            type: method,\r\n            dataType: \"json\",\r\n            success: function (xhr) {\r\n                callback(xhr.data, xhr.status)\r\n            },\r\n            error: function (e) {\r\n                console.log(e)\r\n                callback({\"message\": \"The request was an error\"}, 400)\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    if (method === 'POST'){\r\n        $.ajaxSetup({\r\n            beforeSend: function (xhr, settings) {\r\n                if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n                    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n                }\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            url: endpoint,\r\n            data: data,\r\n            type: method,\r\n            dataType: \"json\",\r\n            success: function (xhr){\r\n                callback(xhr.data, xhr.status)\r\n                console.log(xhr.status)\r\n            },\r\n            error: function (e) {\r\n                console.log(e)\r\n                callback({\"message\": \"The request was an error\"}, 400)\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport function backendAuthentication(method, endpoint, callback, data){\r\n\r\n    const csrftoken = getCookie('csrftoken');\r\n\r\n    function csrfSafeMethod(method) {\r\n        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method))\r\n    }\r\n    $.ajaxSetup({\r\n        beforeSend: function (xhr, settings) {\r\n            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n                xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n            }\r\n        }\r\n    })\r\n\r\n    $.ajax({\r\n        url: endpoint,\r\n        data: data,\r\n        type: method,\r\n        dataType: \"json\",\r\n        success: function (xhr) {\r\n            callback(xhr)\r\n        },\r\n        error: function (e) {\r\n            console.log(e)\r\n            callback({\"message\": \"The request was an error\"}, 400)\r\n        }\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}