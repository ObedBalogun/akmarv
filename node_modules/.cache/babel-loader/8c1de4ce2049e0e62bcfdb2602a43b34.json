{"ast":null,"code":"var q = require('q');\n\nvar RaveUtils = require('./rave.utils');\n\nvar Request = require('request');\n\nvar Security = require('./security');\n\nvar RaveBase = function (public_key, secret_key, base_url_or_production_flag) {\n  RaveUtils.emptyCheck(public_key, 'Public Key required');\n  RaveUtils.emptyCheck(secret_key, 'Secret Key required');\n  var public_key = public_key;\n  var secret_key = secret_key; // var base_url      = 'https://rave-api-v2.herokuapp.com/';\n\n  var base_url = 'https://api.flutterwave.com/'; // var base_url='https://ravesandboxapi.flutterwave.com';\n  // var prod_url='https://ravesandboxapi.flutterwave.com'\n  // if (base_url_or_production_flag === true) {\n  // \tbase_url = prod_url;\n  // } else if (typeof base_url_or_production_flag != 'undefined'  && base_url_or_production_flag != '') {\n  // \tbase_url = base_url_or_production_flag;\n  // }\n\n  this.MORX_DEFAULT = {\n    throw_error: true\n  };\n\n  this.getPublicKey = function () {\n    return public_key;\n  };\n\n  this.getSecretKey = function () {\n    return secret_key;\n  };\n\n  this.getBaseUrl = function () {\n    return base_url;\n  };\n\n  this.setBaseUrl = function (new_base_url) {\n    if (new_base_url) {\n      base_url = new_base_url;\n    }\n  };\n\n  this.request = function (path, payload, callback) {\n    var requestOptions = {};\n    var requestMethod = RaveUtils.initDefaultValue(payload.method, 'POST' || 'PUT');\n    var datakey = requestMethod == 'POST' || 'PUT' ? 'body' : 'qs';\n    var requestJSON = datakey == 'body' ? true : false; // console.log(payload)\n\n    requestOptions.uri = path;\n    requestOptions.baseUrl = this.getBaseUrl();\n    requestOptions.method = requestMethod;\n    requestOptions[datakey] = RaveUtils.initDefaultValue(payload, {});\n    requestOptions.json = requestJSON;\n    requestOptions.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.getSecretKey()}`\n    }; // console.log(requestOptions)\n\n    if (callback) {\n      this._makeRequest(requestOptions, callback);\n\n      return requestOptions;\n    } else {\n      return this._makePromiseRequest(requestOptions);\n    }\n  };\n};\n\nRaveBase.prototype.encrypt = function (data) {\n  var encryption_key = Security.getEncryptionKey(this.getSecretKey());\n  return Security.encrypt(encryption_key, JSON.stringify(data));\n};\n\nRaveBase.prototype.getIntegrityHash = function (data) {\n  return Security.getIntegrityHash(data, this.getPublicKey(), this.getSecretKey());\n};\n\nRaveBase.prototype._makeRequest = function (requestOptions, callback) {\n  Request(requestOptions, function (err, res, body) {\n    if (typeof res == \"undefined\") {\n      res = {};\n    }\n\n    if (typeof body == 'undefined') {\n      body = {};\n    }\n\n    callback(err, res, body);\n  });\n};\n\nRaveBase.prototype._makePromiseRequest = function (requestOptions) {\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._makeRequest(requestOptions, function (err, res, body) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res, body);\n      }\n    });\n  });\n};\n\nmodule.exports = RaveBase;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/lib/rave.base.js"],"names":["q","require","RaveUtils","Request","Security","RaveBase","public_key","secret_key","base_url_or_production_flag","emptyCheck","base_url","MORX_DEFAULT","throw_error","getPublicKey","getSecretKey","getBaseUrl","setBaseUrl","new_base_url","request","path","payload","callback","requestOptions","requestMethod","initDefaultValue","method","datakey","requestJSON","uri","baseUrl","json","headers","_makeRequest","_makePromiseRequest","prototype","encrypt","data","encryption_key","getEncryptionKey","JSON","stringify","getIntegrityHash","err","res","body","self","Promise","resolve","reject","module","exports"],"mappings":"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","sourcesContent":["var q = require('q');\nvar RaveUtils = require('./rave.utils');\nvar Request = require('request');\nvar Security = require('./security');\nvar RaveBase = function (public_key, secret_key, base_url_or_production_flag) {\n\tRaveUtils.emptyCheck(public_key, 'Public Key required');\n\tRaveUtils.emptyCheck(secret_key, 'Secret Key required');\n\n\tvar public_key = public_key;\n\tvar secret_key = secret_key;\n\t\n\t// var base_url      = 'https://rave-api-v2.herokuapp.com/';\n\tvar base_url      = 'https://api.flutterwave.com/';\n\n\n\t// var base_url='https://ravesandboxapi.flutterwave.com';\n\t// var prod_url='https://ravesandboxapi.flutterwave.com'\n\n\t// if (base_url_or_production_flag === true) {\n\t// \tbase_url = prod_url;\n\t// } else if (typeof base_url_or_production_flag != 'undefined'  && base_url_or_production_flag != '') {\n\t// \tbase_url = base_url_or_production_flag;\n\t// }\n\n\tthis.MORX_DEFAULT = {\n\t\tthrow_error: true\n\t};\n\n\tthis.getPublicKey = function () {\n\t\treturn public_key;\n\t}\n\n\tthis.getSecretKey = function () {\n\t\treturn secret_key;\n\t}\n\n\tthis.getBaseUrl = function () {\n\t\treturn base_url;\n\t}\n\n\tthis.setBaseUrl = function (new_base_url) {\n\t\tif (new_base_url) {\n\t\t\tbase_url = new_base_url;\n\t\t}\n\t}\n\n\tthis.request = function (path, payload, callback) {\n\n\t\tvar requestOptions = {};\n\t\tvar requestMethod = RaveUtils.initDefaultValue(payload.method, 'POST' || 'PUT');\n\t\tvar datakey = requestMethod == 'POST' || 'PUT' ? 'body' : 'qs';\n\t\tvar requestJSON = datakey == 'body' ? true : false;\n\t\t// console.log(payload)\n\t\trequestOptions.uri = path;\n\t\trequestOptions.baseUrl = this.getBaseUrl();\n\t\trequestOptions.method = requestMethod;\n\t\trequestOptions[datakey] = RaveUtils.initDefaultValue(payload, {});\n\t\trequestOptions.json = requestJSON;\n\t\trequestOptions.headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${this.getSecretKey()}`\n\t\t};\n\n\t\t// console.log(requestOptions)\n\t\tif (callback) {\n\t\t\tthis._makeRequest(requestOptions, callback);\n\t\t\treturn requestOptions;\n\t\t} else {\n\t\t\treturn this._makePromiseRequest(requestOptions);\n\t\t}\n\n\t}\n\n}\n\nRaveBase.prototype.encrypt = function (data) {\n\n\tvar encryption_key = Security.getEncryptionKey(this.getSecretKey());\n\treturn Security.encrypt(encryption_key, JSON.stringify(data));\n\n}\n\nRaveBase.prototype.getIntegrityHash = function (data) {\n\treturn Security.getIntegrityHash(data, this.getPublicKey(), this.getSecretKey());\n}\n\n\nRaveBase.prototype._makeRequest = function (requestOptions, callback) {\n\tRequest(requestOptions,\n\t\tfunction (err, res, body) {\n\t\t\tif (typeof res == \"undefined\") {\n\t\t\t\tres = {};\n\t\t\t}\n\n\t\t\tif (typeof body == 'undefined') {\n\t\t\t\tbody = {};\n\t\t\t}\n\t\t\tcallback(err, res, body);\n\t\t}\n\t);\n}\n\nRaveBase.prototype._makePromiseRequest = function (requestOptions) {\n\tvar self = this;\n\treturn new Promise(function (resolve, reject) {\n\t\tself._makeRequest(requestOptions, function (err, res, body) {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(res, body);\n\t\t\t}\n\t\t});\n\t});\n};\n\n\nmodule.exports = RaveBase;"]},"metadata":{},"sourceType":"script"}