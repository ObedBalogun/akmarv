{"ast":null,"code":"const morx = require('morx');\n\nconst q = require('q');\n\nconst spec = morx.spec().build('account_bank', 'required:true, eg:044').build('account_number', 'required:true,validators:isNumeric, eg:06900021').build('business_name', 'required:true, eg:JK Services').build('business_email', 'required:true, eg:e.ikedieze@gmail.com').build('business_contact', 'required:true, eg:Ikedieze Ndukwe').build('business_contact_mobile', 'required:true, eg:08174111222').build('business_mobile', 'required:false,eg:08030930236').build('meta', 'required:false,eg:[{\"meta_name\": \"MarketplaceID\", \"meta_value\": \"ggs-920900\"}]').build('country', 'required:true, eg:NG').build('split_type', 'required:false,eg:percentage').build('split_value', 'required:false,eg:0.5').end();\n\nfunction service(data, _rave) {\n  var d = q.defer();\n  q.fcall(() => {\n    var validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n    var params = validated.params;\n    return params;\n  }).then(params => {\n    return _rave.request('v3/subaccounts', params);\n  }).then(resp => {\n    d.resolve(resp.body);\n  }).catch(err => {\n    d.reject(err);\n  });\n  return d.promise;\n}\n\nservice.morxspc = spec;\nmodule.exports = service;","map":{"version":3,"sources":["C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/flutterwave-node-v3/services/subaccount/rave.create.js"],"names":["morx","require","q","spec","build","end","service","data","_rave","d","defer","fcall","validated","validate","MORX_DEFAULT","params","then","request","resp","resolve","body","catch","err","reject","promise","morxspc","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,GAAD,CAAjB;;AAIA,MAAME,IAAI,GAAGH,IAAI,CAACG,IAAL,GAEXC,KAFW,CAEL,cAFK,EAEW,uBAFX,EAGXA,KAHW,CAGL,gBAHK,EAGa,iDAHb,EAIXA,KAJW,CAIL,eAJK,EAIY,+BAJZ,EAKXA,KALW,CAKL,gBALK,EAKa,wCALb,EAMXA,KANW,CAML,kBANK,EAMe,mCANf,EAOXA,KAPW,CAOL,yBAPK,EAOsB,+BAPtB,EAQXA,KARW,CAQL,iBARK,EAQc,+BARd,EASXA,KATW,CASL,MATK,EASG,gFATH,EAUXA,KAVW,CAUL,SAVK,EAUM,sBAVN,EAWXA,KAXW,CAWL,YAXK,EAWS,8BAXT,EAYXA,KAZW,CAYL,aAZK,EAYU,uBAZV,EAaXC,GAbW,EAAb;;AAiBA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAE7B,MAAIC,CAAC,GAAGP,CAAC,CAACQ,KAAF,EAAR;AACAR,EAAAA,CAAC,CAACS,KAAF,CAAQ,MAAM;AAEZ,QAAIC,SAAS,GAAGZ,IAAI,CAACa,QAAL,CAAcN,IAAd,EAAoBJ,IAApB,EAA0BK,KAAK,CAACM,YAAhC,CAAhB;AACA,QAAIC,MAAM,GAAGH,SAAS,CAACG,MAAvB;AAEA,WAAQA,MAAR;AAEA,GAPF,EAQEC,IARF,CAQOD,MAAM,IAAI;AAEf,WAAOP,KAAK,CAACS,OAAN,CAAc,gBAAd,EAAgCF,MAAhC,CAAP;AACA,GAXF,EAYEC,IAZF,CAYOE,IAAI,IAAI;AAEbT,IAAAA,CAAC,CAACU,OAAF,CAAUD,IAAI,CAACE,IAAf;AAEA,GAhBF,EAiBEC,KAjBF,CAiBQC,GAAG,IAAI;AAEbb,IAAAA,CAAC,CAACc,MAAF,CAASD,GAAT;AAEA,GArBF;AAuBA,SAAOb,CAAC,CAACe,OAAT;AAEA;;AACDlB,OAAO,CAACmB,OAAR,GAAkBtB,IAAlB;AACAuB,MAAM,CAACC,OAAP,GAAiBrB,OAAjB","sourcesContent":["const morx = require('morx');\nconst q = require('q');\n\n\n\nconst spec = morx.spec()\n\n\t.build('account_bank', 'required:true, eg:044')\n\t.build('account_number', 'required:true,validators:isNumeric, eg:06900021')\n\t.build('business_name', 'required:true, eg:JK Services')\n\t.build('business_email', 'required:true, eg:e.ikedieze@gmail.com')\n\t.build('business_contact', 'required:true, eg:Ikedieze Ndukwe')\n\t.build('business_contact_mobile', 'required:true, eg:08174111222')\n\t.build('business_mobile', 'required:false,eg:08030930236')\n\t.build('meta', 'required:false,eg:[{\"meta_name\": \"MarketplaceID\", \"meta_value\": \"ggs-920900\"}]')\n\t.build('country', 'required:true, eg:NG')\n\t.build('split_type', 'required:false,eg:percentage')\n\t.build('split_value', 'required:false,eg:0.5')\n\t.end();\n\n\n\nfunction service(data, _rave) {\n\n\tvar d = q.defer();\n\tq.fcall(() => {\n\n\t\t\tvar validated = morx.validate(data, spec, _rave.MORX_DEFAULT);\n\t\t\tvar params = validated.params;\n\n\t\t\treturn (params);\n\n\t\t})\n\t\t.then(params => {\n\n\t\t\treturn _rave.request('v3/subaccounts', params)\n\t\t})\n\t\t.then(resp => {\n\n\t\t\td.resolve(resp.body);\n\n\t\t})\n\t\t.catch(err => {\n\n\t\t\td.reject(err);\n\n\t\t});\n\n\treturn d.promise;\n\n}\nservice.morxspc = spec;\nmodule.exports = service;"]},"metadata":{},"sourceType":"script"}