{"code":"var _possibleConstructorReturn=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\"),_get=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\"),_getPrototypeOf=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\"),_toConsumableArray=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\"),_assertThisInitialized=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\"),_inherits=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\"),_createSuper=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\"),_regeneratorRuntime=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\"),_createForOfIteratorHelper=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"),_toArray=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\"),_slicedToArray=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\"),_asyncToGenerator=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\"),_classCallCheck=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\"),_createClass=require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");!function(e,t){\"object\"===typeof exports&&\"object\"===typeof module?module.exports=t():\"function\"===typeof define&&define.amd?define(\"pdfjs-dist/build/pdf.worker\",[],t):\"object\"===typeof exports?exports[\"pdfjs-dist/build/pdf.worker\"]=t():e[\"pdfjs-dist/build/pdf.worker\"]=e.pdfjsWorker=t()}(this,(function(){return function(e){var t={};function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}return a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&\"object\"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,\"a\",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=\"\",a(a.s=0)}([function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"WorkerMessageHandler\",{enumerable:!0,get:function(){return r.WorkerMessageHandler}});var r=a(1)},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WorkerMessageHandler=t.WorkerTask=void 0;var r=a(2),n=a(5),i=a(6),o=a(27),s=a(4),c=a(46),l=a(47),u=a(8),h=function(){function e(t){_classCallCheck(this,e),this.name=t,this.terminated=!1,this._capability=(0,r.createPromiseCapability)()}return _createClass(e,[{key:\"finished\",get:function(){return this._capability.promise}},{key:\"finish\",value:function(){this._capability.resolve()}},{key:\"terminate\",value:function(){this.terminated=!0}},{key:\"ensureNotTerminated\",value:function(){if(this.terminated)throw new Error(\"Worker task was terminated\")}}]),e}();t.WorkerTask=h;var f,d=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:\"setup\",value:function(t,a){var n=!1;t.on(\"test\",(function(e){if(!n)if(n=!0,e instanceof Uint8Array){var a=255===e[0];t.postMessageTransfers=a,t.send(\"test\",{supportTransfers:a})}else t.send(\"test\",null)})),t.on(\"configure\",(function(e){(0,r.setVerbosityLevel)(e.verbosity)})),t.on(\"GetDocRequest\",(function(t){return e.createDocumentHandler(t,a)}))}},{key:\"createDocumentHandler\",value:function(e,t){var a,s=!1,f=null,d=[],g=(0,r.getVerbosityLevel)(),p=e.apiVersion,m=\"2.6.347\";if(p!==m)throw new Error('The API version \"'.concat(p,'\" does not match ')+'the Worker version \"'.concat(m,'\".'));var v=[];for(var b in[])v.push(b);if(v.length)throw new Error(\"The `Array.prototype` contains unexpected enumerable properties: \"+v.join(\", \")+\"; thus breaking e.g. `for...in` iteration of `Array`s.\");if(\"undefined\"===typeof ReadableStream||\"undefined\"===typeof Promise.allSettled)throw new Error(\"The browser/environment lacks native support for critical functionality used by the PDF.js library (e.g. `ReadableStream` and/or `Promise.allSettled`); please use an ES5-compatible build instead.\");var y=e.docId,k=e.docBaseUrl,w=e.docId+\"_worker\",C=new c.MessageHandler(w,y,t);function S(){if(s)throw new Error(\"Worker was terminated\")}function x(e){d.push(e)}function A(e){e.finish();var t=d.indexOf(e);d.splice(t,1)}function I(e){return F.apply(this,arguments)}function F(){return(F=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){var r,n,i,o;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.ensureDoc(\"checkHeader\");case 2:return e.next=4,a.ensureDoc(\"parseStartXRef\");case 4:return e.next=6,a.ensureDoc(\"parse\",[t]);case 6:if(t){e.next=9;break}return e.next=9,a.ensureDoc(\"checkFirstPage\");case 9:return e.next=11,Promise.all([a.ensureDoc(\"numPages\"),a.ensureDoc(\"fingerprint\")]);case 11:return r=e.sent,n=_slicedToArray(r,2),i=n[0],o=n[1],e.abrupt(\"return\",{numPages:i,fingerprint:o});case 16:case\"end\":return e.stop()}}),e)})))).apply(this,arguments)}function T(e,t){var a,n=(0,r.createPromiseCapability)(),o=e.source;if(o.data){try{a=new i.LocalPdfManager(y,o.data,o.password,t,k),n.resolve(a)}catch(d){n.reject(d)}return n.promise}var s,c=[];try{s=new l.PDFWorkerStream(C)}catch(d){return n.reject(d),n.promise}var u=s.getFullReader();u.headersReady.then((function(){if(u.isRangeSupported){var e=o.disableAutoFetch||u.isStreamingSupported;a=new i.NetworkPdfManager(y,s,{msgHandler:C,password:o.password,length:u.contentLength,disableAutoFetch:e,rangeChunkSize:o.rangeChunkSize},t,k);for(var r=0;r<c.length;r++)a.sendProgressiveData(c[r]);c=[],n.resolve(a),f=null}})).catch((function(e){n.reject(e),f=null}));var h=0;return new Promise((function(e,s){u.read().then((function e(l){var g=l.value,p=l.done;try{if(S(),p)return a||function(){var e=(0,r.arraysToBytes)(c);o.length&&e.length!==o.length&&(0,r.warn)(\"reported HTTP length is different from actual\");try{a=new i.LocalPdfManager(y,e,o.password,t,k),n.resolve(a)}catch(d){n.reject(d)}c=[]}(),void(f=null);h+=(0,r.arrayByteLength)(g),u.isStreamingSupported||C.send(\"DocProgress\",{loaded:h,total:Math.max(h,u.contentLength||0)}),a?a.sendProgressiveData(g):c.push(g),u.read().then(e,s)}catch(m){s(m)}}),s)})).catch((function(e){n.reject(e),f=null})),f=function(e){s.cancelAllRequests(e)},n.promise}return C.postMessageTransfers=e.postMessageTransfers,C.on(\"GetPage\",(function(e){return a.getPage(e.pageIndex).then((function(e){return Promise.all([a.ensure(e,\"rotate\"),a.ensure(e,\"ref\"),a.ensure(e,\"userUnit\"),a.ensure(e,\"view\")]).then((function(e){var t=_slicedToArray(e,4);return{rotate:t[0],ref:t[1],userUnit:t[2],view:t[3]}}))}))})),C.on(\"GetPageIndex\",(function(e){var t=e.ref,r=n.Ref.get(t.num,t.gen);return a.ensureCatalog(\"getPageIndex\",[r])})),C.on(\"GetDestinations\",(function(e){return a.ensureCatalog(\"destinations\")})),C.on(\"GetDestination\",(function(e){return a.ensureCatalog(\"getDestination\",[e.id])})),C.on(\"GetPageLabels\",(function(e){return a.ensureCatalog(\"pageLabels\")})),C.on(\"GetPageLayout\",(function(e){return a.ensureCatalog(\"pageLayout\")})),C.on(\"GetPageMode\",(function(e){return a.ensureCatalog(\"pageMode\")})),C.on(\"GetViewerPreferences\",(function(e){return a.ensureCatalog(\"viewerPreferences\")})),C.on(\"GetOpenAction\",(function(e){return a.ensureCatalog(\"openAction\")})),C.on(\"GetAttachments\",(function(e){return a.ensureCatalog(\"attachments\")})),C.on(\"GetJavaScript\",(function(e){return a.ensureCatalog(\"javaScript\")})),C.on(\"GetOutline\",(function(e){return a.ensureCatalog(\"documentOutline\")})),C.on(\"GetOptionalContentConfig\",(function(e){return a.ensureCatalog(\"optionalContentConfig\")})),C.on(\"GetPermissions\",(function(e){return a.ensureCatalog(\"permissions\")})),C.on(\"GetMetadata\",(function(e){return Promise.all([a.ensureDoc(\"documentInfo\"),a.ensureCatalog(\"metadata\")])})),C.on(\"GetData\",(function(e){return a.requestLoadedStream(),a.onLoadedStream().then((function(e){return e.bytes}))})),C.on(\"GetStats\",(function(e){return a.ensureXRef(\"stats\")})),C.on(\"GetAnnotations\",(function(e){var t=e.pageIndex,r=e.intent;return a.getPage(t).then((function(e){return e.getAnnotationsData(r)}))})),C.on(\"SaveDocument\",(function(e){var t=e.numPages,n=e.annotationStorage,i=e.filename;a.requestLoadedStream();for(var s=[a.onLoadedStream()],c=a.pdfDocument,l=function(e){s.push(a.getPage(e).then((function(t){var a=new h(\"Save: page \".concat(e));return t.save(C,a,n)})))},u=0;u<t;u++)l(u);return Promise.all(s).then((function(e){var t,a=_toArray(e),n=a[0],s=a.slice(1),l=[],u=_createForOfIteratorHelper(s);try{for(u.s();!(t=u.n()).done;){l=t.value.filter((function(e){return null!==e})).reduce((function(e,t){return e.concat(t)}),l)}}catch(p){u.e(p)}finally{u.f()}if(0===l.length)return n.bytes;var h=c.xref,f=Object.create(null);if(h.trailer){var d=Object.create(null),g=h.trailer.get(\"Info\")||null;g&&g.forEach((function(e,t){(0,r.isString)(e)&&(0,r.isString)(t)&&(d[e]=(0,r.stringToPDFString)(t))})),f={rootRef:h.trailer.getRaw(\"Root\")||null,encrypt:h.trailer.getRaw(\"Encrypt\")||null,newRef:h.getNewRef(),infoRef:h.trailer.getRaw(\"Info\")||null,info:d,fileIds:h.trailer.getRaw(\"ID\")||null,startXRef:c.startXRef,filename:i}}return h.resetNewRef(),(0,o.incrementalUpdate)(n.bytes,f,l)}))})),C.on(\"GetOperatorList\",(function(e,t){var n=e.pageIndex;a.getPage(n).then((function(a){var i=new h(\"GetOperatorList: page \".concat(n));x(i);var o=g>=r.VerbosityLevel.INFOS?Date.now():0;a.getOperatorList({handler:C,sink:t,task:i,intent:e.intent,renderInteractiveForms:e.renderInteractiveForms,annotationStorage:e.annotationStorage}).then((function(e){A(i),o&&(0,r.info)(\"page=\".concat(n+1,\" - getOperatorList: time=\")+\"\".concat(Date.now()-o,\"ms, len=\").concat(e.length)),t.close()}),(function(e){A(i),i.terminated||(C.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorOperatorList}),t.error(e))}))}))}),this),C.on(\"GetTextContent\",(function(e,t){var n=e.pageIndex;t.onPull=function(e){},t.onCancel=function(e){},a.getPage(n).then((function(a){var i=new h(\"GetTextContent: page \"+n);x(i);var o=g>=r.VerbosityLevel.INFOS?Date.now():0;a.extractTextContent({handler:C,task:i,sink:t,normalizeWhitespace:e.normalizeWhitespace,combineTextItems:e.combineTextItems}).then((function(){A(i),o&&(0,r.info)(\"page=\".concat(n+1,\" - getTextContent: time=\")+\"\".concat(Date.now()-o,\"ms\")),t.close()}),(function(e){A(i),i.terminated||t.error(e)}))}))})),C.on(\"FontFallback\",(function(e){return a.fontFallback(e.id,C)})),C.on(\"Cleanup\",(function(e){return a.cleanup(!0)})),C.on(\"Terminate\",(function(e){s=!0;var t=[];if(a){a.terminate(new r.AbortException(\"Worker was terminated.\"));var i=a.cleanup();t.push(i),a=null}else(0,n.clearPrimitiveCaches)();return f&&f(new r.AbortException(\"Worker was terminated.\")),d.forEach((function(e){t.push(e.finished),e.terminate()})),Promise.all(t).then((function(){C.destroy(),C=null}))})),C.on(\"Ready\",(function(t){!function(e){function t(e){S(),C.send(\"GetDoc\",{pdfInfo:e})}function n(e){if(S(),e instanceof r.PasswordException){var t=new h(\"PasswordException: response \".concat(e.code));x(t),C.sendWithPromise(\"PasswordRequest\",e).then((function(e){var r=e.password;A(t),a.updatePassword(r),i()})).catch((function(){A(t),C.send(\"DocException\",e)}))}else e instanceof r.InvalidPDFException||e instanceof r.MissingPDFException||e instanceof r.UnexpectedResponseException||e instanceof r.UnknownErrorException?C.send(\"DocException\",e):C.send(\"DocException\",new r.UnknownErrorException(e.message,e.toString()))}function i(){S(),I(!1).then(t,(function(e){S(),e instanceof u.XRefParseException?(a.requestLoadedStream(),a.onLoadedStream().then((function(){S(),I(!0).then(t,n)}))):n(e)}))}S(),T(e,{maxImageSize:e.maxImageSize,disableFontFace:e.disableFontFace,ignoreErrors:e.ignoreErrors,isEvalSupported:e.isEvalSupported,fontExtraProperties:e.fontExtraProperties}).then((function(e){if(s)throw e.terminate(new r.AbortException(\"Worker was terminated.\")),new Error(\"Worker was terminated\");(a=e).onLoadedStream().then((function(e){C.send(\"DataLoaded\",{length:e.bytes.byteLength})}))})).then(i,n)}(e),e=null})),w}},{key:\"initializeFromPort\",value:function(t){var a=new c.MessageHandler(\"worker\",\"main\",t);e.setup(a,t),a.send(\"ready\",null)}}]),e}();t.WorkerMessageHandler=d,\"undefined\"===typeof window&&!s.isNodeJS&&\"undefined\"!==typeof self&&(\"function\"===typeof(f=self).postMessage&&\"onmessage\"in f)&&d.initializeFromPort(self)},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.arrayByteLength=y,t.arraysToBytes=function(e){var t=e.length;if(1===t&&e[0]instanceof Uint8Array)return e[0];for(var a=0,r=0;r<t;r++)a+=y(e[r]);for(var n=0,i=new Uint8Array(a),o=0;o<t;o++){var s=e[o];s instanceof Uint8Array||(s=\"string\"===typeof s?b(s):new Uint8Array(s));var c=s.byteLength;i.set(s,n),n+=c}return i},t.assert=s,t.bytesToString=function(e){s(null!==e&&\"object\"===typeof e&&void 0!==e.length,\"Invalid argument for bytesToString\");var t=e.length,a=8192;if(t<a)return String.fromCharCode.apply(null,e);for(var r=[],n=0;n<t;n+=a){var i=Math.min(n+a,t),o=e.subarray(n,i);r.push(String.fromCharCode.apply(null,o))}return r.join(\"\")},t.createPromiseCapability=function(){var e=Object.create(null),t=!1;return Object.defineProperty(e,\"settled\",{get:function(){return t}}),e.promise=new Promise((function(a,r){e.resolve=function(e){t=!0,a(e)},e.reject=function(e){t=!0,r(e)}})),e},t.escapeString=function(e){return e.replace(/([\\(\\)\\\\])/g,\"\\\\$1\")},t.getModificationDate=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date(Date.now()),t=[e.getUTCFullYear().toString(),(e.getUTCMonth()+1).toString().padStart(2,\"0\"),(e.getUTCDate()+1).toString().padStart(2,\"0\"),e.getUTCHours().toString().padStart(2,\"0\"),e.getUTCMinutes().toString().padStart(2,\"0\"),e.getUTCSeconds().toString().padStart(2,\"0\")];return t.join(\"\")},t.getVerbosityLevel=function(){return n},t.info=function(e){n>=r.INFOS&&console.log(\"Info: \".concat(e))},t.isArrayBuffer=function(e){return\"object\"===typeof e&&null!==e&&void 0!==e.byteLength},t.isArrayEqual=function(e,t){if(e.length!==t.length)return!1;return e.every((function(e,a){return e===t[a]}))},t.isBool=function(e){return\"boolean\"===typeof e},t.isNum=function(e){return\"number\"===typeof e},t.isString=function(e){return\"string\"===typeof e},t.isSameOrigin=function(e,t){var a;try{if(!(a=new URL(e)).origin||\"null\"===a.origin)return!1}catch(n){return!1}var r=new URL(t,a);return a.origin===r.origin},t.createValidAbsoluteUrl=function(e,t){if(!e)return null;try{var a=t?new URL(e,t):new URL(e);if(function(e){if(!e)return!1;switch(e.protocol){case\"http:\":case\"https:\":case\"ftp:\":case\"mailto:\":case\"tel:\":return!0;default:return!1}}(a))return a}catch(r){}return null},t.removeNullCharacters=function(e){if(\"string\"!==typeof e)return i(\"The argument for removeNullCharacters must be a string.\"),e;return e.replace(v,\"\")},t.setVerbosityLevel=function(e){Number.isInteger(e)&&(n=e)},t.shadow=c,t.string32=function(e){return String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e)},t.stringToBytes=b,t.stringToPDFString=function(e){var t=e.length,a=[];if(\"\\xfe\"===e[0]&&\"\\xff\"===e[1])for(var r=2;r<t;r+=2)a.push(String.fromCharCode(e.charCodeAt(r)<<8|e.charCodeAt(r+1)));else if(\"\\xff\"===e[0]&&\"\\xfe\"===e[1])for(var n=2;n<t;n+=2)a.push(String.fromCharCode(e.charCodeAt(n+1)<<8|e.charCodeAt(n)));else for(var i=0;i<t;++i){var o=x[e.charCodeAt(i)];a.push(o?String.fromCharCode(o):e.charAt(i))}return a.join(\"\")},t.stringToUTF8String=function(e){return decodeURIComponent(escape(e))},t.utf8StringToString=function(e){return unescape(encodeURIComponent(e))},t.warn=i,t.unreachable=o,t.IsEvalSupportedCached=t.IsLittleEndianCached=t.createObjectURL=t.FormatError=t.Util=t.UnknownErrorException=t.UnexpectedResponseException=t.TextRenderingMode=t.StreamType=t.PermissionFlag=t.PasswordResponses=t.PasswordException=t.MissingPDFException=t.InvalidPDFException=t.AbortException=t.CMapCompressionType=t.ImageKind=t.FontType=t.AnnotationType=t.AnnotationStateModelType=t.AnnotationReviewState=t.AnnotationReplyType=t.AnnotationMarkedState=t.AnnotationFlag=t.AnnotationFieldFlag=t.AnnotationBorderStyleType=t.UNSUPPORTED_FEATURES=t.VerbosityLevel=t.OPS=t.IDENTITY_MATRIX=t.FONT_IDENTITY_MATRIX=t.BaseException=void 0,a(3);t.IDENTITY_MATRIX=[1,0,0,1,0,0];t.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0];t.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048};t.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};t.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};t.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};t.AnnotationStateModelType={MARKED:\"Marked\",REVIEW:\"Review\"};t.AnnotationMarkedState={MARKED:\"Marked\",UNMARKED:\"Unmarked\"};t.AnnotationReviewState={ACCEPTED:\"Accepted\",REJECTED:\"Rejected\",CANCELLED:\"Cancelled\",COMPLETED:\"Completed\",NONE:\"None\"};t.AnnotationReplyType={GROUP:\"Group\",REPLY:\"R\"};t.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512};t.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864};t.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};t.StreamType={UNKNOWN:\"UNKNOWN\",FLATE:\"FLATE\",LZW:\"LZW\",DCT:\"DCT\",JPX:\"JPX\",JBIG:\"JBIG\",A85:\"A85\",AHX:\"AHX\",CCF:\"CCF\",RLX:\"RLX\"};t.FontType={UNKNOWN:\"UNKNOWN\",TYPE1:\"TYPE1\",TYPE1C:\"TYPE1C\",CIDFONTTYPE0:\"CIDFONTTYPE0\",CIDFONTTYPE0C:\"CIDFONTTYPE0C\",TRUETYPE:\"TRUETYPE\",CIDFONTTYPE2:\"CIDFONTTYPE2\",TYPE3:\"TYPE3\",OPENTYPE:\"OPENTYPE\",TYPE0:\"TYPE0\",MMTYPE1:\"MMTYPE1\"};var r={ERRORS:0,WARNINGS:1,INFOS:5};t.VerbosityLevel=r;t.CMapCompressionType={NONE:0,BINARY:1,STREAM:2};t.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91};t.UNSUPPORTED_FEATURES={unknown:\"unknown\",forms:\"forms\",javaScript:\"javaScript\",smask:\"smask\",shadingPattern:\"shadingPattern\",font:\"font\",errorTilingPattern:\"errorTilingPattern\",errorExtGState:\"errorExtGState\",errorXObject:\"errorXObject\",errorFontLoadType3:\"errorFontLoadType3\",errorFontState:\"errorFontState\",errorFontMissing:\"errorFontMissing\",errorFontTranslate:\"errorFontTranslate\",errorColorSpace:\"errorColorSpace\",errorOperatorList:\"errorOperatorList\",errorFontToUnicode:\"errorFontToUnicode\",errorFontLoadNative:\"errorFontLoadNative\",errorFontGetPath:\"errorFontGetPath\",errorMarkedContent:\"errorMarkedContent\"};t.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};var n=r.WARNINGS;function i(e){n>=r.WARNINGS&&console.log(\"Warning: \".concat(e))}function o(e){throw new Error(e)}function s(e,t){e||o(t)}function c(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!1}),a}var l=function(){function e(t){this.constructor===e&&o(\"Cannot initialize BaseException.\"),this.message=t,this.name=this.constructor.name}return e.prototype=new Error,e.constructor=e,e}();t.BaseException=l;var u=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this,e)).code=r,n}return a}(l);t.PasswordException=u;var h=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this,e)).details=r,n}return a}(l);t.UnknownErrorException=h;var f=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(l);t.InvalidPDFException=f;var d=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(l);t.MissingPDFException=d;var g=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this,e)).status=r,n}return a}(l);t.UnexpectedResponseException=g;var p=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(l);t.FormatError=p;var m=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(l);t.AbortException=m;var v=/\\x00/g;function b(e){s(\"string\"===typeof e,\"Invalid argument for stringToBytes\");for(var t=e.length,a=new Uint8Array(t),r=0;r<t;++r)a[r]=255&e.charCodeAt(r);return a}function y(e){return void 0!==e.length?e.length:(s(void 0!==e.byteLength,\"arrayByteLength - invalid argument.\"),e.byteLength)}var k={get value(){return c(this,\"value\",function(){var e=new Uint8Array(4);return e[0]=1,1===new Uint32Array(e.buffer,0,1)[0]}())}};t.IsLittleEndianCached=k;var w={get value(){return c(this,\"value\",function(){try{return new Function(\"\"),!0}catch(e){return!1}}())}};t.IsEvalSupportedCached=w;var C=[\"rgb(\",0,\",\",0,\",\",0,\")\"],S=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:\"makeCssRgb\",value:function(e,t,a){return C[1]=e,C[3]=t,C[5]=a,C.join(\"\")}},{key:\"transform\",value:function(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]}},{key:\"applyTransform\",value:function(e,t){return[e[0]*t[0]+e[1]*t[2]+t[4],e[0]*t[1]+e[1]*t[3]+t[5]]}},{key:\"applyInverseTransform\",value:function(e,t){var a=t[0]*t[3]-t[1]*t[2];return[(e[0]*t[3]-e[1]*t[2]+t[2]*t[5]-t[4]*t[3])/a,(-e[0]*t[1]+e[1]*t[0]+t[4]*t[1]-t[5]*t[0])/a]}},{key:\"getAxialAlignedBoundingBox\",value:function(t,a){var r=e.applyTransform(t,a),n=e.applyTransform(t.slice(2,4),a),i=e.applyTransform([t[0],t[3]],a),o=e.applyTransform([t[2],t[1]],a);return[Math.min(r[0],n[0],i[0],o[0]),Math.min(r[1],n[1],i[1],o[1]),Math.max(r[0],n[0],i[0],o[0]),Math.max(r[1],n[1],i[1],o[1])]}},{key:\"inverseTransform\",value:function(e){var t=e[0]*e[3]-e[1]*e[2];return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[4]*e[3])/t,(e[4]*e[1]-e[5]*e[0])/t]}},{key:\"apply3dTransform\",value:function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2],e[3]*t[0]+e[4]*t[1]+e[5]*t[2],e[6]*t[0]+e[7]*t[1]+e[8]*t[2]]}},{key:\"singularValueDecompose2dScale\",value:function(e){var t=[e[0],e[2],e[1],e[3]],a=e[0]*t[0]+e[1]*t[2],r=e[0]*t[1]+e[1]*t[3],n=e[2]*t[0]+e[3]*t[2],i=e[2]*t[1]+e[3]*t[3],o=(a+i)/2,s=Math.sqrt((a+i)*(a+i)-4*(a*i-n*r))/2,c=o+s||1,l=o-s||1;return[Math.sqrt(c),Math.sqrt(l)]}},{key:\"normalizeRect\",value:function(e){var t=e.slice(0);return e[0]>e[2]&&(t[0]=e[2],t[2]=e[0]),e[1]>e[3]&&(t[1]=e[3],t[3]=e[1]),t}},{key:\"intersect\",value:function(t,a){function r(e,t){return e-t}var n=[t[0],t[2],a[0],a[2]].sort(r),i=[t[1],t[3],a[1],a[3]].sort(r),o=[];return t=e.normalizeRect(t),a=e.normalizeRect(a),n[0]===t[0]&&n[1]===a[0]||n[0]===a[0]&&n[1]===t[0]?(o[0]=n[1],o[2]=n[2],i[0]===t[1]&&i[1]===a[1]||i[0]===a[1]&&i[1]===t[1]?(o[1]=i[1],o[3]=i[2],o):null):null}}]),e}();t.Util=S;var x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];var A=function(){var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";return function(t,a){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!r&&URL.createObjectURL){var n=new Blob([t],{type:a});return URL.createObjectURL(n)}for(var i=\"data:\".concat(a,\";base64,\"),o=0,s=t.length;o<s;o+=3){var c=255&t[o],l=255&t[o+1],u=255&t[o+2],h=c>>2,f=(3&c)<<4|l>>4,d=o+1<s?(15&l)<<2|u>>6:64,g=o+2<s?63&u:64;i+=e[h]+e[f]+e[d]+e[g]}return i}}();t.createObjectURL=A},function(e,t,a){\"use strict\";a(4)},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNodeJS=void 0;var r=\"object\"===typeof process&&process+\"\"===\"[object process]\"&&!process.versions.nw&&!(process.versions.electron&&process.type&&\"browser\"!==process.type);t.isNodeJS=r},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.clearPrimitiveCaches=function(){i._clearCache(),n._clearCache(),s._clearCache()},t.isEOF=function(e){return e===r},t.isCmd=function(e,t){return e instanceof i&&(void 0===t||e.cmd===t)},t.isDict=function(e,t){return e instanceof o&&(void 0===t||u(e.get(\"Type\"),t))},t.isName=u,t.isRef=function(e){return e instanceof s},t.isRefsEqual=function(e,t){return e.num===t.num&&e.gen===t.gen},t.isStream=function(e){return\"object\"===typeof e&&null!==e&&void 0!==e.getBytes},t.RefSetCache=t.RefSet=t.Ref=t.Name=t.Dict=t.Cmd=t.EOF=void 0;a(2);var r={};t.EOF=r;var n=function(){var e=Object.create(null);function t(e){this.name=e}return t.prototype={},t.get=function(a){var r=e[a];return r||(e[a]=new t(a))},t._clearCache=function(){e=Object.create(null)},t}();t.Name=n;var i=function(){var e=Object.create(null);function t(e){this.cmd=e}return t.prototype={},t.get=function(a){var r=e[a];return r||(e[a]=new t(a))},t._clearCache=function(){e=Object.create(null)},t}();t.Cmd=i;var o=function(){var e=function(){return e};function t(t){this._map=Object.create(null),this.xref=t,this.objId=null,this.suppressEncryption=!1,this.__nonSerializable__=e}return t.prototype={assignXref:function(e){this.xref=e},get size(){return Object.keys(this._map).length},get:function(e,t,a){var r=this._map[e];return void 0===r&&void 0!==t&&void 0===(r=this._map[t])&&void 0!==a&&(r=this._map[a]),r instanceof s&&this.xref?this.xref.fetch(r,this.suppressEncryption):r},getAsync:function(e,t,a){var r=this;return _asyncToGenerator(_regeneratorRuntime.mark((function n(){var i;return _regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(void 0===(i=r._map[e])&&void 0!==t&&void 0===(i=r._map[t])&&void 0!==a&&(i=r._map[a]),!(i instanceof s&&r.xref)){n.next=4;break}return n.abrupt(\"return\",r.xref.fetchAsync(i,r.suppressEncryption));case 4:return n.abrupt(\"return\",i);case 5:case\"end\":return n.stop()}}),n)})))()},getArray:function(e,t,a){var r=this.get(e,t,a);if(!Array.isArray(r)||!this.xref)return r;for(var n=0,i=(r=r.slice()).length;n<i;n++)r[n]instanceof s&&(r[n]=this.xref.fetch(r[n],this.suppressEncryption));return r},getRaw:function(e){return this._map[e]},getKeys:function(){return Object.keys(this._map)},getRawValues:function(){return Object.values(this._map)},set:function(e,t){this._map[e]=t},has:function(e){return void 0!==this._map[e]},forEach:function(e){for(var t in this._map)e(t,this.get(t))}},t.empty=new t(null),t.merge=function(e){var a=e.xref,r=e.dictArray,n=e.mergeSubDicts,i=void 0!==n&&n,o=new t(a);if(!i){var s,c=_createForOfIteratorHelper(r);try{for(c.s();!(s=c.n()).done;){var l=s.value;if(l instanceof t)for(var u=0,h=Object.entries(l._map);u<h.length;u++){var f=_slicedToArray(h[u],2),d=f[0],g=f[1];void 0===o._map[d]&&(o._map[d]=g)}}}catch(U){c.e(U)}finally{c.f()}return o.size>0?o:t.empty}var p,m=new Map,v=_createForOfIteratorHelper(r);try{for(v.s();!(p=v.n()).done;){var b=p.value;if(b instanceof t)for(var y=0,k=Object.entries(b._map);y<k.length;y++){var w=_slicedToArray(k[y],2),C=w[0],S=w[1],x=m.get(C);void 0===x&&(x=[],m.set(C,x)),x.push(S)}}}catch(U){v.e(U)}finally{v.f()}var A,I=_createForOfIteratorHelper(m);try{for(I.s();!(A=I.n()).done;){var F=_slicedToArray(A.value,2),T=F[0],O=F[1];if(1!==O.length&&O[0]instanceof t){var E,P=new t(a),_=_createForOfIteratorHelper(O);try{for(_.s();!(E=_.n()).done;){var B=E.value;if(B instanceof t)for(var M=0,D=Object.entries(B._map);M<D.length;M++){var R=_slicedToArray(D[M],2),N=R[0],L=R[1];void 0===P._map[N]&&(P._map[N]=L)}}}catch(U){_.e(U)}finally{_.f()}P.size>0&&(o._map[T]=P)}else o._map[T]=O[0]}}catch(U){I.e(U)}finally{I.f()}return m.clear(),o.size>0?o:t.empty},t}();t.Dict=o;var s=function(){var e=Object.create(null);function t(e,t){this.num=e,this.gen=t}return t.prototype={toString:function(){return 0===this.gen?\"\".concat(this.num,\"R\"):\"\".concat(this.num,\"R\").concat(this.gen)}},t.get=function(a,r){var n=0===r?\"\".concat(a,\"R\"):\"\".concat(a,\"R\").concat(r),i=e[n];return i||(e[n]=new t(a,r))},t._clearCache=function(){e=Object.create(null)},t}();t.Ref=s;var c=function(){function e(){_classCallCheck(this,e),this._set=new Set}return _createClass(e,[{key:\"has\",value:function(e){return this._set.has(e.toString())}},{key:\"put\",value:function(e){this._set.add(e.toString())}},{key:\"remove\",value:function(e){this._set.delete(e.toString())}}]),e}();t.RefSet=c;var l=function(){function e(){_classCallCheck(this,e),this._map=new Map}return _createClass(e,[{key:\"size\",get:function(){return this._map.size}},{key:\"get\",value:function(e){return this._map.get(e.toString())}},{key:\"has\",value:function(e){return this._map.has(e.toString())}},{key:\"put\",value:function(e,t){this._map.set(e.toString(),t)}},{key:\"putAlias\",value:function(e,t){this._map.set(e.toString(),this.get(t))}},{key:\"forEach\",value:function(e){var t,a=_createForOfIteratorHelper(this._map.values());try{for(a.s();!(t=a.n()).done;){e(t.value)}}catch(r){a.e(r)}finally{a.f()}}},{key:\"clear\",value:function(){this._map.clear()}}]),e}();function u(e,t){return e instanceof n&&(void 0===t||e.name===t)}t.RefSetCache=l},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.NetworkPdfManager=t.LocalPdfManager=void 0;var r=a(2),n=a(7),i=a(8),o=a(9),s=a(12),c=function(){function e(){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize BasePdfManager.\")}return _createClass(e,[{key:\"docId\",get:function(){return this._docId}},{key:\"password\",get:function(){return this._password}},{key:\"docBaseUrl\",get:function(){var e=null;if(this._docBaseUrl){var t=(0,r.createValidAbsoluteUrl)(this._docBaseUrl);t?e=t.href:(0,r.warn)('Invalid absolute docBaseUrl: \"'.concat(this._docBaseUrl,'\".'))}return(0,r.shadow)(this,\"docBaseUrl\",e)}},{key:\"onLoadedStream\",value:function(){(0,r.unreachable)(\"Abstract method `onLoadedStream` called\")}},{key:\"ensureDoc\",value:function(e,t){return this.ensure(this.pdfDocument,e,t)}},{key:\"ensureXRef\",value:function(e,t){return this.ensure(this.pdfDocument.xref,e,t)}},{key:\"ensureCatalog\",value:function(e,t){return this.ensure(this.pdfDocument.catalog,e,t)}},{key:\"getPage\",value:function(e){return this.pdfDocument.getPage(e)}},{key:\"fontFallback\",value:function(e,t){return this.pdfDocument.fontFallback(e,t)}},{key:\"cleanup\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.pdfDocument.cleanup(e)}},{key:\"ensure\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n){return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:(0,r.unreachable)(\"Abstract method `ensure` called\");case 1:case\"end\":return e.stop()}}),e)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){(0,r.unreachable)(\"Abstract method `requestRange` called\")}},{key:\"requestLoadedStream\",value:function(){(0,r.unreachable)(\"Abstract method `requestLoadedStream` called\")}},{key:\"sendProgressiveData\",value:function(e){(0,r.unreachable)(\"Abstract method `sendProgressiveData` called\")}},{key:\"updatePassword\",value:function(e){this._password=e}},{key:\"terminate\",value:function(e){(0,r.unreachable)(\"Abstract method `terminate` called\")}}]),e}(),l=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r,n,i,c){var l;_classCallCheck(this,a),(l=t.call(this))._docId=e,l._password=n,l._docBaseUrl=c,l.evaluatorOptions=i;var u=new s.Stream(r);return l.pdfDocument=new o.PDFDocument(_assertThisInitialized(l),u),l._loadedStreamPromise=Promise.resolve(u),l}return _createClass(a,[{key:\"ensure\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,r){var n;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(\"function\"!==typeof(n=t[a])){e.next=3;break}return e.abrupt(\"return\",n.apply(t,r));case 3:return e.abrupt(\"return\",n);case 4:case\"end\":return e.stop()}}),e)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){return Promise.resolve()}},{key:\"requestLoadedStream\",value:function(){}},{key:\"onLoadedStream\",value:function(){return this._loadedStreamPromise}},{key:\"terminate\",value:function(e){}}]),a}(c);t.LocalPdfManager=l;var u=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r,i,s,c){var l;return _classCallCheck(this,a),(l=t.call(this))._docId=e,l._password=i.password,l._docBaseUrl=c,l.msgHandler=i.msgHandler,l.evaluatorOptions=s,l.streamManager=new n.ChunkedStreamManager(r,{msgHandler:i.msgHandler,length:i.length,disableAutoFetch:i.disableAutoFetch,rangeChunkSize:i.rangeChunkSize}),l.pdfDocument=new o.PDFDocument(_assertThisInitialized(l),l.streamManager.getStream()),l}return _createClass(a,[{key:\"ensure\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,r){var n;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,\"function\"!==typeof(n=t[a])){e.next=4;break}return e.abrupt(\"return\",n.apply(t,r));case 4:return e.abrupt(\"return\",n);case 7:if(e.prev=7,e.t0=e.catch(0),e.t0 instanceof i.MissingDataException){e.next=11;break}throw e.t0;case 11:return e.next=13,this.requestRange(e.t0.begin,e.t0.end);case 13:return e.abrupt(\"return\",this.ensure(t,a,r));case 14:case\"end\":return e.stop()}}),e,this,[[0,7]])})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"requestRange\",value:function(e,t){return this.streamManager.requestRange(e,t)}},{key:\"requestLoadedStream\",value:function(){this.streamManager.requestAllChunks()}},{key:\"sendProgressiveData\",value:function(e){this.streamManager.onReceiveData({chunk:e})}},{key:\"onLoadedStream\",value:function(){return this.streamManager.onLoadedStream()}},{key:\"terminate\",value:function(e){this.streamManager.abort(e)}}]),a}(c);t.NetworkPdfManager=u},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkedStreamManager=t.ChunkedStream=void 0;var r=a(2),n=a(8),i=function(){function e(t,a,r){_classCallCheck(this,e),this.bytes=new Uint8Array(t),this.start=0,this.pos=0,this.end=t,this.chunkSize=a,this._loadedChunks=new Set,this.numChunks=Math.ceil(t/a),this.manager=r,this.progressiveDataLength=0,this.lastSuccessfulEnsureByteChunk=-1}return _createClass(e,[{key:\"getMissingChunks\",value:function(){for(var e=[],t=0,a=this.numChunks;t<a;++t)this._loadedChunks.has(t)||e.push(t);return e}},{key:\"getBaseStreams\",value:function(){return[this]}},{key:\"numChunksLoaded\",get:function(){return this._loadedChunks.size}},{key:\"allChunksLoaded\",value:function(){return this.numChunksLoaded===this.numChunks}},{key:\"onReceiveData\",value:function(e,t){var a=this.chunkSize;if(e%a!==0)throw new Error(\"Bad begin offset: \".concat(e));var r=e+t.byteLength;if(r%a!==0&&r!==this.bytes.length)throw new Error(\"Bad end offset: \".concat(r));this.bytes.set(new Uint8Array(t),e);for(var n=Math.floor(e/a),i=Math.floor((r-1)/a)+1,o=n;o<i;++o)this._loadedChunks.add(o)}},{key:\"onReceiveProgressiveData\",value:function(e){var t=this.progressiveDataLength,a=Math.floor(t/this.chunkSize);this.bytes.set(new Uint8Array(e),t),t+=e.byteLength,this.progressiveDataLength=t;for(var r=t>=this.end?this.numChunks:Math.floor(t/this.chunkSize),n=a;n<r;++n)this._loadedChunks.add(n)}},{key:\"ensureByte\",value:function(e){if(!(e<this.progressiveDataLength)){var t=Math.floor(e/this.chunkSize);if(t!==this.lastSuccessfulEnsureByteChunk){if(!this._loadedChunks.has(t))throw new n.MissingDataException(e,e+1);this.lastSuccessfulEnsureByteChunk=t}}}},{key:\"ensureRange\",value:function(e,t){if(!(e>=t)&&!(t<=this.progressiveDataLength))for(var a=this.chunkSize,r=Math.floor(e/a),i=Math.floor((t-1)/a)+1,o=r;o<i;++o)if(!this._loadedChunks.has(o))throw new n.MissingDataException(e,t)}},{key:\"nextEmptyChunk\",value:function(e){for(var t=this.numChunks,a=0;a<t;++a){var r=(e+a)%t;if(!this._loadedChunks.has(r))return r}return null}},{key:\"hasChunk\",value:function(e){return this._loadedChunks.has(e)}},{key:\"length\",get:function(){return this.end-this.start}},{key:\"isEmpty\",get:function(){return 0===this.length}},{key:\"getByte\",value:function(){var e=this.pos;return e>=this.end?-1:(e>=this.progressiveDataLength&&this.ensureByte(e),this.bytes[this.pos++])}},{key:\"getUint16\",value:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}},{key:\"getInt32\",value:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}},{key:\"getBytes\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.bytes,r=this.pos,n=this.end;if(!e){n>this.progressiveDataLength&&this.ensureRange(r,n);var i=a.subarray(r,n);return t?new Uint8ClampedArray(i):i}var o=r+e;o>n&&(o=n),o>this.progressiveDataLength&&this.ensureRange(r,o),this.pos=o;var s=a.subarray(r,o);return t?new Uint8ClampedArray(s):s}},{key:\"peekByte\",value:function(){var e=this.getByte();return-1!==e&&this.pos--,e}},{key:\"peekBytes\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.getBytes(e,t);return this.pos-=a.length,a}},{key:\"getByteRange\",value:function(e,t){return e<0&&(e=0),t>this.end&&(t=this.end),t>this.progressiveDataLength&&this.ensureRange(e,t),this.bytes.subarray(e,t)}},{key:\"skip\",value:function(e){e||(e=1),this.pos+=e}},{key:\"reset\",value:function(){this.pos=this.start}},{key:\"moveStart\",value:function(){this.start=this.pos}},{key:\"makeSubStream\",value:function(e,t,a){function r(){}t?e+t>this.progressiveDataLength&&this.ensureRange(e,e+t):e>=this.progressiveDataLength&&this.ensureByte(e),r.prototype=Object.create(this),r.prototype.getMissingChunks=function(){for(var e=this.chunkSize,t=Math.floor(this.start/e),a=Math.floor((this.end-1)/e)+1,r=[],n=t;n<a;++n)this._loadedChunks.has(n)||r.push(n);return r},r.prototype.allChunksLoaded=function(){return this.numChunksLoaded===this.numChunks||0===this.getMissingChunks().length};var n=new r;return n.pos=n.start=e,n.end=e+t||this.end,n.dict=a,n}}]),e}();t.ChunkedStream=i;var o=function(){function e(t,a){_classCallCheck(this,e),this.length=a.length,this.chunkSize=a.rangeChunkSize,this.stream=new i(this.length,this.chunkSize,this),this.pdfNetworkStream=t,this.disableAutoFetch=a.disableAutoFetch,this.msgHandler=a.msgHandler,this.currRequestId=0,this._chunksNeededByRequest=new Map,this._requestsByChunk=new Map,this._promisesByRequest=new Map,this.progressiveDataLength=0,this.aborted=!1,this._loadedStreamCapability=(0,r.createPromiseCapability)()}return _createClass(e,[{key:\"onLoadedStream\",value:function(){return this._loadedStreamCapability.promise}},{key:\"sendRequest\",value:function(e,t){var a=this,n=this.pdfNetworkStream.getRangeReader(e,t);n.isStreamingSupported||(n.onProgress=this.onProgress.bind(this));var i=[],o=0;new Promise((function(e,t){n.read().then((function s(c){try{if(!c.done){var l=c.value;return i.push(l),o+=(0,r.arrayByteLength)(l),n.isStreamingSupported&&a.onProgress({loaded:o}),void n.read().then(s,t)}var u=(0,r.arraysToBytes)(i);i=null,e(u)}catch(h){t(h)}}),t)})).then((function(t){a.aborted||a.onReceiveData({chunk:t,begin:e})}))}},{key:\"requestAllChunks\",value:function(){var e=this.stream.getMissingChunks();return this._requestChunks(e),this._loadedStreamCapability.promise}},{key:\"_requestChunks\",value:function(e){var t=this,a=this.currRequestId++,n=new Set;this._chunksNeededByRequest.set(a,n);var i,o=_createForOfIteratorHelper(e);try{for(o.s();!(i=o.n()).done;){var s=i.value;this.stream.hasChunk(s)||n.add(s)}}catch(k){o.e(k)}finally{o.f()}if(0===n.size)return Promise.resolve();var c=(0,r.createPromiseCapability)();this._promisesByRequest.set(a,c);var l,u=[],h=_createForOfIteratorHelper(n);try{for(h.s();!(l=h.n()).done;){var f=l.value,d=this._requestsByChunk.get(f);d||(d=[],this._requestsByChunk.set(f,d),u.push(f)),d.push(a)}}catch(k){h.e(k)}finally{h.f()}if(u.length>0){var g,p=this.groupChunks(u),m=_createForOfIteratorHelper(p);try{for(m.s();!(g=m.n()).done;){var v=g.value,b=v.beginChunk*this.chunkSize,y=Math.min(v.endChunk*this.chunkSize,this.length);this.sendRequest(b,y)}}catch(k){m.e(k)}finally{m.f()}}return c.promise.catch((function(e){if(!t.aborted)throw e}))}},{key:\"getStream\",value:function(){return this.stream}},{key:\"requestRange\",value:function(e,t){t=Math.min(t,this.length);for(var a=this.getBeginChunk(e),r=this.getEndChunk(t),n=[],i=a;i<r;++i)n.push(i);return this._requestChunks(n)}},{key:\"requestRanges\",value:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=[],r=_createForOfIteratorHelper(t);try{for(r.s();!(e=r.n()).done;)for(var n=e.value,i=this.getBeginChunk(n.begin),o=this.getEndChunk(n.end),s=i;s<o;++s)a.includes(s)||a.push(s)}catch(c){r.e(c)}finally{r.f()}return a.sort((function(e,t){return e-t})),this._requestChunks(a)}},{key:\"groupChunks\",value:function(e){for(var t=[],a=-1,r=-1,n=0,i=e.length;n<i;++n){var o=e[n];a<0&&(a=o),r>=0&&r+1!==o&&(t.push({beginChunk:a,endChunk:r+1}),a=o),n+1===e.length&&t.push({beginChunk:a,endChunk:o+1}),r=o}return t}},{key:\"onProgress\",value:function(e){this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize+e.loaded,total:this.length})}},{key:\"onReceiveData\",value:function(e){var t=e.chunk,a=void 0===e.begin,r=a?this.progressiveDataLength:e.begin,n=r+t.byteLength,i=Math.floor(r/this.chunkSize),o=n<this.length?Math.floor(n/this.chunkSize):Math.ceil(n/this.chunkSize);a?(this.stream.onReceiveProgressiveData(t),this.progressiveDataLength=n):this.stream.onReceiveData(r,t),this.stream.allChunksLoaded()&&this._loadedStreamCapability.resolve(this.stream);for(var s=[],c=i;c<o;++c){var l=this._requestsByChunk.get(c);if(l){this._requestsByChunk.delete(c);var u,h=_createForOfIteratorHelper(l);try{for(h.s();!(u=h.n()).done;){var f=u.value,d=this._chunksNeededByRequest.get(f);d.has(c)&&d.delete(c),d.size>0||s.push(f)}}catch(k){h.e(k)}finally{h.f()}}}if(!this.disableAutoFetch&&0===this._requestsByChunk.size){var g;if(1===this.stream.numChunksLoaded){var p=this.stream.numChunks-1;this.stream.hasChunk(p)||(g=p)}else g=this.stream.nextEmptyChunk(o);Number.isInteger(g)&&this._requestChunks([g])}for(var m=0,v=s;m<v.length;m++){var b=v[m],y=this._promisesByRequest.get(b);this._promisesByRequest.delete(b),y.resolve()}this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})}},{key:\"onError\",value:function(e){this._loadedStreamCapability.reject(e)}},{key:\"getBeginChunk\",value:function(e){return Math.floor(e/this.chunkSize)}},{key:\"getEndChunk\",value:function(e){return Math.floor((e-1)/this.chunkSize)+1}},{key:\"abort\",value:function(e){this.aborted=!0,this.pdfNetworkStream&&this.pdfNetworkStream.cancelAllRequests(e);var t,a=_createForOfIteratorHelper(this._promisesByRequest.values());try{for(a.s();!(t=a.n()).done;){t.value.reject(e)}}catch(r){a.e(r)}finally{a.f()}}}]),e}();t.ChunkedStreamManager=o},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getLookupTableFactory=function(e){var t;return function(){return e&&(t=Object.create(null),e(t),e=null),t}},t.getInheritableProperty=function(e){var t,a=e.dict,n=e.key,i=e.getArray,o=void 0!==i&&i,s=e.stopWhenFound,c=void 0===s||s,l=0;for(;a;){var u=o?a.getArray(n):a.get(n);if(void 0!==u){if(c)return u;t||(t=[]),t.push(u)}if(++l>100){(0,r.warn)('getInheritableProperty: maximum loop count exceeded for \"'.concat(n,'\"'));break}a=a.get(\"Parent\")}return t},t.toRomanNumerals=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,r.assert)(Number.isInteger(e)&&e>0,\"The number should be a positive integer.\");var a,n=[];for(;e>=1e3;)e-=1e3,n.push(\"M\");a=e/100|0,e%=100,n.push(s[a]),a=e/10|0,e%=10,n.push(s[10+a]),n.push(s[20+e]);var i=n.join(\"\");return t?i.toLowerCase():i},t.log2=function(e){if(e<=0)return 0;return Math.ceil(Math.log2(e))},t.readInt8=function(e,t){return e[t]<<24>>24},t.readUint16=function(e,t){return e[t]<<8|e[t+1]},t.readUint32=function(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0},t.isWhiteSpace=function(e){return 32===e||9===e||13===e||10===e},t.XRefParseException=t.XRefEntryException=t.MissingDataException=void 0;var r=a(2);var n=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this,\"Missing data [\".concat(e,\", \").concat(r,\")\"))).begin=e,n.end=r,n}return a}(r.BaseException);t.MissingDataException=n;var i=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(r.BaseException);t.XRefEntryException=i;var o=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(r.BaseException);t.XRefParseException=o;var s=[\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"]},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFDocument=t.Page=void 0;var r=a(2),n=a(10),i=a(5),o=a(8),s=a(12),c=a(25),l=a(22),u=a(11),h=a(26),f=a(28),d=[0,0,612,792];function g(e,t){return\"display\"===t&&e.viewable||\"print\"===t&&e.printable}var p=function(){function e(t){var a=t.pdfManager,r=t.xref,n=t.pageIndex,i=t.pageDict,o=t.ref,s=t.globalIdFactory,c=t.fontCache,l=t.builtInCMapCache,u=t.globalImageCache;_classCallCheck(this,e),this.pdfManager=a,this.pageIndex=n,this.pageDict=i,this.xref=r,this.ref=o,this.fontCache=c,this.builtInCMapCache=l,this.globalImageCache=u,this.evaluatorOptions=a.evaluatorOptions,this.resourcesPromise=null;var h={obj:0};this._localIdFactory=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return _createClass(a,null,[{key:\"createObjId\",value:function(){return\"p\".concat(n,\"_\").concat(++h.obj)}}]),a}(s)}return _createClass(e,[{key:\"_getInheritableProperty\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=(0,o.getInheritableProperty)({dict:this.pageDict,key:e,getArray:t,stopWhenFound:!1});return Array.isArray(a)?1!==a.length&&(0,i.isDict)(a[0])?i.Dict.merge({xref:this.xref,dictArray:a}):a[0]:a}},{key:\"content\",get:function(){return this.pageDict.get(\"Contents\")}},{key:\"resources\",get:function(){return(0,r.shadow)(this,\"resources\",this._getInheritableProperty(\"Resources\")||i.Dict.empty)}},{key:\"_getBoundingBox\",value:function(e){var t=this._getInheritableProperty(e,!0);if(Array.isArray(t)&&4===t.length){if(t[2]-t[0]!==0&&t[3]-t[1]!==0)return t;(0,r.warn)(\"Empty /\".concat(e,\" entry.\"))}return null}},{key:\"mediaBox\",get:function(){return(0,r.shadow)(this,\"mediaBox\",this._getBoundingBox(\"MediaBox\")||d)}},{key:\"cropBox\",get:function(){return(0,r.shadow)(this,\"cropBox\",this._getBoundingBox(\"CropBox\")||this.mediaBox)}},{key:\"userUnit\",get:function(){var e=this.pageDict.get(\"UserUnit\");return(!(0,r.isNum)(e)||e<=0)&&(e=1),(0,r.shadow)(this,\"userUnit\",e)}},{key:\"view\",get:function(){var e,t=this.cropBox,a=this.mediaBox;if(t===a||(0,r.isArrayEqual)(t,a))e=a;else{var n=r.Util.intersect(t,a);n&&n[2]-n[0]!==0&&n[3]-n[1]!==0?e=n:(0,r.warn)(\"Empty /CropBox and /MediaBox intersection.\")}return(0,r.shadow)(this,\"view\",e||a)}},{key:\"rotate\",get:function(){var e=this._getInheritableProperty(\"Rotate\")||0;return e%90!==0?e=0:e>=360?e%=360:e<0&&(e=(e%360+360)%360),(0,r.shadow)(this,\"rotate\",e)}},{key:\"getContentStream\",value:function(){var e,t=this.content;if(Array.isArray(t)){var a,r=this.xref,n=[],o=_createForOfIteratorHelper(t);try{for(o.s();!(a=o.n()).done;){var c=a.value;n.push(r.fetchIfRef(c))}}catch(l){o.e(l)}finally{o.f()}e=new s.StreamsSequenceStream(n)}else e=(0,i.isStream)(t)?t:new s.NullStream;return e}},{key:\"save\",value:function(e,t,a){var n=new f.PartialEvaluator({xref:this.xref,handler:e,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions});return this._parsedAnnotations.then((function(e){var i,o=[],s=_createForOfIteratorHelper(e);try{for(s.s();!(i=s.n()).done;){var c=i.value;g(c,\"print\")&&o.push(c.save(n,t,a).catch((function(e){return(0,r.warn)(\"save - ignoring annotation data during \"+'\"'.concat(t.name,'\" task: \"').concat(e,'\".')),null})))}}catch(l){s.e(l)}finally{s.f()}return Promise.all(o)}))}},{key:\"loadResources\",value:function(e){var t=this;return this.resourcesPromise||(this.resourcesPromise=this.pdfManager.ensure(this,\"resources\")),this.resourcesPromise.then((function(){return new n.ObjectLoader(t.resources,e,t.xref).load()}))}},{key:\"getOperatorList\",value:function(e){var t=this,a=e.handler,n=e.sink,i=e.task,o=e.intent,s=e.renderInteractiveForms,c=e.annotationStorage,l=this.pdfManager.ensure(this,\"getContentStream\"),u=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),d=new f.PartialEvaluator({xref:this.xref,handler:a,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,globalImageCache:this.globalImageCache,options:this.evaluatorOptions}),p=Promise.all([l,u]).then((function(e){var r=_slicedToArray(e,1)[0],s=new h.OperatorList(o,n);return a.send(\"StartRenderPage\",{transparency:d.hasBlendModes(t.resources),pageIndex:t.pageIndex,intent:o}),d.getOperatorList({stream:r,task:i,resources:t.resources,operatorList:s}).then((function(){return s}))}));return Promise.all([p,this._parsedAnnotations]).then((function(e){var t=_slicedToArray(e,2),a=t[0],n=t[1];if(0===n.length)return a.flush(!0),{length:a.totalLength};var l,u=[],h=_createForOfIteratorHelper(n);try{for(h.s();!(l=h.n()).done;){var f=l.value;g(f,o)&&u.push(f.getOperatorList(d,i,s,c).catch((function(e){return(0,r.warn)(\"getOperatorList - ignoring annotation data during \"+'\"'.concat(i.name,'\" task: \"').concat(e,'\".')),null})))}}catch(p){h.e(p)}finally{h.f()}return Promise.all(u).then((function(e){a.addOp(r.OPS.beginAnnotations,[]);var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;a.addOpList(i)}}catch(p){n.e(p)}finally{n.f()}return a.addOp(r.OPS.endAnnotations,[]),a.flush(!0),{length:a.totalLength}}))}))}},{key:\"extractTextContent\",value:function(e){var t=this,a=e.handler,r=e.task,n=e.normalizeWhitespace,i=e.sink,o=e.combineTextItems,s=this.pdfManager.ensure(this,\"getContentStream\"),c=this.loadResources([\"ExtGState\",\"XObject\",\"Font\"]);return Promise.all([s,c]).then((function(e){var s=_slicedToArray(e,1)[0];return new f.PartialEvaluator({xref:t.xref,handler:a,pageIndex:t.pageIndex,idFactory:t._localIdFactory,fontCache:t.fontCache,builtInCMapCache:t.builtInCMapCache,globalImageCache:t.globalImageCache,options:t.evaluatorOptions}).getTextContent({stream:s,task:r,resources:t.resources,normalizeWhitespace:n,combineTextItems:o,sink:i})}))}},{key:\"getAnnotationsData\",value:function(e){return this._parsedAnnotations.then((function(t){for(var a=[],r=0,n=t.length;r<n;r++)e&&!g(t[r],e)||a.push(t[r].data);return a}))}},{key:\"annotations\",get:function(){return(0,r.shadow)(this,\"annotations\",this._getInheritableProperty(\"Annots\")||[])}},{key:\"_parsedAnnotations\",get:function(){var e=this,t=this.pdfManager.ensure(this,\"annotations\").then((function(){var t,a=[],n=_createForOfIteratorHelper(e.annotations);try{for(n.s();!(t=n.n()).done;){var i=t.value;a.push(c.AnnotationFactory.create(e.xref,i,e.pdfManager,e._localIdFactory).catch((function(e){return(0,r.warn)('_parsedAnnotations: \"'.concat(e,'\".')),null})))}}catch(o){n.e(o)}finally{n.f()}return Promise.all(a).then((function(e){return e.filter((function(e){return!!e}))}))}));return(0,r.shadow)(this,\"_parsedAnnotations\",t)}}]),e}();t.Page=p;var m=new Uint8Array([37,80,68,70,45]),v=new Uint8Array([115,116,97,114,116,120,114,101,102]),b=new Uint8Array([101,110,100,111,98,106]),y=/^[1-9]\\.[0-9]$/;function k(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1024,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=t.length,i=e.peekBytes(a),o=i.length-n;if(o<=0)return!1;if(r)for(var s=n-1,c=i.length-1;c>=s;){for(var l=0;l<n&&i[c-l]===t[s-l];)l++;if(l>=n)return e.pos+=c-s,!0;c--}else for(var u=0;u<=o;){for(var h=0;h<n&&i[u+h]===t[h];)h++;if(h>=n)return e.pos+=u,!0;u++}return!1}var w=function(){function e(t,a){var o;if(_classCallCheck(this,e),(0,i.isStream)(a))o=a;else{if(!(0,r.isArrayBuffer)(a))throw new Error(\"PDFDocument: Unknown argument type\");o=new s.Stream(a)}if(o.length<=0)throw new r.InvalidPDFException(\"The PDF file is empty, i.e. its size is zero bytes.\");this.pdfManager=t,this.stream=o,this.xref=new n.XRef(o,t),this._pagePromises=[],this._version=null;var c={font:0};this._globalIdFactory=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:\"getDocId\",value:function(){return\"g_\".concat(t.docId)}},{key:\"createFontId\",value:function(){return\"f\".concat(++c.font)}},{key:\"createObjId\",value:function(){(0,r.unreachable)(\"Abstract method `createObjId` called.\")}}]),e}()}return _createClass(e,[{key:\"parse\",value:function(e){this.xref.parse(e),this.catalog=new n.Catalog(this.pdfManager,this.xref),this.catalog.version&&(this._version=this.catalog.version)}},{key:\"linearization\",get:function(){var e=null;try{e=u.Linearization.create(this.stream)}catch(t){if(t instanceof o.MissingDataException)throw t;(0,r.info)(t)}return(0,r.shadow)(this,\"linearization\",e)}},{key:\"startXRef\",get:function(){var e=this.stream,t=0;if(this.linearization)e.reset(),k(e,b)&&(t=e.pos+6-e.start);else{for(var a=v.length,n=!1,i=e.end;!n&&i>0;)(i-=1024-a)<0&&(i=0),e.pos=i,n=k(e,v,1024,!0);if(n){var s;e.skip(9);do{s=e.getByte()}while((0,o.isWhiteSpace)(s));for(var c=\"\";s>=32&&s<=57;)c+=String.fromCharCode(s),s=e.getByte();t=parseInt(c,10),isNaN(t)&&(t=0)}}return(0,r.shadow)(this,\"startXRef\",t)}},{key:\"checkHeader\",value:function(){var e=this.stream;if(e.reset(),k(e,m)){e.moveStart();for(var t,a=\"\";(t=e.getByte())>32&&!(a.length>=12);)a+=String.fromCharCode(t);this._version||(this._version=a.substring(5))}}},{key:\"parseStartXRef\",value:function(){this.xref.setStartXRef(this.startXRef)}},{key:\"numPages\",get:function(){var e=this.linearization,t=e?e.numPages:this.catalog.numPages;return(0,r.shadow)(this,\"numPages\",t)}},{key:\"_hasOnlyDocumentSignatures\",value:function(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=10;return e.every((function(e){if((e=t.xref.fetchIfRef(e)).has(\"Kids\"))return++a>n?((0,r.warn)(\"_hasOnlyDocumentSignatures: maximum recursion depth reached\"),!1):t._hasOnlyDocumentSignatures(e.get(\"Kids\"),a);var o=(0,i.isName)(e.get(\"FT\"),\"Sig\"),s=e.get(\"Rect\"),c=Array.isArray(s)&&s.every((function(e){return 0===e}));return o&&c}))}},{key:\"formInfo\",get:function(){var e={hasAcroForm:!1,hasXfa:!1},t=this.catalog.acroForm;if(!t)return(0,r.shadow)(this,\"formInfo\",e);try{var a=t.get(\"XFA\"),n=Array.isArray(a)&&a.length>0||(0,i.isStream)(a)&&!a.isEmpty;e.hasXfa=n;var s=t.get(\"Fields\"),c=Array.isArray(s)&&s.length>0,l=!!(1&t.get(\"SigFlags\"))&&this._hasOnlyDocumentSignatures(s);e.hasAcroForm=c&&!l}catch(u){if(u instanceof o.MissingDataException)throw u;(0,r.info)(\"Cannot fetch form information.\")}return(0,r.shadow)(this,\"formInfo\",e)}},{key:\"documentInfo\",get:function(){var e={Title:r.isString,Author:r.isString,Subject:r.isString,Keywords:r.isString,Creator:r.isString,Producer:r.isString,CreationDate:r.isString,ModDate:r.isString,Trapped:i.isName},t=this._version;\"string\"===typeof t&&y.test(t)||((0,r.warn)(\"Invalid PDF header version number: \".concat(t)),t=null);var a,n={PDFFormatVersion:t,IsLinearized:!!this.linearization,IsAcroFormPresent:this.formInfo.hasAcroForm,IsXFAPresent:this.formInfo.hasXfa,IsCollectionPresent:!!this.catalog.collection};try{a=this.xref.trailer.get(\"Info\")}catch(f){if(f instanceof o.MissingDataException)throw f;(0,r.info)(\"The document information dictionary is invalid.\")}if((0,i.isDict)(a)){var s,c=_createForOfIteratorHelper(a.getKeys());try{for(c.s();!(s=c.n()).done;){var l=s.value,u=a.get(l);if(e[l])e[l](u)?n[l]=\"string\"!==typeof u?u:(0,r.stringToPDFString)(u):(0,r.info)('Bad value in document info for \"'.concat(l,'\".'));else if(\"string\"===typeof l){var h=void 0;if((0,r.isString)(u))h=(0,r.stringToPDFString)(u);else{if(!((0,i.isName)(u)||(0,r.isNum)(u)||(0,r.isBool)(u))){(0,r.info)('Unsupported value in document info for (custom) \"'.concat(l,'\".'));continue}h=u}n.Custom||(n.Custom=Object.create(null)),n.Custom[l]=h}}}catch(f){c.e(f)}finally{c.f()}}return(0,r.shadow)(this,\"documentInfo\",n)}},{key:\"fingerprint\",get:function(){for(var e,t=this.xref.trailer.get(\"ID\"),a=[],n=0,i=(e=Array.isArray(t)&&t[0]&&(0,r.isString)(t[0])&&\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"!==t[0]?(0,r.stringToBytes)(t[0]):(0,l.calculateMD5)(this.stream.getByteRange(0,1024),0,1024)).length;n<i;n++){var o=e[n].toString(16);a.push(o.padStart(2,\"0\"))}return(0,r.shadow)(this,\"fingerprint\",a.join(\"\"))}},{key:\"_getLinearizationPage\",value:function(e){var t=this.catalog,a=this.linearization,n=i.Ref.get(a.objectNumberFirst,0);return this.xref.fetchAsync(n).then((function(e){if((0,i.isDict)(e,\"Page\")||(0,i.isDict)(e)&&!e.has(\"Type\")&&e.has(\"Contents\"))return n&&!t.pageKidsCountCache.has(n)&&t.pageKidsCountCache.put(n,1),[e,n];throw new r.FormatError(\"The Linearization dictionary doesn't point to a valid Page dictionary.\")})).catch((function(a){return(0,r.info)(a),t.getPageDict(e)}))}},{key:\"getPage\",value:function(e){var t=this;if(void 0!==this._pagePromises[e])return this._pagePromises[e];var a=this.catalog,r=this.linearization,n=r&&r.pageFirst===e?this._getLinearizationPage(e):a.getPageDict(e);return this._pagePromises[e]=n.then((function(r){var n=_slicedToArray(r,2),i=n[0],o=n[1];return new p({pdfManager:t.pdfManager,xref:t.xref,pageIndex:e,pageDict:i,ref:o,globalIdFactory:t._globalIdFactory,fontCache:a.fontCache,builtInCMapCache:a.builtInCMapCache,globalImageCache:a.globalImageCache})}))}},{key:\"checkFirstPage\",value:function(){var e=this;return this.getPage(0).catch(function(){var t=_asyncToGenerator(_regeneratorRuntime.mark((function t(a){return _regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(a instanceof o.XRefEntryException)){t.next=5;break}return e._pagePromises.length=0,t.next=4,e.cleanup();case 4:throw new o.XRefParseException;case 5:case\"end\":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}())}},{key:\"fontFallback\",value:function(e,t){return this.catalog.fontFallback(e,t)}},{key:\"cleanup\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(){var t,a=arguments;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=a.length>0&&void 0!==a[0]&&a[0],e.abrupt(\"return\",this.catalog?this.catalog.cleanup(t):(0,i.clearPrimitiveCaches)());case 2:case\"end\":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()}]),e}();t.PDFDocument=w},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FileSpec=t.XRef=t.ObjectLoader=t.Catalog=void 0;var r=a(2),n=a(5),i=a(11),o=a(8),s=a(22),c=a(23),l=a(24);function u(e){return(0,n.isDict)(e)?e.get(\"D\"):e}var h=function(){function e(t,a){if(_classCallCheck(this,e),this.pdfManager=t,this.xref=a,this._catDict=a.getCatalogObj(),!(0,n.isDict)(this._catDict))throw new r.FormatError(\"Catalog object is not a dictionary.\");this.fontCache=new n.RefSetCache,this.builtInCMapCache=new Map,this.globalImageCache=new l.GlobalImageCache,this.pageKidsCountCache=new n.RefSetCache}return _createClass(e,[{key:\"version\",get:function(){var e=this._catDict.get(\"Version\");return(0,n.isName)(e)?(0,r.shadow)(this,\"version\",e.name):(0,r.shadow)(this,\"version\",null)}},{key:\"collection\",get:function(){var e=null;try{var t=this._catDict.get(\"Collection\");(0,n.isDict)(t)&&t.size>0&&(e=t)}catch(a){if(a instanceof o.MissingDataException)throw a;(0,r.info)(\"Cannot fetch Collection entry; assuming no collection is present.\")}return(0,r.shadow)(this,\"collection\",e)}},{key:\"acroForm\",get:function(){var e=null;try{var t=this._catDict.get(\"AcroForm\");(0,n.isDict)(t)&&t.size>0&&(e=t)}catch(a){if(a instanceof o.MissingDataException)throw a;(0,r.info)(\"Cannot fetch AcroForm entry; assuming no forms are present.\")}return(0,r.shadow)(this,\"acroForm\",e)}},{key:\"metadata\",get:function(){var e=this._catDict.getRaw(\"Metadata\");if(!(0,n.isRef)(e))return(0,r.shadow)(this,\"metadata\",null);var t,a=!(this.xref.encrypt&&this.xref.encrypt.encryptMetadata),i=this.xref.fetch(e,a);if(i&&(0,n.isDict)(i.dict)){var s=i.dict.get(\"Type\"),c=i.dict.get(\"Subtype\");if((0,n.isName)(s,\"Metadata\")&&(0,n.isName)(c,\"XML\"))try{t=(0,r.stringToUTF8String)((0,r.bytesToString)(i.getBytes()))}catch(l){if(l instanceof o.MissingDataException)throw l;(0,r.info)(\"Skipping invalid metadata.\")}}return(0,r.shadow)(this,\"metadata\",t)}},{key:\"toplevelPagesDict\",get:function(){var e=this._catDict.get(\"Pages\");if(!(0,n.isDict)(e))throw new r.FormatError(\"Invalid top-level pages dictionary.\");return(0,r.shadow)(this,\"toplevelPagesDict\",e)}},{key:\"documentOutline\",get:function(){var e=null;try{e=this._readDocumentOutline()}catch(t){if(t instanceof o.MissingDataException)throw t;(0,r.warn)(\"Unable to read document outline.\")}return(0,r.shadow)(this,\"documentOutline\",e)}},{key:\"_readDocumentOutline\",value:function(){var t=this._catDict.get(\"Outlines\");if(!(0,n.isDict)(t))return null;if(t=t.getRaw(\"First\"),!(0,n.isRef)(t))return null;var a={items:[]},i=[{obj:t,parent:a}],o=new n.RefSet;o.put(t);for(var s=this.xref,l=new Uint8ClampedArray(3);i.length>0;){var u=i.shift(),h=s.fetchIfRef(u.obj);if(null!==h){if(!h.has(\"Title\"))throw new r.FormatError(\"Invalid outline item encountered.\");var f={url:null,dest:null};e.parseDestDictionary({destDict:h,resultObj:f,docBaseUrl:this.pdfManager.docBaseUrl});var d=h.get(\"Title\"),g=h.get(\"F\")||0,p=h.getArray(\"C\"),m=h.get(\"Count\"),v=l;!Array.isArray(p)||3!==p.length||0===p[0]&&0===p[1]&&0===p[2]||(v=c.ColorSpace.singletons.rgb.getRgb(p,0));var b={dest:f.dest,url:f.url,unsafeUrl:f.unsafeUrl,newWindow:f.newWindow,title:(0,r.stringToPDFString)(d),color:v,count:Number.isInteger(m)?m:void 0,bold:!!(2&g),italic:!!(1&g),items:[]};u.parent.items.push(b),t=h.getRaw(\"First\"),(0,n.isRef)(t)&&!o.has(t)&&(i.push({obj:t,parent:b}),o.put(t)),t=h.getRaw(\"Next\"),(0,n.isRef)(t)&&!o.has(t)&&(i.push({obj:t,parent:u.parent}),o.put(t))}}return a.items.length>0?a.items:null}},{key:\"permissions\",get:function(){var e=null;try{e=this._readPermissions()}catch(t){if(t instanceof o.MissingDataException)throw t;(0,r.warn)(\"Unable to read permissions.\")}return(0,r.shadow)(this,\"permissions\",e)}},{key:\"_readPermissions\",value:function(){var e=this.xref.trailer.get(\"Encrypt\");if(!(0,n.isDict)(e))return null;var t=e.get(\"P\");if(!(0,r.isNum)(t))return null;t+=Math.pow(2,32);var a=[];for(var i in r.PermissionFlag){var o=r.PermissionFlag[i];t&o&&a.push(o)}return a}},{key:\"optionalContentConfig\",get:function(){var e=null;try{var t=this._catDict.get(\"OCProperties\");if(!t)return(0,r.shadow)(this,\"optionalContentConfig\",null);var a=t.get(\"D\");if(!a)return(0,r.shadow)(this,\"optionalContentConfig\",null);var i=t.get(\"OCGs\");if(!Array.isArray(i))return(0,r.shadow)(this,\"optionalContentConfig\",null);var s,c=[],l=[],u=_createForOfIteratorHelper(i);try{for(u.s();!(s=u.n()).done;){var h=s.value;if((0,n.isRef)(h)){l.push(h);var f=this.xref.fetchIfRef(h);c.push({id:h.toString(),name:(0,r.isString)(f.get(\"Name\"))?(0,r.stringToPDFString)(f.get(\"Name\")):null,intent:(0,r.isString)(f.get(\"Intent\"))?(0,r.stringToPDFString)(f.get(\"Intent\")):null})}}}catch(d){u.e(d)}finally{u.f()}(e=this._readOptionalContentConfig(a,l)).groups=c}catch(g){if(g instanceof o.MissingDataException)throw g;(0,r.warn)(\"Unable to read optional content config: \".concat(g))}return(0,r.shadow)(this,\"optionalContentConfig\",e)}},{key:\"_readOptionalContentConfig\",value:function(e,t){function a(e){var a=[];if(Array.isArray(e)){var r,i=_createForOfIteratorHelper(e);try{for(i.s();!(r=i.n()).done;){var o=r.value;(0,n.isRef)(o)&&(t.includes(o)&&a.push(o.toString()))}}catch(s){i.e(s)}finally{i.f()}}return a}function i(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(!Array.isArray(e))return null;var r,i=[],s=_createForOfIteratorHelper(e);try{for(s.s();!(r=s.n()).done;){var l=r.value;if((0,n.isRef)(l)&&t.includes(l))c.put(l),i.push(l.toString());else{var u=o(l,a);u&&i.push(u)}}}catch(p){s.e(p)}finally{s.f()}if(a>0)return i;var h,f=[],d=_createForOfIteratorHelper(t);try{for(d.s();!(h=d.n()).done;){var g=h.value;c.has(g)||f.push(g.toString())}}catch(p){d.e(p)}finally{d.f()}return f.length&&i.push({name:null,order:f}),i}function o(e,t){if(++t>l)return(0,r.warn)(\"parseNestedOrder - reached MAX_NESTED_LEVELS.\"),null;var a=s.fetchIfRef(e);if(!Array.isArray(a))return null;var n=s.fetchIfRef(a[0]);if(\"string\"!==typeof n)return null;var o=i(a.slice(1),t);return o&&o.length?{name:(0,r.stringToPDFString)(n),order:o}:null}var s=this.xref,c=new n.RefSet,l=10;return{name:(0,r.isString)(e.get(\"Name\"))?(0,r.stringToPDFString)(e.get(\"Name\")):null,creator:(0,r.isString)(e.get(\"Creator\"))?(0,r.stringToPDFString)(e.get(\"Creator\")):null,baseState:(0,n.isName)(e.get(\"BaseState\"))?e.get(\"BaseState\").name:null,on:a(e.get(\"ON\")),off:a(e.get(\"OFF\")),order:i(e.get(\"Order\")),groups:null}}},{key:\"numPages\",get:function(){var e=this.toplevelPagesDict.get(\"Count\");if(!Number.isInteger(e))throw new r.FormatError(\"Page count in top-level pages dictionary is not an integer.\");return(0,r.shadow)(this,\"numPages\",e)}},{key:\"destinations\",get:function(){var e=this._readDests(),t=Object.create(null);if(e instanceof g){var a=e.getAll();for(var i in a)t[i]=u(a[i])}else e instanceof n.Dict&&e.forEach((function(e,a){a&&(t[e]=u(a))}));return(0,r.shadow)(this,\"destinations\",t)}},{key:\"getDestination\",value:function(e){var t=this._readDests();return t instanceof g||t instanceof n.Dict?u(t.get(e)||null):null}},{key:\"_readDests\",value:function(){var e=this._catDict.get(\"Names\");return e&&e.has(\"Dests\")?new g(e.getRaw(\"Dests\"),this.xref):this._catDict.has(\"Dests\")?this._catDict.get(\"Dests\"):void 0}},{key:\"pageLabels\",get:function(){var e=null;try{e=this._readPageLabels()}catch(t){if(t instanceof o.MissingDataException)throw t;(0,r.warn)(\"Unable to read page labels.\")}return(0,r.shadow)(this,\"pageLabels\",e)}},{key:\"_readPageLabels\",value:function(){var e=this._catDict.getRaw(\"PageLabels\");if(!e)return null;for(var t=new Array(this.numPages),a=null,i=\"\",s=new p(e,this.xref).getAll(),c=\"\",l=1,u=0,h=this.numPages;u<h;u++){if(u in s){var f=s[u];if(!(0,n.isDict)(f))throw new r.FormatError(\"PageLabel is not a dictionary.\");if(f.has(\"Type\")&&!(0,n.isName)(f.get(\"Type\"),\"PageLabel\"))throw new r.FormatError(\"Invalid type in PageLabel dictionary.\");if(f.has(\"S\")){var d=f.get(\"S\");if(!(0,n.isName)(d))throw new r.FormatError(\"Invalid style in PageLabel dictionary.\");a=d.name}else a=null;if(f.has(\"P\")){var g=f.get(\"P\");if(!(0,r.isString)(g))throw new r.FormatError(\"Invalid prefix in PageLabel dictionary.\");i=(0,r.stringToPDFString)(g)}else i=\"\";if(f.has(\"St\")){var m=f.get(\"St\");if(!(Number.isInteger(m)&&m>=1))throw new r.FormatError(\"Invalid start in PageLabel dictionary.\");l=m}else l=1}switch(a){case\"D\":c=l;break;case\"R\":case\"r\":c=(0,o.toRomanNumerals)(l,\"r\"===a);break;case\"A\":case\"a\":for(var v=\"a\"===a?97:65,b=l-1,y=String.fromCharCode(v+b%26),k=[],w=0,C=b/26|0;w<=C;w++)k.push(y);c=k.join(\"\");break;default:if(a)throw new r.FormatError('Invalid style \"'.concat(a,'\" in PageLabel dictionary.'));c=\"\"}t[u]=i+c,l++}return t}},{key:\"pageLayout\",get:function(){var e=this._catDict.get(\"PageLayout\"),t=\"\";if((0,n.isName)(e))switch(e.name){case\"SinglePage\":case\"OneColumn\":case\"TwoColumnLeft\":case\"TwoColumnRight\":case\"TwoPageLeft\":case\"TwoPageRight\":t=e.name}return(0,r.shadow)(this,\"pageLayout\",t)}},{key:\"pageMode\",get:function(){var e=this._catDict.get(\"PageMode\"),t=\"UseNone\";if((0,n.isName)(e))switch(e.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"FullScreen\":case\"UseOC\":case\"UseAttachments\":t=e.name}return(0,r.shadow)(this,\"pageMode\",t)}},{key:\"viewerPreferences\",get:function(){var e=this,t={HideToolbar:r.isBool,HideMenubar:r.isBool,HideWindowUI:r.isBool,FitWindow:r.isBool,CenterWindow:r.isBool,DisplayDocTitle:r.isBool,NonFullScreenPageMode:n.isName,Direction:n.isName,ViewArea:n.isName,ViewClip:n.isName,PrintArea:n.isName,PrintClip:n.isName,PrintScaling:n.isName,Duplex:n.isName,PickTrayByPDFSize:r.isBool,PrintPageRange:Array.isArray,NumCopies:Number.isInteger},a=this._catDict.get(\"ViewerPreferences\"),i=null;if((0,n.isDict)(a))for(var o in t)if(a.has(o)){var s=a.get(o);if(t[o](s)){var c=void 0;switch(o){case\"NonFullScreenPageMode\":switch(s.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"UseOC\":c=s.name;break;default:c=\"UseNone\"}break;case\"Direction\":switch(s.name){case\"L2R\":case\"R2L\":c=s.name;break;default:c=\"L2R\"}break;case\"ViewArea\":case\"ViewClip\":case\"PrintArea\":case\"PrintClip\":switch(s.name){case\"MediaBox\":case\"CropBox\":case\"BleedBox\":case\"TrimBox\":case\"ArtBox\":c=s.name;break;default:c=\"CropBox\"}break;case\"PrintScaling\":switch(s.name){case\"None\":case\"AppDefault\":c=s.name;break;default:c=\"AppDefault\"}break;case\"Duplex\":switch(s.name){case\"Simplex\":case\"DuplexFlipShortEdge\":case\"DuplexFlipLongEdge\":c=s.name;break;default:c=\"None\"}break;case\"PrintPageRange\":if(s.length%2!==0)break;s.every((function(t,a,r){return Number.isInteger(t)&&t>0&&(0===a||t>=r[a-1])&&t<=e.numPages}))&&(c=s);break;case\"NumCopies\":s>0&&(c=s);break;default:if(\"boolean\"!==typeof s)throw new r.FormatError(\"viewerPreferences - expected a boolean value for: \".concat(o));c=s}void 0!==c?(i||(i=Object.create(null)),i[o]=c):(0,r.info)('Bad value in ViewerPreferences for \"'.concat(o,'\".'))}else(0,r.info)('Bad value in ViewerPreferences for \"'.concat(o,'\".'))}return(0,r.shadow)(this,\"viewerPreferences\",i)}},{key:\"openAction\",get:function(){var t=this._catDict.get(\"OpenAction\"),a=null;if((0,n.isDict)(t)){var i=new n.Dict(this.xref);i.set(\"A\",t);var o={url:null,dest:null,action:null};e.parseDestDictionary({destDict:i,resultObj:o}),Array.isArray(o.dest)?(a||(a=Object.create(null)),a.dest=o.dest):o.action&&(a||(a=Object.create(null)),a.action=o.action)}else Array.isArray(t)&&(a||(a=Object.create(null)),a.dest=t);return(0,r.shadow)(this,\"openAction\",a)}},{key:\"attachments\",get:function(){var e=this._catDict.get(\"Names\"),t=null;if(e&&e.has(\"EmbeddedFiles\")){var a=new g(e.getRaw(\"EmbeddedFiles\"),this.xref).getAll();for(var n in a){var i=new m(a[n],this.xref);t||(t=Object.create(null)),t[(0,r.stringToPDFString)(n)]=i.serializable}}return(0,r.shadow)(this,\"attachments\",t)}},{key:\"javaScript\",get:function(){var e=this._catDict.get(\"Names\"),t=null;function a(e){var a=e.get(\"S\");if((0,n.isName)(a,\"JavaScript\")){var i=e.get(\"JS\");if((0,n.isStream)(i))i=(0,r.bytesToString)(i.getBytes());else if(!(0,r.isString)(i))return;t||(t=[]),t.push((0,r.stringToPDFString)(i))}}if(e&&e.has(\"JavaScript\")){var i=new g(e.getRaw(\"JavaScript\"),this.xref).getAll();for(var o in i){var s=i[o];(0,n.isDict)(s)&&a(s)}}var c=this._catDict.get(\"OpenAction\");return(0,n.isDict)(c)&&(0,n.isName)(c.get(\"S\"),\"JavaScript\")&&a(c),(0,r.shadow)(this,\"javaScript\",t)}},{key:\"fontFallback\",value:function(e,t){var a=[];return this.fontCache.forEach((function(e){a.push(e)})),Promise.all(a).then((function(a){var r,n=_createForOfIteratorHelper(a);try{for(n.s();!(r=n.n()).done;){var i=r.value;if(i.loadedName===e)return void i.fallback(t)}}catch(o){n.e(o)}finally{n.f()}}))}},{key:\"cleanup\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];(0,n.clearPrimitiveCaches)(),this.globalImageCache.clear(t),this.pageKidsCountCache.clear();var a=[];return this.fontCache.forEach((function(e){a.push(e)})),Promise.all(a).then((function(t){var a,r=_createForOfIteratorHelper(t);try{for(r.s();!(a=r.n()).done;){delete a.value.dict.translated}}catch(n){r.e(n)}finally{r.f()}e.fontCache.clear(),e.builtInCMapCache.clear()}))}},{key:\"getPageDict\",value:function(e){var t,a=(0,r.createPromiseCapability)(),i=[this._catDict.getRaw(\"Pages\")],o=new n.RefSet,s=this.xref,c=this.pageKidsCountCache,l=0;return function u(){for(var h=function(){var h=i.pop();if((0,n.isRef)(h))return(t=c.get(h))>0&&l+t<e?(l+=t,\"continue\"):o.has(h)?(a.reject(new r.FormatError(\"Pages tree contains circular reference.\")),{v:void 0}):(o.put(h),s.fetchAsync(h).then((function(t){(0,n.isDict)(t,\"Page\")||(0,n.isDict)(t)&&!t.has(\"Kids\")?e===l?(h&&!c.has(h)&&c.put(h,1),a.resolve([t,h])):(l++,u()):(i.push(t),u())}),a.reject),{v:void 0});if(!(0,n.isDict)(h))return a.reject(new r.FormatError(\"Page dictionary kid reference points to wrong type of object.\")),{v:void 0};if(t=h.get(\"Count\"),Number.isInteger(t)&&t>=0){var f=h.objId;if(f&&!c.has(f)&&c.put(f,t),l+t<=e)return l+=t,\"continue\"}var d=h.get(\"Kids\");if(!Array.isArray(d))return(0,n.isName)(h.get(\"Type\"),\"Page\")||!h.has(\"Type\")&&h.has(\"Contents\")?l===e?(a.resolve([h,null]),{v:void 0}):(l++,\"continue\"):(a.reject(new r.FormatError(\"Page dictionary kids object is not an array.\")),{v:void 0});for(var g=d.length-1;g>=0;g--)i.push(d[g])};i.length;){var f=h();if(\"continue\"!==f&&\"object\"===typeof f)return f.v}a.reject(new Error(\"Page index \".concat(e,\" not found.\")))}(),a.promise}},{key:\"getPageIndex\",value:function(e){var t=this.xref;var a=0;return function i(o){return function(a){var i,o=0;return t.fetchAsync(a).then((function(t){if((0,n.isRefsEqual)(a,e)&&!(0,n.isDict)(t,\"Page\")&&(!(0,n.isDict)(t)||t.has(\"Type\")||!t.has(\"Contents\")))throw new r.FormatError(\"The reference does not point to a /Page dictionary.\");if(!t)return null;if(!(0,n.isDict)(t))throw new r.FormatError(\"Node must be a dictionary.\");return i=t.getRaw(\"Parent\"),t.getAsync(\"Parent\")})).then((function(e){if(!e)return null;if(!(0,n.isDict)(e))throw new r.FormatError(\"Parent must be a dictionary.\");return e.getAsync(\"Kids\")})).then((function(e){if(!e)return null;for(var s=[],c=!1,l=0,u=e.length;l<u;l++){var h=e[l];if(!(0,n.isRef)(h))throw new r.FormatError(\"Kid must be a reference.\");if((0,n.isRefsEqual)(h,a)){c=!0;break}s.push(t.fetchAsync(h).then((function(e){if(!(0,n.isDict)(e))throw new r.FormatError(\"Kid node must be a dictionary.\");e.has(\"Count\")?o+=e.get(\"Count\"):o++})))}if(!c)throw new r.FormatError(\"Kid reference not found in parent's kids.\");return Promise.all(s).then((function(){return[o,i]}))}))}(o).then((function(e){if(!e)return a;var t=_slicedToArray(e,2),r=t[0],n=t[1];return a+=r,i(n)}))}(e)}}],[{key:\"parseDestDictionary\",value:function(e){var t=e.destDict;if((0,n.isDict)(t)){var a=e.resultObj;if(\"object\"===typeof a){var i,o,s=e.docBaseUrl||null,c=t.get(\"A\");if(!(0,n.isDict)(c)&&t.has(\"Dest\")&&(c=t.get(\"Dest\")),(0,n.isDict)(c)){var l=c.get(\"S\");if(!(0,n.isName)(l))return void(0,r.warn)(\"parseDestDictionary: Invalid type in Action dictionary.\");var u=l.name;switch(u){case\"URI\":i=c.get(\"URI\"),(0,n.isName)(i)?i=\"/\"+i.name:(0,r.isString)(i)&&(i=function(e){return e.startsWith(\"www.\")?\"http://\".concat(e):e}(i));break;case\"GoTo\":o=c.get(\"D\");break;case\"Launch\":case\"GoToR\":var h=c.get(\"F\");(0,n.isDict)(h)?i=h.get(\"F\")||null:(0,r.isString)(h)&&(i=h);var f=c.get(\"D\");if(f&&((0,n.isName)(f)&&(f=f.name),(0,r.isString)(i))){var d=i.split(\"#\")[0];(0,r.isString)(f)?i=d+\"#\"+f:Array.isArray(f)&&(i=d+\"#\"+JSON.stringify(f))}var g=c.get(\"NewWindow\");(0,r.isBool)(g)&&(a.newWindow=g);break;case\"Named\":var p=c.get(\"N\");(0,n.isName)(p)&&(a.action=p.name);break;case\"JavaScript\":var m,v=c.get(\"JS\");if((0,n.isStream)(v)?m=(0,r.bytesToString)(v.getBytes()):(0,r.isString)(v)&&(m=v),m){var b=new RegExp(\"^\\\\s*(\"+[\"app.launchURL\",\"window.open\"].join(\"|\").split(\".\").join(\"\\\\.\")+\")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\"i\").exec((0,r.stringToPDFString)(m));if(b&&b[2]){i=b[2],\"true\"===b[3]&&\"app.launchURL\"===b[1]&&(a.newWindow=!0);break}}default:(0,r.warn)('parseDestDictionary: unsupported action type \"'.concat(u,'\".'))}}else t.has(\"Dest\")&&(o=t.get(\"Dest\"));if((0,r.isString)(i)){i=function(e){try{return(0,r.stringToUTF8String)(e)}catch(t){return e}}(i);var y=(0,r.createValidAbsoluteUrl)(i,s);y&&(a.url=y.href),a.unsafeUrl=i}o&&((0,n.isName)(o)&&(o=o.name),((0,r.isString)(o)||Array.isArray(o))&&(a.dest=o))}else(0,r.warn)(\"parseDestDictionary: `resultObj` must be an object.\")}else(0,r.warn)(\"parseDestDictionary: `destDict` must be a dictionary.\")}}]),e}();t.Catalog=h;var f=function(){function e(e,t){this.stream=e,this.pdfManager=t,this.entries=[],this.xrefstms=Object.create(null),this._cacheMap=new Map,this.stats={streamTypes:Object.create(null),fontTypes:Object.create(null)},this._newRefNum=null}return e.prototype={getNewRef:function(){return null===this._newRefNum&&(this._newRefNum=this.entries.length),n.Ref.get(this._newRefNum++,0)},resetNewRef:function(){this._newRefNum=null},setStartXRef:function(e){this.startXRefQueue=[e]},parse:function(e){var t,a,i;e?((0,r.warn)(\"Indexing all PDF objects\"),t=this.indexObjects()):t=this.readXRef(),t.assignXref(this),this.trailer=t;try{a=t.get(\"Encrypt\")}catch(u){if(u instanceof o.MissingDataException)throw u;(0,r.warn)('XRef.parse - Invalid \"Encrypt\" reference: \"'.concat(u,'\".'))}if((0,n.isDict)(a)){var c=t.get(\"ID\"),l=c&&c.length?c[0]:\"\";a.suppressEncryption=!0,this.encrypt=new s.CipherTransformFactory(a,l,this.pdfManager.password)}try{i=t.get(\"Root\")}catch(u){if(u instanceof o.MissingDataException)throw u;(0,r.warn)('XRef.parse - Invalid \"Root\" reference: \"'.concat(u,'\".'))}if(!(0,n.isDict)(i)||!i.has(\"Pages\")){if(!e)throw new o.XRefParseException;throw new r.FormatError(\"Invalid root reference\")}this.root=i},processXRefTable:function(e){\"tableState\"in this||(this.tableState={entryNum:0,streamPos:e.lexer.stream.pos,parserBuf1:e.buf1,parserBuf2:e.buf2});var t=this.readXRefTable(e);if(!(0,n.isCmd)(t,\"trailer\"))throw new r.FormatError(\"Invalid XRef table: could not find trailer dictionary\");var a=e.getObj();if(!(0,n.isDict)(a)&&a.dict&&(a=a.dict),!(0,n.isDict)(a))throw new r.FormatError(\"Invalid XRef table: could not parse trailer dictionary\");return delete this.tableState,a},readXRefTable:function(e){var t,a=e.lexer.stream,i=this.tableState;for(a.pos=i.streamPos,e.buf1=i.parserBuf1,e.buf2=i.parserBuf2;;){if(!(\"firstEntryNum\"in i)||!(\"entryCount\"in i)){if((0,n.isCmd)(t=e.getObj(),\"trailer\"))break;i.firstEntryNum=t,i.entryCount=e.getObj()}var o=i.firstEntryNum,s=i.entryCount;if(!Number.isInteger(o)||!Number.isInteger(s))throw new r.FormatError(\"Invalid XRef table: wrong types in subsection header\");for(var c=i.entryNum;c<s;c++){i.streamPos=a.pos,i.entryNum=c,i.parserBuf1=e.buf1,i.parserBuf2=e.buf2;var l={};l.offset=e.getObj(),l.gen=e.getObj();var u=e.getObj();if(u instanceof n.Cmd)switch(u.cmd){case\"f\":l.free=!0;break;case\"n\":l.uncompressed=!0}if(!Number.isInteger(l.offset)||!Number.isInteger(l.gen)||!l.free&&!l.uncompressed)throw new r.FormatError(\"Invalid entry in XRef subsection: \".concat(o,\", \").concat(s));0===c&&l.free&&1===o&&(o=0),this.entries[c+o]||(this.entries[c+o]=l)}i.entryNum=0,i.streamPos=a.pos,i.parserBuf1=e.buf1,i.parserBuf2=e.buf2,delete i.firstEntryNum,delete i.entryCount}if(this.entries[0]&&!this.entries[0].free)throw new r.FormatError(\"Invalid XRef table: unexpected first object\");return t},processXRefStream:function(e){if(!(\"streamState\"in this)){var t=e.dict,a=t.get(\"W\"),r=t.get(\"Index\");r||(r=[0,t.get(\"Size\")]),this.streamState={entryRanges:r,byteWidths:a,entryNum:0,streamPos:e.pos}}return this.readXRefStream(e),delete this.streamState,e.dict},readXRefStream:function(e){var t,a,n=this.streamState;e.pos=n.streamPos;for(var i=n.byteWidths,o=i[0],s=i[1],c=i[2],l=n.entryRanges;l.length>0;){var u=l[0],h=l[1];if(!Number.isInteger(u)||!Number.isInteger(h))throw new r.FormatError(\"Invalid XRef range fields: \".concat(u,\", \").concat(h));if(!Number.isInteger(o)||!Number.isInteger(s)||!Number.isInteger(c))throw new r.FormatError(\"Invalid XRef entry fields length: \".concat(u,\", \").concat(h));for(t=n.entryNum;t<h;++t){n.entryNum=t,n.streamPos=e.pos;var f=0,d=0,g=0;for(a=0;a<o;++a)f=f<<8|e.getByte();for(0===o&&(f=1),a=0;a<s;++a)d=d<<8|e.getByte();for(a=0;a<c;++a)g=g<<8|e.getByte();var p={};switch(p.offset=d,p.gen=g,f){case 0:p.free=!0;break;case 1:p.uncompressed=!0;break;case 2:break;default:throw new r.FormatError(\"Invalid XRef entry type: \".concat(f))}this.entries[u+t]||(this.entries[u+t]=p)}n.entryNum=0,n.streamPos=e.pos,l.splice(0,2)}},indexObjects:function(){function e(e,t){for(var a=\"\",r=e[t];10!==r&&13!==r&&60!==r&&!(++t>=e.length);)a+=String.fromCharCode(r),r=e[t];return a}function t(e,t,a){for(var r=a.length,n=e.length,i=0;t<n;){for(var o=0;o<r&&e[t+o]===a[o];)++o;if(o>=r)break;t++,i++}return i}var a=/^(\\d+)\\s+(\\d+)\\s+obj\\b/,s=/\\bendobj[\\b\\s]$/,c=/\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/,l=new Uint8Array([116,114,97,105,108,101,114]),u=new Uint8Array([115,116,97,114,116,120,114,101,102]),h=new Uint8Array([111,98,106]),f=new Uint8Array([47,88,82,101,102]);this.entries.length=0;var d=this.stream;d.pos=0;for(var g,p,m,v=d.getBytes(),b=d.start,y=v.length,k=[],w=[];b<y;){var C=v[b];if(9!==C&&10!==C&&13!==C&&32!==C)if(37!==C){var S,x=e(v,b);if(x.startsWith(\"xref\")&&(4===x.length||/\\s/.test(x[4])))b+=t(v,b,l),k.push(b),b+=t(v,b,u);else if(S=a.exec(x)){var A=0|S[1],I=0|S[2];this.entries[A]&&this.entries[A].gen!==I||(this.entries[A]={offset:b-d.start,gen:I,uncompressed:!0});for(var F=void 0,T=b+x.length;T<v.length;){var O=T+t(v,T,h)+4;F=O-b;var E=Math.max(O-25,T),P=(0,r.bytesToString)(v.subarray(E,O));if(s.test(P))break;var _=c.exec(P);if(_&&_[1]){(0,r.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", caused by missing \"endobj\" -- trying to recover.'),F-=_[1].length;break}T=O}var B=v.subarray(b,b+F),M=t(B,0,f);M<F&&B[M+5]<64&&(w.push(b-d.start),this.xrefstms[b-d.start]=1),b+=F}else x.startsWith(\"trailer\")&&(7===x.length||/\\s/.test(x[7]))?(k.push(b),b+=t(v,b,u)):b+=x.length+1}else do{if(++b>=y)break;C=v[b]}while(10!==C&&13!==C);else++b}for(g=0,p=w.length;g<p;++g)this.startXRefQueue.push(w[g]),this.readXRef(!0);for(g=0,p=k.length;g<p;++g){d.pos=k[g];var D=new i.Parser({lexer:new i.Lexer(d),xref:this,allowStreams:!0,recoveryMode:!0}),R=D.getObj();if((0,n.isCmd)(R,\"trailer\")){var N=D.getObj();if((0,n.isDict)(N)){var L=void 0;try{L=N.get(\"Root\")}catch(U){if(U instanceof o.MissingDataException)throw U;continue}if((0,n.isDict)(L)&&L.has(\"Pages\")){if(N.has(\"ID\"))return N;m=N}}}}if(m)return m;throw new r.InvalidPDFException(\"Invalid PDF structure.\")},readXRef:function(e){var t=this.stream,a=Object.create(null);try{for(;this.startXRefQueue.length;){var s=this.startXRefQueue[0];if(a[s])(0,r.warn)(\"readXRef - skipping XRef table since it was already parsed.\"),this.startXRefQueue.shift();else{a[s]=!0,t.pos=s+t.start;var c,l=new i.Parser({lexer:new i.Lexer(t),xref:this,allowStreams:!0}),u=l.getObj();if((0,n.isCmd)(u,\"xref\")){if(c=this.processXRefTable(l),this.topDict||(this.topDict=c),u=c.get(\"XRefStm\"),Number.isInteger(u)){var h=u;h in this.xrefstms||(this.xrefstms[h]=1,this.startXRefQueue.push(h))}}else{if(!Number.isInteger(u))throw new r.FormatError(\"Invalid XRef stream header\");if(!Number.isInteger(l.getObj())||!(0,n.isCmd)(l.getObj(),\"obj\")||!(0,n.isStream)(u=l.getObj()))throw new r.FormatError(\"Invalid XRef stream\");if(c=this.processXRefStream(u),this.topDict||(this.topDict=c),!c)throw new r.FormatError(\"Failed to read XRef stream\")}u=c.get(\"Prev\"),Number.isInteger(u)?this.startXRefQueue.push(u):(0,n.isRef)(u)&&this.startXRefQueue.push(u.num),this.startXRefQueue.shift()}}return this.topDict}catch(f){if(f instanceof o.MissingDataException)throw f;(0,r.info)(\"(while reading XRef): \"+f)}if(!e)throw new o.XRefParseException},getEntry:function(e){var t=this.entries[e];return t&&!t.free&&t.offset?t:null},fetchIfRef:function(e,t){return e instanceof n.Ref?this.fetch(e,t):e},fetch:function(e,t){if(!(e instanceof n.Ref))throw new Error(\"ref object is not a reference\");var a=e.num,r=this._cacheMap.get(a);if(void 0!==r)return r instanceof n.Dict&&!r.objId&&(r.objId=e.toString()),r;var i=this.getEntry(a);return null===i?(this._cacheMap.set(a,i),i):(i=i.uncompressed?this.fetchUncompressed(e,i,t):this.fetchCompressed(e,i,t),(0,n.isDict)(i)?i.objId=e.toString():(0,n.isStream)(i)&&(i.dict.objId=e.toString()),i)},fetchUncompressed:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.gen,s=e.num;if(t.gen!==r)throw new o.XRefEntryException(\"Inconsistent generation in XRef: \".concat(e));var c=this.stream.makeSubStream(t.offset+this.stream.start),l=new i.Parser({lexer:new i.Lexer(c),xref:this,allowStreams:!0}),u=l.getObj(),h=l.getObj(),f=l.getObj();if(u!==s||h!==r||!(f instanceof n.Cmd))throw new o.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(e));if(\"obj\"!==f.cmd){if(f.cmd.startsWith(\"obj\")&&(s=parseInt(f.cmd.substring(3),10),!Number.isNaN(s)))return s;throw new o.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(e))}return t=this.encrypt&&!a?l.getObj(this.encrypt.createCipherTransform(s,r)):l.getObj(),(0,n.isStream)(t)||this._cacheMap.set(s,t),t},fetchCompressed:function(e,t){var a=t.offset,s=this.fetch(n.Ref.get(a,0));if(!(0,n.isStream)(s))throw new r.FormatError(\"bad ObjStm stream\");var c=s.dict.get(\"First\"),l=s.dict.get(\"N\");if(!Number.isInteger(c)||!Number.isInteger(l))throw new r.FormatError(\"invalid first and n parameters for ObjStm stream\");for(var u=new i.Parser({lexer:new i.Lexer(s),xref:this,allowStreams:!0}),h=new Array(l),f=0;f<l;++f){var d=u.getObj();if(!Number.isInteger(d))throw new r.FormatError(\"invalid object number in the ObjStm stream: \".concat(d));var g=u.getObj();if(!Number.isInteger(g))throw new r.FormatError(\"invalid object offset in the ObjStm stream: \".concat(g));h[f]=d}for(var p=new Array(l),m=0;m<l;++m){var v=u.getObj();if(p[m]=v,u.buf1 instanceof n.Cmd&&\"endobj\"===u.buf1.cmd&&u.shift(),!(0,n.isStream)(v)){var b=h[m],y=this.entries[b];y&&y.offset===a&&y.gen===m&&this._cacheMap.set(b,v)}}if(void 0===(t=p[t.gen]))throw new o.XRefEntryException(\"Bad (compressed) XRef entry: \".concat(e));return t},fetchIfRefAsync:function(e,t){var a=this;return _asyncToGenerator(_regeneratorRuntime.mark((function r(){return _regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(!(e instanceof n.Ref)){r.next=2;break}return r.abrupt(\"return\",a.fetchAsync(e,t));case 2:return r.abrupt(\"return\",e);case 3:case\"end\":return r.stop()}}),r)})))()},fetchAsync:function(e,t){var a=this;return _asyncToGenerator(_regeneratorRuntime.mark((function r(){return _regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.abrupt(\"return\",a.fetch(e,t));case 4:if(r.prev=4,r.t0=r.catch(0),r.t0 instanceof o.MissingDataException){r.next=8;break}throw r.t0;case 8:return r.next=10,a.pdfManager.requestRange(r.t0.begin,r.t0.end);case 10:return r.abrupt(\"return\",a.fetchAsync(e,t));case 11:case\"end\":return r.stop()}}),r,null,[[0,4]])})))()},getCatalogObj:function(){return this.root}},e}();t.XRef=f;var d=function(){function e(t,a,n){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize NameOrNumberTree.\"),this.root=t,this.xref=a,this._type=n}return _createClass(e,[{key:\"getAll\",value:function(){var e=Object.create(null);if(!this.root)return e;var t=this.xref,a=new n.RefSet;a.put(this.root);for(var i=[this.root];i.length>0;){var o=t.fetchIfRef(i.shift());if((0,n.isDict)(o))if(o.has(\"Kids\"))for(var s=o.get(\"Kids\"),c=0,l=s.length;c<l;c++){var u=s[c];if(a.has(u))throw new r.FormatError('Duplicate entry in \"'.concat(this._type,'\" tree.'));i.push(u),a.put(u)}else{var h=o.get(this._type);if(Array.isArray(h))for(var f=0,d=h.length;f<d;f+=2)e[t.fetchIfRef(h[f])]=t.fetchIfRef(h[f+1])}}return e}},{key:\"get\",value:function(e){if(!this.root)return null;for(var t=this.xref,a=t.fetchIfRef(this.root),n=0;a.has(\"Kids\");){if(++n>10)return(0,r.warn)('Search depth limit reached for \"'.concat(this._type,'\" tree.')),null;var i=a.get(\"Kids\");if(!Array.isArray(i))return null;for(var o=0,s=i.length-1;o<=s;){var c=o+s>>1,l=t.fetchIfRef(i[c]).get(\"Limits\");if(e<t.fetchIfRef(l[0]))s=c-1;else{if(!(e>t.fetchIfRef(l[1]))){a=t.fetchIfRef(i[c]);break}o=c+1}}if(o>s)return null}var u=a.get(this._type);if(Array.isArray(u)){for(var h=0,f=u.length-2;h<=f;){var d=h+f>>1,g=d+(1&d),p=t.fetchIfRef(u[g]);if(e<p)f=g-2;else{if(!(e>p))return t.fetchIfRef(u[g+1]);h=g+2}}(0,r.info)('Falling back to an exhaustive search, for key \"'.concat(e,'\", ')+'in \"'.concat(this._type,'\" tree.'));for(var m=0,v=u.length;m<v;m+=2){if(t.fetchIfRef(u[m])===e)return(0,r.warn)('The \"'.concat(e,'\" key was found at an incorrect, ')+'i.e. out-of-order, position in \"'.concat(this._type,'\" tree.')),t.fetchIfRef(u[m+1])}}return null}}]),e}(),g=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){return _classCallCheck(this,a),t.call(this,e,r,\"Names\")}return a}(d),p=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){return _classCallCheck(this,a),t.call(this,e,r,\"Nums\")}return a}(d),m=function(){function e(e,t){e&&(0,n.isDict)(e)&&(this.xref=t,this.root=e,e.has(\"FS\")&&(this.fs=e.get(\"FS\")),this.description=e.has(\"Desc\")?(0,r.stringToPDFString)(e.get(\"Desc\")):\"\",e.has(\"RF\")&&(0,r.warn)(\"Related file specifications are not supported\"),this.contentAvailable=!0,e.has(\"EF\")||(this.contentAvailable=!1,(0,r.warn)(\"Non-embedded file specifications are not supported\")))}function t(e){return e.has(\"UF\")?e.get(\"UF\"):e.has(\"F\")?e.get(\"F\"):e.has(\"Unix\")?e.get(\"Unix\"):e.has(\"Mac\")?e.get(\"Mac\"):e.has(\"DOS\")?e.get(\"DOS\"):null}return e.prototype={get filename(){if(!this._filename&&this.root){var e=t(this.root)||\"unnamed\";this._filename=(0,r.stringToPDFString)(e).replace(/\\\\\\\\/g,\"\\\\\").replace(/\\\\\\//g,\"/\").replace(/\\\\/g,\"/\")}return this._filename},get content(){if(!this.contentAvailable)return null;!this.contentRef&&this.root&&(this.contentRef=t(this.root.get(\"EF\")));var e=null;if(this.contentRef){var a=this.xref.fetchIfRef(this.contentRef);a&&(0,n.isStream)(a)?e=a.getBytes():(0,r.warn)(\"Embedded file specification points to non-existing/invalid content\")}else(0,r.warn)(\"Embedded file specification does not have a content\");return e},get serializable(){return{filename:this.filename,content:this.content}}},e}();t.FileSpec=m;var v=function(){function e(e,t){if(e instanceof n.Dict)e=e.getRawValues();else if((0,n.isStream)(e))e=e.dict.getRawValues();else if(!Array.isArray(e))return;var a,r,i=_createForOfIteratorHelper(e);try{for(i.s();!(a=i.n()).done;){var o=a.value;((r=o)instanceof n.Ref||r instanceof n.Dict||Array.isArray(r)||(0,n.isStream)(r))&&t.push(o)}}catch(s){i.e(s)}finally{i.f()}}function t(e,t,a){this.dict=e,this.keys=t,this.xref=a,this.refSet=null}return t.prototype={load:function(){var e=this;return _asyncToGenerator(_regeneratorRuntime.mark((function t(){var a,r,i,o,s,c;return _regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.xref.stream.allChunksLoaded&&!e.xref.stream.allChunksLoaded()){t.next=2;break}return t.abrupt(\"return\",void 0);case 2:for(a=e.keys,r=e.dict,e.refSet=new n.RefSet,i=[],o=0,s=a.length;o<s;o++)void 0!==(c=r.getRaw(a[o]))&&i.push(c);return t.abrupt(\"return\",e._walk(i));case 7:case\"end\":return t.stop()}}),t)})))()},_walk:function(t){var a=this;return _asyncToGenerator(_regeneratorRuntime.mark((function r(){var i,s,c,l,u,h,f,d,g,p,m;return _regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:i=[],s=[];case 2:if(!t.length){r.next=22;break}if(!((c=t.pop())instanceof n.Ref)){r.next=18;break}if(!a.refSet.has(c)){r.next=7;break}return r.abrupt(\"continue\",2);case 7:r.prev=7,a.refSet.put(c),c=a.xref.fetch(c),r.next=18;break;case 12:if(r.prev=12,r.t0=r.catch(7),r.t0 instanceof o.MissingDataException){r.next=16;break}throw r.t0;case 16:i.push(c),s.push({begin:r.t0.begin,end:r.t0.end});case 18:if(c&&c.getBaseStreams){for(l=c.getBaseStreams(),u=!1,h=0,f=l.length;h<f;h++)(d=l[h]).allChunksLoaded&&!d.allChunksLoaded()&&(u=!0,s.push({begin:d.start,end:d.end}));u&&i.push(c)}e(c,t),r.next=2;break;case 22:if(!s.length){r.next=27;break}return r.next=25,a.xref.stream.manager.requestRanges(s);case 25:for(g=0,p=i.length;g<p;g++)(m=i[g])instanceof n.Ref&&a.refSet.remove(m);return r.abrupt(\"return\",a._walk(i));case 27:return a.refSet=null,r.abrupt(\"return\",void 0);case 29:case\"end\":return r.stop()}}),r,null,[[7,12]])})))()}},t}();t.ObjectLoader=v},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Parser=t.Linearization=t.Lexer=void 0;var r=a(12),n=a(2),i=a(5),o=a(8),s=a(13),c=a(15),l=a(18),u=a(20);function h(e){for(var t=e.length,a=1,r=0,n=0;n<t;++n)r+=a+=255&e[n];return r%65521<<16|a%65521}var f=function(){function e(t){var a=t.lexer,r=t.xref,n=t.allowStreams,i=void 0!==n&&n,o=t.recoveryMode,s=void 0!==o&&o;_classCallCheck(this,e),this.lexer=a,this.xref=r,this.allowStreams=i,this.recoveryMode=s,this.imageCache=Object.create(null),this.refill()}return _createClass(e,[{key:\"refill\",value:function(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()}},{key:\"shift\",value:function(){this.buf2 instanceof i.Cmd&&\"ID\"===this.buf2.cmd?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())}},{key:\"tryShift\",value:function(){try{return this.shift(),!0}catch(e){if(e instanceof o.MissingDataException)throw e;return!1}}},{key:\"getObj\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.buf1;if(this.shift(),t instanceof i.Cmd)switch(t.cmd){case\"BI\":return this.makeInlineImage(e);case\"[\":for(var a=[];!(0,i.isCmd)(this.buf1,\"]\")&&!(0,i.isEOF)(this.buf1);)a.push(this.getObj(e));if((0,i.isEOF)(this.buf1)){if(!this.recoveryMode)throw new n.FormatError(\"End of file inside array\");return a}return this.shift(),a;case\"<<\":for(var r=new i.Dict(this.xref);!(0,i.isCmd)(this.buf1,\">>\")&&!(0,i.isEOF)(this.buf1);)if((0,i.isName)(this.buf1)){var o=this.buf1.name;if(this.shift(),(0,i.isEOF)(this.buf1))break;r.set(o,this.getObj(e))}else(0,n.info)(\"Malformed dictionary: key must be a name object\"),this.shift();if((0,i.isEOF)(this.buf1)){if(!this.recoveryMode)throw new n.FormatError(\"End of file inside dictionary\");return r}return(0,i.isCmd)(this.buf2,\"stream\")?this.allowStreams?this.makeStream(r,e):r:(this.shift(),r);default:return t}if(Number.isInteger(t)){if(Number.isInteger(this.buf1)&&(0,i.isCmd)(this.buf2,\"R\")){var s=i.Ref.get(t,this.buf1);return this.shift(),this.shift(),s}return t}return\"string\"===typeof t&&e?e.decryptString(t):t}},{key:\"findDefaultInlineStreamEnd\",value:function(e){for(var t,a,r=this.lexer,s=e.pos,c=0;-1!==(t=e.getByte());)if(0===c)c=69===t?1:0;else if(1===c)c=73===t?2:0;else if((0,n.assert)(2===c,\"findDefaultInlineStreamEnd - invalid state.\"),32===t||10===t||13===t){a=e.pos;for(var l=e.peekBytes(10),u=0,h=l.length;u<h;u++)if((0!==(t=l[u])||0===l[u+1])&&10!==t&&13!==t&&(t<32||t>127)){c=0;break}if(2!==c)continue;if(r.knownCommands){var f=r.peekObj();f instanceof i.Cmd&&!r.knownCommands[f.cmd]&&(c=0)}else(0,n.warn)(\"findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.\");if(2===c)break}else c=0;-1===t&&((0,n.warn)(\"findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker\"),a&&((0,n.warn)('... trying to recover by using the last \"EI\" occurrence.'),e.skip(-(e.pos-a))));var d=4;return e.skip(-d),t=e.peekByte(),e.skip(d),(0,o.isWhiteSpace)(t)||d--,e.pos-d-s}},{key:\"findDCTDecodeInlineStreamEnd\",value:function(e){for(var t,a,r=e.pos,i=!1;-1!==(t=e.getByte());)if(255===t){switch(e.getByte()){case 0:break;case 255:e.skip(-1);break;case 217:i=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:(a=e.getUint16())>2?e.skip(a-2):e.skip(-2)}if(i)break}var o=e.pos-r;return-1===t?((0,n.warn)(\"Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead.\"),e.skip(-o),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),o)}},{key:\"findASCII85DecodeInlineStreamEnd\",value:function(e){for(var t,a=e.pos;-1!==(t=e.getByte());)if(126===t){var r=e.pos;for(t=e.peekByte();(0,o.isWhiteSpace)(t);)e.skip(),t=e.peekByte();if(62===t){e.skip();break}if(e.pos>r){var i=e.peekBytes(2);if(69===i[0]&&73===i[1])break}}var s=e.pos-a;return-1===t?((0,n.warn)(\"Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-s),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),s)}},{key:\"findASCIIHexDecodeInlineStreamEnd\",value:function(e){for(var t,a=e.pos;-1!==(t=e.getByte())&&62!==t;);var r=e.pos-a;return-1===t?((0,n.warn)(\"Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead.\"),e.skip(-r),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),r)}},{key:\"inlineStreamSkipEI\",value:function(e){for(var t,a=0;-1!==(t=e.getByte());)if(0===a)a=69===t?1:0;else if(1===a)a=73===t?2:0;else if(2===a)break}},{key:\"makeInlineImage\",value:function(e){for(var t,a=this.lexer,r=a.stream,o=new i.Dict(this.xref);!(0,i.isCmd)(this.buf1,\"ID\")&&!(0,i.isEOF)(this.buf1);){if(!(0,i.isName)(this.buf1))throw new n.FormatError(\"Dictionary key must be a name object\");var s=this.buf1.name;if(this.shift(),(0,i.isEOF)(this.buf1))break;o.set(s,this.getObj(e))}-1!==a.beginInlineImagePos&&(t=r.pos-a.beginInlineImagePos);var c,l=o.get(\"Filter\",\"F\");if((0,i.isName)(l))c=l.name;else if(Array.isArray(l)){var u=this.xref.fetchIfRef(l[0]);(0,i.isName)(u)&&(c=u.name)}var f,d=r.pos;f=\"DCTDecode\"===c||\"DCT\"===c?this.findDCTDecodeInlineStreamEnd(r):\"ASCII85Decode\"===c||\"A85\"===c?this.findASCII85DecodeInlineStreamEnd(r):\"ASCIIHexDecode\"===c||\"AHx\"===c?this.findASCIIHexDecodeInlineStreamEnd(r):this.findDefaultInlineStreamEnd(r);var g,p=r.makeSubStream(d,f,o);if(f<1e3&&t<5552){var m=p.getBytes();p.reset();var v=r.pos;r.pos=a.beginInlineImagePos;var b=r.getBytes(t);r.pos=v,g=h(m)+\"_\"+h(b);var y=this.imageCache[g];if(void 0!==y)return this.buf2=i.Cmd.get(\"EI\"),this.shift(),y.reset(),y}return e&&(p=e.createStream(p,f)),(p=this.filter(p,o,f)).dict=o,void 0!==g&&(p.cacheKey=\"inline_\".concat(f,\"_\").concat(g),this.imageCache[g]=p),this.buf2=i.Cmd.get(\"EI\"),this.shift(),p}},{key:\"_findStreamLength\",value:function(e,t){var a=this.lexer.stream;a.pos=e;for(var r=t.length;a.pos<a.end;){var n=a.peekBytes(2048),i=n.length-r;if(i<=0)break;for(var o=0;o<i;){for(var s=0;s<r&&n[o+s]===t[s];)s++;if(s>=r)return a.pos+=o,a.pos-e;o++}a.pos+=i}return-1}},{key:\"makeStream\",value:function(e,t){var a=this.lexer,r=a.stream;a.skipToNextLine();var s=r.pos-1,c=e.get(\"Length\");if(Number.isInteger(c)||((0,n.info)('Bad length \"'.concat(c,'\" in stream')),c=0),r.pos=s+c,a.nextChar(),this.tryShift()&&(0,i.isCmd)(this.buf2,\"endstream\"))this.shift();else{var l=new Uint8Array([101,110,100,115,116,114,101,97,109]),u=this._findStreamLength(s,l);if(u<0){for(var h=1;h<=1;h++){var f=l.length-h,d=l.slice(0,f),g=this._findStreamLength(s,d);if(g>=0){var p=r.peekBytes(f+1)[f];if(!(0,o.isWhiteSpace)(p))break;(0,n.info)('Found \"'.concat((0,n.bytesToString)(d),'\" when ')+\"searching for endstream command.\"),u=g;break}}if(u<0)throw new n.FormatError(\"Missing endstream command.\")}c=u,a.nextChar(),this.shift(),this.shift()}return this.shift(),r=r.makeSubStream(s,c,e),t&&(r=t.createStream(r,c)),(r=this.filter(r,e,c)).dict=e,r}},{key:\"filter\",value:function(e,t,a){var r=t.get(\"Filter\",\"F\"),o=t.get(\"DecodeParms\",\"DP\");if((0,i.isName)(r))return Array.isArray(o)&&(0,n.warn)(\"/DecodeParms should not contain an Array, when /Filter contains a Name.\"),this.makeFilter(e,r.name,a,o);var s=a;if(Array.isArray(r))for(var c=r,l=o,u=0,h=c.length;u<h;++u){if(r=this.xref.fetchIfRef(c[u]),!(0,i.isName)(r))throw new n.FormatError('Bad filter name \"'.concat(r,'\"'));o=null,Array.isArray(l)&&u in l&&(o=this.xref.fetchIfRef(l[u])),e=this.makeFilter(e,r.name,s,o),s=null}return e}},{key:\"makeFilter\",value:function(e,t,a,i){if(0===a)return(0,n.warn)('Empty \"'.concat(t,'\" stream.')),new r.NullStream;try{var h=this.xref.stats.streamTypes;if(\"FlateDecode\"===t||\"Fl\"===t)return h[n.StreamType.FLATE]=!0,i?new r.PredictorStream(new r.FlateStream(e,a),a,i):new r.FlateStream(e,a);if(\"LZWDecode\"===t||\"LZW\"===t){h[n.StreamType.LZW]=!0;var f=1;return i?(i.has(\"EarlyChange\")&&(f=i.get(\"EarlyChange\")),new r.PredictorStream(new r.LZWStream(e,a,f),a,i)):new r.LZWStream(e,a,f)}return\"DCTDecode\"===t||\"DCT\"===t?(h[n.StreamType.DCT]=!0,new l.JpegStream(e,a,e.dict,i)):\"JPXDecode\"===t||\"JPX\"===t?(h[n.StreamType.JPX]=!0,new u.JpxStream(e,a,e.dict,i)):\"ASCII85Decode\"===t||\"A85\"===t?(h[n.StreamType.A85]=!0,new r.Ascii85Stream(e,a)):\"ASCIIHexDecode\"===t||\"AHx\"===t?(h[n.StreamType.AHX]=!0,new r.AsciiHexStream(e,a)):\"CCITTFaxDecode\"===t||\"CCF\"===t?(h[n.StreamType.CCF]=!0,new s.CCITTFaxStream(e,a,i)):\"RunLengthDecode\"===t||\"RL\"===t?(h[n.StreamType.RLX]=!0,new r.RunLengthStream(e,a)):\"JBIG2Decode\"===t?(h[n.StreamType.JBIG]=!0,new c.Jbig2Stream(e,a,e.dict,i)):((0,n.warn)('Filter \"'.concat(t,'\" is not supported.')),e)}catch(d){if(d instanceof o.MissingDataException)throw d;return(0,n.warn)('Invalid stream: \"'.concat(d,'\"')),new r.NullStream}}}]),e}();t.Parser=f;var d=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function g(e){return e>=48&&e<=57?15&e:e>=65&&e<=70||e>=97&&e<=102?9+(15&e):-1}var p=function(){function e(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;_classCallCheck(this,e),this.stream=t,this.nextChar(),this.strBuf=[],this.knownCommands=a,this._hexStringNumWarn=0,this.beginInlineImagePos=-1}return _createClass(e,[{key:\"nextChar\",value:function(){return this.currentChar=this.stream.getByte()}},{key:\"peekChar\",value:function(){return this.stream.peekByte()}},{key:\"getNumber\",value:function(){var e=this.currentChar,t=!1,a=0,r=0;if(45===e?(r=-1,45===(e=this.nextChar())&&(e=this.nextChar())):43===e&&(r=1,e=this.nextChar()),10===e||13===e)do{e=this.nextChar()}while(10===e||13===e);if(46===e&&(a=10,e=this.nextChar()),e<48||e>57){if(10===a&&0===r&&((0,o.isWhiteSpace)(e)||-1===e))return(0,n.warn)(\"Lexer.getNumber - treating a single decimal point as zero.\"),0;throw new n.FormatError(\"Invalid number: \".concat(String.fromCharCode(e),\" (charCode \").concat(e,\")\"))}r=r||1;for(var i=e-48,s=0,c=1;(e=this.nextChar())>=0;)if(e>=48&&e<=57){var l=e-48;t?s=10*s+l:(0!==a&&(a*=10),i=10*i+l)}else if(46===e){if(0!==a)break;a=1}else if(45===e)(0,n.warn)(\"Badly formatted number: minus sign in the middle\");else{if(69!==e&&101!==e)break;if(43===(e=this.peekChar())||45===e)c=45===e?-1:1,this.nextChar();else if(e<48||e>57)break;t=!0}return 0!==a&&(i/=a),t&&(i*=Math.pow(10,c*s)),r*i}},{key:\"getString\",value:function(){var e=1,t=!1,a=this.strBuf;a.length=0;for(var r=this.nextChar();;){var i=!1;switch(0|r){case-1:(0,n.warn)(\"Unterminated string\"),t=!0;break;case 40:++e,a.push(\"(\");break;case 41:0===--e?(this.nextChar(),t=!0):a.push(\")\");break;case 92:switch(r=this.nextChar()){case-1:(0,n.warn)(\"Unterminated string\"),t=!0;break;case 110:a.push(\"\\n\");break;case 114:a.push(\"\\r\");break;case 116:a.push(\"\\t\");break;case 98:a.push(\"\\b\");break;case 102:a.push(\"\\f\");break;case 92:case 40:case 41:a.push(String.fromCharCode(r));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:var o=15&r;i=!0,(r=this.nextChar())>=48&&r<=55&&(o=(o<<3)+(15&r),(r=this.nextChar())>=48&&r<=55&&(i=!1,o=(o<<3)+(15&r))),a.push(String.fromCharCode(o));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:a.push(String.fromCharCode(r))}break;default:a.push(String.fromCharCode(r))}if(t)break;i||(r=this.nextChar())}return a.join(\"\")}},{key:\"getName\",value:function(){var e,t,a=this.strBuf;for(a.length=0;(e=this.nextChar())>=0&&!d[e];)if(35===e){if(e=this.nextChar(),d[e]){(0,n.warn)(\"Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number.\"),a.push(\"#\");break}var r=g(e);if(-1!==r){t=e;var o=g(e=this.nextChar());if(-1===o){if((0,n.warn)(\"Lexer_getName: Illegal digit (\".concat(String.fromCharCode(e),\") \")+\"in hexadecimal number.\"),a.push(\"#\",String.fromCharCode(t)),d[e])break;a.push(String.fromCharCode(e));continue}a.push(String.fromCharCode(r<<4|o))}else a.push(\"#\",String.fromCharCode(e))}else a.push(String.fromCharCode(e));return a.length>127&&(0,n.warn)(\"Name token is longer than allowed by the spec: \".concat(a.length)),i.Name.get(a.join(\"\"))}},{key:\"_hexStringWarn\",value:function(e){5!==this._hexStringNumWarn++?this._hexStringNumWarn>5||(0,n.warn)(\"getHexString - ignoring invalid character: \".concat(e)):(0,n.warn)(\"getHexString - ignoring additional invalid characters.\")}},{key:\"getHexString\",value:function(){var e=this.strBuf;e.length=0;var t,a,r=this.currentChar,i=!0;for(this._hexStringNumWarn=0;;){if(r<0){(0,n.warn)(\"Unterminated hex string\");break}if(62===r){this.nextChar();break}if(1!==d[r]){if(i){if(-1===(t=g(r))){this._hexStringWarn(r),r=this.nextChar();continue}}else{if(-1===(a=g(r))){this._hexStringWarn(r),r=this.nextChar();continue}e.push(String.fromCharCode(t<<4|a))}i=!i,r=this.nextChar()}else r=this.nextChar()}return e.join(\"\")}},{key:\"getObj\",value:function(){for(var e=!1,t=this.currentChar;;){if(t<0)return i.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(1!==d[t])break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),i.Cmd.get(\"[\");case 93:return this.nextChar(),i.Cmd.get(\"]\");case 60:return 60===(t=this.nextChar())?(this.nextChar(),i.Cmd.get(\"<<\")):this.getHexString();case 62:return 62===(t=this.nextChar())?(this.nextChar(),i.Cmd.get(\">>\")):i.Cmd.get(\">\");case 123:return this.nextChar(),i.Cmd.get(\"{\");case 125:return this.nextChar(),i.Cmd.get(\"}\");case 41:throw this.nextChar(),new n.FormatError(\"Illegal character: \".concat(t))}for(var a=String.fromCharCode(t),r=this.knownCommands,o=r&&void 0!==r[a];(t=this.nextChar())>=0&&!d[t];){var s=a+String.fromCharCode(t);if(o&&void 0===r[s])break;if(128===a.length)throw new n.FormatError(\"Command token too long: \".concat(a.length));a=s,o=r&&void 0!==r[a]}return\"true\"===a||\"false\"!==a&&(\"null\"===a?null:(\"BI\"===a&&(this.beginInlineImagePos=this.stream.pos),i.Cmd.get(a)))}},{key:\"peekObj\",value:function(){var e,t=this.stream.pos,a=this.currentChar,r=this.beginInlineImagePos;try{e=this.getObj()}catch(i){if(i instanceof o.MissingDataException)throw i;(0,n.warn)(\"peekObj: \".concat(i))}return this.stream.pos=t,this.currentChar=a,this.beginInlineImagePos=r,e}},{key:\"skipToNextLine\",value:function(){for(var e=this.currentChar;e>=0;){if(13===e){10===(e=this.nextChar())&&this.nextChar();break}if(10===e){this.nextChar();break}e=this.nextChar()}}}]),e}();t.Lexer=p;var m=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:\"create\",value:function(e){function t(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.get(t);if(Number.isInteger(r)&&(a?r>=0:r>0))return r;throw new Error('The \"'.concat(t,'\" parameter in the linearization ')+\"dictionary is invalid.\")}var a,r,o=new f({lexer:new p(e),xref:null}),s=o.getObj(),c=o.getObj(),l=o.getObj(),u=o.getObj();if(!(Number.isInteger(s)&&Number.isInteger(c)&&(0,i.isCmd)(l,\"obj\")&&(0,i.isDict)(u)&&(0,n.isNum)(a=u.get(\"Linearized\"))&&a>0))return null;if((r=t(u,\"L\"))!==e.length)throw new Error('The \"L\" parameter in the linearization dictionary does not equal the stream length.');return{length:r,hints:function(e){var t,a=e.get(\"H\");if(Array.isArray(a)&&(2===(t=a.length)||4===t)){for(var r=0;r<t;r++){var n=a[r];if(!(Number.isInteger(n)&&n>0))throw new Error(\"Hint (\".concat(r,\") in the linearization dictionary is invalid.\"))}return a}throw new Error(\"Hint array in the linearization dictionary is invalid.\")}(u),objectNumberFirst:t(u,\"O\"),endFirst:t(u,\"E\"),numPages:t(u,\"N\"),mainXRefEntriesOffset:t(u,\"T\"),pageFirst:u.has(\"P\")?t(u,\"P\",!0):0}}}]),e}();t.Linearization=m},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.LZWStream=t.StringStream=t.StreamsSequenceStream=t.Stream=t.RunLengthStream=t.PredictorStream=t.NullStream=t.FlateStream=t.DecodeStream=t.DecryptStream=t.AsciiHexStream=t.Ascii85Stream=void 0;var r=a(2),n=a(5),i=a(8),o=function(){function e(e,t,a,r){this.bytes=e instanceof Uint8Array?e:new Uint8Array(e),this.start=t||0,this.pos=this.start,this.end=t+a||this.bytes.length,this.dict=r}return e.prototype={get length(){return this.end-this.start},get isEmpty(){return 0===this.length},getByte:function(){return this.pos>=this.end?-1:this.bytes[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.bytes,r=this.pos,n=this.end;if(!e){var i=a.subarray(r,n);return t?new Uint8ClampedArray(i):i}var o=r+e;o>n&&(o=n),this.pos=o;var s=a.subarray(r,o);return t?new Uint8ClampedArray(s):s},peekByte:function(){var e=this.getByte();return-1!==e&&this.pos--,e},peekBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.getBytes(e,t);return this.pos-=a.length,a},getByteRange:function(e,t){return e<0&&(e=0),t>this.end&&(t=this.end),this.bytes.subarray(e,t)},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(t,a,r){return new e(this.bytes.buffer,t,a,r)}},e}();t.Stream=o;var s=function(){function e(e){var t=(0,r.stringToBytes)(e);o.call(this,t)}return e.prototype=o.prototype,e}();t.StringStream=s;var c=function(){var e=new Uint8Array(0);function t(t){if(this._rawMinBufferLength=t||0,this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=e,this.minBufferLength=512,t)for(;this.minBufferLength<t;)this.minBufferLength*=2}return t.prototype={get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength},ensureBuffer:function(e){var t=this.buffer;if(e<=t.byteLength)return t;for(var a=this.minBufferLength;a<e;)a*=2;var r=new Uint8Array(a);return r.set(t),this.buffer=r},getByte:function(){for(var e=this.pos;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]},getUint16:function(){var e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t},getInt32:function(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()},getBytes:function(e){var t,a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this.pos;if(e){for(this.ensureBuffer(r+e),t=r+e;!this.eof&&this.bufferLength<t;)this.readBlock();var n=this.bufferLength;t>n&&(t=n)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}this.pos=t;var i=this.buffer.subarray(r,t);return!a||i instanceof Uint8ClampedArray?i:new Uint8ClampedArray(i)},peekByte:function(){var e=this.getByte();return-1!==e&&this.pos--,e},peekBytes:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=this.getBytes(e,t);return this.pos-=a.length,a},makeSubStream:function(e,t,a){for(var r=e+t;this.bufferLength<=r&&!this.eof;)this.readBlock();return new o(this.buffer,e,t,a)},getByteRange:function(e,t){(0,r.unreachable)(\"Should not call DecodeStream.getByteRange\")},skip:function(e){e||(e=1),this.pos+=e},reset:function(){this.pos=0},getBaseStreams:function(){return this.str&&this.str.getBaseStreams?this.str.getBaseStreams():[]}},t}();t.DecodeStream=c;var l=function(){function e(e){this.streams=e;for(var t=0,a=0,r=e.length;a<r;a++){var n=e[a];t+=n instanceof c?n._rawMinBufferLength:n.length}c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.streams;if(0!==e.length){var t=e.shift().getBytes(),a=this.bufferLength,r=a+t.length;this.ensureBuffer(r).set(t,a),this.bufferLength=r}else this.eof=!0},e.prototype.getBaseStreams=function(){for(var e=[],t=0,a=this.streams.length;t<a;t++){var r=this.streams[t];r.getBaseStreams&&e.push.apply(e,_toConsumableArray(r.getBaseStreams()))}return e},e}();t.StreamsSequenceStream=l;var u=function(){var e=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),t=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),a=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),n=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],i=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];function o(e,t){this.str=e,this.dict=e.dict;var a=e.getByte(),n=e.getByte();if(-1===a||-1===n)throw new r.FormatError(\"Invalid header in flate stream: \".concat(a,\", \").concat(n));if(8!==(15&a))throw new r.FormatError(\"Unknown compression method in flate stream: \".concat(a,\", \").concat(n));if(((a<<8)+n)%31!==0)throw new r.FormatError(\"Bad FCHECK in flate stream: \".concat(a,\", \").concat(n));if(32&n)throw new r.FormatError(\"FDICT bit set in flate stream: \".concat(a,\", \").concat(n));this.codeSize=0,this.codeBuf=0,c.call(this,t)}return o.prototype=Object.create(c.prototype),o.prototype.getBits=function(e){for(var t,a=this.str,n=this.codeSize,i=this.codeBuf;n<e;){if(-1===(t=a.getByte()))throw new r.FormatError(\"Bad encoding in flate stream\");i|=t<<n,n+=8}return t=i&(1<<e)-1,this.codeBuf=i>>e,this.codeSize=n-=e,t},o.prototype.getCode=function(e){for(var t,a=this.str,n=e[0],i=e[1],o=this.codeSize,s=this.codeBuf;o<i&&-1!==(t=a.getByte());)s|=t<<o,o+=8;var c=n[s&(1<<i)-1],l=c>>16,u=65535&c;if(l<1||o<l)throw new r.FormatError(\"Bad encoding in flate stream\");return this.codeBuf=s>>l,this.codeSize=o-l,u},o.prototype.generateHuffmanTable=function(e){var t,a=e.length,r=0;for(t=0;t<a;++t)e[t]>r&&(r=e[t]);for(var n=1<<r,i=new Int32Array(n),o=1,s=0,c=2;o<=r;++o,s<<=1,c<<=1)for(var l=0;l<a;++l)if(e[l]===o){var u=0,h=s;for(t=0;t<o;++t)u=u<<1|1&h,h>>=1;for(t=u;t<n;t+=c)i[t]=o<<16|l;++s}return[i,r]},o.prototype.readBlock=function(){var o,s,c=this.str,l=this.getBits(3);if(1&l&&(this.eof=!0),0!==(l>>=1)){var u,h;if(1===l)u=n,h=i;else{if(2!==l)throw new r.FormatError(\"Unknown block type in flate stream\");var f,d=this.getBits(5)+257,g=this.getBits(5)+1,p=this.getBits(4)+4,m=new Uint8Array(e.length);for(f=0;f<p;++f)m[e[f]]=this.getBits(3);var v=this.generateHuffmanTable(m);s=0,f=0;for(var b,y,k,w=d+g,C=new Uint8Array(w);f<w;){var S=this.getCode(v);if(16===S)b=2,y=3,k=s;else if(17===S)b=3,y=3,k=s=0;else{if(18!==S){C[f++]=s=S;continue}b=7,y=11,k=s=0}for(var x=this.getBits(b)+y;x-- >0;)C[f++]=k}u=this.generateHuffmanTable(C.subarray(0,d)),h=this.generateHuffmanTable(C.subarray(d,w))}for(var A=(o=this.buffer)?o.length:0,I=this.bufferLength;;){var F=this.getCode(u);if(F<256)I+1>=A&&(A=(o=this.ensureBuffer(I+1)).length),o[I++]=F;else{if(256===F)return void(this.bufferLength=I);var T=(F=t[F-=257])>>16;T>0&&(T=this.getBits(T)),s=(65535&F)+T,F=this.getCode(h),(T=(F=a[F])>>16)>0&&(T=this.getBits(T));var O=(65535&F)+T;I+s>=A&&(A=(o=this.ensureBuffer(I+s)).length);for(var E=0;E<s;++E,++I)o[I]=o[I-O]}}}else{var P;if(-1===(P=c.getByte()))throw new r.FormatError(\"Bad block header in flate stream\");var _=P;if(-1===(P=c.getByte()))throw new r.FormatError(\"Bad block header in flate stream\");if(_|=P<<8,-1===(P=c.getByte()))throw new r.FormatError(\"Bad block header in flate stream\");var B=P;if(-1===(P=c.getByte()))throw new r.FormatError(\"Bad block header in flate stream\");if((B|=P<<8)!==(65535&~_)&&(0!==_||0!==B))throw new r.FormatError(\"Bad uncompressed block length in flate stream\");this.codeBuf=0,this.codeSize=0;var M=this.bufferLength,D=M+_;if(o=this.ensureBuffer(D),this.bufferLength=D,0===_)-1===c.peekByte()&&(this.eof=!0);else{var R=c.getBytes(_);o.set(R,M),R.length<_&&(this.eof=!0)}}},o}();t.FlateStream=u;var h=function(){function e(e,t,a){if(!(0,n.isDict)(a))return e;var i=this.predictor=a.get(\"Predictor\")||1;if(i<=1)return e;if(2!==i&&(i<10||i>15))throw new r.FormatError(\"Unsupported predictor: \".concat(i));this.readBlock=2===i?this.readBlockTiff:this.readBlockPng,this.str=e,this.dict=e.dict;var o=this.colors=a.get(\"Colors\")||1,s=this.bits=a.get(\"BitsPerComponent\")||8,l=this.columns=a.get(\"Columns\")||1;return this.pixBytes=o*s+7>>3,this.rowBytes=l*o*s+7>>3,c.call(this,t),this}return e.prototype=Object.create(c.prototype),e.prototype.readBlockTiff=function(){var e=this.rowBytes,t=this.bufferLength,a=this.ensureBuffer(t+e),r=this.bits,n=this.colors,i=this.str.getBytes(e);if(this.eof=!i.length,!this.eof){var o,s=0,c=0,l=0,u=0,h=t;if(1===r&&1===n)for(o=0;o<e;++o){var f=i[o]^s;f^=f>>1,f^=f>>2,s=(1&(f^=f>>4))<<7,a[h++]=f}else if(8===r){for(o=0;o<n;++o)a[h++]=i[o];for(;o<e;++o)a[h]=a[h-n]+i[o],h++}else if(16===r){var d=2*n;for(o=0;o<d;++o)a[h++]=i[o];for(;o<e;o+=2){var g=((255&i[o])<<8)+(255&i[o+1])+((255&a[h-d])<<8)+(255&a[h-d+1]);a[h++]=g>>8&255,a[h++]=255&g}}else{var p=new Uint8Array(n+1),m=(1<<r)-1,v=0,b=t,y=this.columns;for(o=0;o<y;++o)for(var k=0;k<n;++k)l<r&&(s=s<<8|255&i[v++],l+=8),p[k]=p[k]+(s>>l-r)&m,l-=r,c=c<<r|p[k],(u+=r)>=8&&(a[b++]=c>>u-8&255,u-=8);u>0&&(a[b++]=(c<<8-u)+(s&(1<<8-u)-1))}this.bufferLength+=e}},e.prototype.readBlockPng=function(){var e=this.rowBytes,t=this.pixBytes,a=this.str.getByte(),n=this.str.getBytes(e);if(this.eof=!n.length,!this.eof){var i=this.bufferLength,o=this.ensureBuffer(i+e),s=o.subarray(i-e,i);0===s.length&&(s=new Uint8Array(e));var c,l,u,h=i;switch(a){case 0:for(c=0;c<e;++c)o[h++]=n[c];break;case 1:for(c=0;c<t;++c)o[h++]=n[c];for(;c<e;++c)o[h]=o[h-t]+n[c]&255,h++;break;case 2:for(c=0;c<e;++c)o[h++]=s[c]+n[c]&255;break;case 3:for(c=0;c<t;++c)o[h++]=(s[c]>>1)+n[c];for(;c<e;++c)o[h]=(s[c]+o[h-t]>>1)+n[c]&255,h++;break;case 4:for(c=0;c<t;++c)l=s[c],u=n[c],o[h++]=l+u;for(;c<e;++c){l=s[c];var f=s[c-t],d=o[h-t],g=d+l-f,p=g-d;p<0&&(p=-p);var m=g-l;m<0&&(m=-m);var v=g-f;v<0&&(v=-v),u=n[c],o[h++]=p<=m&&p<=v?d+u:m<=v?l+u:f+u}break;default:throw new r.FormatError(\"Unsupported predictor: \".concat(a))}this.bufferLength+=e}},e}();t.PredictorStream=h;var f=function(){function e(e,t,a){this.str=e,this.dict=e.dict,this.decrypt=a,this.nextChunk=null,this.initialized=!1,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e;if(this.initialized?e=this.nextChunk:(e=this.str.getBytes(512),this.initialized=!0),e&&0!==e.length){this.nextChunk=this.str.getBytes(512);var t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);var a,r=this.bufferLength,n=e.length,i=this.ensureBuffer(r+n);for(a=0;a<n;a++)i[r++]=e[a];this.bufferLength=r}else this.eof=!0},e}();t.DecryptStream=f;var d=function(){function e(e,t){this.str=e,this.dict=e.dict,this.input=new Uint8Array(5),t&&(t*=.8),c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){for(var e=this.str,t=e.getByte();(0,i.isWhiteSpace)(t);)t=e.getByte();if(-1!==t&&126!==t){var a,r,n=this.bufferLength;if(122===t){for(a=this.ensureBuffer(n+4),r=0;r<4;++r)a[n+r]=0;this.bufferLength+=4}else{var o=this.input;for(o[0]=t,r=1;r<5;++r){for(t=e.getByte();(0,i.isWhiteSpace)(t);)t=e.getByte();if(o[r]=t,-1===t||126===t)break}if(a=this.ensureBuffer(n+r-1),this.bufferLength+=r-1,r<5){for(;r<5;++r)o[r]=117;this.eof=!0}var s=0;for(r=0;r<5;++r)s=85*s+(o[r]-33);for(r=3;r>=0;--r)a[n+r]=255&s,s>>=8}}else this.eof=!0},e}();t.Ascii85Stream=d;var g=function(){function e(e,t){this.str=e,this.dict=e.dict,this.firstDigit=-1,t&&(t*=.5),c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(8e3);if(e.length){for(var t=e.length+1>>1,a=this.ensureBuffer(this.bufferLength+t),r=this.bufferLength,n=this.firstDigit,i=0,o=e.length;i<o;i++){var s,c=e[i];if(c>=48&&c<=57)s=15&c;else{if(!(c>=65&&c<=70||c>=97&&c<=102)){if(62===c){this.eof=!0;break}continue}s=9+(15&c)}n<0?n=s:(a[r++]=n<<4|s,n=-1)}n>=0&&this.eof&&(a[r++]=n<<4,n=-1),this.firstDigit=n,this.bufferLength=r}else this.eof=!0},e}();t.AsciiHexStream=g;var p=function(){function e(e,t){this.str=e,this.dict=e.dict,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBlock=function(){var e=this.str.getBytes(2);if(!e||e.length<2||128===e[0])this.eof=!0;else{var t,a=this.bufferLength,r=e[0];if(r<128){if((t=this.ensureBuffer(a+r+1))[a++]=e[1],r>0){var n=this.str.getBytes(r);t.set(n,a),a+=r}}else{r=257-r;var i=e[1];t=this.ensureBuffer(a+r+1);for(var o=0;o<r;o++)t[a++]=i}this.bufferLength=a}},e}();t.RunLengthStream=p;var m=function(){function e(e,t,a){this.str=e,this.dict=e.dict,this.cachedData=0,this.bitsCached=0;for(var r=4096,n={earlyChange:a,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(r),dictionaryLengths:new Uint16Array(r),dictionaryPrevCodes:new Uint16Array(r),currentSequence:new Uint8Array(r),currentSequenceLength:0},i=0;i<256;++i)n.dictionaryValues[i]=i,n.dictionaryLengths[i]=1;this.lzwState=n,c.call(this,t)}return e.prototype=Object.create(c.prototype),e.prototype.readBits=function(e){for(var t=this.bitsCached,a=this.cachedData;t<e;){var r=this.str.getByte();if(-1===r)return this.eof=!0,null;a=a<<8|r,t+=8}return this.bitsCached=t-=e,this.cachedData=a,this.lastCode=null,a>>>t&(1<<e)-1},e.prototype.readBlock=function(){var e,t,a,r=1024,n=this.lzwState;if(n){var i=n.earlyChange,o=n.nextCode,s=n.dictionaryValues,c=n.dictionaryLengths,l=n.dictionaryPrevCodes,u=n.codeLength,h=n.prevCode,f=n.currentSequence,d=n.currentSequenceLength,g=0,p=this.bufferLength,m=this.ensureBuffer(this.bufferLength+r);for(e=0;e<512;e++){var v=this.readBits(u),b=d>0;if(v<256)f[0]=v,d=1;else{if(!(v>=258)){if(256===v){u=9,o=258,d=0;continue}this.eof=!0,delete this.lzwState;break}if(v<o)for(t=(d=c[v])-1,a=v;t>=0;t--)f[t]=s[a],a=l[a];else f[d++]=f[0]}if(b&&(l[o]=h,c[o]=c[h]+1,s[o]=f[0],u=++o+i&o+i-1?u:0|Math.min(Math.log(o+i)/.6931471805599453+1,12)),h=v,r<(g+=d)){do{r+=512}while(r<g);m=this.ensureBuffer(this.bufferLength+r)}for(t=0;t<d;t++)m[p++]=f[t]}n.nextCode=o,n.codeLength=u,n.prevCode=h,n.currentSequenceLength=d,this.bufferLength=p}},e}();t.LZWStream=m;var v=function(){function e(){o.call(this,new Uint8Array(0))}return e.prototype=o.prototype,e}();t.NullStream=v},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxStream=void 0;var r=a(5),n=a(14),i=a(12),o=function(){function e(e,t,a){this.str=e,this.dict=e.dict,(0,r.isDict)(a)||(a=r.Dict.empty);var o={next:function(){return e.getByte()}};this.ccittFaxDecoder=new n.CCITTFaxDecoder(o,{K:a.get(\"K\"),EndOfLine:a.get(\"EndOfLine\"),EncodedByteAlign:a.get(\"EncodedByteAlign\"),Columns:a.get(\"Columns\"),Rows:a.get(\"Rows\"),EndOfBlock:a.get(\"EndOfBlock\"),BlackIs1:a.get(\"BlackIs1\")}),i.DecodeStream.call(this,t)}return e.prototype=Object.create(i.DecodeStream.prototype),e.prototype.readBlock=function(){for(;!this.eof;){var e=this.ccittFaxDecoder.readNextChar();if(-1===e)return void(this.eof=!0);this.ensureBuffer(this.bufferLength+1),this.buffer[this.bufferLength++]=e}},e}();t.CCITTFaxStream=o},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CCITTFaxDecoder=void 0;var r=a(2),n=function(){var e=-1,t=[[-1,-1],[-1,-1],[7,8],[7,7],[6,6],[6,6],[6,5],[6,5],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[4,0],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2]],a=[[-1,-1],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],n=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],i=[[-1,-1],[-1,-1],[12,-2],[12,-2],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],o=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],s=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function c(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e||\"function\"!==typeof e.next)throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');this.source=e,this.eof=!1,this.encoding=t.K||0,this.eoline=t.EndOfLine||!1,this.byteAlign=t.EncodedByteAlign||!1,this.columns=t.Columns||1728,this.rows=t.Rows||0;var a,r=t.EndOfBlock;for(null!==r&&void 0!==r||(r=!0),this.eoblock=r,this.black=t.BlackIs1||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;0===(a=this._lookBits(12));)this._eatBits(1);1===a&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}return c.prototype={readNextChar:function(){if(this.eof)return-1;var t,a,n,i,o,s=this.refLine,c=this.codingLine,l=this.columns;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;var u,h,f;if(this.err=!1,this.nextLine2D){for(i=0;c[i]<l;++i)s[i]=c[i];for(s[i++]=l,s[i]=l,c[0]=0,this.codingPos=0,t=0,a=0;c[this.codingPos]<l;)switch(u=this._getTwoDimCode()){case 0:this._addPixels(s[t+1],a),s[t+1]<l&&(t+=2);break;case 1:if(u=h=0,a){do{u+=f=this._getBlackCode()}while(f>=64);do{h+=f=this._getWhiteCode()}while(f>=64)}else{do{u+=f=this._getWhiteCode()}while(f>=64);do{h+=f=this._getBlackCode()}while(f>=64)}for(this._addPixels(c[this.codingPos]+u,a),c[this.codingPos]<l&&this._addPixels(c[this.codingPos]+h,1^a);s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 7:if(this._addPixels(s[t]+3,a),a^=1,c[this.codingPos]<l)for(++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 5:if(this._addPixels(s[t]+2,a),a^=1,c[this.codingPos]<l)for(++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 3:if(this._addPixels(s[t]+1,a),a^=1,c[this.codingPos]<l)for(++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 2:if(this._addPixels(s[t],a),a^=1,c[this.codingPos]<l)for(++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 8:if(this._addPixelsNeg(s[t]-3,a),a^=1,c[this.codingPos]<l)for(t>0?--t:++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 6:if(this._addPixelsNeg(s[t]-2,a),a^=1,c[this.codingPos]<l)for(t>0?--t:++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case 4:if(this._addPixelsNeg(s[t]-1,a),a^=1,c[this.codingPos]<l)for(t>0?--t:++t;s[t]<=c[this.codingPos]&&s[t]<l;)t+=2;break;case e:this._addPixels(l,0),this.eof=!0;break;default:(0,r.info)(\"bad 2d code\"),this._addPixels(l,0),this.err=!0}}else for(c[0]=0,this.codingPos=0,a=0;c[this.codingPos]<l;){if(u=0,a)do{u+=f=this._getBlackCode()}while(f>=64);else do{u+=f=this._getWhiteCode()}while(f>=64);this._addPixels(c[this.codingPos]+u,a),a^=1}var d=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(u=this._lookBits(12),this.eoline)for(;u!==e&&1!==u;)this._eatBits(1),u=this._lookBits(12);else for(;0===u;)this._eatBits(1),u=this._lookBits(12);1===u?(this._eatBits(12),d=!0):u===e&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&d&&this.byteAlign){if(1===(u=this._lookBits(12))){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(i=0;i<4;++i)1!==(u=this._lookBits(12))&&(0,r.info)(\"bad rtc code: \"+u),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){for(;;){if((u=this._lookBits(13))===e)return this.eof=!0,-1;if(u>>1===1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&u))}c[0]>0?this.outputBits=c[this.codingPos=0]:this.outputBits=c[this.codingPos=1],this.row++}if(this.outputBits>=8)o=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&c[this.codingPos]<l&&(this.codingPos++,this.outputBits=c[this.codingPos]-c[this.codingPos-1]);else{n=8,o=0;do{this.outputBits>n?(o<<=n,1&this.codingPos||(o|=255>>8-n),this.outputBits-=n,n=0):(o<<=this.outputBits,1&this.codingPos||(o|=255>>8-this.outputBits),n-=this.outputBits,this.outputBits=0,c[this.codingPos]<l?(this.codingPos++,this.outputBits=c[this.codingPos]-c[this.codingPos-1]):n>0&&(o<<=n,n=0))}while(n)}return this.black&&(o^=255),o},_addPixels:function(e,t){var a=this.codingLine,n=this.codingPos;e>a[n]&&(e>this.columns&&((0,r.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&n^t&&++n,a[n]=e),this.codingPos=n},_addPixelsNeg:function(e,t){var a=this.codingLine,n=this.codingPos;if(e>a[n])e>this.columns&&((0,r.info)(\"row is wrong length\"),this.err=!0,e=this.columns),1&n^t&&++n,a[n]=e;else if(e<a[n]){for(e<0&&((0,r.info)(\"invalid code\"),this.err=!0,e=0);n>0&&e<a[n-1];)--n;a[n]=e}this.codingPos=n},_findTableCode:function(t,a,r,n){for(var i=n||0,o=t;o<=a;++o){var s=this._lookBits(o);if(s===e)return[!0,1,!1];if(o<a&&(s<<=a-o),!i||s>=i){var c=r[s-i];if(c[0]===o)return this._eatBits(o),[!0,c[1],!0]}}return[!1,0,!1]},_getTwoDimCode:function(){var a,n=0;if(this.eoblock){if(n=this._lookBits(7),(a=t[n])&&a[0]>0)return this._eatBits(a[0]),a[1]}else{var i=this._findTableCode(1,7,t);if(i[0]&&i[2])return i[1]}return(0,r.info)(\"Bad two dim code\"),e},_getWhiteCode:function(){var t,i=0;if(this.eoblock){if((i=this._lookBits(12))===e)return 1;if((t=i>>5===0?a[i]:n[i>>3])[0]>0)return this._eatBits(t[0]),t[1]}else{var o=this._findTableCode(1,9,n);if(o[0])return o[1];if((o=this._findTableCode(11,12,a))[0])return o[1]}return(0,r.info)(\"bad white code\"),this._eatBits(1),1},_getBlackCode:function(){var t,a;if(this.eoblock){if((t=this._lookBits(13))===e)return 1;if((a=t>>7===0?i[t]:t>>9===0&&t>>7!==0?o[(t>>1)-64]:s[t>>7])[0]>0)return this._eatBits(a[0]),a[1]}else{var n=this._findTableCode(2,6,s);if(n[0])return n[1];if((n=this._findTableCode(7,12,o,64))[0])return n[1];if((n=this._findTableCode(10,13,i))[0])return n[1]}return(0,r.info)(\"bad black code\"),this._eatBits(1),1},_lookBits:function(t){for(var a;this.inputBits<t;){if(-1===(a=this.source.next()))return 0===this.inputBits?e:this.inputBuf<<t-this.inputBits&65535>>16-t;this.inputBuf=this.inputBuf<<8|a,this.inputBits+=8}return this.inputBuf>>this.inputBits-t&65535>>16-t},_eatBits:function(e){(this.inputBits-=e)<0&&(this.inputBits=0)}},c}();t.CCITTFaxDecoder=n},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Stream=void 0;var r=a(5),n=a(12),i=a(16),o=a(2),s=function(){function e(e,t,a,r){this.stream=e,this.maybeLength=t,this.dict=a,this.params=r,n.DecodeStream.call(this,t)}return e.prototype=Object.create(n.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,o.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new i.Jbig2Image,t=[];if((0,r.isDict)(this.params)){var a=this.params.get(\"JBIG2Globals\");if((0,r.isStream)(a)){var n=a.getBytes();t.push({data:n,start:0,end:n.length})}}t.push({data:this.bytes,start:0,end:this.bytes.length});for(var o=e.parseChunks(t),s=o.length,c=0;c<s;c++)o[c]^=255;this.buffer=o,this.bufferLength=s,this.eof=!0}},e}();t.Jbig2Stream=s},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Jbig2Image=void 0;var r=a(2),n=a(8),i=a(17),o=a(14),s=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){return _classCallCheck(this,a),t.call(this,\"JBIG2 error: \".concat(e))}return a}(r.BaseException),c=function(){function e(){}function t(e,t,a){this.data=e,this.start=t,this.end=a}function a(e,t,a){var r=e.getContexts(t),n=1;function i(e){for(var t=0,i=0;i<e;i++){var o=a.readBit(r,n);n=n<256?n<<1|o:511&(n<<1|o)|256,t=t<<1|o}return t>>>0}var o=i(1),s=i(1)?i(1)?i(1)?i(1)?i(1)?i(32)+4436:i(12)+340:i(8)+84:i(6)+20:i(4)+4:i(2);return 0===o?s:s>0?-s:null}function c(e,t,a){for(var r=e.getContexts(\"IAID\"),n=1,i=0;i<a;i++){n=n<<1|t.readBit(r,n)}return a<31?n&(1<<a)-1:2147483647&n}e.prototype={getContexts:function(e){return e in this?this[e]:this[e]=new Int8Array(65536)}},t.prototype={get decoder(){var e=new i.ArithmeticDecoder(this.data,this.start,this.end);return(0,r.shadow)(this,\"decoder\",e)},get contextCache(){var t=new e;return(0,r.shadow)(this,\"contextCache\",t)}};var l=[\"SymbolDictionary\",null,null,null,\"IntermediateTextRegion\",null,\"ImmediateTextRegion\",\"ImmediateLosslessTextRegion\",null,null,null,null,null,null,null,null,\"PatternDictionary\",null,null,null,\"IntermediateHalftoneRegion\",null,\"ImmediateHalftoneRegion\",\"ImmediateLosslessHalftoneRegion\",null,null,null,null,null,null,null,null,null,null,null,null,\"IntermediateGenericRegion\",null,\"ImmediateGenericRegion\",\"ImmediateLosslessGenericRegion\",\"IntermediateGenericRefinementRegion\",null,\"ImmediateGenericRefinementRegion\",\"ImmediateLosslessGenericRefinementRegion\",null,null,null,null,\"PageInformation\",\"EndOfPage\",\"EndOfStripe\",\"EndOfFile\",\"Profiles\",\"Tables\",null,null,null,null,null,null,null,null,\"Extension\"],u=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]],h=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}],f=[39717,1941,229,405],d=[32,8];function g(e,t,a,r,n,i,o,s){if(e)return _(new O(s.data,s.start,s.end),t,a,!1);if(0===r&&!i&&!n&&4===o.length&&3===o[0].x&&-1===o[0].y&&-3===o[1].x&&-1===o[1].y&&2===o[2].x&&-2===o[2].y&&-2===o[3].x&&-2===o[3].y)return function(e,t,a){var r,n,i,o,s,c,l,u=a.decoder,h=a.contextCache.getContexts(\"GB\"),f=[];for(n=0;n<t;n++)for(s=f[n]=new Uint8Array(e),c=n<1?s:f[n-1],r=(l=n<2?s:f[n-2])[0]<<13|l[1]<<12|l[2]<<11|c[0]<<7|c[1]<<6|c[2]<<5|c[3]<<4,i=0;i<e;i++)s[i]=o=u.readBit(h,r),r=(31735&r)<<1|(i+3<e?l[i+3]<<11:0)|(i+4<e?c[i+4]<<4:0)|o;return f}(t,a,s);var c=!!i,l=u[r].concat(o);l.sort((function(e,t){return e.y-t.y||e.x-t.x}));var h,d,g=l.length,p=new Int8Array(g),m=new Int8Array(g),v=[],b=0,y=0,k=0,w=0;for(d=0;d<g;d++)p[d]=l[d].x,m[d]=l[d].y,y=Math.min(y,l[d].x),k=Math.max(k,l[d].x),w=Math.min(w,l[d].y),d<g-1&&l[d].y===l[d+1].y&&l[d].x===l[d+1].x-1?b|=1<<g-1-d:v.push(d);var C=v.length,S=new Int8Array(C),x=new Int8Array(C),A=new Uint16Array(C);for(h=0;h<C;h++)d=v[h],S[h]=l[d].x,x[h]=l[d].y,A[h]=1<<g-1-d;for(var I,F,T,E,P,B=-y,M=-w,D=t-k,R=f[r],N=new Uint8Array(t),L=[],U=s.decoder,q=s.contextCache.getContexts(\"GB\"),j=0,z=0,H=0;H<a;H++){if(n)if(j^=U.readBit(q,R)){L.push(N);continue}for(N=new Uint8Array(N),L.push(N),I=0;I<t;I++)if(c&&i[H][I])N[I]=0;else{if(I>=B&&I<D&&H>=M)for(z=z<<1&b,d=0;d<C;d++)F=H+x[d],T=I+S[d],(E=L[F][T])&&(z|=E=A[d]);else for(z=0,P=g-1,d=0;d<g;d++,P--)(T=I+p[d])>=0&&T<t&&(F=H+m[d])>=0&&(E=L[F][T])&&(z|=E<<P);var G=U.readBit(q,z);N[I]=G}}return L}function p(e,t,a,r,n,i,o,c,l){var u=h[a].coding;0===a&&(u=u.concat([c[0]]));var f,g=u.length,p=new Int32Array(g),m=new Int32Array(g);for(f=0;f<g;f++)p[f]=u[f].x,m[f]=u[f].y;var v=h[a].reference;0===a&&(v=v.concat([c[1]]));var b=v.length,y=new Int32Array(b),k=new Int32Array(b);for(f=0;f<b;f++)y[f]=v[f].x,k[f]=v[f].y;for(var w=r[0].length,C=r.length,S=d[a],x=[],A=l.decoder,I=l.contextCache.getContexts(\"GR\"),F=0,T=0;T<t;T++){if(o)if(F^=A.readBit(I,S))throw new s(\"prediction is not supported\");var O=new Uint8Array(e);x.push(O);for(var E=0;E<e;E++){var P,_,B=0;for(f=0;f<g;f++)P=T+m[f],_=E+p[f],P<0||_<0||_>=e?B<<=1:B=B<<1|x[P][_];for(f=0;f<b;f++)P=T+k[f]-i,_=E+y[f]-n,P<0||P>=C||_<0||_>=w?B<<=1:B=B<<1|r[P][_];var M=A.readBit(I,B);O[E]=M}}return x}function m(e,t,r,n,i,o,l,u,h,f,d,g,m,v,b,y,k,w,C){if(e&&t)throw new s(\"refinement with Huffman is not supported\");var S,x,A=[];for(S=0;S<n;S++){if(x=new Uint8Array(r),i)for(var I=0;I<r;I++)x[I]=i;A.push(x)}var F=k.decoder,T=k.contextCache,O=e?-v.tableDeltaT.decode(C):-a(T,\"IADT\",F),E=0;for(S=0;S<o;){O+=e?v.tableDeltaT.decode(C):a(T,\"IADT\",F);for(var P=E+=e?v.tableFirstS.decode(C):a(T,\"IAFS\",F);;){var _=0;l>1&&(_=e?C.readBits(w):a(T,\"IAIT\",F));var B=l*O+_,M=e?v.symbolIDTable.decode(C):c(T,F,h),D=t&&(e?C.readBit():a(T,\"IARI\",F)),R=u[M],N=R[0].length,L=R.length;if(D){var U=a(T,\"IARDW\",F),q=a(T,\"IARDH\",F);R=p(N+=U,L+=q,b,R,(U>>1)+a(T,\"IARDX\",F),(q>>1)+a(T,\"IARDY\",F),!1,y,k)}var j,z,H,G=B-(1&g?0:L-1),X=P-(2&g?N-1:0);if(f){for(j=0;j<L;j++)if(x=A[X+j]){H=R[j];var W=Math.min(r-G,N);switch(m){case 0:for(z=0;z<W;z++)x[G+z]|=H[z];break;case 2:for(z=0;z<W;z++)x[G+z]^=H[z];break;default:throw new s(\"operator \".concat(m,\" is not supported\"))}}P+=L-1}else{for(z=0;z<L;z++)if(x=A[G+z])switch(H=R[z],m){case 0:for(j=0;j<N;j++)x[X+j]|=H[j];break;case 2:for(j=0;j<N;j++)x[X+j]^=H[j];break;default:throw new s(\"operator \".concat(m,\" is not supported\"))}P+=N-1}S++;var V=e?v.tableDeltaS.decode(C):a(T,\"IADS\",F);if(null===V)break;P+=V+d}}return A}function v(e,t){var a={};a.number=(0,n.readUint32)(e,t);var r=e[t+4],i=63&r;if(!l[i])throw new s(\"invalid segment type: \"+i);a.type=i,a.typeName=l[i],a.deferredNonRetain=!!(128&r);var o=!!(64&r),c=e[t+5],u=c>>5&7,h=[31&c],f=t+6;if(7===c){u=536870911&(0,n.readUint32)(e,f-1),f+=3;var d=u+7>>3;for(h[0]=e[f++];--d>0;)h.push(e[f++])}else if(5===c||6===c)throw new s(\"invalid referred-to flags\");a.retainBits=h;var g=4;a.number<=256?g=1:a.number<=65536&&(g=2);var p,m,v=[];for(p=0;p<u;p++){var b=void 0;b=1===g?e[f]:2===g?(0,n.readUint16)(e,f):(0,n.readUint32)(e,f),v.push(b),f+=g}if(a.referredTo=v,o?(a.pageAssociation=(0,n.readUint32)(e,f),f+=4):a.pageAssociation=e[f++],a.length=(0,n.readUint32)(e,f),f+=4,4294967295===a.length){if(38!==i)throw new s(\"invalid unknown segment length\");var w=y(e,f),C=!!(1&e[f+k]),S=new Uint8Array(6);for(C||(S[0]=255,S[1]=172),S[2]=w.height>>>24&255,S[3]=w.height>>16&255,S[4]=w.height>>8&255,S[5]=255&w.height,p=f,m=e.length;p<m;p++){for(var x=0;x<6&&S[x]===e[p+x];)x++;if(6===x){a.length=p+6;break}}if(4294967295===a.length)throw new s(\"segment end was not found\")}return a.headerEnd=f,a}function b(e,t,a,r){for(var n=[],i=a;i<r;){var o=v(t,i);i=o.headerEnd;var s={header:o,data:t};if(e.randomAccess||(s.start=i,i+=o.length,s.end=i),n.push(s),51===o.type)break}if(e.randomAccess)for(var c=0,l=n.length;c<l;c++)n[c].start=i,i+=n[c].header.length,n[c].end=i;return n}function y(e,t){return{width:(0,n.readUint32)(e,t),height:(0,n.readUint32)(e,t+4),x:(0,n.readUint32)(e,t+8),y:(0,n.readUint32)(e,t+12),combinationOperator:7&e[t+16]}}var k=17;function w(e,t){var a,r,i,o,c=e.header,l=e.data,u=e.start,h=e.end;switch(c.type){case 0:var f={},d=(0,n.readUint16)(l,u);if(f.huffman=!!(1&d),f.refinement=!!(2&d),f.huffmanDHSelector=d>>2&3,f.huffmanDWSelector=d>>4&3,f.bitmapSizeSelector=d>>6&1,f.aggregationInstancesSelector=d>>7&1,f.bitmapCodingContextUsed=!!(256&d),f.bitmapCodingContextRetained=!!(512&d),f.template=d>>10&3,f.refinementTemplate=d>>12&1,u+=2,!f.huffman){for(o=0===f.template?4:1,r=[],i=0;i<o;i++)r.push({x:(0,n.readInt8)(l,u),y:(0,n.readInt8)(l,u+1)}),u+=2;f.at=r}if(f.refinement&&!f.refinementTemplate){for(r=[],i=0;i<2;i++)r.push({x:(0,n.readInt8)(l,u),y:(0,n.readInt8)(l,u+1)}),u+=2;f.refinementAt=r}f.numberOfExportedSymbols=(0,n.readUint32)(l,u),u+=4,f.numberOfNewSymbols=(0,n.readUint32)(l,u),u+=4,a=[f,c.number,c.referredTo,l,u,h];break;case 6:case 7:var g={};g.info=y(l,u),u+=k;var p=(0,n.readUint16)(l,u);if(u+=2,g.huffman=!!(1&p),g.refinement=!!(2&p),g.logStripSize=p>>2&3,g.stripSize=1<<g.logStripSize,g.referenceCorner=p>>4&3,g.transposed=!!(64&p),g.combinationOperator=p>>7&3,g.defaultPixelValue=p>>9&1,g.dsOffset=p<<17>>27,g.refinementTemplate=p>>15&1,g.huffman){var m=(0,n.readUint16)(l,u);u+=2,g.huffmanFS=3&m,g.huffmanDS=m>>2&3,g.huffmanDT=m>>4&3,g.huffmanRefinementDW=m>>6&3,g.huffmanRefinementDH=m>>8&3,g.huffmanRefinementDX=m>>10&3,g.huffmanRefinementDY=m>>12&3,g.huffmanRefinementSizeSelector=!!(16384&m)}if(g.refinement&&!g.refinementTemplate){for(r=[],i=0;i<2;i++)r.push({x:(0,n.readInt8)(l,u),y:(0,n.readInt8)(l,u+1)}),u+=2;g.refinementAt=r}g.numberOfSymbolInstances=(0,n.readUint32)(l,u),u+=4,a=[g,c.referredTo,l,u,h];break;case 16:var v={},b=l[u++];v.mmr=!!(1&b),v.template=b>>1&3,v.patternWidth=l[u++],v.patternHeight=l[u++],v.maxPatternIndex=(0,n.readUint32)(l,u),u+=4,a=[v,c.number,l,u,h];break;case 22:case 23:var w={};w.info=y(l,u),u+=k;var C=l[u++];w.mmr=!!(1&C),w.template=C>>1&3,w.enableSkip=!!(8&C),w.combinationOperator=C>>4&7,w.defaultPixelValue=C>>7&1,w.gridWidth=(0,n.readUint32)(l,u),u+=4,w.gridHeight=(0,n.readUint32)(l,u),u+=4,w.gridOffsetX=4294967295&(0,n.readUint32)(l,u),u+=4,w.gridOffsetY=4294967295&(0,n.readUint32)(l,u),u+=4,w.gridVectorX=(0,n.readUint16)(l,u),u+=2,w.gridVectorY=(0,n.readUint16)(l,u),u+=2,a=[w,c.referredTo,l,u,h];break;case 38:case 39:var S={};S.info=y(l,u),u+=k;var x=l[u++];if(S.mmr=!!(1&x),S.template=x>>1&3,S.prediction=!!(8&x),!S.mmr){for(o=0===S.template?4:1,r=[],i=0;i<o;i++)r.push({x:(0,n.readInt8)(l,u),y:(0,n.readInt8)(l,u+1)}),u+=2;S.at=r}a=[S,l,u,h];break;case 48:var A={width:(0,n.readUint32)(l,u),height:(0,n.readUint32)(l,u+4),resolutionX:(0,n.readUint32)(l,u+8),resolutionY:(0,n.readUint32)(l,u+12)};4294967295===A.height&&delete A.height;var I=l[u+16];(0,n.readUint16)(l,u+17),A.lossless=!!(1&I),A.refinement=!!(2&I),A.defaultPixelValue=I>>2&1,A.combinationOperator=I>>3&3,A.requiresBuffer=!!(32&I),A.combinationOperatorOverride=!!(64&I),a=[A];break;case 49:case 50:case 51:break;case 53:a=[c.number,l,u,h];break;case 62:break;default:throw new s(\"segment type \".concat(c.typeName,\"(\").concat(c.type,\")\")+\" is not implemented\")}var F=\"on\"+c.typeName;F in t&&t[F].apply(t,a)}function C(e,t){for(var a=0,r=e.length;a<r;a++)w(e[a],t)}function S(){}function x(e){2===e.length?(this.isOOB=!0,this.rangeLow=0,this.prefixLength=e[0],this.rangeLength=0,this.prefixCode=e[1],this.isLowerRange=!1):(this.isOOB=!1,this.rangeLow=e[0],this.prefixLength=e[1],this.rangeLength=e[2],this.prefixCode=e[3],this.isLowerRange=\"lower\"===e[4])}function A(e){this.children=[],e?(this.isLeaf=!0,this.rangeLength=e.rangeLength,this.rangeLow=e.rangeLow,this.isLowerRange=e.isLowerRange,this.isOOB=e.isOOB):this.isLeaf=!1}function I(e,t){t||this.assignPrefixCodes(e),this.rootNode=new A(null);for(var a=0,r=e.length;a<r;a++){var n=e[a];n.prefixLength>0&&this.rootNode.buildTree(n,n.prefixLength-1)}}S.prototype={onPageInformation:function(e){this.currentPageInfo=e;var t=e.width+7>>3,a=new Uint8ClampedArray(t*e.height);if(e.defaultPixelValue)for(var r=0,n=a.length;r<n;r++)a[r]=255;this.buffer=a},drawBitmap:function(e,t){var a,r,n,i,o=this.currentPageInfo,c=e.width,l=e.height,u=o.width+7>>3,h=o.combinationOperatorOverride?e.combinationOperator:o.combinationOperator,f=this.buffer,d=128>>(7&e.x),g=e.y*u+(e.x>>3);switch(h){case 0:for(a=0;a<l;a++){for(n=d,i=g,r=0;r<c;r++)t[a][r]&&(f[i]|=n),(n>>=1)||(n=128,i++);g+=u}break;case 2:for(a=0;a<l;a++){for(n=d,i=g,r=0;r<c;r++)t[a][r]&&(f[i]^=n),(n>>=1)||(n=128,i++);g+=u}break;default:throw new s(\"operator \".concat(h,\" is not supported\"))}},onImmediateGenericRegion:function(e,a,r,n){var i=e.info,o=new t(a,r,n),s=g(e.mmr,i.width,i.height,e.template,e.prediction,null,e.at,o);this.drawBitmap(i,s)},onImmediateLosslessGenericRegion:function(){this.onImmediateGenericRegion.apply(this,arguments)},onSymbolDictionary:function(e,r,i,o,l,u){var h,f;e.huffman&&(h=function(e,t,a){var r,n,i,o,c=0;switch(e.huffmanDHSelector){case 0:case 1:r=T(e.huffmanDHSelector+4);break;case 3:r=E(c,t,a),c++;break;default:throw new s(\"invalid Huffman DH selector\")}switch(e.huffmanDWSelector){case 0:case 1:n=T(e.huffmanDWSelector+2);break;case 3:n=E(c,t,a),c++;break;default:throw new s(\"invalid Huffman DW selector\")}e.bitmapSizeSelector?(i=E(c,t,a),c++):i=T(1);o=e.aggregationInstancesSelector?E(c,t,a):T(1);return{tableDeltaHeight:r,tableDeltaWidth:n,tableBitmapSize:i,tableAggregateInstances:o}}(e,i,this.customTables),f=new O(o,l,u));var d=this.symbols;d||(this.symbols=d={});for(var v=[],b=0,y=i.length;b<y;b++){var k=d[i[b]];k&&(v=v.concat(k))}var w=new t(o,l,u);d[r]=function(e,t,r,i,o,l,u,h,f,d,v,b){if(e&&t)throw new s(\"symbol refinement with Huffman is not supported\");var y,k,w=[],C=0,S=(0,n.log2)(r.length+i),x=v.decoder,A=v.contextCache;for(e&&(y=T(1),k=[],S=Math.max(S,1));w.length<i;){C+=e?l.tableDeltaHeight.decode(b):a(A,\"IADH\",x);for(var I=0,F=0,O=e?k.length:0;;){var E,B=e?l.tableDeltaWidth.decode(b):a(A,\"IADW\",x);if(null===B)break;if(F+=I+=B,t){var M=a(A,\"IAAI\",x);if(M>1)E=m(e,t,I,C,0,M,1,r.concat(w),S,0,0,1,0,l,f,d,v,0,b);else{var D=c(A,x,S),R=a(A,\"IARDX\",x),N=a(A,\"IARDY\",x);E=p(I,C,f,D<r.length?r[D]:w[D-r.length],R,N,!1,d,v)}w.push(E)}else e?k.push(I):(E=g(!1,I,C,u,!1,null,h,v),w.push(E))}if(e&&!t){var L=l.tableBitmapSize.decode(b);b.byteAlign();var U=void 0;if(0===L)U=P(b,F,C);else{var q=b.end,j=b.position+L;b.end=j,U=_(b,F,C,!1),b.end=q,b.position=j}var z=k.length;if(O===z-1)w.push(U);else{var H=void 0,G=void 0,X=0,W=void 0,V=void 0;for(H=O;H<z;H++){for(W=X+k[H],V=[],G=0;G<C;G++)V.push(U[G].subarray(X,W));w.push(V),X=W}}}}for(var K=[],Y=[],J=!1,Z=r.length+i;Y.length<Z;){for(var Q=e?y.decode(b):a(A,\"IAEX\",x);Q--;)Y.push(J);J=!J}for(var $=0,ee=r.length;$<ee;$++)Y[$]&&K.push(r[$]);for(var te=0;te<i;$++,te++)Y[$]&&K.push(w[te]);return K}(e.huffman,e.refinement,v,e.numberOfNewSymbols,e.numberOfExportedSymbols,h,e.template,e.at,e.refinementTemplate,e.refinementAt,w,f)},onImmediateTextRegion:function(e,a,r,i,o){for(var c,l,u=e.info,h=this.symbols,f=[],d=0,g=a.length;d<g;d++){var p=h[a[d]];p&&(f=f.concat(p))}var v=(0,n.log2)(f.length);e.huffman&&(l=new O(r,i,o),c=function(e,t,a,r,n){for(var i=[],o=0;o<=34;o++){var c=n.readBits(4);i.push(new x([o,c,0,0]))}var l=new I(i,!1);i.length=0;for(var u=0;u<r;){var h=l.decode(n);if(h>=32){var f=void 0,d=void 0,g=void 0;switch(h){case 32:if(0===u)throw new s(\"no previous value in symbol ID table\");d=n.readBits(2)+3,f=i[u-1].prefixLength;break;case 33:d=n.readBits(3)+3,f=0;break;case 34:d=n.readBits(7)+11,f=0;break;default:throw new s(\"invalid code length in symbol ID table\")}for(g=0;g<d;g++)i.push(new x([u,f,0,0])),u++}else i.push(new x([u,h,0,0])),u++}n.byteAlign();var p,m,v,b=new I(i,!1),y=0;switch(e.huffmanFS){case 0:case 1:p=T(e.huffmanFS+6);break;case 3:p=E(y,t,a),y++;break;default:throw new s(\"invalid Huffman FS selector\")}switch(e.huffmanDS){case 0:case 1:case 2:m=T(e.huffmanDS+8);break;case 3:m=E(y,t,a),y++;break;default:throw new s(\"invalid Huffman DS selector\")}switch(e.huffmanDT){case 0:case 1:case 2:v=T(e.huffmanDT+11);break;case 3:v=E(y,t,a),y++;break;default:throw new s(\"invalid Huffman DT selector\")}if(e.refinement)throw new s(\"refinement with Huffman is not supported\");return{symbolIDTable:b,tableFirstS:p,tableDeltaS:m,tableDeltaT:v}}(e,a,this.customTables,f.length,l));var b=new t(r,i,o),y=m(e.huffman,e.refinement,u.width,u.height,e.defaultPixelValue,e.numberOfSymbolInstances,e.stripSize,f,v,e.transposed,e.dsOffset,e.referenceCorner,e.combinationOperator,c,e.refinementTemplate,e.refinementAt,b,e.logStripSize,l);this.drawBitmap(u,y)},onImmediateLosslessTextRegion:function(){this.onImmediateTextRegion.apply(this,arguments)},onPatternDictionary:function(e,a,r,n,i){var o=this.patterns;o||(this.patterns=o={});var s=new t(r,n,i);o[a]=function(e,t,a,r,n,i){var o=[];e||(o.push({x:-t,y:0}),0===n&&(o.push({x:-3,y:-1}),o.push({x:2,y:-2}),o.push({x:-2,y:-2})));for(var s=g(e,(r+1)*t,a,n,!1,null,o,i),c=[],l=0;l<=r;l++){for(var u=[],h=t*l,f=h+t,d=0;d<a;d++)u.push(s[d].subarray(h,f));c.push(u)}return c}(e.mmr,e.patternWidth,e.patternHeight,e.maxPatternIndex,e.template,s)},onImmediateHalftoneRegion:function(e,a,r,i,o){var c=this.patterns[a[0]],l=e.info,u=new t(r,i,o),h=function(e,t,a,r,i,o,c,l,u,h,f,d,p,m,v){if(c)throw new s(\"skip is not supported\");if(0!==l)throw new s(\"operator \"+l+\" is not supported in halftone region\");var b,y,k,w=[];for(b=0;b<i;b++){if(k=new Uint8Array(r),o)for(y=0;y<r;y++)k[y]=o;w.push(k)}var C=t.length,S=t[0],x=S[0].length,A=S.length,I=(0,n.log2)(C),F=[];e||(F.push({x:a<=1?3:2,y:-1}),0===a&&(F.push({x:-3,y:-1}),F.push({x:2,y:-2}),F.push({x:-2,y:-2})));var T,E,P,B,M,D,R,N,L,U,q,j=[];for(e&&(T=new O(v.data,v.start,v.end)),b=I-1;b>=0;b--)E=e?_(T,u,h,!0):g(!1,u,h,a,!1,null,F,v),j[b]=E;for(P=0;P<h;P++)for(B=0;B<u;B++){for(M=0,D=0,y=I-1;y>=0;y--)D|=(M=j[y][P][B]^M)<<y;if(R=t[D],L=d+P*p-B*m>>8,(N=f+P*m+B*p>>8)>=0&&N+x<=r&&L>=0&&L+A<=i)for(b=0;b<A;b++)for(q=w[L+b],U=R[b],y=0;y<x;y++)q[N+y]|=U[y];else{var z=void 0,H=void 0;for(b=0;b<A;b++)if(!((H=L+b)<0||H>=i))for(q=w[H],U=R[b],y=0;y<x;y++)(z=N+y)>=0&&z<r&&(q[z]|=U[y])}}return w}(e.mmr,c,e.template,l.width,l.height,e.defaultPixelValue,e.enableSkip,e.combinationOperator,e.gridWidth,e.gridHeight,e.gridOffsetX,e.gridOffsetY,e.gridVectorX,e.gridVectorY,u);this.drawBitmap(l,h)},onImmediateLosslessHalftoneRegion:function(){this.onImmediateHalftoneRegion.apply(this,arguments)},onTables:function(e,t,a,r){var i=this.customTables;i||(this.customTables=i={}),i[e]=function(e,t,a){var r,i,o=e[t],s=4294967295&(0,n.readUint32)(e,t+1),c=4294967295&(0,n.readUint32)(e,t+5),l=new O(e,t+9,a),u=1+(o>>1&7),h=1+(o>>4&7),f=[],d=s;do{r=l.readBits(u),i=l.readBits(h),f.push(new x([d,r,i,0])),d+=1<<i}while(d<c);r=l.readBits(u),f.push(new x([s-1,r,32,0,\"lower\"])),r=l.readBits(u),f.push(new x([c,r,32,0])),1&o&&(r=l.readBits(u),f.push(new x([r,0])));return new I(f,!1)}(t,a,r)}},A.prototype={buildTree:function(e,t){var a=e.prefixCode>>t&1;if(t<=0)this.children[a]=new A(e);else{var r=this.children[a];r||(this.children[a]=r=new A(null)),r.buildTree(e,t-1)}},decodeNode:function(e){if(this.isLeaf){if(this.isOOB)return null;var t=e.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-t:t)}var a=this.children[e.readBit()];if(!a)throw new s(\"invalid Huffman data\");return a.decodeNode(e)}},I.prototype={decode:function(e){return this.rootNode.decodeNode(e)},assignPrefixCodes:function(e){for(var t=e.length,a=0,r=0;r<t;r++)a=Math.max(a,e[r].prefixLength);for(var n=new Uint32Array(a+1),i=0;i<t;i++)n[e[i].prefixLength]++;var o,s,c,l=1,u=0;for(n[0]=0;l<=a;){for(o=u=u+n[l-1]<<1,s=0;s<t;)(c=e[s]).prefixLength===l&&(c.prefixCode=o,o++),s++;l++}}};var F={};function T(e){var t,a=F[e];if(a)return a;switch(e){case 1:t=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:t=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:t=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,\"lower\"],[75,7,32,126],[6,62]];break;case 4:t=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:t=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,\"lower\"],[76,6,32,62]];break;case 6:t=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,\"lower\"],[2048,6,32,63]];break;case 7:t=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,\"lower\"],[2048,5,32,31]];break;case 8:t=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,\"lower\"],[1670,9,32,511],[2,1]];break;case 9:t=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,\"lower\"],[3339,9,32,511],[2,0]];break;case 10:t=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,\"lower\"],[4166,8,32,255],[2,2]];break;case 11:t=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:t=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:t=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:t=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:t=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,\"lower\"],[25,7,32,127]];break;default:throw new s(\"standard table B.\".concat(e,\" does not exist\"))}for(var r=0,n=t.length;r<n;r++)t[r]=new x(t[r]);return a=new I(t,!0),F[e]=a,a}function O(e,t,a){this.data=e,this.start=t,this.end=a,this.position=t,this.shift=-1,this.currentByte=0}function E(e,t,a){for(var r=0,n=0,i=t.length;n<i;n++){var o=a[t[n]];if(o){if(e===r)return o;r++}}throw new s(\"can't find custom Huffman table\")}function P(e,t,a){for(var r=[],n=0;n<a;n++){var i=new Uint8Array(t);r.push(i);for(var o=0;o<t;o++)i[o]=e.readBit();e.byteAlign()}return r}function _(e,t,a,r){for(var n,i={K:-1,Columns:t,Rows:a,BlackIs1:!0,EndOfBlock:r},s=new o.CCITTFaxDecoder(e,i),c=[],l=!1,u=0;u<a;u++){var h=new Uint8Array(t);c.push(h);for(var f=-1,d=0;d<t;d++)f<0&&(-1===(n=s.readNextChar())&&(n=0,l=!0),f=7),h[d]=n>>f&1,f--}if(r&&!l)for(var g=0;g<5&&-1!==s.readNextChar();g++);return c}function B(){}return O.prototype={readBit:function(){if(this.shift<0){if(this.position>=this.end)throw new s(\"end of data while reading bit\");this.currentByte=this.data[this.position++],this.shift=7}var e=this.currentByte>>this.shift&1;return this.shift--,e},readBits:function(e){var t,a=0;for(t=e-1;t>=0;t--)a|=this.readBit()<<t;return a},byteAlign:function(){this.shift=-1},next:function(){return this.position>=this.end?-1:this.data[this.position++]}},B.prototype={parseChunks:function(e){return function(e){for(var t=new S,a=0,r=e.length;a<r;a++){var n=e[a];C(b({},n.data,n.start,n.end),t)}return t.buffer}(e)},parse:function(e){var t=function(e){var t=e.length,a=0;if(151!==e[a]||74!==e[a+1]||66!==e[a+2]||50!==e[a+3]||13!==e[a+4]||10!==e[a+5]||26!==e[a+6]||10!==e[a+7])throw new s(\"parseJbig2 - invalid header.\");var r=Object.create(null);a+=8;var i=e[a++];r.randomAccess=!(1&i),2&i||(r.numberOfPages=(0,n.readUint32)(e,a),a+=4);var o=b(r,e,a,t),c=new S;C(o,c);for(var l=c.currentPageInfo,u=l.width,h=l.height,f=c.buffer,d=new Uint8ClampedArray(u*h),g=0,p=0,m=0;m<h;m++)for(var v=0,y=void 0,k=0;k<u;k++)v||(v=128,y=f[p++]),d[g++]=y&v?0:255,v>>=1;return{imgData:d,width:u,height:h}}(e),a=t.imgData,r=t.width,i=t.height;return this.width=r,this.height=i,a}},B}();t.Jbig2Image=c},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ArithmeticDecoder=void 0;var r=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}],n=function(){function e(t,a,r){_classCallCheck(this,e),this.data=t,this.bp=a,this.dataEnd=r,this.chigh=t[a],this.clow=0,this.byteIn(),this.chigh=this.chigh<<7&65535|this.clow>>9&127,this.clow=this.clow<<7&65535,this.ct-=7,this.a=32768}return _createClass(e,[{key:\"byteIn\",value:function(){var e=this.data,t=this.bp;255===e[t]?e[t+1]>143?(this.clow+=65280,this.ct=8):(t++,this.clow+=e[t]<<9,this.ct=7,this.bp=t):(t++,this.clow+=t<this.dataEnd?e[t]<<8:65280,this.ct=8,this.bp=t),this.clow>65535&&(this.chigh+=this.clow>>16,this.clow&=65535)}},{key:\"readBit\",value:function(e,t){var a,n=e[t]>>1,i=1&e[t],o=r[n],s=o.qe,c=this.a-s;if(this.chigh<s)c<s?(c=s,a=i,n=o.nmps):(c=s,a=1^i,1===o.switchFlag&&(i=a),n=o.nlps);else{if(this.chigh-=s,0!==(32768&c))return this.a=c,i;c<s?(a=1^i,1===o.switchFlag&&(i=a),n=o.nlps):(a=i,n=o.nmps)}do{0===this.ct&&this.byteIn(),c<<=1,this.chigh=this.chigh<<1&65535|this.clow>>15&1,this.clow=this.clow<<1&65535,this.ct--}while(0===(32768&c));return this.a=c,e[t]=n<<1|i,a}}]),e}();t.ArithmeticDecoder=n},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegStream=void 0;var r=a(12),n=a(5),i=a(19),o=a(2),s=function(){function e(e,t,a,n){for(var i;-1!==(i=e.getByte());)if(255===i){e.skip(-1);break}this.stream=e,this.maybeLength=t,this.dict=a,this.params=n,r.DecodeStream.call(this,t)}return e.prototype=Object.create(r.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,o.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e={decodeTransform:void 0,colorTransform:void 0},t=this.dict.getArray(\"Decode\",\"D\");if(this.forceRGB&&Array.isArray(t)){for(var a=this.dict.get(\"BitsPerComponent\")||8,r=t.length,o=new Int32Array(r),s=!1,c=(1<<a)-1,l=0;l<r;l+=2)o[l]=256*(t[l+1]-t[l])|0,o[l+1]=t[l]*c|0,256===o[l]&&0===o[l+1]||(s=!0);s&&(e.decodeTransform=o)}if((0,n.isDict)(this.params)){var u=this.params.get(\"ColorTransform\");Number.isInteger(u)&&(e.colorTransform=u)}var h=new i.JpegImage(e);h.parse(this.bytes);var f=h.getData({width:this.drawWidth,height:this.drawHeight,forceRGB:this.forceRGB,isSourcePDF:!0});this.buffer=f,this.bufferLength=f.length,this.eof=!0}},e}();t.JpegStream=s},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpegImage=void 0;var r=a(2),n=a(8),i=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){return _classCallCheck(this,a),t.call(this,\"JPEG error: \".concat(e))}return a}(r.BaseException),o=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this,e)).scanLines=r,n}return a}(r.BaseException),s=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return a}(r.BaseException),c=function(){var e=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),t=4017,a=799,c=3406,l=2276,u=1567,h=3784,f=5793,d=2896;function g(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.decodeTransform,a=void 0===t?null:t,r=e.colorTransform,n=void 0===r?-1:r;this._decodeTransform=a,this._colorTransform=n}function p(e,t){for(var a,r,n=0,i=[],o=16;o>0&&!e[o-1];)o--;i.push({children:[],index:0});var s,c=i[0];for(a=0;a<o;a++){for(r=0;r<e[a];r++){for((c=i.pop()).children[c.index]=t[n];c.index>0;)c=i.pop();for(c.index++,i.push(c);i.length<=a;)i.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s;n++}a+1<o&&(i.push(s={children:[],index:0}),c.children[c.index]=s.children,c=s)}return i[0].children}function m(e,t,a){return 64*((e.blocksPerLine+1)*t+a)}function v(t,a,c,l,u,h,f,d,g){var p=arguments.length>9&&void 0!==arguments[9]&&arguments[9],v=c.mcusPerLine,b=c.progressive,y=a,w=0,C=0;function S(){if(C>0)return C--,w>>C&1;if(255===(w=t[a++])){var e=t[a++];if(e){if(220===e&&p){a+=2;var r=(0,n.readUint16)(t,a);if(a+=2,r>0&&r!==c.scanLines)throw new o(\"Found DNL marker (0xFFDC) while parsing scan data\",r)}else if(217===e){if(p){var l=D*(8===c.precision?8:0);if(l>0&&Math.round(c.scanLines/l)>=10)throw new o(\"Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter\",l)}throw new s(\"Found EOI marker (0xFFD9) while parsing scan data\")}throw new i(\"unexpected marker \".concat((w<<8|e).toString(16)))}}return C=7,w>>>7}function x(e){for(var t=e;;){switch(typeof(t=t[S()])){case\"number\":return t;case\"object\":continue}throw new i(\"invalid huffman sequence\")}}function A(e){for(var t=0;e>0;)t=t<<1|S(),e--;return t}function I(e){if(1===e)return 1===S()?1:-1;var t=A(e);return t>=1<<e-1?t:t+(-1<<e)+1}function F(t,a){var r=x(t.huffmanTableDC),n=0===r?0:I(r);t.blockData[a]=t.pred+=n;for(var i=1;i<64;){var o=x(t.huffmanTableAC),s=15&o,c=o>>4;if(0!==s){var l=e[i+=c];t.blockData[a+l]=I(s),i++}else{if(c<15)break;i+=16}}}function T(e,t){var a=x(e.huffmanTableDC),r=0===a?0:I(a)<<g;e.blockData[t]=e.pred+=r}function O(e,t){e.blockData[t]|=S()<<g}var E=0;function P(t,a){if(E>0)E--;else for(var r=h,n=f;r<=n;){var i=x(t.huffmanTableAC),o=15&i,s=i>>4;if(0!==o){var c=e[r+=s];t.blockData[a+c]=I(o)*(1<<g),r++}else{if(s<15){E=A(s)+(1<<s)-1;break}r+=16}}}var _,B=0;function M(t,a){for(var r,n,o=h,s=f,c=0;o<=s;){var l=a+e[o],u=t.blockData[l]<0?-1:1;switch(B){case 0:if(c=(n=x(t.huffmanTableAC))>>4,0===(r=15&n))c<15?(E=A(c)+(1<<c),B=4):(c=16,B=1);else{if(1!==r)throw new i(\"invalid ACn encoding\");_=I(r),B=c?2:3}continue;case 1:case 2:t.blockData[l]?t.blockData[l]+=u*(S()<<g):0===--c&&(B=2===B?3:0);break;case 3:t.blockData[l]?t.blockData[l]+=u*(S()<<g):(t.blockData[l]=_<<g,B=0);break;case 4:t.blockData[l]&&(t.blockData[l]+=u*(S()<<g))}o++}4===B&&0===--E&&(B=0)}var D=0;function R(e,t,a,r,n){var i=a%v;D=(a/v|0)*e.v+r;var o=i*e.h+n;t(e,m(e,D,o))}function N(e,t,a){D=a/e.blocksPerLine|0;var r=a%e.blocksPerLine;t(e,m(e,D,r))}var L,U,q,j,z,H,G=l.length;H=b?0===h?0===d?T:O:0===d?P:M:F;var X,W,V,K,Y=0;for(W=1===G?l[0].blocksPerLine*l[0].blocksPerColumn:v*c.mcusPerColumn;Y<=W;){var J=u?Math.min(W-Y,u):W;if(J>0){for(U=0;U<G;U++)l[U].pred=0;if(E=0,1===G)for(L=l[0],z=0;z<J;z++)N(L,H,Y),Y++;else for(z=0;z<J;z++){for(U=0;U<G;U++)for(V=(L=l[U]).h,K=L.v,q=0;q<K;q++)for(j=0;j<V;j++)R(L,H,Y,q,j);Y++}}if(C=0,!(X=k(t,a)))break;if(X.invalid){var Z=J>0?\"unexpected\":\"excessive\";(0,r.warn)(\"decodeScan - \".concat(Z,\" MCU data, current marker is: \").concat(X.invalid)),a=X.offset}if(!(X.marker>=65488&&X.marker<=65495))break;a+=2}return a-y}function b(e,r,n){var o,s,g,p,m,v,b,y,k,w,C,S,x,A,I,F,T,O=e.quantizationTable,E=e.blockData;if(!O)throw new i(\"missing required Quantization Table.\");for(var P=0;P<64;P+=8)k=E[r+P],w=E[r+P+1],C=E[r+P+2],S=E[r+P+3],x=E[r+P+4],A=E[r+P+5],I=E[r+P+6],F=E[r+P+7],k*=O[P],0!==(w|C|S|x|A|I|F)?(w*=O[P+1],C*=O[P+2],S*=O[P+3],x*=O[P+4],A*=O[P+5],I*=O[P+6],F*=O[P+7],s=(o=(o=f*k+128>>8)+(s=f*x+128>>8)+1>>1)-s,T=(g=C)*h+(p=I)*u+128>>8,g=g*u-p*h+128>>8,b=(m=(m=d*(w-F)+128>>8)+(b=A<<4)+1>>1)-b,v=(y=(y=d*(w+F)+128>>8)+(v=S<<4)+1>>1)-v,p=(o=o+(p=T)+1>>1)-p,g=(s=s+g+1>>1)-g,T=m*l+y*c+2048>>12,m=m*c-y*l+2048>>12,y=T,T=v*a+b*t+2048>>12,v=v*t-b*a+2048>>12,b=T,n[P]=o+y,n[P+7]=o-y,n[P+1]=s+b,n[P+6]=s-b,n[P+2]=g+v,n[P+5]=g-v,n[P+3]=p+m,n[P+4]=p-m):(T=f*k+512>>10,n[P]=T,n[P+1]=T,n[P+2]=T,n[P+3]=T,n[P+4]=T,n[P+5]=T,n[P+6]=T,n[P+7]=T);for(var _=0;_<8;++_)k=n[_],0!==((w=n[_+8])|(C=n[_+16])|(S=n[_+24])|(x=n[_+32])|(A=n[_+40])|(I=n[_+48])|(F=n[_+56]))?(s=(o=4112+((o=f*k+2048>>12)+(s=f*x+2048>>12)+1>>1))-s,T=(g=C)*h+(p=I)*u+2048>>12,g=g*u-p*h+2048>>12,p=T,b=(m=(m=d*(w-F)+2048>>12)+(b=A)+1>>1)-b,v=(y=(y=d*(w+F)+2048>>12)+(v=S)+1>>1)-v,T=m*l+y*c+2048>>12,m=m*c-y*l+2048>>12,y=T,T=v*a+b*t+2048>>12,v=v*t-b*a+2048>>12,(k=(o=o+p+1>>1)+y)<16?k=0:k>=4080?k=255:k>>=4,(w=(s=s+g+1>>1)+(b=T))<16?w=0:w>=4080?w=255:w>>=4,(C=(g=s-g)+v)<16?C=0:C>=4080?C=255:C>>=4,(S=(p=o-p)+m)<16?S=0:S>=4080?S=255:S>>=4,(x=p-m)<16?x=0:x>=4080?x=255:x>>=4,(A=g-v)<16?A=0:A>=4080?A=255:A>>=4,(I=s-b)<16?I=0:I>=4080?I=255:I>>=4,(F=o-y)<16?F=0:F>=4080?F=255:F>>=4,E[r+_]=k,E[r+_+8]=w,E[r+_+16]=C,E[r+_+24]=S,E[r+_+32]=x,E[r+_+40]=A,E[r+_+48]=I,E[r+_+56]=F):(T=(T=f*k+8192>>14)<-2040?0:T>=2024?255:T+2056>>4,E[r+_]=T,E[r+_+8]=T,E[r+_+16]=T,E[r+_+24]=T,E[r+_+32]=T,E[r+_+40]=T,E[r+_+48]=T,E[r+_+56]=T)}function y(e,t){for(var a=t.blocksPerLine,r=t.blocksPerColumn,n=new Int16Array(64),i=0;i<r;i++)for(var o=0;o<a;o++){b(t,m(t,i,o),n)}return t.blockData}function k(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t,r=e.length-1,i=a<t?a:t;if(t>=r)return null;var o=(0,n.readUint16)(e,t);if(o>=65472&&o<=65534)return{invalid:null,marker:o,offset:t};for(var s=(0,n.readUint16)(e,i);!(s>=65472&&s<=65534);){if(++i>=r)return null;s=(0,n.readUint16)(e,i)}return{invalid:o.toString(16),marker:s,offset:i}}return g.prototype={parse:function(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},c=a.dnlScanLines,l=void 0===c?null:c;function u(){var e=(0,n.readUint16)(t,g),a=(g+=2)+e-2,i=k(t,a,g);i&&i.invalid&&((0,r.warn)(\"readDataBlock - incorrect length, current marker is: \"+i.invalid),a=i.offset);var o=t.subarray(g,a);return g+=o.length,o}function h(e){for(var t=Math.ceil(e.samplesPerLine/8/e.maxH),a=Math.ceil(e.scanLines/8/e.maxV),r=0;r<e.components.length;r++){K=e.components[r];var n=Math.ceil(Math.ceil(e.samplesPerLine/8)*K.h/e.maxH),i=Math.ceil(Math.ceil(e.scanLines/8)*K.v/e.maxV),o=t*K.h,s=64*(a*K.v)*(o+1);K.blockData=new Int16Array(s),K.blocksPerLine=n,K.blocksPerColumn=i}e.mcusPerLine=t,e.mcusPerColumn=a}var f,d,g=0,m=null,b=null,w=0,C=[],S=[],x=[],A=(0,n.readUint16)(t,g);if(g+=2,65496!==A)throw new i(\"SOI not found\");A=(0,n.readUint16)(t,g),g+=2;e:for(;65497!==A;){var I,F,T;switch(A){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var O=u();65504===A&&74===O[0]&&70===O[1]&&73===O[2]&&70===O[3]&&0===O[4]&&(m={version:{major:O[5],minor:O[6]},densityUnits:O[7],xDensity:O[8]<<8|O[9],yDensity:O[10]<<8|O[11],thumbWidth:O[12],thumbHeight:O[13],thumbData:O.subarray(14,14+3*O[12]*O[13])}),65518===A&&65===O[0]&&100===O[1]&&111===O[2]&&98===O[3]&&101===O[4]&&(b={version:O[5]<<8|O[6],flags0:O[7]<<8|O[8],flags1:O[9]<<8|O[10],transformCode:O[11]});break;case 65499:for(var E=(0,n.readUint16)(t,g),P=E+(g+=2)-2;g<P;){var _=t[g++],B=new Uint16Array(64);if(_>>4===0)for(F=0;F<64;F++)B[e[F]]=t[g++];else{if(_>>4!==1)throw new i(\"DQT - invalid table spec\");for(F=0;F<64;F++)B[e[F]]=(0,n.readUint16)(t,g),g+=2}C[15&_]=B}break;case 65472:case 65473:case 65474:if(f)throw new i(\"Only single frame JPEGs supported\");g+=2,(f={}).extended=65473===A,f.progressive=65474===A,f.precision=t[g++];var M=(0,n.readUint16)(t,g);g+=2,f.scanLines=l||M,f.samplesPerLine=(0,n.readUint16)(t,g),g+=2,f.components=[],f.componentIds={};var D,R=t[g++],N=0,L=0;for(I=0;I<R;I++){D=t[g];var U=t[g+1]>>4,q=15&t[g+1];N<U&&(N=U),L<q&&(L=q);var j=t[g+2];T=f.components.push({h:U,v:q,quantizationId:j,quantizationTable:null}),f.componentIds[D]=T-1,g+=3}f.maxH=N,f.maxV=L,h(f);break;case 65476:var z=(0,n.readUint16)(t,g);for(g+=2,I=2;I<z;){var H=t[g++],G=new Uint8Array(16),X=0;for(F=0;F<16;F++,g++)X+=G[F]=t[g];var W=new Uint8Array(X);for(F=0;F<X;F++,g++)W[F]=t[g];I+=17+X,(H>>4===0?x:S)[15&H]=p(G,W)}break;case 65501:g+=2,d=(0,n.readUint16)(t,g),g+=2;break;case 65498:var V=1===++w&&!l;g+=2;var K,Y=t[g++],J=[];for(I=0;I<Y;I++){var Z=t[g++],Q=f.componentIds[Z];(K=f.components[Q]).index=Z;var $=t[g++];K.huffmanTableDC=x[$>>4],K.huffmanTableAC=S[15&$],J.push(K)}var ee=t[g++],te=t[g++],ae=t[g++];try{var re=v(t,g,f,J,d,ee,te,ae>>4,15&ae,V);g+=re}catch(oe){if(oe instanceof o)return(0,r.warn)(\"\".concat(oe.message,\" -- attempting to re-parse the JPEG image.\")),this.parse(t,{dnlScanLines:oe.scanLines});if(oe instanceof s){(0,r.warn)(\"\".concat(oe.message,\" -- ignoring the rest of the image data.\"));break e}throw oe}break;case 65500:g+=4;break;case 65535:255!==t[g]&&g--;break;default:var ne=k(t,g-2,g-3);if(ne&&ne.invalid){(0,r.warn)(\"JpegImage.parse - unexpected data, current marker is: \"+ne.invalid),g=ne.offset;break}if(g>=t.length-1){(0,r.warn)(\"JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9).\");break e}throw new i(\"JpegImage.parse - unknown marker: \"+A.toString(16))}A=(0,n.readUint16)(t,g),g+=2}for(this.width=f.samplesPerLine,this.height=f.scanLines,this.jfif=m,this.adobe=b,this.components=[],I=0;I<f.components.length;I++){var ie=C[(K=f.components[I]).quantizationId];ie&&(K.quantizationTable=ie),this.components.push({index:K.index,output:y(0,K),scaleX:K.h/f.maxH,scaleY:K.v/f.maxV,blocksPerLine:K.blocksPerLine,blocksPerColumn:K.blocksPerColumn})}this.numComponents=this.components.length},_getLinearizedBlockData:function(e,t){var a,r,n,i,o,s,c,l,u,h,f,d,g=arguments.length>2&&void 0!==arguments[2]&&arguments[2],p=this.width/e,m=this.height/t,v=0,b=this.components.length,y=e*t*b,k=new Uint8ClampedArray(y),w=new Uint32Array(e),C=4294967288;for(c=0;c<b;c++){if(r=(a=this.components[c]).scaleX*p,n=a.scaleY*m,v=c,f=a.output,i=a.blocksPerLine+1<<3,r!==d){for(o=0;o<e;o++)l=0|o*r,w[o]=(l&C)<<3|7&l;d=r}for(s=0;s<t;s++)for(h=i*((l=0|s*n)&C)|(7&l)<<3,o=0;o<e;o++)k[v]=f[h+w[o]],v+=b}var S=this._decodeTransform;if(g||4!==b||S||(S=new Int32Array([-256,255,-256,255,-256,255,-256,255])),S)for(c=0;c<y;)for(l=0,u=0;l<b;l++,c++,u+=2)k[c]=(k[c]*S[u]>>8)+S[u+1];return k},get _isColorConversionNeeded(){return this.adobe?!!this.adobe.transformCode:3===this.numComponents?0!==this._colorTransform&&(82!==this.components[0].index||71!==this.components[1].index||66!==this.components[2].index):1===this._colorTransform},_convertYccToRgb:function(e){for(var t,a,r,n=0,i=e.length;n<i;n+=3)t=e[n],a=e[n+1],r=e[n+2],e[n]=t-179.456+1.402*r,e[n+1]=t+135.459-.344*a-.714*r,e[n+2]=t-226.816+1.772*a;return e},_convertYcckToRgb:function(e){for(var t,a,r,n,i=0,o=0,s=e.length;o<s;o+=4)t=e[o],a=e[o+1],r=e[o+2],n=e[o+3],e[i++]=a*(-660635669420364e-19*a+.000437130475926232*r-54080610064599e-18*t+.00048449797120281*n-.154362151871126)-122.67195406894+r*(-.000957964378445773*r+.000817076911346625*t-.00477271405408747*n+1.53380253221734)+t*(.000961250184130688*t-.00266257332283933*n+.48357088451265)+n*(-.000336197177618394*n+.484791561490776),e[i++]=107.268039397724+a*(219927104525741e-19*a-.000640992018297945*r+.000659397001245577*t+.000426105652938837*n-.176491792462875)+r*(-.000778269941513683*r+.00130872261408275*t+.000770482631801132*n-.151051492775562)+t*(.00126935368114843*t-.00265090189010898*n+.25802910206845)+n*(-.000318913117588328*n-.213742400323665),e[i++]=a*(-.000570115196973677*a-263409051004589e-19*r+.0020741088115012*t-.00288260236853442*n+.814272968359295)-20.810012546947+r*(-153496057440975e-19*r-.000132689043961446*t+.000560833691242812*n-.195152027534049)+t*(.00174418132927582*t-.00255243321439347*n+.116935020465145)+n*(-.000343531996510555*n+.24165260232407);return e.subarray(0,i)},_convertYcckToCmyk:function(e){for(var t,a,r,n=0,i=e.length;n<i;n+=4)t=e[n],a=e[n+1],r=e[n+2],e[n]=434.456-t-1.402*r,e[n+1]=119.541-t+.344*a+.714*r,e[n+2]=481.816-t-1.772*a;return e},_convertCmykToRgb:function(e){for(var t,a,r,n,i=0,o=0,s=e.length;o<s;o+=4)t=e[o],a=e[o+1],r=e[o+2],n=e[o+3],e[i++]=255+t*(-6747147073602441e-20*t+.0008379262121013727*a+.0002894718188643294*r+.003264231057537806*n-1.1185611867203937)+a*(26374107616089405e-21*a-8626949158638572e-20*r-.0002748769067499491*n-.02155688794978967)+r*(-3878099212869363e-20*r-.0003267808279485286*n+.0686742238595345)-n*(.0003361971776183937*n+.7430659151342254),e[i++]=255+t*(.00013596372813588848*t+.000924537132573585*a+.00010567359618683593*r+.0004791864687436512*n-.3109689587515875)+a*(-.00023545346108370344*a+.0002702845253534714*r+.0020200308977307156*n-.7488052167015494)+r*(6834815998235662e-20*r+.00015168452363460973*n-.09751927774728933)-n*(.0003189131175883281*n+.7364883807733168),e[i++]=255+t*(13598650411385307e-21*t+.00012423956175490851*a+.0004751985097583589*r-36729317476630422e-22*n-.05562186980264034)+a*(.00016141380598724676*a+.0009692239130725186*r+.0007782692450036253*n-.44015232367526463)+r*(5.068882914068769e-7*r+.0017778369011375071*n-.7591454649749609)-n*(.0003435319965105553*n+.7063770186160144);return e.subarray(0,i)},getData:function(e){var t=e.width,a=e.height,r=e.forceRGB,n=void 0!==r&&r,o=e.isSourcePDF,s=void 0!==o&&o;if(this.numComponents>4)throw new i(\"Unsupported color mode\");var c=this._getLinearizedBlockData(t,a,s);if(1===this.numComponents&&n){for(var l=c.length,u=new Uint8ClampedArray(3*l),h=0,f=0;f<l;f++){var d=c[f];u[h++]=d,u[h++]=d,u[h++]=d}return u}if(3===this.numComponents&&this._isColorConversionNeeded)return this._convertYccToRgb(c);if(4===this.numComponents){if(this._isColorConversionNeeded)return n?this._convertYcckToRgb(c):this._convertYcckToCmyk(c);if(n)return this._convertCmykToRgb(c)}return c}},g}();t.JpegImage=c},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxStream=void 0;var r=a(12),n=a(21),i=a(2),o=function(){function e(e,t,a,n){this.stream=e,this.maybeLength=t,this.dict=a,this.params=n,r.DecodeStream.call(this,t)}return e.prototype=Object.create(r.DecodeStream.prototype),Object.defineProperty(e.prototype,\"bytes\",{get:function(){return(0,i.shadow)(this,\"bytes\",this.stream.getBytes(this.maybeLength))},configurable:!0}),e.prototype.ensureBuffer=function(e){},e.prototype.readBlock=function(){if(!this.eof){var e=new n.JpxImage;e.parse(this.bytes);var t=e.width,a=e.height,r=e.componentsCount,i=e.tiles.length;if(1===i)this.buffer=e.tiles[0].items;else{for(var o=new Uint8ClampedArray(t*a*r),s=0;s<i;s++)for(var c=e.tiles[s],l=c.width,u=c.height,h=c.left,f=c.top,d=c.items,g=0,p=(t*f+h)*r,m=t*r,v=l*r,b=0;b<u;b++){var y=d.subarray(g,g+v);o.set(y,p),g+=v,p+=m}this.buffer=o}this.bufferLength=this.buffer.length,this.eof=!0}},e}();t.JpxStream=o},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.JpxImage=void 0;var r=a(2),n=a(8),i=a(17),o=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){return _classCallCheck(this,a),t.call(this,\"JPX error: \".concat(e))}return a}(r.BaseException),s=function(){var e={LL:0,LH:1,HL:1,HH:2};function t(){this.failOnCorruptedImage=!1}function a(e,t){e.x0=Math.ceil(t.XOsiz/e.XRsiz),e.x1=Math.ceil(t.Xsiz/e.XRsiz),e.y0=Math.ceil(t.YOsiz/e.YRsiz),e.y1=Math.ceil(t.Ysiz/e.YRsiz),e.width=e.x1-e.x0,e.height=e.y1-e.y0}function s(e,t){for(var a,r=e.SIZ,n=[],i=Math.ceil((r.Xsiz-r.XTOsiz)/r.XTsiz),o=Math.ceil((r.Ysiz-r.YTOsiz)/r.YTsiz),s=0;s<o;s++)for(var c=0;c<i;c++)(a={}).tx0=Math.max(r.XTOsiz+c*r.XTsiz,r.XOsiz),a.ty0=Math.max(r.YTOsiz+s*r.YTsiz,r.YOsiz),a.tx1=Math.min(r.XTOsiz+(c+1)*r.XTsiz,r.Xsiz),a.ty1=Math.min(r.YTOsiz+(s+1)*r.YTsiz,r.Ysiz),a.width=a.tx1-a.tx0,a.height=a.ty1-a.ty0,a.components=[],n.push(a);e.tiles=n;for(var l=0,u=r.Csiz;l<u;l++)for(var h=t[l],f=0,d=n.length;f<d;f++){var g={};a=n[f],g.tcx0=Math.ceil(a.tx0/h.XRsiz),g.tcy0=Math.ceil(a.ty0/h.YRsiz),g.tcx1=Math.ceil(a.tx1/h.XRsiz),g.tcy1=Math.ceil(a.ty1/h.YRsiz),g.width=g.tcx1-g.tcx0,g.height=g.tcy1-g.tcy0,a.components[l]=g}}function c(e,t,a){var r=t.codingStyleParameters,n={};return r.entropyCoderWithCustomPrecincts?(n.PPx=r.precinctsSizes[a].PPx,n.PPy=r.precinctsSizes[a].PPy):(n.PPx=15,n.PPy=15),n.xcb_=a>0?Math.min(r.xcb,n.PPx-1):Math.min(r.xcb,n.PPx),n.ycb_=a>0?Math.min(r.ycb,n.PPy-1):Math.min(r.ycb,n.PPy),n}function l(e,t,a){var r=1<<a.PPx,n=1<<a.PPy,i=0===t.resLevel,o=1<<a.PPx+(i?0:-1),s=1<<a.PPy+(i?0:-1),c=t.trx1>t.trx0?Math.ceil(t.trx1/r)-Math.floor(t.trx0/r):0,l=t.try1>t.try0?Math.ceil(t.try1/n)-Math.floor(t.try0/n):0,u=c*l;t.precinctParameters={precinctWidth:r,precinctHeight:n,numprecinctswide:c,numprecinctshigh:l,numprecincts:u,precinctWidthInSubband:o,precinctHeightInSubband:s}}function u(e,t,a){var r,n,i,o,s=a.xcb_,c=a.ycb_,l=1<<s,u=1<<c,h=t.tbx0>>s,f=t.tby0>>c,d=t.tbx1+l-1>>s,g=t.tby1+u-1>>c,p=t.resolution.precinctParameters,m=[],v=[];for(n=f;n<g;n++)for(r=h;r<d;r++){if((i={cbx:r,cby:n,tbx0:l*r,tby0:u*n,tbx1:l*(r+1),tby1:u*(n+1)}).tbx0_=Math.max(t.tbx0,i.tbx0),i.tby0_=Math.max(t.tby0,i.tby0),i.tbx1_=Math.min(t.tbx1,i.tbx1),i.tby1_=Math.min(t.tby1,i.tby1),o=Math.floor((i.tbx0_-t.tbx0)/p.precinctWidthInSubband)+Math.floor((i.tby0_-t.tby0)/p.precinctHeightInSubband)*p.numprecinctswide,i.precinctNumber=o,i.subbandType=t.type,i.Lblock=3,!(i.tbx1_<=i.tbx0_||i.tby1_<=i.tby0_)){m.push(i);var b=v[o];void 0!==b?(r<b.cbxMin?b.cbxMin=r:r>b.cbxMax&&(b.cbxMax=r),n<b.cbyMin?b.cbxMin=n:n>b.cbyMax&&(b.cbyMax=n)):v[o]=b={cbxMin:r,cbyMin:n,cbxMax:r,cbyMax:n},i.precinct=b}}t.codeblockParameters={codeblockWidth:s,codeblockHeight:c,numcodeblockwide:d-h+1,numcodeblockhigh:g-f+1},t.codeblocks=m,t.precincts=v}function h(e,t,a){for(var r=[],n=e.subbands,i=0,o=n.length;i<o;i++)for(var s=n[i].codeblocks,c=0,l=s.length;c<l;c++){var u=s[c];u.precinctNumber===t&&r.push(u)}return{layerNumber:a,codeblocks:r}}function f(e){for(var t=e.SIZ,a=e.currentTile.index,r=e.tiles[a],n=r.codingStyleDefaultParameters.layersCount,i=t.Csiz,s=0,c=0;c<i;c++)s=Math.max(s,r.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,u=0,f=0,d=0;this.nextPacket=function(){for(;l<n;l++){for(;u<=s;u++){for(;f<i;f++){var e=r.components[f];if(!(u>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[u],a=t.precinctParameters.numprecincts;d<a;){var c=h(t,d,l);return d++,c}d=0}}f=0}u=0}throw new o(\"Out of packets\")}}function d(e){for(var t=e.SIZ,a=e.currentTile.index,r=e.tiles[a],n=r.codingStyleDefaultParameters.layersCount,i=t.Csiz,s=0,c=0;c<i;c++)s=Math.max(s,r.components[c].codingStyleParameters.decompositionLevelsCount);var l=0,u=0,f=0,d=0;this.nextPacket=function(){for(;l<=s;l++){for(;u<n;u++){for(;f<i;f++){var e=r.components[f];if(!(l>e.codingStyleParameters.decompositionLevelsCount)){for(var t=e.resolutions[l],a=t.precinctParameters.numprecincts;d<a;){var c=h(t,d,u);return d++,c}d=0}}f=0}u=0}throw new o(\"Out of packets\")}}function g(e){var t,a,r,n,i=e.SIZ,s=e.currentTile.index,c=e.tiles[s],l=c.codingStyleDefaultParameters.layersCount,u=i.Csiz,f=0;for(r=0;r<u;r++){var d=c.components[r];f=Math.max(f,d.codingStyleParameters.decompositionLevelsCount)}var g=new Int32Array(f+1);for(a=0;a<=f;++a){var p=0;for(r=0;r<u;++r){var m=c.components[r].resolutions;a<m.length&&(p=Math.max(p,m[a].precinctParameters.numprecincts))}g[a]=p}t=0,a=0,r=0,n=0,this.nextPacket=function(){for(;a<=f;a++){for(;n<g[a];n++){for(;r<u;r++){var e=c.components[r];if(!(a>e.codingStyleParameters.decompositionLevelsCount)){var i=e.resolutions[a],s=i.precinctParameters.numprecincts;if(!(n>=s)){for(;t<l;){var d=h(i,n,t);return t++,d}t=0}}}r=0}n=0}throw new o(\"Out of packets\")}}function p(e){var t=e.SIZ,a=e.currentTile.index,r=e.tiles[a],n=r.codingStyleDefaultParameters.layersCount,i=t.Csiz,s=b(r),c=s,l=0,u=0,f=0,d=0,g=0;this.nextPacket=function(){for(;g<c.maxNumHigh;g++){for(;d<c.maxNumWide;d++){for(;f<i;f++){for(var e=r.components[f],t=e.codingStyleParameters.decompositionLevelsCount;u<=t;u++){var a=e.resolutions[u],p=s.components[f].resolutions[u],m=v(d,g,p,c,a);if(null!==m){for(;l<n;){var b=h(a,m,l);return l++,b}l=0}}u=0}f=0}d=0}throw new o(\"Out of packets\")}}function m(e){var t=e.SIZ,a=e.currentTile.index,r=e.tiles[a],n=r.codingStyleDefaultParameters.layersCount,i=t.Csiz,s=b(r),c=0,l=0,u=0,f=0,d=0;this.nextPacket=function(){for(;u<i;++u){for(var e=r.components[u],t=s.components[u],a=e.codingStyleParameters.decompositionLevelsCount;d<t.maxNumHigh;d++){for(;f<t.maxNumWide;f++){for(;l<=a;l++){var g=e.resolutions[l],p=t.resolutions[l],m=v(f,d,p,t,g);if(null!==m){for(;c<n;){var b=h(g,m,c);return c++,b}c=0}}l=0}f=0}d=0}throw new o(\"Out of packets\")}}function v(e,t,a,r,n){var i=e*r.minWidth,o=t*r.minHeight;if(i%a.width!==0||o%a.height!==0)return null;var s=o/a.width*n.precinctParameters.numprecinctswide;return i/a.height+s}function b(e){for(var t=e.components.length,a=Number.MAX_VALUE,r=Number.MAX_VALUE,n=0,i=0,o=new Array(t),s=0;s<t;s++){for(var c=e.components[s],l=c.codingStyleParameters.decompositionLevelsCount,u=new Array(l+1),h=Number.MAX_VALUE,f=Number.MAX_VALUE,d=0,g=0,p=1,m=l;m>=0;--m){var v=c.resolutions[m],b=p*v.precinctParameters.precinctWidth,y=p*v.precinctParameters.precinctHeight;h=Math.min(h,b),f=Math.min(f,y),d=Math.max(d,v.precinctParameters.numprecinctswide),g=Math.max(g,v.precinctParameters.numprecinctshigh),u[m]={width:b,height:y},p<<=1}a=Math.min(a,h),r=Math.min(r,f),n=Math.max(n,d),i=Math.max(i,g),o[s]={resolutions:u,minWidth:h,minHeight:f,maxNumWide:d,maxNumHigh:g}}return{components:o,minWidth:a,minHeight:r,maxNumWide:n,maxNumHigh:i}}function y(e){for(var t=e.SIZ,a=e.currentTile.index,r=e.tiles[a],n=t.Csiz,i=0;i<n;i++){for(var s=r.components[i],h=s.codingStyleParameters.decompositionLevelsCount,v=[],b=[],y=0;y<=h;y++){var k,w=c(0,s,y),C={},S=1<<h-y;if(C.trx0=Math.ceil(s.tcx0/S),C.try0=Math.ceil(s.tcy0/S),C.trx1=Math.ceil(s.tcx1/S),C.try1=Math.ceil(s.tcy1/S),C.resLevel=y,l(0,C,w),v.push(C),0===y)(k={}).type=\"LL\",k.tbx0=Math.ceil(s.tcx0/S),k.tby0=Math.ceil(s.tcy0/S),k.tbx1=Math.ceil(s.tcx1/S),k.tby1=Math.ceil(s.tcy1/S),k.resolution=C,u(0,k,w),b.push(k),C.subbands=[k];else{var x=1<<h-y+1,A=[];(k={}).type=\"HL\",k.tbx0=Math.ceil(s.tcx0/x-.5),k.tby0=Math.ceil(s.tcy0/x),k.tbx1=Math.ceil(s.tcx1/x-.5),k.tby1=Math.ceil(s.tcy1/x),k.resolution=C,u(0,k,w),b.push(k),A.push(k),(k={}).type=\"LH\",k.tbx0=Math.ceil(s.tcx0/x),k.tby0=Math.ceil(s.tcy0/x-.5),k.tbx1=Math.ceil(s.tcx1/x),k.tby1=Math.ceil(s.tcy1/x-.5),k.resolution=C,u(0,k,w),b.push(k),A.push(k),(k={}).type=\"HH\",k.tbx0=Math.ceil(s.tcx0/x-.5),k.tby0=Math.ceil(s.tcy0/x-.5),k.tbx1=Math.ceil(s.tcx1/x-.5),k.tby1=Math.ceil(s.tcy1/x-.5),k.resolution=C,u(0,k,w),b.push(k),A.push(k),C.subbands=A}}s.resolutions=v,s.subbands=b}var I=r.codingStyleDefaultParameters.progressionOrder;switch(I){case 0:r.packetsIterator=new f(e);break;case 1:r.packetsIterator=new d(e);break;case 2:r.packetsIterator=new g(e);break;case 3:r.packetsIterator=new p(e);break;case 4:r.packetsIterator=new m(e);break;default:throw new o(\"Unsupported progression order \".concat(I))}}function k(e,t,a,r){var i,o=0,s=0,c=!1;function l(e){for(;s<e;){var r=t[a+o];o++,c?(i=i<<7|r,s+=7,c=!1):(i=i<<8|r,s+=8),255===r&&(c=!0)}return i>>>(s-=e)&(1<<e)-1}function u(e){return 255===t[a+o-1]&&t[a+o]===e?(h(1),!0):255===t[a+o]&&t[a+o+1]===e&&(h(2),!0)}function h(e){o+=e}function f(){s=0,c&&(o++,c=!1)}function d(){if(0===l(1))return 1;if(0===l(1))return 2;var e=l(2);return e<3?e+3:(e=l(5))<31?e+6:(e=l(7))+37}for(var g=e.currentTile.index,p=e.tiles[g],m=e.COD.sopMarkerUsed,v=e.COD.ephMarkerUsed,b=p.packetsIterator;o<r;){f(),m&&u(145)&&h(4);var y=b.nextPacket();if(l(1)){for(var k,w=y.layerNumber,C=[],S=0,I=y.codeblocks.length;S<I;S++){var F=(k=y.codeblocks[S]).precinct,T=k.cbx-F.cbxMin,O=k.cby-F.cbyMin,E=!1,P=!1;if(void 0!==k.included)E=!!l(1);else{var _,B;if(void 0!==(F=k.precinct).inclusionTree)_=F.inclusionTree;else{var M=F.cbxMax-F.cbxMin+1,D=F.cbyMax-F.cbyMin+1;_=new A(M,D,w),B=new x(M,D),F.inclusionTree=_,F.zeroBitPlanesTree=B}if(_.reset(T,O,w))for(;;){if(!l(1)){_.incrementValue(w);break}if(!_.nextLevel()){k.included=!0,E=P=!0;break}}}if(E){if(P){for((B=F.zeroBitPlanesTree).reset(T,O);;)if(l(1)){if(!B.nextLevel())break}else B.incrementValue();k.zeroBitPlanes=B.value}for(var R=d();l(1);)k.Lblock++;var N=(0,n.log2)(R),L=l((R<1<<N?N-1:N)+k.Lblock);C.push({codeblock:k,codingpasses:R,dataLength:L})}}for(f(),v&&u(146);C.length>0;){var U=C.shift();void 0===(k=U.codeblock).data&&(k.data=[]),k.data.push({data:t,start:a+o,end:a+o+U.dataLength,codingpasses:U.codingpasses}),o+=U.dataLength}}}return o}function w(e,t,a,r,n,o,s,c){for(var l=r.tbx0,u=r.tby0,h=r.tbx1-r.tbx0,f=r.codeblocks,d=\"H\"===r.type.charAt(0)?1:0,g=\"H\"===r.type.charAt(1)?t:0,p=0,m=f.length;p<m;++p){var v=f[p],b=v.tbx1_-v.tbx0_,y=v.tby1_-v.tby0_;if(0!==b&&0!==y&&void 0!==v.data){var k,w;k=new I(b,y,v.subbandType,v.zeroBitPlanes,o),w=2;var C,S,x,A=v.data,F=0,T=0;for(C=0,S=A.length;C<S;C++)F+=(x=A[C]).end-x.start,T+=x.codingpasses;var O=new Uint8Array(F),E=0;for(C=0,S=A.length;C<S;C++){var P=(x=A[C]).data.subarray(x.start,x.end);O.set(P,E),E+=P.length}var _=new i.ArithmeticDecoder(O,0,F);for(k.setDecoder(_),C=0;C<T;C++){switch(w){case 0:k.runSignificancePropagationPass();break;case 1:k.runMagnitudeRefinementPass();break;case 2:k.runCleanupPass(),c&&k.checkSegmentationSymbol()}w=(w+1)%3}var B,M,D,R=v.tbx0_-l+(v.tby0_-u)*h,N=k.coefficentsSign,L=k.coefficentsMagnitude,U=k.bitsDecoded,q=s?0:.5;E=0;var j=\"LL\"!==r.type;for(C=0;C<y;C++){var z=2*(R/h|0)*(t-h)+d+g;for(B=0;B<b;B++){if(0!==(M=L[E])){M=(M+q)*n,0!==N[E]&&(M=-M),D=U[E];var H=j?z+(R<<1):R;e[H]=s&&D>=o?M:M*(1<<o-D)}R++,E++}R+=h-b}}}}function C(t,a,r){for(var n=a.components[r],i=n.codingStyleParameters,o=n.quantizationParameters,s=i.decompositionLevelsCount,c=o.SPqcds,l=o.scalarExpounded,u=o.guardBits,h=i.segmentationSymbolUsed,f=t.components[r].precision,d=i.reversibleTransformation,g=d?new O:new T,p=[],m=0,v=0;v<=s;v++){for(var b=n.resolutions[v],y=b.trx1-b.trx0,k=b.try1-b.try0,C=new Float32Array(y*k),S=0,x=b.subbands.length;S<x;S++){var A,I;l?(A=c[m].mu,I=c[m].epsilon,m++):(A=c[0].mu,I=c[0].epsilon+(v>0?1-v:0));var F=b.subbands[S],E=e[F.type];w(C,y,0,F,d?1:Math.pow(2,f+E-I)*(1+A/2048),u+I-1,d,h)}p.push({width:y,height:k,items:C})}var P=g.calculate(p,n.tcx0,n.tcy0);return{left:n.tcx0,top:n.tcy0,width:P.width,height:P.height,items:P.items}}function S(e,t){for(var a=e.SIZ.Csiz,r=e.tiles[t],n=0;n<a;n++){var i=r.components[n],o=void 0!==e.currentTile.QCC[n]?e.currentTile.QCC[n]:e.currentTile.QCD;i.quantizationParameters=o;var s=void 0!==e.currentTile.COC[n]?e.currentTile.COC[n]:e.currentTile.COD;i.codingStyleParameters=s}r.codingStyleDefaultParameters=e.currentTile.COD}t.prototype={parse:function(e){if(65359!==(0,n.readUint16)(e,0))for(var t=0,a=e.length;t<a;){var i=8,s=(0,n.readUint32)(e,t),c=(0,n.readUint32)(e,t+4);if(t+=i,1===s&&(s=4294967296*(0,n.readUint32)(e,t)+(0,n.readUint32)(e,t+4),t+=8,i+=8),0===s&&(s=a-t+i),s<i)throw new o(\"Invalid box field size\");var l=s-i,u=!0;switch(c){case 1785737832:u=!1;break;case 1668246642:var h=e[t];if(1===h){var f=(0,n.readUint32)(e,t+3);switch(f){case 16:case 17:case 18:break;default:(0,r.warn)(\"Unknown colorspace \"+f)}}else 2===h&&(0,r.info)(\"ICC profile not supported\");break;case 1785737827:this.parseCodestream(e,t,t+l);break;case 1783636e3:218793738!==(0,n.readUint32)(e,t)&&(0,r.warn)(\"Invalid JP2 signature\");break;case 1783634458:case 1718909296:case 1920099697:case 1919251232:case 1768449138:break;default:var d=String.fromCharCode(c>>24&255,c>>16&255,c>>8&255,255&c);(0,r.warn)(\"Unsupported header type \"+c+\" (\"+d+\")\")}u&&(t+=l)}else this.parseCodestream(e,0,e.length)},parseImageProperties:function(e){for(var t=e.getByte();t>=0;){if(65361===(t<<8|(t=e.getByte()))){e.skip(4);var a=e.getInt32()>>>0,r=e.getInt32()>>>0,n=e.getInt32()>>>0,i=e.getInt32()>>>0;e.skip(16);var s=e.getUint16();return this.width=a-n,this.height=r-i,this.componentsCount=s,void(this.bitsPerComponent=8)}}throw new o(\"No size marker found in JPX stream\")},parseCodestream:function(e,t,i){var c={},l=!1;try{for(var u=t;u+1<i;){var h=(0,n.readUint16)(e,u);u+=2;var f,d,g,p,m,v,b=0;switch(h){case 65359:c.mainHeader=!0;break;case 65497:break;case 65361:b=(0,n.readUint16)(e,u);var w={};w.Xsiz=(0,n.readUint32)(e,u+4),w.Ysiz=(0,n.readUint32)(e,u+8),w.XOsiz=(0,n.readUint32)(e,u+12),w.YOsiz=(0,n.readUint32)(e,u+16),w.XTsiz=(0,n.readUint32)(e,u+20),w.YTsiz=(0,n.readUint32)(e,u+24),w.XTOsiz=(0,n.readUint32)(e,u+28),w.YTOsiz=(0,n.readUint32)(e,u+32);var x=(0,n.readUint16)(e,u+36);w.Csiz=x;var A=[];f=u+38;for(var I=0;I<x;I++){var F={precision:1+(127&e[f]),isSigned:!!(128&e[f]),XRsiz:e[f+1],YRsiz:e[f+2]};f+=3,a(F,w),A.push(F)}c.SIZ=w,c.components=A,s(c,A),c.QCC=[],c.COC=[];break;case 65372:b=(0,n.readUint16)(e,u);var T={};switch(f=u+2,31&(d=e[f++])){case 0:p=8,m=!0;break;case 1:p=16,m=!1;break;case 2:p=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+d)}for(T.noQuantization=8===p,T.scalarExpounded=m,T.guardBits=d>>5,g=[];f<b+u;){var O={};8===p?(O.epsilon=e[f++]>>3,O.mu=0):(O.epsilon=e[f]>>3,O.mu=(7&e[f])<<8|e[f+1],f+=2),g.push(O)}T.SPqcds=g,c.mainHeader?c.QCD=T:(c.currentTile.QCD=T,c.currentTile.QCC=[]);break;case 65373:b=(0,n.readUint16)(e,u);var E,P={};switch(f=u+2,c.SIZ.Csiz<257?E=e[f++]:(E=(0,n.readUint16)(e,f),f+=2),31&(d=e[f++])){case 0:p=8,m=!0;break;case 1:p=16,m=!1;break;case 2:p=16,m=!0;break;default:throw new Error(\"Invalid SQcd value \"+d)}for(P.noQuantization=8===p,P.scalarExpounded=m,P.guardBits=d>>5,g=[];f<b+u;)O={},8===p?(O.epsilon=e[f++]>>3,O.mu=0):(O.epsilon=e[f]>>3,O.mu=(7&e[f])<<8|e[f+1],f+=2),g.push(O);P.SPqcds=g,c.mainHeader?c.QCC[E]=P:c.currentTile.QCC[E]=P;break;case 65362:b=(0,n.readUint16)(e,u);var _={};f=u+2;var B=e[f++];_.entropyCoderWithCustomPrecincts=!!(1&B),_.sopMarkerUsed=!!(2&B),_.ephMarkerUsed=!!(4&B),_.progressionOrder=e[f++],_.layersCount=(0,n.readUint16)(e,f),f+=2,_.multipleComponentTransform=e[f++],_.decompositionLevelsCount=e[f++],_.xcb=2+(15&e[f++]),_.ycb=2+(15&e[f++]);var M=e[f++];if(_.selectiveArithmeticCodingBypass=!!(1&M),_.resetContextProbabilities=!!(2&M),_.terminationOnEachCodingPass=!!(4&M),_.verticallyStripe=!!(8&M),_.predictableTermination=!!(16&M),_.segmentationSymbolUsed=!!(32&M),_.reversibleTransformation=e[f++],_.entropyCoderWithCustomPrecincts){for(var D=[];f<b+u;){var R=e[f++];D.push({PPx:15&R,PPy:R>>4})}_.precinctsSizes=D}var N=[];if(_.selectiveArithmeticCodingBypass&&N.push(\"selectiveArithmeticCodingBypass\"),_.resetContextProbabilities&&N.push(\"resetContextProbabilities\"),_.terminationOnEachCodingPass&&N.push(\"terminationOnEachCodingPass\"),_.verticallyStripe&&N.push(\"verticallyStripe\"),_.predictableTermination&&N.push(\"predictableTermination\"),N.length>0)throw l=!0,new Error(\"Unsupported COD options (\"+N.join(\", \")+\")\");c.mainHeader?c.COD=_:(c.currentTile.COD=_,c.currentTile.COC=[]);break;case 65424:b=(0,n.readUint16)(e,u),(v={}).index=(0,n.readUint16)(e,u+2),v.length=(0,n.readUint32)(e,u+4),v.dataEnd=v.length+u-2,v.partIndex=e[u+8],v.partsCount=e[u+9],c.mainHeader=!1,0===v.partIndex&&(v.COD=c.COD,v.COC=c.COC.slice(0),v.QCD=c.QCD,v.QCC=c.QCC.slice(0)),c.currentTile=v;break;case 65427:0===(v=c.currentTile).partIndex&&(S(c,v.index),y(c)),k(c,e,u,b=v.dataEnd-u);break;case 65365:case 65367:case 65368:case 65380:b=(0,n.readUint16)(e,u);break;case 65363:throw new Error(\"Codestream code 0xFF53 (COC) is not implemented\");default:throw new Error(\"Unknown codestream code: \"+h.toString(16))}u+=b}}catch(L){if(l||this.failOnCorruptedImage)throw new o(L.message);(0,r.warn)(\"JPX: Trying to recover from: \"+L.message)}this.tiles=function(e){for(var t=e.SIZ,a=e.components,r=t.Csiz,n=[],i=0,o=e.tiles.length;i<o;i++){var s,c=e.tiles[i],l=[];for(s=0;s<r;s++)l[s]=C(e,c,s);var u,h,f,d,g,p,m,v=l[0],b=new Uint8ClampedArray(v.items.length*r),y={left:v.left,top:v.top,width:v.width,height:v.height,items:b},k=0;if(c.codingStyleDefaultParameters.multipleComponentTransform){var w=4===r,S=l[0].items,x=l[1].items,A=l[2].items,I=w?l[3].items:null;h=.5+(128<<(u=a[0].precision-8));var F=c.components[0],T=r-3;if(d=S.length,F.codingStyleParameters.reversibleTransformation)for(f=0;f<d;f++,k+=T){g=S[f]+h,p=x[f];var O=g-((m=A[f])+p>>2);b[k++]=O+m>>u,b[k++]=O>>u,b[k++]=O+p>>u}else for(f=0;f<d;f++,k+=T)g=S[f]+h,p=x[f],m=A[f],b[k++]=g+1.402*m>>u,b[k++]=g-.34413*p-.71414*m>>u,b[k++]=g+1.772*p>>u;if(w)for(f=0,k=3;f<d;f++,k+=4)b[k]=I[f]+h>>u}else for(s=0;s<r;s++){var E=l[s].items;for(h=.5+(128<<(u=a[s].precision-8)),k=s,f=0,d=E.length;f<d;f++)b[k]=E[f]+h>>u,k+=r}n.push(y)}return n}(c),this.width=c.SIZ.Xsiz-c.SIZ.XOsiz,this.height=c.SIZ.Ysiz-c.SIZ.YOsiz,this.componentsCount=c.SIZ.Csiz}};var x=function(){function e(e,t){var a=(0,n.log2)(Math.max(e,t))+1;this.levels=[];for(var r=0;r<a;r++){var i={width:e,height:t,items:[]};this.levels.push(i),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t){for(var a,r=0,n=0;r<this.levels.length;){var i=e+t*(a=this.levels[r]).width;if(void 0!==a.items[i]){n=a.items[i];break}a.index=i,e>>=1,t>>=1,r++}r--,(a=this.levels[r]).items[a.index]=n,this.currentLevel=r,delete this.value},incrementValue:function(){var e=this.levels[this.currentLevel];e.items[e.index]++},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],a=t.items[t.index];return--e<0?(this.value=a,!1):(this.currentLevel=e,(t=this.levels[e]).items[t.index]=a,!0)}},e}(),A=function(){function e(e,t,a){var r=(0,n.log2)(Math.max(e,t))+1;this.levels=[];for(var i=0;i<r;i++){for(var o=new Uint8Array(e*t),s=0,c=o.length;s<c;s++)o[s]=a;var l={width:e,height:t,items:o};this.levels.push(l),e=Math.ceil(e/2),t=Math.ceil(t/2)}}return e.prototype={reset:function(e,t,a){for(var r=0;r<this.levels.length;){var n=this.levels[r],i=e+t*n.width;n.index=i;var o=n.items[i];if(255===o)break;if(o>a)return this.currentLevel=r,this.propagateValues(),!1;e>>=1,t>>=1,r++}return this.currentLevel=r-1,!0},incrementValue:function(e){var t=this.levels[this.currentLevel];t.items[t.index]=e+1,this.propagateValues()},propagateValues:function(){for(var e=this.currentLevel,t=this.levels[e],a=t.items[t.index];--e>=0;)(t=this.levels[e]).items[t.index]=a},nextLevel:function(){var e=this.currentLevel,t=this.levels[e],a=t.items[t.index];return t.items[t.index]=255,!(--e<0)&&(this.currentLevel=e,(t=this.levels[e]).items[t.index]=a,!0)}},e}(),I=function(){var e=17,t=new Uint8Array([0,5,8,0,3,7,8,0,4,7,8,0,0,0,0,0,1,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8,0,0,0,0,0,2,6,8,0,3,7,8,0,4,7,8]),a=new Uint8Array([0,3,4,0,5,7,7,0,8,8,8,0,0,0,0,0,1,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8,0,0,0,0,0,2,3,4,0,6,7,7,0,8,8,8]),r=new Uint8Array([0,1,2,0,1,2,2,0,2,2,2,0,0,0,0,0,3,4,5,0,4,5,5,0,5,5,5,0,0,0,0,0,6,7,7,0,7,7,7,0,7,7,7,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8,0,0,0,0,0,8,8,8,0,8,8,8,0,8,8,8]);function n(e,n,i,o,s){var c;this.width=e,this.height=n,c=\"HH\"===i?r:\"HL\"===i?a:t,this.contextLabelTable=c;var l,u=e*n;this.neighborsSignificance=new Uint8Array(u),this.coefficentsSign=new Uint8Array(u),l=s>14?new Uint32Array(u):s>6?new Uint16Array(u):new Uint8Array(u),this.coefficentsMagnitude=l,this.processingFlags=new Uint8Array(u);var h=new Uint8Array(u);if(0!==o)for(var f=0;f<u;f++)h[f]=o;this.bitsDecoded=h,this.reset()}return n.prototype={setDecoder:function(e){this.decoder=e},reset:function(){this.contexts=new Int8Array(19),this.contexts[0]=8,this.contexts[17]=92,this.contexts[18]=6},setNeighborsSignificance:function(e,t,a){var r,n=this.neighborsSignificance,i=this.width,o=this.height,s=t>0,c=t+1<i;e>0&&(r=a-i,s&&(n[r-1]+=16),c&&(n[r+1]+=16),n[r]+=4),e+1<o&&(r=a+i,s&&(n[r-1]+=16),c&&(n[r+1]+=16),n[r]+=4),s&&(n[a-1]+=1),c&&(n[a+1]+=1),n[a]|=128},runSignificancePropagationPass:function(){for(var e=this.decoder,t=this.width,a=this.height,r=this.coefficentsMagnitude,n=this.coefficentsSign,i=this.neighborsSignificance,o=this.processingFlags,s=this.contexts,c=this.contextLabelTable,l=this.bitsDecoded,u=0;u<a;u+=4)for(var h=0;h<t;h++)for(var f=u*t+h,d=0;d<4;d++,f+=t){var g=u+d;if(g>=a)break;if(o[f]&=-2,!r[f]&&i[f]){var p=c[i[f]];if(e.readBit(s,p)){var m=this.decodeSignBit(g,h,f);n[f]=m,r[f]=1,this.setNeighborsSignificance(g,h,f),o[f]|=2}l[f]++,o[f]|=1}}},decodeSignBit:function(e,t,a){var r,n,i,o,s,c,l=this.width,u=this.height,h=this.coefficentsMagnitude,f=this.coefficentsSign;o=t>0&&0!==h[a-1],t+1<l&&0!==h[a+1]?(i=f[a+1],r=o?1-i-(n=f[a-1]):1-i-i):r=o?1-(n=f[a-1])-n:0;var d=3*r;return o=e>0&&0!==h[a-l],e+1<u&&0!==h[a+l]?(i=f[a+l],r=o?1-i-(n=f[a-l])+d:1-i-i+d):r=o?1-(n=f[a-l])-n+d:d,r>=0?(s=9+r,c=this.decoder.readBit(this.contexts,s)):(s=9-r,c=1^this.decoder.readBit(this.contexts,s)),c},runMagnitudeRefinementPass:function(){for(var e,t=this.decoder,a=this.width,r=this.height,n=this.coefficentsMagnitude,i=this.neighborsSignificance,o=this.contexts,s=this.bitsDecoded,c=this.processingFlags,l=a*r,u=4*a,h=0;h<l;h=e){e=Math.min(l,h+u);for(var f=0;f<a;f++)for(var d=h+f;d<e;d+=a)if(n[d]&&0===(1&c[d])){var g=16;if(0!==(2&c[d]))c[d]^=2,g=0===(127&i[d])?15:14;var p=t.readBit(o,g);n[d]=n[d]<<1|p,s[d]++,c[d]|=1}}},runCleanupPass:function(){for(var t,a=this.decoder,r=this.width,n=this.height,i=this.neighborsSignificance,o=this.coefficentsMagnitude,s=this.coefficentsSign,c=this.contexts,l=this.contextLabelTable,u=this.bitsDecoded,h=this.processingFlags,f=r,d=2*r,g=3*r,p=0;p<n;p=t){t=Math.min(p+4,n);for(var m=p*r,v=p+3<n,b=0;b<r;b++){var y,k=m+b,w=0,C=k,S=p;if(v&&0===h[k]&&0===h[k+f]&&0===h[k+d]&&0===h[k+g]&&0===i[k]&&0===i[k+f]&&0===i[k+d]&&0===i[k+g]){if(!a.readBit(c,18)){u[k]++,u[k+f]++,u[k+d]++,u[k+g]++;continue}0!==(w=a.readBit(c,e)<<1|a.readBit(c,e))&&(S=p+w,C+=w*r),y=this.decodeSignBit(S,b,C),s[C]=y,o[C]=1,this.setNeighborsSignificance(S,b,C),h[C]|=2,C=k;for(var x=p;x<=S;x++,C+=r)u[C]++;w++}for(S=p+w;S<t;S++,C+=r)if(!o[C]&&0===(1&h[C])){var A=l[i[C]];1===a.readBit(c,A)&&(y=this.decodeSignBit(S,b,C),s[C]=y,o[C]=1,this.setNeighborsSignificance(S,b,C),h[C]|=2),u[C]++}}}},checkSegmentationSymbol:function(){var t=this.decoder,a=this.contexts;if(10!==(t.readBit(a,e)<<3|t.readBit(a,e)<<2|t.readBit(a,e)<<1|t.readBit(a,e)))throw new o(\"Invalid segmentation symbol\")}},n}(),F=function(){function e(){}return e.prototype.calculate=function(e,t,a){for(var r=e[0],n=1,i=e.length;n<i;n++)r=this.iterate(r,e[n],t,a);return r},e.prototype.extend=function(e,t,a){var r=t-1,n=t+1,i=t+a-2,o=t+a;e[r--]=e[n++],e[o++]=e[i--],e[r--]=e[n++],e[o++]=e[i--],e[r--]=e[n++],e[o++]=e[i--],e[r]=e[n],e[o]=e[i]},e.prototype.iterate=function(e,t,a,r){var n,i,o,s,c,l,u=e.width,h=e.height,f=e.items,d=t.width,g=t.height,p=t.items;for(o=0,n=0;n<h;n++)for(s=2*n*d,i=0;i<u;i++,o++,s+=2)p[s]=f[o];f=e.items=null;var m=new Float32Array(d+8);if(1===d){if(0!==(1&a))for(l=0,o=0;l<g;l++,o+=d)p[o]*=.5}else for(l=0,o=0;l<g;l++,o+=d)m.set(p.subarray(o,o+d),4),this.extend(m,4,d),this.filter(m,4,d),p.set(m.subarray(4,4+d),o);var v=16,b=[];for(n=0;n<v;n++)b.push(new Float32Array(g+8));var y,k=0;if(e=4+g,1===g){if(0!==(1&r))for(c=0;c<d;c++)p[c]*=.5}else for(c=0;c<d;c++){if(0===k){for(v=Math.min(d-c,v),o=c,s=4;s<e;o+=d,s++)for(y=0;y<v;y++)b[y][s]=p[o+y];k=v}var w=b[--k];if(this.extend(w,4,g),this.filter(w,4,g),0===k)for(o=c-v+1,s=4;s<e;o+=d,s++)for(y=0;y<v;y++)p[o+y]=b[y][s]}return{width:d,height:g,items:p}},e}(),T=function(){function e(){F.call(this)}return e.prototype=Object.create(F.prototype),e.prototype.filter=function(e,t,a){var r,n,i,o,s=a>>1,c=-1.586134342059924,l=-.052980118572961,u=.882911075530934,h=.443506852043971,f=1.230174104914001;for(r=(t|=0)-3,n=s+4;n--;r+=2)e[r]*=.8128930661159609;for(i=h*e[(r=t-2)-1],n=s+3;n--&&(o=h*e[r+1],e[r]=f*e[r]-i-o,n--);r+=2)i=h*e[(r+=2)+1],e[r]=f*e[r]-i-o;for(i=u*e[(r=t-1)-1],n=s+2;n--&&(o=u*e[r+1],e[r]-=i+o,n--);r+=2)i=u*e[(r+=2)+1],e[r]-=i+o;for(i=l*e[(r=t)-1],n=s+1;n--&&(o=l*e[r+1],e[r]-=i+o,n--);r+=2)i=l*e[(r+=2)+1],e[r]-=i+o;if(0!==s)for(i=c*e[(r=t+1)-1],n=s;n--&&(o=c*e[r+1],e[r]-=i+o,n--);r+=2)i=c*e[(r+=2)+1],e[r]-=i+o},e}(),O=function(){function e(){F.call(this)}return e.prototype=Object.create(F.prototype),e.prototype.filter=function(e,t,a){var r,n,i=a>>1;for(r=t|=0,n=i+1;n--;r+=2)e[r]-=e[r-1]+e[r+1]+2>>2;for(r=t+1,n=i;n--;r+=2)e[r]+=e[r-1]+e[r+1]>>1},e}();return t}();t.JpxImage=s},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.calculateSHA512=t.calculateSHA384=t.calculateSHA256=t.calculateMD5=t.PDF20=t.PDF17=t.CipherTransformFactory=t.ARCFourCipher=t.AES256Cipher=t.AES128Cipher=void 0;var r=a(2),n=a(5),i=a(12),o=function(){function e(e){this.a=0,this.b=0;var t,a,r=new Uint8Array(256),n=0,i=e.length;for(t=0;t<256;++t)r[t]=t;for(t=0;t<256;++t)n=n+(a=r[t])+e[t%i]&255,r[t]=r[n],r[n]=a;this.s=r}return e.prototype={encryptBlock:function(e){var t,a,r,n=e.length,i=this.a,o=this.b,s=this.s,c=new Uint8Array(n);for(t=0;t<n;++t)r=s[o=o+(a=s[i=i+1&255])&255],s[i]=r,s[o]=a,c[t]=e[t]^s[a+r&255];return this.a=i,this.b=o,c}},e.prototype.decryptBlock=e.prototype.encryptBlock,e.prototype.encrypt=e.prototype.encryptBlock,e}();t.ARCFourCipher=o;var s=function(){var e=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),t=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);return function(a,r,n){var i,o,s,c=1732584193,l=-271733879,u=-1732584194,h=271733878,f=n+72&-64,d=new Uint8Array(f);for(i=0;i<n;++i)d[i]=a[r++];for(d[i++]=128,s=f-8;i<s;)d[i++]=0;d[i++]=n<<3&255,d[i++]=n>>5&255,d[i++]=n>>13&255,d[i++]=n>>21&255,d[i++]=n>>>29&255,d[i++]=0,d[i++]=0,d[i++]=0;var g=new Int32Array(16);for(i=0;i<f;){for(o=0;o<16;++o,i+=4)g[o]=d[i]|d[i+1]<<8|d[i+2]<<16|d[i+3]<<24;var p,m,v=c,b=l,y=u,k=h;for(o=0;o<64;++o){o<16?(p=b&y|~b&k,m=o):o<32?(p=k&b|~k&y,m=5*o+1&15):o<48?(p=b^y^k,m=3*o+5&15):(p=y^(b|~k),m=7*o&15);var w=k,C=v+p+t[o]+g[m]|0,S=e[o];k=y,y=b,b=b+(C<<S|C>>>32-S)|0,v=w}c=c+v|0,l=l+b|0,u=u+y|0,h=h+k|0}return new Uint8Array([255&c,c>>8&255,c>>16&255,c>>>24&255,255&l,l>>8&255,l>>16&255,l>>>24&255,255&u,u>>8&255,u>>16&255,u>>>24&255,255&h,h>>8&255,h>>16&255,h>>>24&255])}}();t.calculateMD5=s;var c=function(){function e(e,t){this.high=0|e,this.low=0|t}return e.prototype={and:function(e){this.high&=e.high,this.low&=e.low},xor:function(e){this.high^=e.high,this.low^=e.low},or:function(e){this.high|=e.high,this.low|=e.low},shiftRight:function(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)},shiftLeft:function(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low=this.low<<e)},rotateRight:function(e){var t,a;32&e?(a=this.low,t=this.high):(t=this.low,a=this.high),e&=31,this.low=t>>>e|a<<32-e,this.high=a>>>e|t<<32-e},not:function(){this.high=~this.high,this.low=~this.low},add:function(e){var t=(this.low>>>0)+(e.low>>>0),a=(this.high>>>0)+(e.high>>>0);t>4294967295&&(a+=1),this.low=0|t,this.high=0|a},copyTo:function(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low},assign:function(e){this.high=e.high,this.low=e.low}},e}(),l=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,a){return e&t^~e&a}function a(e,t,a){return e&t^e&a^t&a}function r(t){return e(t,2)^e(t,13)^e(t,22)}function n(t){return e(t,6)^e(t,11)^e(t,25)}function i(t){return e(t,7)^e(t,18)^t>>>3}var o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(s,c,l){var u,h,f,d=1779033703,g=3144134277,p=1013904242,m=2773480762,v=1359893119,b=2600822924,y=528734635,k=1541459225,w=64*Math.ceil((l+9)/64),C=new Uint8Array(w);for(u=0;u<l;++u)C[u]=s[c++];for(C[u++]=128,f=w-8;u<f;)C[u++]=0;C[u++]=0,C[u++]=0,C[u++]=0,C[u++]=l>>>29&255,C[u++]=l>>21&255,C[u++]=l>>13&255,C[u++]=l>>5&255,C[u++]=l<<3&255;var S,x=new Uint32Array(64);for(u=0;u<w;){for(h=0;h<16;++h)x[h]=C[u]<<24|C[u+1]<<16|C[u+2]<<8|C[u+3],u+=4;for(h=16;h<64;++h)x[h]=0|(e(S=x[h-2],17)^e(S,19)^S>>>10)+x[h-7]+i(x[h-15])+x[h-16];var A,I,F=d,T=g,O=p,E=m,P=v,_=b,B=y,M=k;for(h=0;h<64;++h)A=M+n(P)+t(P,_,B)+o[h]+x[h],I=r(F)+a(F,T,O),M=B,B=_,_=P,P=E+A|0,E=O,O=T,T=F,F=A+I|0;d=d+F|0,g=g+T|0,p=p+O|0,m=m+E|0,v=v+P|0,b=b+_|0,y=y+B|0,k=k+M|0}return new Uint8Array([d>>24&255,d>>16&255,d>>8&255,255&d,g>>24&255,g>>16&255,g>>8&255,255&g,p>>24&255,p>>16&255,p>>8&255,255&p,m>>24&255,m>>16&255,m>>8&255,255&m,v>>24&255,v>>16&255,v>>8&255,255&v,b>>24&255,b>>16&255,b>>8&255,255&b,y>>24&255,y>>16&255,y>>8&255,255&y,k>>24&255,k>>16&255,k>>8&255,255&k])}}();t.calculateSHA256=l;var u=function(){function e(e,t,a,r,n){e.assign(t),e.and(a),n.assign(t),n.not(),n.and(r),e.xor(n)}function t(e,t,a,r,n){e.assign(t),e.and(a),n.assign(t),n.and(r),e.xor(n),n.assign(a),n.and(r),e.xor(n)}function a(e,t,a){e.assign(t),e.rotateRight(28),a.assign(t),a.rotateRight(34),e.xor(a),a.assign(t),a.rotateRight(39),e.xor(a)}function r(e,t,a){e.assign(t),e.rotateRight(14),a.assign(t),a.rotateRight(18),e.xor(a),a.assign(t),a.rotateRight(41),e.xor(a)}function n(e,t,a){e.assign(t),e.rotateRight(1),a.assign(t),a.rotateRight(8),e.xor(a),a.assign(t),a.shiftRight(7),e.xor(a)}function i(e,t,a){e.assign(t),e.rotateRight(19),a.assign(t),a.rotateRight(61),e.xor(a),a.assign(t),a.shiftRight(6),e.xor(a)}var o=[new c(1116352408,3609767458),new c(1899447441,602891725),new c(3049323471,3964484399),new c(3921009573,2173295548),new c(961987163,4081628472),new c(1508970993,3053834265),new c(2453635748,2937671579),new c(2870763221,3664609560),new c(3624381080,2734883394),new c(310598401,1164996542),new c(607225278,1323610764),new c(1426881987,3590304994),new c(1925078388,4068182383),new c(2162078206,991336113),new c(2614888103,633803317),new c(3248222580,3479774868),new c(3835390401,2666613458),new c(4022224774,944711139),new c(264347078,2341262773),new c(604807628,2007800933),new c(770255983,1495990901),new c(1249150122,1856431235),new c(1555081692,3175218132),new c(1996064986,2198950837),new c(2554220882,3999719339),new c(2821834349,766784016),new c(2952996808,2566594879),new c(3210313671,3203337956),new c(3336571891,1034457026),new c(3584528711,2466948901),new c(113926993,3758326383),new c(338241895,168717936),new c(666307205,1188179964),new c(773529912,1546045734),new c(1294757372,1522805485),new c(1396182291,2643833823),new c(1695183700,2343527390),new c(1986661051,1014477480),new c(2177026350,1206759142),new c(2456956037,344077627),new c(2730485921,1290863460),new c(2820302411,3158454273),new c(3259730800,3505952657),new c(3345764771,106217008),new c(3516065817,3606008344),new c(3600352804,1432725776),new c(4094571909,1467031594),new c(275423344,851169720),new c(430227734,3100823752),new c(506948616,1363258195),new c(659060556,3750685593),new c(883997877,3785050280),new c(958139571,3318307427),new c(1322822218,3812723403),new c(1537002063,2003034995),new c(1747873779,3602036899),new c(1955562222,1575990012),new c(2024104815,1125592928),new c(2227730452,2716904306),new c(2361852424,442776044),new c(2428436474,593698344),new c(2756734187,3733110249),new c(3204031479,2999351573),new c(3329325298,3815920427),new c(3391569614,3928383900),new c(3515267271,566280711),new c(3940187606,3454069534),new c(4118630271,4000239992),new c(116418474,1914138554),new c(174292421,2731055270),new c(289380356,3203993006),new c(460393269,320620315),new c(685471733,587496836),new c(852142971,1086792851),new c(1017036298,365543100),new c(1126000580,2618297676),new c(1288033470,3409855158),new c(1501505948,4234509866),new c(1607167915,987167468),new c(1816402316,1246189591)];return function(s,l,u,h){var f,d,g,p,m,v,b,y;(h=!!h)?(f=new c(3418070365,3238371032),d=new c(1654270250,914150663),g=new c(2438529370,812702999),p=new c(355462360,4144912697),m=new c(1731405415,4290775857),v=new c(2394180231,1750603025),b=new c(3675008525,1694076839),y=new c(1203062813,3204075428)):(f=new c(1779033703,4089235720),d=new c(3144134277,2227873595),g=new c(1013904242,4271175723),p=new c(2773480762,1595750129),m=new c(1359893119,2917565137),v=new c(2600822924,725511199),b=new c(528734635,4215389547),y=new c(1541459225,327033209));var k,w,C,S=128*Math.ceil((u+17)/128),x=new Uint8Array(S);for(k=0;k<u;++k)x[k]=s[l++];for(x[k++]=128,C=S-16;k<C;)x[k++]=0;x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=0,x[k++]=u>>>29&255,x[k++]=u>>21&255,x[k++]=u>>13&255,x[k++]=u>>5&255,x[k++]=u<<3&255;var A=new Array(80);for(k=0;k<80;k++)A[k]=new c(0,0);var I,F,T=new c(0,0),O=new c(0,0),E=new c(0,0),P=new c(0,0),_=new c(0,0),B=new c(0,0),M=new c(0,0),D=new c(0,0),R=new c(0,0),N=new c(0,0),L=new c(0,0),U=new c(0,0);for(k=0;k<S;){for(w=0;w<16;++w)A[w].high=x[k]<<24|x[k+1]<<16|x[k+2]<<8|x[k+3],A[w].low=x[k+4]<<24|x[k+5]<<16|x[k+6]<<8|x[k+7],k+=8;for(w=16;w<80;++w)i(I=A[w],A[w-2],U),I.add(A[w-7]),n(L,A[w-15],U),I.add(L),I.add(A[w-16]);for(T.assign(f),O.assign(d),E.assign(g),P.assign(p),_.assign(m),B.assign(v),M.assign(b),D.assign(y),w=0;w<80;++w)R.assign(D),r(L,_,U),R.add(L),e(L,_,B,M,U),R.add(L),R.add(o[w]),R.add(A[w]),a(N,T,U),t(L,T,O,E,U),N.add(L),I=D,D=M,M=B,B=_,P.add(R),_=P,P=E,E=O,O=T,I.assign(R),I.add(N),T=I;f.add(T),d.add(O),g.add(E),p.add(P),m.add(_),v.add(B),b.add(M),y.add(D)}return h?(F=new Uint8Array(48),f.copyTo(F,0),d.copyTo(F,8),g.copyTo(F,16),p.copyTo(F,24),m.copyTo(F,32),v.copyTo(F,40)):(F=new Uint8Array(64),f.copyTo(F,0),d.copyTo(F,8),g.copyTo(F,16),p.copyTo(F,24),m.copyTo(F,32),v.copyTo(F,40),b.copyTo(F,48),y.copyTo(F,56)),F}}();t.calculateSHA512=u;var h=function(e,t,a){return u(e,t,a,!0)};t.calculateSHA384=h;var f=function(){function e(){}return e.prototype={decryptBlock:function(e){return e},encrypt:function(e){return e}},e}(),d=function(){function e(){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize AESBaseCipher.\"),this._s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),this._inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),this._mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]),this._mixCol=new Uint8Array(256);for(var t=0;t<256;t++)this._mixCol[t]=t<128?t<<1:t<<1^27;this.buffer=new Uint8Array(16),this.bufferPosition=0}return _createClass(e,[{key:\"_expandKey\",value:function(e){(0,r.unreachable)(\"Cannot call `_expandKey` on the base class\")}},{key:\"_decrypt\",value:function(e,t){var a,r,n,i=new Uint8Array(16);i.set(e);for(var o=0,s=this._keySize;o<16;++o,++s)i[o]^=t[s];for(var c=this._cyclesOfRepetition-1;c>=1;--c){a=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=a,a=i[14],r=i[10],i[14]=i[6],i[10]=i[2],i[6]=a,i[2]=r,a=i[15],r=i[11],n=i[7],i[15]=i[3],i[11]=a,i[7]=r,i[3]=n;for(var l=0;l<16;++l)i[l]=this._inv_s[i[l]];for(var u=0,h=16*c;u<16;++u,++h)i[u]^=t[h];for(var f=0;f<16;f+=4){var d=this._mix[i[f]],g=this._mix[i[f+1]],p=this._mix[i[f+2]],m=this._mix[i[f+3]];a=d^g>>>8^g<<24^p>>>16^p<<16^m>>>24^m<<8,i[f]=a>>>24&255,i[f+1]=a>>16&255,i[f+2]=a>>8&255,i[f+3]=255&a}}a=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=a,a=i[14],r=i[10],i[14]=i[6],i[10]=i[2],i[6]=a,i[2]=r,a=i[15],r=i[11],n=i[7],i[15]=i[3],i[11]=a,i[7]=r,i[3]=n;for(var v=0;v<16;++v)i[v]=this._inv_s[i[v]],i[v]^=t[v];return i}},{key:\"_encrypt\",value:function(e,t){var a,r,n,i=this._s,o=new Uint8Array(16);o.set(e);for(var s=0;s<16;++s)o[s]^=t[s];for(var c=1;c<this._cyclesOfRepetition;c++){for(var l=0;l<16;++l)o[l]=i[o[l]];n=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=n,n=o[2],r=o[6],o[2]=o[10],o[6]=o[14],o[10]=n,o[14]=r,n=o[3],r=o[7],a=o[11],o[3]=o[15],o[7]=n,o[11]=r,o[15]=a;for(var u=0;u<16;u+=4){var h=o[u+0],f=o[u+1],d=o[u+2],g=o[u+3];a=h^f^d^g,o[u+0]^=a^this._mixCol[h^f],o[u+1]^=a^this._mixCol[f^d],o[u+2]^=a^this._mixCol[d^g],o[u+3]^=a^this._mixCol[g^h]}for(var p=0,m=16*c;p<16;++p,++m)o[p]^=t[m]}for(var v=0;v<16;++v)o[v]=i[o[v]];n=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=n,n=o[2],r=o[6],o[2]=o[10],o[6]=o[14],o[10]=n,o[14]=r,n=o[3],r=o[7],a=o[11],o[3]=o[15],o[7]=n,o[11]=r,o[15]=a;for(var b=0,y=this._keySize;b<16;++b,++y)o[b]^=t[y];return o}},{key:\"_decryptBlock2\",value:function(e,t){for(var a=e.length,r=this.buffer,n=this.bufferPosition,i=[],o=this.iv,s=0;s<a;++s)if(r[n]=e[s],!(++n<16)){for(var c=this._decrypt(r,this._key),l=0;l<16;++l)c[l]^=o[l];o=r,i.push(c),r=new Uint8Array(16),n=0}if(this.buffer=r,this.bufferLength=n,this.iv=o,0===i.length)return new Uint8Array(0);var u=16*i.length;if(t){var h=i[i.length-1],f=h[15];if(f<=16){for(var d=15,g=16-f;d>=g;--d)if(h[d]!==f){f=0;break}u-=f,i[i.length-1]=h.subarray(0,16-f)}}for(var p=new Uint8Array(u),m=0,v=0,b=i.length;m<b;++m,v+=16)p.set(i[m],v);return p}},{key:\"decryptBlock\",value:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=e.length,n=this.buffer,i=this.bufferPosition;if(a)this.iv=a;else{for(var o=0;i<16&&o<r;++o,++i)n[i]=e[o];if(i<16)return this.bufferLength=i,new Uint8Array(0);this.iv=n,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=this._decryptBlock2,this.decryptBlock(e,t)}},{key:\"encrypt\",value:function(e,t){var a=e.length,r=this.buffer,n=this.bufferPosition,i=[];t||(t=new Uint8Array(16));for(var o=0;o<a;++o)if(r[n]=e[o],!(++n<16)){for(var s=0;s<16;++s)r[s]^=t[s];var c=this._encrypt(r,this._key);t=c,i.push(c),r=new Uint8Array(16),n=0}if(this.buffer=r,this.bufferLength=n,this.iv=t,0===i.length)return new Uint8Array(0);for(var l=16*i.length,u=new Uint8Array(l),h=0,f=0,d=i.length;h<d;++h,f+=16)u.set(i[h],f);return u}}]),e}(),g=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var r;return _classCallCheck(this,a),(r=t.call(this))._cyclesOfRepetition=10,r._keySize=160,r._rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),r._key=r._expandKey(e),r}return _createClass(a,[{key:\"_expandKey\",value:function(e){var t=this._s,a=this._rcon,r=new Uint8Array(176);r.set(e);for(var n=16,i=1;n<176;++i){var o=r[n-3],s=r[n-2],c=r[n-1],l=r[n-4];o=t[o],s=t[s],c=t[c],l=t[l],o^=a[i];for(var u=0;u<4;++u)r[n]=o^=r[n-16],r[++n]=s^=r[n-16],r[++n]=c^=r[n-16],r[++n]=l^=r[n-16],n++}return r}}]),a}(d);t.AES128Cipher=g;var p=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var r;return _classCallCheck(this,a),(r=t.call(this))._cyclesOfRepetition=14,r._keySize=224,r._key=r._expandKey(e),r}return _createClass(a,[{key:\"_expandKey\",value:function(e){var t=this._s,a=new Uint8Array(240);a.set(e);for(var r,n,i,o,s=1,c=32,l=1;c<240;++l){c%32===16?(r=t[r],n=t[n],i=t[i],o=t[o]):c%32===0&&(r=a[c-3],n=a[c-2],i=a[c-1],o=a[c-4],r=t[r],n=t[n],i=t[i],o=t[o],r^=s,(s<<=1)>=256&&(s=255&(27^s)));for(var u=0;u<4;++u)a[c]=r^=a[c-32],a[++c]=n^=a[c-32],a[++c]=i^=a[c-32],a[++c]=o^=a[c-32],c++}return a}}]),a}(d);t.AES256Cipher=p;var m=function(){function e(e,t){if(e.length!==t.length)return!1;for(var a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function t(){}return t.prototype={checkOwnerPassword:function(t,a,r,n){var i=new Uint8Array(t.length+56);return i.set(t,0),i.set(a,t.length),i.set(r,t.length+a.length),e(l(i,0,i.length),n)},checkUserPassword:function(t,a,r){var n=new Uint8Array(t.length+8);return n.set(t,0),n.set(a,t.length),e(l(n,0,n.length),r)},getOwnerKey:function(e,t,a,r){var n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(a,e.length+t.length);var i=l(n,0,n.length);return new p(i).decryptBlock(r,!1,new Uint8Array(16))},getUserKey:function(e,t,a){var r=new Uint8Array(e.length+8);r.set(e,0),r.set(t,e.length);var n=l(r,0,r.length);return new p(n).decryptBlock(a,!1,new Uint8Array(16))}},t}();t.PDF17=m;var v=function(){function e(e,t){var a=new Uint8Array(e.length+t.length);return a.set(e,0),a.set(t,e.length),a}function t(t,a,r){for(var n=l(a,0,a.length).subarray(0,32),i=[0],o=0;o<64||i[i.length-1]>o-32;){var s=t.length+n.length+r.length,c=new Uint8Array(64*s),f=e(t,n);f=e(f,r);for(var d=0,p=0;d<64;d++,p+=s)c.set(f,p);i=new g(n.subarray(0,16)).encrypt(c,n.subarray(16,32));for(var m=0,v=0;v<16;v++)m*=1,m%=3,m+=(i[v]>>>0)%3,m%=3;0===m?n=l(i,0,i.length):1===m?n=h(i,0,i.length):2===m&&(n=u(i,0,i.length)),o++}return n.subarray(0,32)}function a(){}function r(e,t){if(e.length!==t.length)return!1;for(var a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}return a.prototype={hash:function(e,a,r){return t(e,a,r)},checkOwnerPassword:function(e,a,n,i){var o=new Uint8Array(e.length+56);return o.set(e,0),o.set(a,e.length),o.set(n,e.length+a.length),r(t(e,o,n),i)},checkUserPassword:function(e,a,n){var i=new Uint8Array(e.length+8);return i.set(e,0),i.set(a,e.length),r(t(e,i,[]),n)},getOwnerKey:function(e,a,r,n){var i=new Uint8Array(e.length+56);i.set(e,0),i.set(a,e.length),i.set(r,e.length+a.length);var o=t(e,i,r);return new p(o).decryptBlock(n,!1,new Uint8Array(16))},getUserKey:function(e,a,r){var n=new Uint8Array(e.length+8);n.set(e,0),n.set(a,e.length);var i=t(e,n,[]);return new p(i).decryptBlock(r,!1,new Uint8Array(16))}},a}();t.PDF20=v;var b=function(){function e(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}return e.prototype={createStream:function(e,t){var a=new this.StreamCipherConstructor;return new i.DecryptStream(e,t,(function(e,t){return a.decryptBlock(e,t)}))},decryptString:function(e){var t=new this.StringCipherConstructor,a=(0,r.stringToBytes)(e);return a=t.decryptBlock(a,!0),(0,r.bytesToString)(a)},encryptString:function(e){var t=new this.StringCipherConstructor;if(t instanceof d){var a=e.length,n=16-a%16;16!==n&&(e=e.padEnd(16*Math.ceil(a/16),String.fromCharCode(n)));var i=new Uint8Array(16);if(\"undefined\"!==typeof crypto)crypto.getRandomValues(i);else for(var o=0;o<16;o++)i[o]=Math.floor(256*Math.random());var s=(0,r.stringToBytes)(e);s=t.encrypt(s,i);var c=new Uint8Array(16+s.length);return c.set(i),c.set(s,16),(0,r.bytesToString)(c)}var l=(0,r.stringToBytes)(e);return l=t.encrypt(l),(0,r.bytesToString)(l)}},e}(),y=function(){var e=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]);function t(t,a,r,n,i,c,l,u){var h,f,d=40+r.length+t.length,g=new Uint8Array(d),p=0;if(a)for(f=Math.min(32,a.length);p<f;++p)g[p]=a[p];for(h=0;p<32;)g[p++]=e[h++];for(h=0,f=r.length;h<f;++h)g[p++]=r[h];for(g[p++]=255&i,g[p++]=i>>8&255,g[p++]=i>>16&255,g[p++]=i>>>24&255,h=0,f=t.length;h<f;++h)g[p++]=t[h];c>=4&&!u&&(g[p++]=255,g[p++]=255,g[p++]=255,g[p++]=255);var m=s(g,0,p),v=l>>3;if(c>=3)for(h=0;h<50;++h)m=s(m,0,v);var b,y=m.subarray(0,v);if(c>=3){for(p=0;p<32;++p)g[p]=e[p];for(h=0,f=t.length;h<f;++h)g[p++]=t[h];b=new o(y).encryptBlock(s(g,0,p)),f=y.length;var k,w=new Uint8Array(f);for(h=1;h<=19;++h){for(k=0;k<f;++k)w[k]=y[k]^h;b=new o(w).encryptBlock(b)}for(h=0,f=b.length;h<f;++h)if(n[h]!==b[h])return null}else for(h=0,f=(b=new o(y).encryptBlock(e)).length;h<f;++h)if(n[h]!==b[h])return null;return y}var a=n.Name.get(\"Identity\");function i(i,c,l){var u=i.get(\"Filter\");if(!(0,n.isName)(u,\"Standard\"))throw new r.FormatError(\"unknown encryption method\");this.dict=i;var h=i.get(\"V\");if(!Number.isInteger(h)||1!==h&&2!==h&&4!==h&&5!==h)throw new r.FormatError(\"unsupported encryption algorithm\");this.algorithm=h;var f=i.get(\"Length\");if(!f)if(h<=3)f=40;else{var d=i.get(\"CF\"),g=i.get(\"StmF\");if((0,n.isDict)(d)&&(0,n.isName)(g)){d.suppressEncryption=!0;var p=d.get(g.name);(f=p&&p.get(\"Length\")||128)<40&&(f<<=3)}}if(!Number.isInteger(f)||f<40||f%8!==0)throw new r.FormatError(\"invalid key length\");var b=(0,r.stringToBytes)(i.get(\"O\")).subarray(0,32),y=(0,r.stringToBytes)(i.get(\"U\")).subarray(0,32),k=i.get(\"P\"),w=i.get(\"R\"),C=(4===h||5===h)&&!1!==i.get(\"EncryptMetadata\");this.encryptMetadata=C;var S,x,A=(0,r.stringToBytes)(c);if(l){if(6===w)try{l=(0,r.utf8StringToString)(l)}catch(M){(0,r.warn)(\"CipherTransformFactory: Unable to convert UTF8 encoded password.\")}S=(0,r.stringToBytes)(l)}if(5!==h)x=t(A,S,b,y,k,w,f,C);else{var I=(0,r.stringToBytes)(i.get(\"O\")).subarray(32,40),F=(0,r.stringToBytes)(i.get(\"O\")).subarray(40,48),T=(0,r.stringToBytes)(i.get(\"U\")).subarray(0,48),O=(0,r.stringToBytes)(i.get(\"U\")).subarray(32,40),E=(0,r.stringToBytes)(i.get(\"U\")).subarray(40,48),P=(0,r.stringToBytes)(i.get(\"OE\")),_=(0,r.stringToBytes)(i.get(\"UE\"));(0,r.stringToBytes)(i.get(\"Perms\"));x=function(e,t,a,r,n,i,o,s,c,l,u,h){if(t){var f=Math.min(127,t.length);t=t.subarray(0,f)}else t=[];var d;return(d=6===e?new v:new m).checkUserPassword(t,s,o)?d.getUserKey(t,c,u):t.length&&d.checkOwnerPassword(t,r,i,a)?d.getOwnerKey(t,n,i,l):null}(w,S,b,I,F,T,y,O,E,P,_)}if(!x&&!l)throw new r.PasswordException(\"No password given\",r.PasswordResponses.NEED_PASSWORD);if(!x&&l&&(x=t(A,function(t,a,r,n){var i,c,l=new Uint8Array(32),u=0;for(c=Math.min(32,t.length);u<c;++u)l[u]=t[u];for(i=0;u<32;)l[u++]=e[i++];var h,f=s(l,0,u),d=n>>3;if(r>=3)for(i=0;i<50;++i)f=s(f,0,f.length);if(r>=3){h=a;var g,p=new Uint8Array(d);for(i=19;i>=0;i--){for(g=0;g<d;++g)p[g]=f[g]^i;h=new o(p).encryptBlock(h)}}else h=new o(f.subarray(0,d)).encryptBlock(a);return h}(S,b,w,f),b,y,k,w,f,C)),!x)throw new r.PasswordException(\"Incorrect Password\",r.PasswordResponses.INCORRECT_PASSWORD);if(this.encryptionKey=x,h>=4){var B=i.get(\"CF\");(0,n.isDict)(B)&&(B.suppressEncryption=!0),this.cf=B,this.stmf=i.get(\"StmF\")||a,this.strf=i.get(\"StrF\")||a,this.eff=i.get(\"EFF\")||this.stmf}}function c(e,t,a,r){var n,i,o=new Uint8Array(a.length+9);for(n=0,i=a.length;n<i;++n)o[n]=a[n];return o[n++]=255&e,o[n++]=e>>8&255,o[n++]=e>>16&255,o[n++]=255&t,o[n++]=t>>8&255,r&&(o[n++]=115,o[n++]=65,o[n++]=108,o[n++]=84),s(o,0,n).subarray(0,Math.min(a.length+5,16))}function l(e,t,a,i,s){if(!(0,n.isName)(t))throw new r.FormatError(\"Invalid crypt filter name.\");var l,u=e.get(t.name);if(null!==u&&void 0!==u&&(l=u.get(\"CFM\")),!l||\"None\"===l.name)return function(){return new f};if(\"V2\"===l.name)return function(){return new o(c(a,i,s,!1))};if(\"AESV2\"===l.name)return function(){return new g(c(a,i,s,!0))};if(\"AESV3\"===l.name)return function(){return new p(s)};throw new r.FormatError(\"Unknown crypto method\")}return i.prototype={createCipherTransform:function(e,t){if(4===this.algorithm||5===this.algorithm)return new b(l(this.cf,this.stmf,e,t,this.encryptionKey),l(this.cf,this.strf,e,t,this.encryptionKey));var a=c(e,t,this.encryptionKey,!1),r=function(){return new o(a)};return new b(r,r)}},i}();t.CipherTransformFactory=y},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ColorSpace=void 0;var r=a(2),n=a(5),i=a(8);var o=function(){function e(t,a){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize ColorSpace.\"),this.name=t,this.numComps=a}return _createClass(e,[{key:\"getRgb\",value:function(e,t){var a=new Uint8ClampedArray(3);return this.getRgbItem(e,t,a,0),a}},{key:\"getRgbItem\",value:function(e,t,a,n){(0,r.unreachable)(\"Should not call ColorSpace.getRgbItem\")}},{key:\"getRgbBuffer\",value:function(e,t,a,n,i,o,s){(0,r.unreachable)(\"Should not call ColorSpace.getRgbBuffer\")}},{key:\"getOutputLength\",value:function(e,t){(0,r.unreachable)(\"Should not call ColorSpace.getOutputLength\")}},{key:\"isPassthrough\",value:function(e){return!1}},{key:\"isDefaultDecode\",value:function(t,a){return e.isDefaultDecode(t,this.numComps)}},{key:\"fillRgb\",value:function(e,t,a,r,n,i,o,s,c){var l=t*a,u=null,h=1<<o,f=a!==n||t!==r;if(this.isPassthrough(o))u=s;else if(1===this.numComps&&l>h&&\"DeviceGray\"!==this.name&&\"DeviceRGB\"!==this.name){for(var d=o<=8?new Uint8Array(h):new Uint16Array(h),g=0;g<h;g++)d[g]=g;var p=new Uint8ClampedArray(3*h);if(this.getRgbBuffer(d,0,h,p,0,o,0),f){u=new Uint8Array(3*l);for(var m=0,v=0;v<l;++v){var b=3*s[v];u[m++]=p[b],u[m++]=p[b+1],u[m++]=p[b+2]}}else for(var y=0,k=0;k<l;++k){var w=3*s[k];e[y++]=p[w],e[y++]=p[w+1],e[y++]=p[w+2],y+=c}}else f?(u=new Uint8ClampedArray(3*l),this.getRgbBuffer(s,0,l,u,0,o,0)):this.getRgbBuffer(s,0,r*i,e,0,o,c);if(u)if(f)!function(e,t,a,r,n,i,o){o=1!==o?0:o;for(var s,c=a/n,l=r/i,u=0,h=new Uint16Array(n),f=3*a,d=0;d<n;d++)h[d]=3*Math.floor(d*c);for(var g=0;g<i;g++)for(var p=Math.floor(g*l)*f,m=0;m<n;m++)s=p+h[m],t[u++]=e[s++],t[u++]=e[s++],t[u++]=e[s++],u+=o}(u,e,t,a,r,n,c);else for(var C=0,S=0,x=0,A=r*i;x<A;x++)e[C++]=u[S++],e[C++]=u[S++],e[C++]=u[S++],C+=c}},{key:\"usesZeroToOneRange\",get:function(){return(0,r.shadow)(this,\"usesZeroToOneRange\",!0)}}],[{key:\"_cache\",value:function(e,t,a,r){if(!a)throw new Error('ColorSpace._cache - expected \"localColorSpaceCache\" argument.');if(!r)throw new Error('ColorSpace._cache - expected \"parsedColorSpace\" argument.');var i,o;e instanceof n.Ref&&(o=e,e=t.fetch(e)),e instanceof n.Name&&(i=e.name),(i||o)&&a.set(i,o,r)}},{key:\"getCached\",value:function(e,t,a){if(!a)throw new Error('ColorSpace.getCached - expected \"localColorSpaceCache\" argument.');if(e instanceof n.Ref){var r=a.getByRef(e);if(r)return r;try{e=t.fetch(e)}catch(s){if(s instanceof i.MissingDataException)throw s}}if(e instanceof n.Name){var o=a.getByName(e.name);if(o)return o}return null}},{key:\"parseAsync\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){var a,r,n,i,o,s,c;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.cs,r=t.xref,n=t.resources,i=void 0===n?null:n,o=t.pdfFunctionFactory,s=t.localColorSpaceCache,c=this._parse(a,r,i,o),this._cache(a,r,s,c),e.abrupt(\"return\",c);case 4:case\"end\":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:\"parse\",value:function(e){var t=e.cs,a=e.xref,r=e.resources,n=void 0===r?null:r,i=e.pdfFunctionFactory,o=e.localColorSpaceCache,s=this.getCached(t,a,o);if(s)return s;var c=this._parse(t,a,n,i);return this._cache(t,a,o,c),c}},{key:\"_parse\",value:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3?arguments[3]:void 0;if(e=t.fetchIfRef(e),(0,n.isName)(e))switch(e.name){case\"DeviceGray\":case\"G\":return this.singletons.gray;case\"DeviceRGB\":case\"RGB\":return this.singletons.rgb;case\"DeviceCMYK\":case\"CMYK\":return this.singletons.cmyk;case\"Pattern\":return new c(null);default:if((0,n.isDict)(a)){var o=a.get(\"ColorSpace\");if((0,n.isDict)(o)){var u=o.get(e.name);if(u){if((0,n.isName)(u))return this._parse(u,t,a,i);e=u;break}}}throw new r.FormatError(\"Unrecognized ColorSpace: \".concat(e.name))}if(Array.isArray(e)){var h,f,m,v,b,y,k=t.fetchIfRef(e[0]).name;switch(k){case\"DeviceGray\":case\"G\":return this.singletons.gray;case\"DeviceRGB\":case\"RGB\":return this.singletons.rgb;case\"DeviceCMYK\":case\"CMYK\":return this.singletons.cmyk;case\"CalGray\":return v=(h=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),b=h.getArray(\"BlackPoint\"),y=h.get(\"Gamma\"),new d(v,b,y);case\"CalRGB\":v=(h=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),b=h.getArray(\"BlackPoint\"),y=h.getArray(\"Gamma\");var w=h.getArray(\"Matrix\");return new g(v,b,y,w);case\"ICCBased\":var C=t.fetchIfRef(e[1]),S=C.dict;f=S.get(\"N\");var x=S.get(\"Alternate\");if(x){var A=this._parse(x,t,a,i);if(A.numComps===f)return A;(0,r.warn)(\"ICCBased color space: Ignoring incorrect /Alternate entry.\")}if(1===f)return this.singletons.gray;if(3===f)return this.singletons.rgb;if(4===f)return this.singletons.cmyk;break;case\"Pattern\":return(m=e[1]||null)&&(m=this._parse(m,t,a,i)),new c(m);case\"Indexed\":case\"I\":m=this._parse(e[1],t,a,i);var I=t.fetchIfRef(e[2])+1,F=t.fetchIfRef(e[3]);return new l(m,I,F);case\"Separation\":case\"DeviceN\":var T=t.fetchIfRef(e[1]);f=Array.isArray(T)?T.length:1,m=this._parse(e[2],t,a,i);var O=i.create(e[3]);return new s(f,m,O);case\"Lab\":v=(h=t.fetchIfRef(e[1])).getArray(\"WhitePoint\"),b=h.getArray(\"BlackPoint\");var E=h.getArray(\"Range\");return new p(v,b,E);default:throw new r.FormatError(\"Unimplemented ColorSpace object: \".concat(k))}}throw new r.FormatError(\"Unrecognized ColorSpace object: \".concat(e))}},{key:\"isDefaultDecode\",value:function(e,t){if(!Array.isArray(e))return!0;if(2*t!==e.length)return(0,r.warn)(\"The decode map is not the correct length\"),!0;for(var a=0,n=e.length;a<n;a+=2)if(0!==e[a]||1!==e[a+1])return!1;return!0}},{key:\"singletons\",get:function(){return(0,r.shadow)(this,\"singletons\",{get gray(){return(0,r.shadow)(this,\"gray\",new u)},get rgb(){return(0,r.shadow)(this,\"rgb\",new h)},get cmyk(){return(0,r.shadow)(this,\"cmyk\",new f)}})}}]),e}();t.ColorSpace=o;var s=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r,n){var i;return _classCallCheck(this,a),(i=t.call(this,\"Alternate\",e)).base=r,i.tintFn=n,i.tmpBuf=new Float32Array(r.numComps),i}return _createClass(a,[{key:\"getRgbItem\",value:function(e,t,a,r){var n=this.tmpBuf;this.tintFn(e,t,n,0),this.base.getRgbItem(n,0,a,r)}},{key:\"getRgbBuffer\",value:function(e,t,a,r,n,i,o){var s,c,l=this.tintFn,u=this.base,h=1/((1<<i)-1),f=u.numComps,d=u.usesZeroToOneRange,g=(u.isPassthrough(8)||!d)&&0===o,p=g?n:0,m=g?r:new Uint8ClampedArray(f*a),v=this.numComps,b=new Float32Array(v),y=new Float32Array(f);for(s=0;s<a;s++){for(c=0;c<v;c++)b[c]=e[t++]*h;if(l(b,0,y,0),d)for(c=0;c<f;c++)m[p++]=255*y[c];else u.getRgbItem(y,0,m,p),p+=f}g||u.getRgbBuffer(m,0,a,r,n,8,o)}},{key:\"getOutputLength\",value:function(e,t){return this.base.getOutputLength(e*this.base.numComps/this.numComps,t)}}]),a}(o),c=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var r;return _classCallCheck(this,a),(r=t.call(this,\"Pattern\",null)).base=e,r}return _createClass(a,[{key:\"isDefaultDecode\",value:function(e,t){(0,r.unreachable)(\"Should not call PatternCS.isDefaultDecode\")}}]),a}(o),l=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,i,o){var s;_classCallCheck(this,a),(s=t.call(this,\"Indexed\",1)).base=e,s.highVal=i;var c=e.numComps*i;if(s.lookup=new Uint8Array(c),(0,n.isStream)(o)){var l=o.getBytes(c);s.lookup.set(l)}else{if(\"string\"!==typeof o)throw new r.FormatError(\"IndexedCS - unrecognized lookup table: \".concat(o));for(var u=0;u<c;++u)s.lookup[u]=255&o.charCodeAt(u)}return s}return _createClass(a,[{key:\"getRgbItem\",value:function(e,t,a,r){var n=this.base.numComps,i=e[t]*n;this.base.getRgbBuffer(this.lookup,i,1,a,r,8,0)}},{key:\"getRgbBuffer\",value:function(e,t,a,r,n,i,o){for(var s=this.base,c=s.numComps,l=s.getOutputLength(c,o),u=this.lookup,h=0;h<a;++h){var f=e[t++]*c;s.getRgbBuffer(u,f,1,r,n,8,o),n+=l}}},{key:\"getOutputLength\",value:function(e,t){return this.base.getOutputLength(e*this.base.numComps,t)}},{key:\"isDefaultDecode\",value:function(e,t){return!Array.isArray(e)||(2!==e.length?((0,r.warn)(\"Decode map length is not correct\"),!0):!Number.isInteger(t)||t<1?((0,r.warn)(\"Bits per component is not correct\"),!0):0===e[0]&&e[1]===(1<<t)-1)}}]),a}(o),u=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.call(this,\"DeviceGray\",1)}return _createClass(a,[{key:\"getRgbItem\",value:function(e,t,a,r){var n=255*e[t];a[r]=a[r+1]=a[r+2]=n}},{key:\"getRgbBuffer\",value:function(e,t,a,r,n,i,o){for(var s=255/((1<<i)-1),c=t,l=n,u=0;u<a;++u){var h=s*e[c++];r[l++]=h,r[l++]=h,r[l++]=h,l+=o}}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)}}]),a}(o),h=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.call(this,\"DeviceRGB\",3)}return _createClass(a,[{key:\"getRgbItem\",value:function(e,t,a,r){a[r]=255*e[t],a[r+1]=255*e[t+1],a[r+2]=255*e[t+2]}},{key:\"getRgbBuffer\",value:function(e,t,a,r,n,i,o){if(8!==i||0!==o)for(var s=255/((1<<i)-1),c=t,l=n,u=0;u<a;++u)r[l++]=s*e[c++],r[l++]=s*e[c++],r[l++]=s*e[c++],l+=o;else r.set(e.subarray(t,t+3*a),n)}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}},{key:\"isPassthrough\",value:function(e){return 8===e}}]),a}(o),f=function(){function e(e,t,a,r,n){var i=e[t]*a,o=e[t+1]*a,s=e[t+2]*a,c=e[t+3]*a;r[n]=255+i*(-4.387332384609988*i+54.48615194189176*o+18.82290502165302*s+212.25662451639585*c-285.2331026137004)+o*(1.7149763477362134*o-5.6096736904047315*s+-17.873870861415444*c-5.497006427196366)+s*(-2.5217340131683033*s-21.248923337353073*c+17.5119270841813)+c*(-21.86122147463605*c-189.48180835922747),r[n+1]=255+i*(8.841041422036149*i+60.118027045597366*o+6.871425592049007*s+31.159100130055922*c-79.2970844816548)+o*(-15.310361306967817*o+17.575251261109482*s+131.35250912493976*c-190.9453302588951)+s*(4.444339102852739*s+9.8632861493405*c-24.86741582555878)+c*(-20.737325471181034*c-187.80453709719578),r[n+2]=255+i*(.8842522430003296*i+8.078677503112928*o+30.89978309703729*s-.23883238689178934*c-14.183576799673286)+o*(10.49593273432072*o+63.02378494754052*s+50.606957656360734*c-112.23884253719248)+s*(.03296041114873217*s+115.60384449646641*c-193.58209356861505)+c*(-22.33816807309886*c-180.12613974708367)}return function(t){_inherits(r,t);var a=_createSuper(r);function r(){return _classCallCheck(this,r),a.call(this,\"DeviceCMYK\",4)}return _createClass(r,[{key:\"getRgbItem\",value:function(t,a,r,n){e(t,a,1,r,n)}},{key:\"getRgbBuffer\",value:function(t,a,r,n,i,o,s){for(var c=1/((1<<o)-1),l=0;l<r;l++)e(t,a,c,n,i),a+=4,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e/4*(3+t)|0}}]),r}(o)}(),d=function(){function e(e,t,a,r,n,i){var o=t[a]*i,s=Math.pow(o,e.G),c=e.YW*s,l=Math.max(295.8*Math.pow(c,.3333333333333333)-40.8,0);r[n]=l,r[n+1]=l,r[n+2]=l}return function(t){_inherits(n,t);var a=_createSuper(n);function n(e,t,i){var o;if(_classCallCheck(this,n),o=a.call(this,\"CalGray\",1),!e)throw new r.FormatError(\"WhitePoint missing - required for color space CalGray\");if(t=t||[0,0,0],i=i||1,o.XW=e[0],o.YW=e[1],o.ZW=e[2],o.XB=t[0],o.YB=t[1],o.ZB=t[2],o.G=i,o.XW<0||o.ZW<0||1!==o.YW)throw new r.FormatError(\"Invalid WhitePoint components for \".concat(o.name)+\", no fallback available\");return(o.XB<0||o.YB<0||o.ZB<0)&&((0,r.info)(\"Invalid BlackPoint for \".concat(o.name,\", falling back to default.\")),o.XB=o.YB=o.ZB=0),0===o.XB&&0===o.YB&&0===o.ZB||(0,r.warn)(\"\".concat(o.name,\", BlackPoint: XB: \").concat(o.XB,\", YB: \").concat(o.YB,\", \")+\"ZB: \".concat(o.ZB,\", only default values are supported.\")),o.G<1&&((0,r.info)(\"Invalid Gamma: \".concat(o.G,\" for \").concat(o.name,\", \")+\"falling back to default.\"),o.G=1),o}return _createClass(n,[{key:\"getRgbItem\",value:function(t,a,r,n){e(this,t,a,r,n,1)}},{key:\"getRgbBuffer\",value:function(t,a,r,n,i,o,s){for(var c=1/((1<<o)-1),l=0;l<r;++l)e(this,t,a,n,i,c),a+=1,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)}}]),n}(o)}(),g=function(){var e=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]),t=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]),a=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]),n=new Float32Array([1,1,1]),i=new Float32Array(3),s=new Float32Array(3),c=new Float32Array(3),l=Math.pow(24/116,3)/8;function u(e,t,a){a[0]=e[0]*t[0]+e[1]*t[1]+e[2]*t[2],a[1]=e[3]*t[0]+e[4]*t[1]+e[5]*t[2],a[2]=e[6]*t[0]+e[7]*t[1]+e[8]*t[2]}function h(e){return e<=.0031308?f(0,1,12.92*e):e>=.99554525?1:f(0,1,1.055*Math.pow(e,1/2.4)-.055)}function f(e,t,a){return Math.max(e,Math.min(t,a))}function d(e){return e<0?-d(-e):e>8?Math.pow((e+16)/116,3):e*l}function g(r,o,l,g,p,m){var v=f(0,1,o[l]*m),b=f(0,1,o[l+1]*m),y=f(0,1,o[l+2]*m),k=1===v?1:Math.pow(v,r.GR),w=1===b?1:Math.pow(b,r.GG),C=1===y?1:Math.pow(y,r.GB),S=r.MXA*k+r.MXB*w+r.MXC*C,x=r.MYA*k+r.MYB*w+r.MYC*C,A=r.MZA*k+r.MZB*w+r.MZC*C,I=s;I[0]=S,I[1]=x,I[2]=A;var F=c;!function(a,r,n){if(1===a[0]&&1===a[2])return n[0]=r[0],n[1]=r[1],void(n[2]=r[2]);var o=n;u(e,r,o);var s=i;!function(e,t,a){a[0]=1*t[0]/e[0],a[1]=1*t[1]/e[1],a[2]=1*t[2]/e[2]}(a,o,s),u(t,s,n)}(r.whitePoint,I,F);var T=s;!function(e,t,a){if(0===e[0]&&0===e[1]&&0===e[2])return a[0]=t[0],a[1]=t[1],void(a[2]=t[2]);var r=d(0),n=(1-r)/(1-d(e[0])),i=1-n,o=(1-r)/(1-d(e[1])),s=1-o,c=(1-r)/(1-d(e[2])),l=1-c;a[0]=t[0]*n+i,a[1]=t[1]*o+s,a[2]=t[2]*c+l}(r.blackPoint,F,T);var O=c;!function(a,r,n){var o=n;u(e,r,o);var s=i;!function(e,t,a){a[0]=.95047*t[0]/e[0],a[1]=1*t[1]/e[1],a[2]=1.08883*t[2]/e[2]}(a,o,s),u(t,s,n)}(n,T,O);var E=s;u(a,O,E),g[p]=255*h(E[0]),g[p+1]=255*h(E[1]),g[p+2]=255*h(E[2])}return function(e){_inherits(a,e);var t=_createSuper(a);function a(e,n,i,o){var s;if(_classCallCheck(this,a),s=t.call(this,\"CalRGB\",3),!e)throw new r.FormatError(\"WhitePoint missing - required for color space CalRGB\");n=n||new Float32Array(3),i=i||new Float32Array([1,1,1]),o=o||new Float32Array([1,0,0,0,1,0,0,0,1]);var c=e[0],l=e[1],u=e[2];s.whitePoint=e;var h=n[0],f=n[1],d=n[2];if(s.blackPoint=n,s.GR=i[0],s.GG=i[1],s.GB=i[2],s.MXA=o[0],s.MYA=o[1],s.MZA=o[2],s.MXB=o[3],s.MYB=o[4],s.MZB=o[5],s.MXC=o[6],s.MYC=o[7],s.MZC=o[8],c<0||u<0||1!==l)throw new r.FormatError(\"Invalid WhitePoint components for \".concat(s.name)+\", no fallback available\");return(h<0||f<0||d<0)&&((0,r.info)(\"Invalid BlackPoint for \".concat(s.name,\" [\").concat(h,\", \").concat(f,\", \").concat(d,\"], \")+\"falling back to default.\"),s.blackPoint=new Float32Array(3)),(s.GR<0||s.GG<0||s.GB<0)&&((0,r.info)(\"Invalid Gamma [\".concat(s.GR,\", \").concat(s.GG,\", \").concat(s.GB,\"] for \")+\"\".concat(s.name,\", falling back to default.\")),s.GR=s.GG=s.GB=1),s}return _createClass(a,[{key:\"getRgbItem\",value:function(e,t,a,r){g(this,e,t,a,r,1)}},{key:\"getRgbBuffer\",value:function(e,t,a,r,n,i,o){for(var s=1/((1<<i)-1),c=0;c<a;++c)g(this,e,t,r,n,s),t+=3,n+=3+o}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}}]),a}(o)}(),p=function(){function e(e){return e>=6/29?e*e*e:108/841*(e-4/29)}function t(e,t,a,r){return a+e*(r-a)/t}function a(a,r,n,i,o,s){var c=r[n],l=r[n+1],u=r[n+2];!1!==i&&(c=t(c,i,0,100),l=t(l,i,a.amin,a.amax),u=t(u,i,a.bmin,a.bmax)),l>a.amax?l=a.amax:l<a.amin&&(l=a.amin),u>a.bmax?u=a.bmax:u<a.bmin&&(u=a.bmin);var h,f,d,g=(c+16)/116,p=g+l/500,m=g-u/200,v=a.XW*e(p),b=a.YW*e(g),y=a.ZW*e(m);a.ZW<1?(h=3.1339*v+-1.617*b+-.4906*y,f=-.9785*v+1.916*b+.0333*y,d=.072*v+-.229*b+1.4057*y):(h=3.2406*v+-1.5372*b+-.4986*y,f=-.9689*v+1.8758*b+.0415*y,d=.0557*v+-.204*b+1.057*y),o[s]=255*Math.sqrt(h),o[s+1]=255*Math.sqrt(f),o[s+2]=255*Math.sqrt(d)}return function(e){_inherits(n,e);var t=_createSuper(n);function n(e,a,i){var o;if(_classCallCheck(this,n),o=t.call(this,\"Lab\",3),!e)throw new r.FormatError(\"WhitePoint missing - required for color space Lab\");if(a=a||[0,0,0],i=i||[-100,100,-100,100],o.XW=e[0],o.YW=e[1],o.ZW=e[2],o.amin=i[0],o.amax=i[1],o.bmin=i[2],o.bmax=i[3],o.XB=a[0],o.YB=a[1],o.ZB=a[2],o.XW<0||o.ZW<0||1!==o.YW)throw new r.FormatError(\"Invalid WhitePoint components, no fallback available\");return(o.XB<0||o.YB<0||o.ZB<0)&&((0,r.info)(\"Invalid BlackPoint, falling back to default\"),o.XB=o.YB=o.ZB=0),(o.amin>o.amax||o.bmin>o.bmax)&&((0,r.info)(\"Invalid Range, falling back to defaults\"),o.amin=-100,o.amax=100,o.bmin=-100,o.bmax=100),o}return _createClass(n,[{key:\"getRgbItem\",value:function(e,t,r,n){a(this,e,t,!1,r,n)}},{key:\"getRgbBuffer\",value:function(e,t,r,n,i,o,s){for(var c=(1<<o)-1,l=0;l<r;l++)a(this,e,t,c,n,i),t+=3,i+=3+s}},{key:\"getOutputLength\",value:function(e,t){return e*(3+t)/3|0}},{key:\"isDefaultDecode\",value:function(e,t){return!0}},{key:\"usesZeroToOneRange\",get:function(){return(0,r.shadow)(this,\"usesZeroToOneRange\",!1)}}]),n}(o)}()},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.GlobalImageCache=t.LocalGStateCache=t.LocalFunctionCache=t.LocalColorSpaceCache=t.LocalImageCache=void 0;var r=a(2),n=a(5),i=function(){function e(t){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize BaseLocalCache.\"),t&&t.onlyRefs||(this._nameRefMap=new Map,this._imageMap=new Map),this._imageCache=new n.RefSetCache}return _createClass(e,[{key:\"getByName\",value:function(e){var t=this._nameRefMap.get(e);return t?this.getByRef(t):this._imageMap.get(e)||null}},{key:\"getByRef\",value:function(e){return this._imageCache.get(e)||null}},{key:\"set\",value:function(e,t,a){(0,r.unreachable)(\"Abstract method `set` called.\")}}]),e}(),o=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return _createClass(a,[{key:\"set\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2?arguments[2]:void 0;if(!e)throw new Error('LocalImageCache.set - expected \"name\" argument.');if(t){if(this._imageCache.has(t))return;return this._nameRefMap.set(e,t),void this._imageCache.put(t,a)}this._imageMap.has(e)||this._imageMap.set(e,a)}}]),a}(i);t.LocalImageCache=o;var s=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return _createClass(a,[{key:\"set\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2?arguments[2]:void 0;if(!e&&!t)throw new Error('LocalColorSpaceCache.set - expected \"name\" and/or \"ref\" argument.');if(t){if(this._imageCache.has(t))return;return e&&this._nameRefMap.set(e,t),void this._imageCache.put(t,a)}this._imageMap.has(e)||this._imageMap.set(e,a)}}]),a}(i);t.LocalColorSpaceCache=s;var c=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){return _classCallCheck(this,a),t.call(this,{onlyRefs:!0})}return _createClass(a,[{key:\"getByName\",value:function(e){(0,r.unreachable)(\"Should not call `getByName` method.\")}},{key:\"set\",value:function(){var e=arguments.length>1?arguments[1]:void 0,t=arguments.length>2?arguments[2]:void 0;if(!e)throw new Error('LocalFunctionCache.set - expected \"ref\" argument.');this._imageCache.has(e)||this._imageCache.put(e,t)}}]),a}(i);t.LocalFunctionCache=c;var l=function(e){_inherits(a,e);var t=_createSuper(a);function a(){return _classCallCheck(this,a),t.apply(this,arguments)}return _createClass(a,[{key:\"set\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=arguments.length>2?arguments[2]:void 0;if(!e)throw new Error('LocalGStateCache.set - expected \"name\" argument.');if(t){if(this._imageCache.has(t))return;return this._nameRefMap.set(e,t),void this._imageCache.put(t,a)}this._imageMap.has(e)||this._imageMap.set(e,a)}}]),a}(i);t.LocalGStateCache=l;var u=function(){function e(){_classCallCheck(this,e),this._refCache=new n.RefSetCache,this._imageCache=new n.RefSetCache}return _createClass(e,[{key:\"shouldCache\",value:function(t,a){var r=this._refCache.get(t);return!((r?r.size+(r.has(a)?0:1):1)<e.NUM_PAGES_THRESHOLD)&&!(!this._imageCache.has(t)&&this._imageCache.size>=e.MAX_IMAGES_TO_CACHE)}},{key:\"addPageIndex\",value:function(e,t){var a=this._refCache.get(e);a||(a=new Set,this._refCache.put(e,a)),a.add(t)}},{key:\"getData\",value:function(t,a){var r=this._refCache.get(t);return r?r.size<e.NUM_PAGES_THRESHOLD?null:this._imageCache.has(t)?(r.add(a),this._imageCache.get(t)):null:null}},{key:\"setData\",value:function(t,a){if(!this._refCache.has(t))throw new Error('GlobalImageCache.setData - expected \"addPageIndex\" to have been called.');this._imageCache.has(t)||(this._imageCache.size>=e.MAX_IMAGES_TO_CACHE?(0,r.info)(\"GlobalImageCache.setData - ignoring image above MAX_IMAGES_TO_CACHE.\"):this._imageCache.put(t,a))}},{key:\"clear\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];e||this._refCache.clear(),this._imageCache.clear()}}],[{key:\"NUM_PAGES_THRESHOLD\",get:function(){return(0,r.shadow)(this,\"NUM_PAGES_THRESHOLD\",2)}},{key:\"MAX_IMAGES_TO_CACHE\",get:function(){return(0,r.shadow)(this,\"MAX_IMAGES_TO_CACHE\",10)}}]),e}();t.GlobalImageCache=u},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getQuadPoints=f,t.MarkupAnnotation=t.AnnotationFactory=t.AnnotationBorderStyle=t.Annotation=void 0;var r=a(2),n=a(10),i=a(5),o=a(23),s=a(8),c=a(26),l=a(12),u=a(27),h=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:\"create\",value:function(e,t,a,r){var n=this;return a.ensureCatalog(\"acroForm\").then((function(i){return a.ensure(n,\"_create\",[e,t,a,r,i])}))}},{key:\"_create\",value:function(e,t,a,n,o){var c=e.fetchIfRef(t);if((0,i.isDict)(c)){var l=(0,i.isRef)(t)?t.toString():\"annot_\".concat(n.createObjId()),u=c.get(\"Subtype\"),h={xref:e,ref:t,dict:c,subtype:u=(0,i.isName)(u)?u.name:null,id:l,pdfManager:a,acroForm:o instanceof i.Dict?o:i.Dict.empty};switch(u){case\"Link\":return new C(h);case\"Text\":return new w(h);case\"Widget\":var f=(0,s.getInheritableProperty)({dict:c,key:\"FT\"});switch(f=(0,i.isName)(f)?f.name:null){case\"Tx\":return new b(h);case\"Btn\":return new y(h);case\"Ch\":return new k(h)}return(0,r.warn)('Unimplemented widget field type \"'+f+'\", falling back to base field type.'),new v(h);case\"Popup\":return new S(h);case\"FreeText\":return new x(h);case\"Line\":return new A(h);case\"Square\":return new I(h);case\"Circle\":return new F(h);case\"PolyLine\":return new T(h);case\"Polygon\":return new O(h);case\"Caret\":return new E(h);case\"Ink\":return new P(h);case\"Highlight\":return new _(h);case\"Underline\":return new B(h);case\"Squiggly\":return new M(h);case\"StrikeOut\":return new D(h);case\"Stamp\":return new R(h);case\"FileAttachment\":return new N(h);default:return u?(0,r.warn)('Unimplemented annotation type \"'+u+'\", falling back to base annotation.'):(0,r.warn)(\"Annotation is missing the required /Subtype.\"),new g(h)}}}}]),e}();function f(e,t){if(!e.has(\"QuadPoints\"))return null;var a=e.getArray(\"QuadPoints\");if(!Array.isArray(a)||a.length%8>0)return null;for(var r=[],n=0,i=a.length/8;n<i;n++){r.push([]);for(var o=8*n,s=8*n+8;o<s;o+=2){var c=a[o],l=a[o+1];if(c<t[0]||c>t[2]||l<t[1]||l>t[3])return null;r[n].push({x:c,y:l})}}return r}function d(e,t,a){var n=r.Util.getAxialAlignedBoundingBox(t,a),i=_slicedToArray(n,4),o=i[0],s=i[1],c=i[2],l=i[3];if(o===c||s===l)return[1,0,0,1,e[0],e[1]];var u=(e[2]-e[0])/(c-o),h=(e[3]-e[1])/(l-s);return[u,0,0,h,e[0]-o*u,e[1]-s*h]}t.AnnotationFactory=h;var g=function(){function e(t){_classCallCheck(this,e);var a=t.dict;this.setContents(a.get(\"Contents\")),this.setModificationDate(a.get(\"M\")),this.setFlags(a.get(\"F\")),this.setRectangle(a.getArray(\"Rect\")),this.setColor(a.getArray(\"C\")),this.setBorderStyle(a),this.setAppearance(a),this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,contents:this.contents,hasAppearance:!!this.appearance,id:t.id,modificationDate:this.modificationDate,rect:this.rectangle,subtype:t.subtype}}return _createClass(e,[{key:\"_hasFlag\",value:function(e,t){return!!(e&t)}},{key:\"_isViewable\",value:function(e){return!this._hasFlag(e,r.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,r.AnnotationFlag.HIDDEN)&&!this._hasFlag(e,r.AnnotationFlag.NOVIEW)}},{key:\"_isPrintable\",value:function(e){return this._hasFlag(e,r.AnnotationFlag.PRINT)&&!this._hasFlag(e,r.AnnotationFlag.INVISIBLE)&&!this._hasFlag(e,r.AnnotationFlag.HIDDEN)}},{key:\"viewable\",get:function(){return 0===this.flags||this._isViewable(this.flags)}},{key:\"printable\",get:function(){return 0!==this.flags&&this._isPrintable(this.flags)}},{key:\"setContents\",value:function(e){this.contents=(0,r.stringToPDFString)(e||\"\")}},{key:\"setModificationDate\",value:function(e){this.modificationDate=(0,r.isString)(e)?e:null}},{key:\"setFlags\",value:function(e){this.flags=Number.isInteger(e)&&e>0?e:0}},{key:\"hasFlag\",value:function(e){return this._hasFlag(this.flags,e)}},{key:\"setRectangle\",value:function(e){Array.isArray(e)&&4===e.length?this.rectangle=r.Util.normalizeRect(e):this.rectangle=[0,0,0,0]}},{key:\"setColor\",value:function(e){var t=new Uint8ClampedArray(3);if(Array.isArray(e))switch(e.length){case 0:this.color=null;break;case 1:o.ColorSpace.singletons.gray.getRgbItem(e,0,t,0),this.color=t;break;case 3:o.ColorSpace.singletons.rgb.getRgbItem(e,0,t,0),this.color=t;break;case 4:o.ColorSpace.singletons.cmyk.getRgbItem(e,0,t,0),this.color=t;break;default:this.color=t}else this.color=t}},{key:\"setBorderStyle\",value:function(e){if(this.borderStyle=new p,(0,i.isDict)(e))if(e.has(\"BS\")){var t=e.get(\"BS\"),a=t.get(\"Type\");a&&!(0,i.isName)(a,\"Border\")||(this.borderStyle.setWidth(t.get(\"W\"),this.rectangle),this.borderStyle.setStyle(t.get(\"S\")),this.borderStyle.setDashArray(t.getArray(\"D\")))}else if(e.has(\"Border\")){var r=e.getArray(\"Border\");Array.isArray(r)&&r.length>=3&&(this.borderStyle.setHorizontalCornerRadius(r[0]),this.borderStyle.setVerticalCornerRadius(r[1]),this.borderStyle.setWidth(r[2],this.rectangle),4===r.length&&this.borderStyle.setDashArray(r[3]))}else this.borderStyle.setWidth(0)}},{key:\"setAppearance\",value:function(e){this.appearance=null;var t=e.get(\"AP\");if((0,i.isDict)(t)){var a=t.get(\"N\");if((0,i.isStream)(a))this.appearance=a;else if((0,i.isDict)(a)){var r=e.get(\"AS\");(0,i.isName)(r)&&a.has(r.name)&&(this.appearance=a.get(r.name))}}}},{key:\"loadResources\",value:function(e){return this.appearance.dict.getAsync(\"Resources\").then((function(t){if(t)return new n.ObjectLoader(t,e,t.xref).load().then((function(){return t}))}))}},{key:\"getOperatorList\",value:function(e,t,a,n){if(!this.appearance)return Promise.resolve(new c.OperatorList);var i=this.appearance,o=this.data,s=i.dict,l=this.loadResources([\"ExtGState\",\"ColorSpace\",\"Pattern\",\"Shading\",\"XObject\",\"Font\"]),u=s.getArray(\"BBox\")||[0,0,1,1],h=s.getArray(\"Matrix\")||[1,0,0,1,0,0],f=d(o.rect,u,h);return l.then((function(a){var n=new c.OperatorList;return n.addOp(r.OPS.beginAnnotation,[o.rect,f,h]),e.getOperatorList({stream:i,task:t,resources:a,operatorList:n}).then((function(){return n.addOp(r.OPS.endAnnotation,[]),i.reset(),n}))}))}},{key:\"save\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,r){return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",null);case 1:case\"end\":return e.stop()}}),e)})));return function(t,a,r){return e.apply(this,arguments)}}()}]),e}();t.Annotation=g;var p=function(){function e(){_classCallCheck(this,e),this.width=1,this.style=r.AnnotationBorderStyleType.SOLID,this.dashArray=[3],this.horizontalCornerRadius=0,this.verticalCornerRadius=0}return _createClass(e,[{key:\"setWidth\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0,0,0,0];if((0,i.isName)(e))this.width=0;else if(Number.isInteger(e)){if(e>0){var a=(t[2]-t[0])/2,n=(t[3]-t[1])/2;a>0&&n>0&&(e>a||e>n)&&((0,r.warn)(\"AnnotationBorderStyle.setWidth - ignoring width: \".concat(e)),e=1)}this.width=e}}},{key:\"setStyle\",value:function(e){if((0,i.isName)(e))switch(e.name){case\"S\":this.style=r.AnnotationBorderStyleType.SOLID;break;case\"D\":this.style=r.AnnotationBorderStyleType.DASHED;break;case\"B\":this.style=r.AnnotationBorderStyleType.BEVELED;break;case\"I\":this.style=r.AnnotationBorderStyleType.INSET;break;case\"U\":this.style=r.AnnotationBorderStyleType.UNDERLINE}}},{key:\"setDashArray\",value:function(e){if(Array.isArray(e)&&e.length>0){var t,a=!0,r=!0,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;if(!(+i>=0)){a=!1;break}i>0&&(r=!1)}}catch(o){n.e(o)}finally{n.f()}a&&!r?this.dashArray=e:this.width=0}else e&&(this.width=0)}},{key:\"setHorizontalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.horizontalCornerRadius=e)}},{key:\"setVerticalCornerRadius\",value:function(e){Number.isInteger(e)&&(this.verticalCornerRadius=e)}}]),e}();t.AnnotationBorderStyle=p;var m=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),n=t.call(this,e);var o=e.dict;if(o.has(\"IRT\")){var s=o.getRaw(\"IRT\");n.data.inReplyTo=(0,i.isRef)(s)?s.toString():null;var c=o.get(\"RT\");n.data.replyType=(0,i.isName)(c)?c.name:r.AnnotationReplyType.REPLY}if(n.data.replyType===r.AnnotationReplyType.GROUP){var l=o.get(\"IRT\");n.data.title=(0,r.stringToPDFString)(l.get(\"T\")||\"\"),n.setContents(l.get(\"Contents\")),n.data.contents=n.contents,l.has(\"CreationDate\")?(n.setCreationDate(l.get(\"CreationDate\")),n.data.creationDate=n.creationDate):n.data.creationDate=null,l.has(\"M\")?(n.setModificationDate(l.get(\"M\")),n.data.modificationDate=n.modificationDate):n.data.modificationDate=null,n.data.hasPopup=l.has(\"Popup\"),l.has(\"C\")?(n.setColor(l.getArray(\"C\")),n.data.color=n.color):n.data.color=null}else n.data.title=(0,r.stringToPDFString)(o.get(\"T\")||\"\"),n.setCreationDate(o.get(\"CreationDate\")),n.data.creationDate=n.creationDate,n.data.hasPopup=o.has(\"Popup\"),o.has(\"C\")||(n.data.color=null);return n}return _createClass(a,[{key:\"setCreationDate\",value:function(e){this.creationDate=(0,r.isString)(e)?e:null}}]),a}(g);t.MarkupAnnotation=m;var v=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),n=t.call(this,e);var o=e.dict,c=n.data;n.ref=e.ref,c.annotationType=r.AnnotationType.WIDGET,c.fieldName=n._constructFieldName(o);var l=(0,s.getInheritableProperty)({dict:o,key:\"V\",getArray:!0});c.fieldValue=n._decodeFormValue(l),c.alternativeText=(0,r.stringToPDFString)(o.get(\"TU\")||\"\"),c.defaultAppearance=(0,s.getInheritableProperty)({dict:o,key:\"DA\"})||e.acroForm.get(\"DA\")||\"\";var u=(0,s.getInheritableProperty)({dict:o,key:\"FT\"});return c.fieldType=(0,i.isName)(u)?u.name:null,n.fieldResources=(0,s.getInheritableProperty)({dict:o,key:\"DR\"})||e.acroForm.get(\"DR\")||i.Dict.empty,c.fieldFlags=(0,s.getInheritableProperty)({dict:o,key:\"Ff\"}),(!Number.isInteger(c.fieldFlags)||c.fieldFlags<0)&&(c.fieldFlags=0),c.readOnly=n.hasFieldFlag(r.AnnotationFieldFlag.READONLY),\"Sig\"===c.fieldType&&(c.fieldValue=null,n.setFlags(r.AnnotationFlag.HIDDEN)),n}return _createClass(a,[{key:\"_constructFieldName\",value:function(e){if(!e.has(\"T\")&&!e.has(\"Parent\"))return(0,r.warn)(\"Unknown field name, falling back to empty field name.\"),\"\";if(!e.has(\"Parent\"))return(0,r.stringToPDFString)(e.get(\"T\"));var t=[];e.has(\"T\")&&t.unshift((0,r.stringToPDFString)(e.get(\"T\")));for(var a=e;a.has(\"Parent\")&&(a=a.get(\"Parent\"),(0,i.isDict)(a));)a.has(\"T\")&&t.unshift((0,r.stringToPDFString)(a.get(\"T\")));return t.join(\".\")}},{key:\"_decodeFormValue\",value:function(e){return Array.isArray(e)?e.filter((function(e){return(0,r.isString)(e)})).map((function(e){return(0,r.stringToPDFString)(e)})):(0,i.isName)(e)?(0,r.stringToPDFString)(e.name):(0,r.isString)(e)?(0,r.stringToPDFString)(e):null}},{key:\"hasFieldFlag\",value:function(e){return!!(this.data.fieldFlags&e)}},{key:\"getOperatorList\",value:function(e,t,n,i){var o=this;return n?Promise.resolve(new c.OperatorList):this._hasText?this._getAppearance(e,t,i).then((function(s){if(o.appearance&&null===s)return _get(_getPrototypeOf(a.prototype),\"getOperatorList\",o).call(o,e,t,n,i);var u=new c.OperatorList;if(!o.data.defaultAppearance||null===s)return u;var h=[1,0,0,1,0,0],f=[0,0,o.data.rect[2]-o.data.rect[0],o.data.rect[3]-o.data.rect[1]],g=d(o.data.rect,f,h);u.addOp(r.OPS.beginAnnotation,[o.data.rect,g,h]);var p=new l.StringStream(s);return e.getOperatorList({stream:p,task:t,resources:o.fieldResources,operatorList:u}).then((function(){return u.addOp(r.OPS.endAnnotation,[]),u}))})):_get(_getPrototypeOf(a.prototype),\"getOperatorList\",this).call(this,e,t,n,i)}},{key:\"save\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n){var o,s,c,l,h,f,d,g,p,m,v,b;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.data.fieldValue!==n[this.data.id]){e.next=2;break}return e.abrupt(\"return\",null);case 2:return e.next=4,this._getAppearance(t,a,n);case 4:if(null!==(o=e.sent)){e.next=7;break}return e.abrupt(\"return\",null);case 7:if(s=t.xref.fetchIfRef(this.ref),(0,i.isDict)(s)){e.next=10;break}return e.abrupt(\"return\",null);case 10:return c=[0,0,this.data.rect[2]-this.data.rect[0],this.data.rect[3]-this.data.rect[1]],l=t.xref.getNewRef(),(h=new i.Dict(t.xref)).set(\"N\",l),f=n[this.data.id],d=t.xref.encrypt,g=null,p=null,d&&(g=d.createCipherTransform(this.ref.num,this.ref.gen),p=d.createCipherTransform(l.num,l.gen),o=p.encryptString(o)),s.set(\"V\",f),s.set(\"AP\",h),s.set(\"M\",\"D:\".concat((0,r.getModificationDate)())),(m=new i.Dict(t.xref)).set(\"Length\",o.length),m.set(\"Subtype\",i.Name.get(\"Form\")),m.set(\"Resources\",this.fieldResources),m.set(\"BBox\",c),v=[\"\".concat(this.ref.num,\" \").concat(this.ref.gen,\" obj\\n\")],(0,u.writeDict)(s,v,g),v.push(\"\\nendobj\\n\"),b=[\"\".concat(l.num,\" \").concat(l.gen,\" obj\\n\")],(0,u.writeDict)(m,b,p),b.push(\" stream\\n\"),b.push(o),b.push(\"\\nendstream\\nendobj\\n\"),e.abrupt(\"return\",[{ref:this.ref,data:v.join(\"\")},{ref:l,data:b.join(\"\")}]);case 36:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"_getAppearance\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n){var i,o,s,c,l,u,h,f,d,g,p,m,v,b,y,k;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=this.hasFieldFlag(r.AnnotationFieldFlag.PASSWORD),n&&!i){e.next=3;break}return e.abrupt(\"return\",null);case 3:if(\"\"!==(o=n[this.data.id])){e.next=6;break}return e.abrupt(\"return\",\"\");case 6:return c=s=2,l=this.data.rect[3]-this.data.rect[1],u=this.data.rect[2]-this.data.rect[0],e.next=12,this._getFontData(t,a);case 12:if(h=e.sent,f=_slicedToArray(h,2),d=f[0],g=f[1],p=h[2],p=this._computeFontSize(d,g,p,l),m=d.descent,isNaN(m)&&(m=0),v=s+Math.abs(m)*p,b=this.data.defaultAppearance,y=this.data.textAlignment,!this.data.comb){e.next=23;break}return e.abrupt(\"return\",this._getCombAppearance(b,o,u,c,v));case 23:if(!this.data.multiLine){e.next=25;break}return e.abrupt(\"return\",this._getMultilineAppearance(b,o,d,p,u,l,y,c,v));case 25:if(!(0===y||y>2)){e.next=27;break}return e.abrupt(\"return\",\"/Tx BMC q BT \"+b+\" 1 0 0 1 \".concat(c,\" \").concat(v,\" Tm (\").concat((0,r.escapeString)(o),\") Tj\")+\" ET Q EMC\");case 27:return k=this._renderText(o,d,p,u,y,c,v),e.abrupt(\"return\",\"/Tx BMC q BT \"+b+\" 1 0 0 1 0 0 Tm \".concat(k)+\" ET Q EMC\");case 29:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"_getFontData\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a){var r,n;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=new c.OperatorList,n={fontSize:0,font:null,fontName:null,clone:function(){return this}},e.next=4,t.getOperatorList({stream:new l.StringStream(this.data.defaultAppearance),task:a,resources:this.fieldResources,operatorList:r,initialState:n});case 4:return e.abrupt(\"return\",[n.font,n.fontName,n.fontSize]);case 5:case\"end\":return e.stop()}}),e,this)})));return function(t,a){return e.apply(this,arguments)}}()},{key:\"_computeFontSize\",value:function(e,t,a,r){if(null===a||0===a){var n=.7*(e.charsToGlyphs(\"M\",!0)[0].width/1e3);a=Math.max(1,Math.floor(r/(1.5*n)));var i=new RegExp(\"/\".concat(t,\"\\\\s+[0-9.]+\\\\s+Tf\"));-1===this.data.defaultAppearance.search(i)&&(i=new RegExp(\"/\".concat(t,\"\\\\s+Tf\"))),this.data.defaultAppearance=this.data.defaultAppearance.replace(i,\"/\".concat(t,\" \").concat(a,\" Tf\"))}return a}},{key:\"_renderText\",value:function(e,t,a,n,i,o,s){var c,l,u=t.charsToGlyphs(e),h=a/1e3,f=0,d=_createForOfIteratorHelper(u);try{for(d.s();!(c=d.n()).done;){f+=c.value.width*h}}catch(g){d.e(g)}finally{d.f()}return l=(l=1===i?(n-f)/2:2===i?n-f-o:o).toFixed(2),s=s.toFixed(2),\"\".concat(l,\" \").concat(s,\" Td (\").concat((0,r.escapeString)(e),\") Tj\")}}]),a}(g),b=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e))._hasText=!0;var i=e.dict;(0,r.isString)(n.data.fieldValue)||(n.data.fieldValue=\"\");var o=(0,s.getInheritableProperty)({dict:i,key:\"Q\"});(!Number.isInteger(o)||o<0||o>2)&&(o=null),n.data.textAlignment=o;var c=(0,s.getInheritableProperty)({dict:i,key:\"MaxLen\"});return(!Number.isInteger(c)||c<0)&&(c=null),n.data.maxLen=c,n.data.multiLine=n.hasFieldFlag(r.AnnotationFieldFlag.MULTILINE),n.data.comb=n.hasFieldFlag(r.AnnotationFieldFlag.COMB)&&!n.hasFieldFlag(r.AnnotationFieldFlag.MULTILINE)&&!n.hasFieldFlag(r.AnnotationFieldFlag.PASSWORD)&&!n.hasFieldFlag(r.AnnotationFieldFlag.FILESELECT)&&null!==n.data.maxLen,n}return _createClass(a,[{key:\"_getCombAppearance\",value:function(e,t,a,n,i){var o,s=(a/this.data.maxLen).toFixed(2),c=[],l=_createForOfIteratorHelper(t);try{for(l.s();!(o=l.n()).done;){var u=o.value;c.push(\"(\".concat((0,r.escapeString)(u),\") Tj\"))}}catch(f){l.e(f)}finally{l.f()}var h=c.join(\" \".concat(s,\" 0 Td \"));return\"/Tx BMC q BT \"+e+\" 1 0 0 1 \".concat(n,\" \").concat(i,\" Tm \").concat(h)+\" ET Q EMC\"}},{key:\"_getMultilineAppearance\",value:function(e,t,a,r,n,i,o,s,c){var l,u=t.split(/\\r\\n|\\r|\\n/),h=[],f=n-2*s,d=_createForOfIteratorHelper(u);try{for(d.s();!(l=d.n()).done;){var g,p=l.value,m=this._splitLine(p,a,r,f),v=_createForOfIteratorHelper(m);try{for(v.s();!(g=v.n()).done;){var b=g.value,y=0===h.length?s:0;h.push(this._renderText(b,a,r,n,o,y,-r))}}catch(w){v.e(w)}finally{v.f()}}}catch(w){d.e(w)}finally{d.f()}var k=h.join(\"\\n\");return\"/Tx BMC q BT \"+e+\" 1 0 0 1 0 \".concat(i,\" Tm \").concat(k)+\" ET Q EMC\"}},{key:\"_splitLine\",value:function(e,t,a,r){if(e.length<=1)return[e];for(var n=a/1e3,i=t.charsToGlyphs(\" \",!0)[0].width*n,o=[],s=-1,c=0,l=0,u=0,h=e.length;u<h;u++){var f=e.charAt(u);if(\" \"===f)l+i>r?(o.push(e.substring(c,u)),c=u,l=i,s=-1):(l+=i,s=u);else{var d=t.charsToGlyphs(f,!1)[0].width*n;l+d>r?-1!==s?(o.push(e.substring(c,s+1)),c=u=s+1,s=-1,l=0):(o.push(e.substring(c,u)),c=u,l=d):l+=d}}return c<e.length&&o.push(e.substring(c,e.length)),o}}]),a}(v),y=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).checkedAppearance=null,n.uncheckedAppearance=null,n.data.checkBox=!n.hasFieldFlag(r.AnnotationFieldFlag.RADIO)&&!n.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON),n.data.radioButton=n.hasFieldFlag(r.AnnotationFieldFlag.RADIO)&&!n.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON),n.data.pushButton=n.hasFieldFlag(r.AnnotationFieldFlag.PUSHBUTTON),n.data.checkBox?n._processCheckBox(e):n.data.radioButton?n._processRadioButton(e):n.data.pushButton?n._processPushButton(e):(0,r.warn)(\"Invalid field flags for button widget annotation\"),n}return _createClass(a,[{key:\"getOperatorList\",value:function(e,t,r,n){if(this.data.pushButton)return _get(_getPrototypeOf(a.prototype),\"getOperatorList\",this).call(this,e,t,!1,n);if(n){var i;if(i=n[this.data.id]||!1?this.checkedAppearance:this.uncheckedAppearance){var o=this.appearance;this.appearance=i;var s=_get(_getPrototypeOf(a.prototype),\"getOperatorList\",this).call(this,e,t,r,n);return this.appearance=o,s}return Promise.resolve(new c.OperatorList)}return _get(_getPrototypeOf(a.prototype),\"getOperatorList\",this).call(this,e,t,r,n)}},{key:\"save\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,r,n){return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.data.checkBox){e.next=2;break}return e.abrupt(\"return\",this._saveCheckbox(t,r,n));case 2:if(!this.data.radioButton){e.next=4;break}return e.abrupt(\"return\",this._saveRadioButton(t,r,n));case 4:return e.abrupt(\"return\",_get(_getPrototypeOf(a.prototype),\"save\",this).call(this,t,r,n));case 5:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"_saveCheckbox\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n){var o,s,c,l,h,f,d;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=this.data.fieldValue&&\"Off\"!==this.data.fieldValue,s=n[this.data.id],o!==s){e.next=4;break}return e.abrupt(\"return\",null);case 4:if(c=t.xref.fetchIfRef(this.ref),(0,i.isDict)(c)){e.next=7;break}return e.abrupt(\"return\",null);case 7:return l=i.Name.get(s?this.data.exportValue:\"Off\"),c.set(\"V\",l),c.set(\"AS\",l),c.set(\"M\",\"D:\".concat((0,r.getModificationDate)())),h=t.xref.encrypt,f=null,h&&(f=h.createCipherTransform(this.ref.num,this.ref.gen)),d=[\"\".concat(this.ref.num,\" \").concat(this.ref.gen,\" obj\\n\")],(0,u.writeDict)(c,d,f),d.push(\"\\nendobj\\n\"),e.abrupt(\"return\",[{ref:this.ref,data:d.join(\"\")}]);case 18:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"_saveRadioButton\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n){var o,s,c,l,h,f,d,g,p,m,v;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=this.data.fieldValue===this.data.buttonValue,s=n[this.data.id],o!==s){e.next=4;break}return e.abrupt(\"return\",null);case 4:if(c=t.xref.fetchIfRef(this.ref),(0,i.isDict)(c)){e.next=7;break}return e.abrupt(\"return\",null);case 7:return l=i.Name.get(s?this.data.buttonValue:\"Off\"),h=null,f=t.xref.encrypt,s&&((0,i.isRef)(this.parent)?(d=t.xref.fetch(this.parent),g=null,f&&(g=f.createCipherTransform(this.parent.num,this.parent.gen)),d.set(\"V\",l),h=[\"\".concat(this.parent.num,\" \").concat(this.parent.gen,\" obj\\n\")],(0,u.writeDict)(d,h,g),h.push(\"\\nendobj\\n\")):(0,i.isDict)(this.parent)&&this.parent.set(\"V\",l)),c.set(\"AS\",l),c.set(\"M\",\"D:\".concat((0,r.getModificationDate)())),p=null,f&&(p=f.createCipherTransform(this.ref.num,this.ref.gen)),m=[\"\".concat(this.ref.num,\" \").concat(this.ref.gen,\" obj\\n\")],(0,u.writeDict)(c,m,p),m.push(\"\\nendobj\\n\"),v=[{ref:this.ref,data:m.join(\"\")}],null!==h&&v.push({ref:this.parent,data:h.join(\"\")}),e.abrupt(\"return\",v);case 21:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r){return e.apply(this,arguments)}}()},{key:\"_processCheckBox\",value:function(e){var t=e.dict.get(\"AP\");if((0,i.isDict)(t)){var a=t.get(\"N\");if((0,i.isDict)(a)){var r=a.getKeys();r.includes(\"Off\")||r.push(\"Off\"),2===r.length&&(this.data.exportValue=\"Off\"===r[0]?r[1]:r[0],this.checkedAppearance=a.get(this.data.exportValue),this.uncheckedAppearance=a.get(\"Off\")||null)}}}},{key:\"_processRadioButton\",value:function(e){this.data.fieldValue=this.data.buttonValue=null;var t=e.dict.get(\"Parent\");if((0,i.isDict)(t)&&t.has(\"V\")){var a=t.get(\"V\");(0,i.isName)(a)&&(this.parent=e.dict.getRaw(\"Parent\"),this.data.fieldValue=this._decodeFormValue(a))}var r=e.dict.get(\"AP\");if((0,i.isDict)(r)){var n=r.get(\"N\");if((0,i.isDict)(n)){var o,s=_createForOfIteratorHelper(n.getKeys());try{for(s.s();!(o=s.n()).done;){var c=o.value;if(\"Off\"!==c){this.data.buttonValue=c;break}}}catch(l){s.e(l)}finally{s.f()}this.checkedAppearance=n.get(this.data.buttonValue),this.uncheckedAppearance=n.get(\"Off\")||null}}}},{key:\"_processPushButton\",value:function(e){e.dict.has(\"A\")?n.Catalog.parseDestDictionary({destDict:e.dict,resultObj:this.data,docBaseUrl:e.pdfManager.docBaseUrl}):(0,r.warn)(\"Push buttons without action dictionaries are not supported\")}}]),a}(v),k=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.options=[];var i=(0,s.getInheritableProperty)({dict:e.dict,key:\"Opt\"});if(Array.isArray(i))for(var o=e.xref,c=0,l=i.length;c<l;c++){var u=o.fetchIfRef(i[c]),h=Array.isArray(u);n.data.options[c]={exportValue:n._decodeFormValue(h?o.fetchIfRef(u[0]):u),displayValue:n._decodeFormValue(h?o.fetchIfRef(u[1]):u)}}return(0,r.isString)(n.data.fieldValue)?n.data.fieldValue=[n.data.fieldValue]:n.data.fieldValue||(n.data.fieldValue=[]),n.data.combo=n.hasFieldFlag(r.AnnotationFieldFlag.COMBO),n.data.multiSelect=n.hasFieldFlag(r.AnnotationFieldFlag.MULTISELECT),n._hasText=!0,n}return a}(v),w=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a);n=t.call(this,e);var i=e.dict;return n.data.annotationType=r.AnnotationType.TEXT,n.data.hasAppearance?n.data.name=\"NoIcon\":(n.data.rect[1]=n.data.rect[3]-22,n.data.rect[2]=n.data.rect[0]+22,n.data.name=i.has(\"Name\")?i.get(\"Name\").name:\"Note\"),i.has(\"State\")?(n.data.state=i.get(\"State\")||null,n.data.stateModel=i.get(\"StateModel\")||null):(n.data.state=null,n.data.stateModel=null),n}return a}(m),C=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var i;_classCallCheck(this,a),(i=t.call(this,e)).data.annotationType=r.AnnotationType.LINK;var o=f(e.dict,i.rectangle);return o&&(i.data.quadPoints=o),n.Catalog.parseDestDictionary({destDict:e.dict,resultObj:i.data,docBaseUrl:e.pdfManager.docBaseUrl}),i}return a}(g),S=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.POPUP;var o=e.dict.get(\"Parent\");if(!o)return(0,r.warn)(\"Popup annotation has a missing or invalid parent annotation.\"),_possibleConstructorReturn(n);var s=o.get(\"Subtype\");n.data.parentType=(0,i.isName)(s)?s.name:null;var c=e.dict.getRaw(\"Parent\");n.data.parentId=(0,i.isRef)(c)?c.toString():null;var l=o.get(\"RT\");if((0,i.isName)(l,r.AnnotationReplyType.GROUP)&&(o=o.get(\"IRT\")),o.has(\"M\")?(n.setModificationDate(o.get(\"M\")),n.data.modificationDate=n.modificationDate):n.data.modificationDate=null,o.has(\"C\")?(n.setColor(o.getArray(\"C\")),n.data.color=n.color):n.data.color=null,!n.viewable){var u=o.get(\"F\");n._isViewable(u)&&n.setFlags(u)}return n.data.title=(0,r.stringToPDFString)(o.get(\"T\")||\"\"),n.data.contents=(0,r.stringToPDFString)(o.get(\"Contents\")||\"\"),n}return a}(g),x=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.FREETEXT,n}return a}(m),A=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.LINE,n.data.lineCoordinates=r.Util.normalizeRect(e.dict.getArray(\"L\")),n}return a}(m),I=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.SQUARE,n}return a}(m),F=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.CIRCLE,n}return a}(m),T=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.POLYLINE;var i=e.dict.getArray(\"Vertices\");n.data.vertices=[];for(var o=0,s=i.length;o<s;o+=2)n.data.vertices.push({x:i[o],y:i[o+1]});return n}return a}(m),O=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.POLYGON,n}return a}(T),E=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.CARET,n}return a}(m),P=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.INK;var i=e.xref,o=e.dict.getArray(\"InkList\");n.data.inkLists=[];for(var s=0,c=o.length;s<c;++s){n.data.inkLists.push([]);for(var l=0,u=o[s].length;l<u;l+=2)n.data.inkLists[s].push({x:i.fetchIfRef(o[s][l]),y:i.fetchIfRef(o[s][l+1])})}return n}return a}(m),_=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.HIGHLIGHT;var i=f(e.dict,n.rectangle);return i&&(n.data.quadPoints=i),n}return a}(m),B=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.UNDERLINE;var i=f(e.dict,n.rectangle);return i&&(n.data.quadPoints=i),n}return a}(m),M=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.SQUIGGLY;var i=f(e.dict,n.rectangle);return i&&(n.data.quadPoints=i),n}return a}(m),D=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;_classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.STRIKEOUT;var i=f(e.dict,n.rectangle);return i&&(n.data.quadPoints=i),n}return a}(m),R=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var n;return _classCallCheck(this,a),(n=t.call(this,e)).data.annotationType=r.AnnotationType.STAMP,n}return a}(m),N=function(e){_inherits(a,e);var t=_createSuper(a);function a(e){var i;_classCallCheck(this,a),i=t.call(this,e);var o=new n.FileSpec(e.dict.get(\"FS\"),e.xref);return i.data.annotationType=r.AnnotationType.FILEATTACHMENT,i.data.file=o.serializable,i}return a}(m)},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.OperatorList=void 0;var r=a(2),n=function(){function e(e,t,a,r,n){for(var i=e,o=0,s=t.length-1;o<s;o++){var c=t[o];i=i[c]||(i[c]=[])}i[t[t.length-1]]={checkFn:a,iterateFn:r,processFn:n}}var t=[];function a(e){this.queue=e,this.state=null,this.context={iCurr:0,fnArray:e.fnArray,argsArray:e.argsArray},this.match=null,this.lastProcessed=0}return e(t,[r.OPS.save,r.OPS.transform,r.OPS.paintInlineImageXObject,r.OPS.restore],null,(function(e,t){var a=e.fnArray,n=(t-(e.iCurr-3))%4;switch(n){case 0:return a[t]===r.OPS.save;case 1:return a[t]===r.OPS.transform;case 2:return a[t]===r.OPS.paintInlineImageXObject;case 3:return a[t]===r.OPS.restore}throw new Error(\"iterateInlineImageGroup - invalid pos: \".concat(n))}),(function(e,t){var a=e.fnArray,n=e.argsArray,i=e.iCurr,o=i-3,s=i-2,c=i-1,l=Math.min(Math.floor((t-o)/4),200);if(l<10)return t-(t-o)%4;var u,h=0,f=[],d=0,g=1,p=1;for(u=0;u<l;u++){var m=n[s+(u<<2)],v=n[c+(u<<2)][0];g+v.width>1e3&&(h=Math.max(h,g),p+=d+2,g=0,d=0),f.push({transform:m,x:g,y:p,w:v.width,h:v.height}),g+=v.width+2,d=Math.max(d,v.height)}var b=Math.max(h,g)+1,y=p+d+1,k=new Uint8ClampedArray(b*y*4),w=b<<2;for(u=0;u<l;u++){var C=n[c+(u<<2)][0].data,S=f[u].w<<2,x=0,A=f[u].x+f[u].y*b<<2;k.set(C.subarray(0,S),A-w);for(var I=0,F=f[u].h;I<F;I++)k.set(C.subarray(x,x+S),A),x+=S,A+=w;for(k.set(C.subarray(x-S,x),A);A>=0;)C[A-4]=C[A],C[A-3]=C[A+1],C[A-2]=C[A+2],C[A-1]=C[A+3],C[A+S]=C[A+S-4],C[A+S+1]=C[A+S-3],C[A+S+2]=C[A+S-2],C[A+S+3]=C[A+S-1],A-=w}return a.splice(o,4*l,r.OPS.paintInlineImageXObjectGroup),n.splice(o,4*l,[{width:b,height:y,kind:r.ImageKind.RGBA_32BPP,data:k},f]),o+1})),e(t,[r.OPS.save,r.OPS.transform,r.OPS.paintImageMaskXObject,r.OPS.restore],null,(function(e,t){var a=e.fnArray,n=(t-(e.iCurr-3))%4;switch(n){case 0:return a[t]===r.OPS.save;case 1:return a[t]===r.OPS.transform;case 2:return a[t]===r.OPS.paintImageMaskXObject;case 3:return a[t]===r.OPS.restore}throw new Error(\"iterateImageMaskGroup - invalid pos: \".concat(n))}),(function(e,t){var a,n=e.fnArray,i=e.argsArray,o=e.iCurr,s=o-3,c=o-2,l=o-1,u=Math.floor((t-s)/4);if((u=function(e,t,a,n){for(var i=e+2,o=0;o<t;o++){var s=n[i+4*o],c=1===s.length&&s[0];if(!c||1!==c.width||1!==c.height||c.data.length&&(1!==c.data.length||0!==c.data[0]))break;a[i+4*o]=r.OPS.paintSolidColorImageMask}return t-o}(s,u,n,i))<10)return t-(t-s)%4;var h,f,d=!1,g=i[l][0],p=i[c][0],m=i[c][1],v=i[c][2],b=i[c][3];if(m===v){d=!0,h=c+4;var y=l+4;for(a=1;a<u;a++,h+=4,y+=4)if(f=i[h],i[y][0]!==g||f[0]!==p||f[1]!==m||f[2]!==v||f[3]!==b){a<10?d=!1:u=a;break}}if(d){u=Math.min(u,1e3);var k=new Float32Array(2*u);for(h=c,a=0;a<u;a++,h+=4)f=i[h],k[a<<1]=f[4],k[1+(a<<1)]=f[5];n.splice(s,4*u,r.OPS.paintImageMaskXObjectRepeat),i.splice(s,4*u,[g,p,m,v,b,k])}else{u=Math.min(u,100);var w=[];for(a=0;a<u;a++){f=i[c+(a<<2)];var C=i[l+(a<<2)][0];w.push({data:C.data,width:C.width,height:C.height,transform:f})}n.splice(s,4*u,r.OPS.paintImageMaskXObjectGroup),i.splice(s,4*u,[w])}return s+1})),e(t,[r.OPS.save,r.OPS.transform,r.OPS.paintImageXObject,r.OPS.restore],(function(e){var t=e.argsArray,a=e.iCurr-2;return 0===t[a][1]&&0===t[a][2]}),(function(e,t){var a=e.fnArray,n=e.argsArray,i=(t-(e.iCurr-3))%4;switch(i){case 0:return a[t]===r.OPS.save;case 1:if(a[t]!==r.OPS.transform)return!1;var o=e.iCurr-2,s=n[o][0],c=n[o][3];return n[t][0]===s&&0===n[t][1]&&0===n[t][2]&&n[t][3]===c;case 2:if(a[t]!==r.OPS.paintImageXObject)return!1;var l=n[e.iCurr-1][0];return n[t][0]===l;case 3:return a[t]===r.OPS.restore}throw new Error(\"iterateImageGroup - invalid pos: \".concat(i))}),(function(e,t){var a=e.fnArray,n=e.argsArray,i=e.iCurr,o=i-3,s=i-2,c=n[i-1][0],l=n[s][0],u=n[s][3],h=Math.min(Math.floor((t-o)/4),1e3);if(h<3)return t-(t-o)%4;for(var f=new Float32Array(2*h),d=s,g=0;g<h;g++,d+=4){var p=n[d];f[g<<1]=p[4],f[1+(g<<1)]=p[5]}var m=[c,l,u,f];return a.splice(o,4*h,r.OPS.paintImageXObjectRepeat),n.splice(o,4*h,m),o+1})),e(t,[r.OPS.beginText,r.OPS.setFont,r.OPS.setTextMatrix,r.OPS.showText,r.OPS.endText],null,(function(e,t){var a=e.fnArray,n=e.argsArray,i=(t-(e.iCurr-4))%5;switch(i){case 0:return a[t]===r.OPS.beginText;case 1:return a[t]===r.OPS.setFont;case 2:return a[t]===r.OPS.setTextMatrix;case 3:if(a[t]!==r.OPS.showText)return!1;var o=e.iCurr-3,s=n[o][0],c=n[o][1];return n[t][0]===s&&n[t][1]===c;case 4:return a[t]===r.OPS.endText}throw new Error(\"iterateShowTextGroup - invalid pos: \".concat(i))}),(function(e,t){var a=e.fnArray,r=e.argsArray,n=e.iCurr,i=n-4,o=n-3,s=n-2,c=n-1,l=n,u=r[o][0],h=r[o][1],f=Math.min(Math.floor((t-i)/5),1e3);if(f<3)return t-(t-i)%5;var d=i;i>=4&&a[i-4]===a[o]&&a[i-3]===a[s]&&a[i-2]===a[c]&&a[i-1]===a[l]&&r[i-4][0]===u&&r[i-4][1]===h&&(f++,d-=5);for(var g=d+4,p=1;p<f;p++)a.splice(g,3),r.splice(g,3),g+=2;return g+1})),a.prototype={_optimize:function(){var e=this.queue.fnArray,a=this.lastProcessed,r=e.length,n=this.state,i=this.match;if(n||i||a+1!==r||t[e[a]]){for(var o=this.context;a<r;){if(i){if((0,i.iterateFn)(o,a)){a++;continue}if(a=(0,i.processFn)(o,a+1),i=null,n=null,a>=(r=e.length))break}(n=(n||t)[e[a]])&&!Array.isArray(n)?(o.iCurr=a,a++,!n.checkFn||(0,n.checkFn)(o)?(i=n,n=null):n=null):a++}this.state=n,this.match=i,this.lastProcessed=a}else this.lastProcessed=r},push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t),this._optimize()},flush:function(){for(;this.match;){var e=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,e),this.match=null,this.state=null,this._optimize()}},reset:function(){this.state=null,this.match=null,this.lastProcessed=0}},a}(),i=function(){function e(e){this.queue=e}return e.prototype={push:function(e,t){this.queue.fnArray.push(e),this.queue.argsArray.push(t)},flush:function(){},reset:function(){}},e}(),o=function(){function e(e,t){this._streamSink=t,this.fnArray=[],this.argsArray=[],this.optimizer=t&&\"oplist\"!==e?new n(this):new i(this),this.dependencies=new Set,this._totalLength=0,this.weight=0,this._resolved=t?null:Promise.resolve()}return e.prototype={get length(){return this.argsArray.length},get ready(){return this._resolved||this._streamSink.ready},get totalLength(){return this._totalLength+this.length},addOp:function(e,t){this.optimizer.push(e,t),this.weight++,this._streamSink&&(this.weight>=1e3||this.weight>=995&&(e===r.OPS.restore||e===r.OPS.endText))&&this.flush()},addDependency:function(e){this.dependencies.has(e)||(this.dependencies.add(e),this.addOp(r.OPS.dependency,[e]))},addDependencies:function(e){var t,a=_createForOfIteratorHelper(e);try{for(a.s();!(t=a.n()).done;){var r=t.value;this.addDependency(r)}}catch(n){a.e(n)}finally{a.f()}},addOpList:function(t){if(t instanceof e){var a,n=_createForOfIteratorHelper(t.dependencies);try{for(n.s();!(a=n.n()).done;){var i=a.value;this.dependencies.add(i)}}catch(c){n.e(c)}finally{n.f()}for(var o=0,s=t.length;o<s;o++)this.addOp(t.fnArray[o],t.argsArray[o])}else(0,r.warn)('addOpList - ignoring invalid \"opList\" parameter.')},getIR:function(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}},get _transfers(){for(var e=[],t=this.fnArray,a=this.argsArray,n=this.length,i=0;i<n;i++)switch(t[i]){case r.OPS.paintInlineImageXObject:case r.OPS.paintInlineImageXObjectGroup:case r.OPS.paintImageMaskXObject:var o=a[i][0];o.cached||e.push(o.data.buffer)}return e},flush:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.optimizer.flush();var t=this.length;this._totalLength+=t,this._streamSink.enqueue({fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:e,length:t},1,this._transfers),this.dependencies.clear(),this.fnArray.length=0,this.argsArray.length=0,this.weight=0,this.optimizer.reset()}},e}();t.OperatorList=o},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.writeDict=o,t.incrementalUpdate=function(e,t,a){var s,u,h=new n.Dict(null),f=t.newRef,d=e[e.length-1];10===d||13===d?(s=[],u=e.length):(s=[\"\\n\"],u=e.length+1);h.set(\"Size\",f.num+1),h.set(\"Prev\",t.startXRef),h.set(\"Type\",n.Name.get(\"XRef\")),null!==t.rootRef&&h.set(\"Root\",t.rootRef);null!==t.infoRef&&h.set(\"Info\",t.infoRef);null!==t.encrypt&&h.set(\"Encrypt\",t.encrypt);a.push({ref:f,data:\"\"}),a=a.sort((function(e,t){return e.ref.num-t.ref.num}));var g,p=[[0,1,65535]],m=[0,1],v=0,b=_createForOfIteratorHelper(a);try{for(b.s();!(g=b.n()).done;){var y=g.value,k=y.ref,w=y.data;v=Math.max(v,u),p.push([1,u,Math.min(k.gen,65535)]),u+=w.length,m.push(k.num),m.push(1),s.push(w)}}catch(L){b.e(L)}finally{b.f()}if(h.set(\"Index\",m),0!==t.fileIds.length){var C=function(e,t){for(var a=Math.floor(Date.now()/1e3),n=t.filename||\"\",o=[a.toString(),n,e.toString()],s=o.reduce((function(e,t){return e+t.length}),0),c=0,u=Object.values(t.info);c<u.length;c++){var h=u[c];o.push(h),s+=h.length}for(var f=new Uint8Array(s),d=0,g=0,p=o;g<p.length;g++){var m=p[g];l(m,d,f),d+=m.length}return(0,r.bytesToString)((0,i.calculateMD5)(f))}(u,t);h.set(\"ID\",[t.fileIds[0],C])}var S=[1,Math.ceil(Math.log2(v)/8),2],x=(S[0]+S[1]+S[2])*p.length;h.set(\"W\",S),h.set(\"Length\",x),s.push(\"\".concat(f.num,\" \").concat(f.gen,\" obj\\n\")),o(h,s,null),s.push(\" stream\\n\");var A=s.reduce((function(e,t){return e+t.length}),0),I=\"\\nendstream\\nendobj\\nstartxref\\n\".concat(u,\"\\n%%EOF\\n\"),F=new Uint8Array(e.length+A+x+I.length);F.set(e);var T,O=e.length,E=_createForOfIteratorHelper(s);try{for(E.s();!(T=E.n()).done;){var P=T.value;l(P,O,F),O+=P.length}}catch(L){E.e(L)}finally{E.f()}for(var _=0,B=p;_<B.length;_++){var M=_slicedToArray(B[_],3),D=M[0],R=M[1],N=M[2];O=c(D,S[0],O,F),O=c(R,S[1],O,F),O=c(N,S[2],O,F)}return l(I,O,F),F};var r=a(2),n=a(5),i=a(22);function o(e,t,a){t.push(\"<<\");var r,n=_createForOfIteratorHelper(e.getKeys());try{for(n.s();!(r=n.n()).done;){var i=r.value;t.push(\" /\".concat(i,\" \")),s(e.getRaw(i),t,a)}}catch(o){n.e(o)}finally{n.f()}t.push(\">>\")}function s(e,t,a){(0,n.isName)(e)?t.push(\"/\".concat(e.name)):(0,n.isRef)(e)?t.push(\"\".concat(e.num,\" \").concat(e.gen,\" R\")):Array.isArray(e)?function(e,t,a){t.push(\"[\");var r,n=!0,i=_createForOfIteratorHelper(e);try{for(i.s();!(r=i.n()).done;){var o=r.value;n?n=!1:t.push(\" \"),s(o,t,a)}}catch(c){i.e(c)}finally{i.f()}t.push(\"]\")}(e,t,a):\"string\"===typeof e?(null!==a&&(e=a.encryptString(e)),t.push(\"(\".concat((0,r.escapeString)(e),\")\"))):\"number\"===typeof e?t.push(function(e){if(Number.isInteger(e))return e.toString();var t=Math.round(100*e);return t%100===0?(t/100).toString():t%10===0?e.toFixed(1):e.toFixed(2)}(e)):(0,n.isDict)(e)?o(e,t,a):(0,n.isStream)(e)&&function(e,t,a){o(e.dict,t,a),t.push(\" stream\\n\");var n=(0,r.bytesToString)(e.getBytes());null!==a&&(n=a.encryptString(n)),t.push(n),t.push(\"\\nendstream\\n\")}(e,t,a)}function c(e,t,a,r){for(var n=t+a-1;n>a-1;n--)r[n]=255&e,e>>=8;return a+t}function l(e,t,a){for(var r=0,n=e.length;r<n;r++)a[t+r]=255&e.charCodeAt(r)}},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PartialEvaluator=void 0;var r=a(2),n=a(29),i=a(5),o=a(30),s=a(33),c=a(8),l=a(36),u=a(35),h=a(39),f=a(40),d=a(11),g=a(24),p=a(42),m=a(23),v=a(12),b=a(34),y=a(43),k=a(44),w=a(26),C=a(45),S=Object.freeze({maxImageSize:-1,disableFontFace:!1,ignoreErrors:!1,isEvalSupported:!0,fontExtraProperties:!1}),x=1,A=2,I=Promise.resolve();function F(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Array.isArray(e)){for(var a=0,n=e.length;a<n;a++){var o=F(e[a],!0);if(o)return o}return(0,r.warn)(\"Unsupported blend mode Array: \".concat(e)),\"source-over\"}if(!(0,i.isName)(e))return t?null:\"source-over\";switch(e.name){case\"Normal\":case\"Compatible\":return\"source-over\";case\"Multiply\":return\"multiply\";case\"Screen\":return\"screen\";case\"Overlay\":return\"overlay\";case\"Darken\":return\"darken\";case\"Lighten\":return\"lighten\";case\"ColorDodge\":return\"color-dodge\";case\"ColorBurn\":return\"color-burn\";case\"HardLight\":return\"hard-light\";case\"SoftLight\":return\"soft-light\";case\"Difference\":return\"difference\";case\"Exclusion\":return\"exclusion\";case\"Hue\":return\"hue\";case\"Saturation\":return\"saturation\";case\"Color\":return\"color\";case\"Luminosity\":return\"luminosity\"}return t?null:((0,r.warn)(\"Unsupported blend mode: \".concat(e.name)),\"source-over\")}var T=function(){function e(){_classCallCheck(this,e),this.reset()}return _createClass(e,[{key:\"check\",value:function(){return!(++this.checked<e.CHECK_TIME_EVERY)&&(this.checked=0,this.endTime<=Date.now())}},{key:\"reset\",value:function(){this.endTime=Date.now()+e.TIME_SLOT_DURATION_MS,this.checked=0}}],[{key:\"TIME_SLOT_DURATION_MS\",get:function(){return(0,r.shadow)(this,\"TIME_SLOT_DURATION_MS\",20)}},{key:\"CHECK_TIME_EVERY\",get:function(){return(0,r.shadow)(this,\"CHECK_TIME_EVERY\",100)}}]),e}(),O=function(){function e(t){var a=t.xref,r=t.handler,n=t.pageIndex,i=t.idFactory,o=t.fontCache,s=t.builtInCMapCache,c=t.globalImageCache,l=t.options,u=void 0===l?null:l;_classCallCheck(this,e),this.xref=a,this.handler=r,this.pageIndex=n,this.idFactory=i,this.fontCache=o,this.builtInCMapCache=s,this.globalImageCache=c,this.options=u||S,this.parsingType3Font=!1,this._fetchBuiltInCMapBound=this.fetchBuiltInCMap.bind(this)}return _createClass(e,[{key:\"_pdfFunctionFactory\",get:function(){var e=new f.PDFFunctionFactory({xref:this.xref,isEvalSupported:this.options.isEvalSupported});return(0,r.shadow)(this,\"_pdfFunctionFactory\",e)}},{key:\"clone\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:S,t=Object.create(this);return t.options=e,t}},{key:\"hasBlendModes\",value:function(e){if(!(e instanceof i.Dict))return!1;var t=new i.RefSet;e.objId&&t.put(e.objId);for(var a=[e],n=this.xref;a.length;){var o=a.shift(),s=o.get(\"ExtGState\");if(s instanceof i.Dict){var l,u=_createForOfIteratorHelper(s.getRawValues());try{for(u.s();!(l=u.n()).done;){var h=l.value;if(h instanceof i.Ref){if(t.has(h))continue;try{h=n.fetch(h)}catch(w){if(w instanceof c.MissingDataException)throw w;t.put(h),(0,r.info)('hasBlendModes - ignoring ExtGState: \"'.concat(w,'\".'));continue}}if(h instanceof i.Dict){h.objId&&t.put(h.objId);var f=h.get(\"BM\");if(f instanceof i.Name){if(\"Normal\"!==f.name)return!0}else if(void 0!==f&&Array.isArray(f)){var d,g=_createForOfIteratorHelper(f);try{for(g.s();!(d=g.n()).done;){var p=d.value;if(p instanceof i.Name&&\"Normal\"!==p.name)return!0}}catch(C){g.e(C)}finally{g.f()}}}}}catch(C){u.e(C)}finally{u.f()}}var m=o.get(\"XObject\");if(m instanceof i.Dict){var v,b=_createForOfIteratorHelper(m.getRawValues());try{for(b.s();!(v=b.n()).done;){var y=v.value;if(y instanceof i.Ref){if(t.has(y))continue;try{y=n.fetch(y)}catch(w){if(w instanceof c.MissingDataException)throw w;t.put(y),(0,r.info)('hasBlendModes - ignoring XObject: \"'.concat(w,'\".'));continue}}if((0,i.isStream)(y)){y.dict.objId&&t.put(y.dict.objId);var k=y.dict.get(\"Resources\");k instanceof i.Dict&&(k.objId&&t.has(k.objId)||(a.push(k),k.objId&&t.put(k.objId)))}}}catch(C){b.e(C)}finally{b.f()}}}return!1}},{key:\"fetchBuiltInCMap\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){var a,n,i,o;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(a=this.builtInCMapCache.get(t))){e.next=3;break}return e.abrupt(\"return\",a);case 3:return n=this.handler.sendWithStream(\"FetchBuiltInCMap\",{name:t}),i=n.getReader(),e.next=7,new Promise((function(e,t){!function a(){i.read().then((function(t){var r=t.value;t.done||(e(r),a())}),t)}()}));case 7:return(o=e.sent).compressionType!==r.CMapCompressionType.NONE&&this.builtInCMapCache.set(t,o),e.abrupt(\"return\",o);case 10:case\"end\":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:\"buildFormXObject\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n,o,s,c,l){var u,h,f,d,g,p,v,b,y,k;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u=a.dict,h=u.getArray(\"Matrix\"),f=u.getArray(\"BBox\"),f=Array.isArray(f)&&4===f.length?r.Util.normalizeRect(f):null,d=null,!u.has(\"OC\")){e.next=10;break}return e.next=8,this.parseMarkedContentProps(u.get(\"OC\"),t);case 8:d=e.sent,o.addOp(r.OPS.beginMarkedContentProps,[\"OC\",d]);case 10:if(!(g=u.get(\"Group\"))){e.next=30;break}if(p={matrix:h,bbox:f,smask:n,isolated:!1,knockout:!1},v=g.get(\"S\"),b=null,!(0,i.isName)(v,\"Transparency\")){e.next=28;break}if(p.isolated=g.get(\"I\")||!1,p.knockout=g.get(\"K\")||!1,!g.has(\"CS\")){e.next=28;break}if(y=g.getRaw(\"CS\"),!(k=m.ColorSpace.getCached(y,this.xref,l))){e.next=25;break}b=k,e.next=28;break;case 25:return e.next=27,this.parseColorSpace({cs:y,resources:t,localColorSpaceCache:l});case 27:b=e.sent;case 28:n&&n.backdrop&&(b=b||m.ColorSpace.singletons.rgb,n.backdrop=b.getRgb(n.backdrop,0)),o.addOp(r.OPS.beginGroup,[p]);case 30:return o.addOp(r.OPS.paintFormXObjectBegin,[h,f]),e.abrupt(\"return\",this.getOperatorList({stream:a,task:s,resources:u.get(\"Resources\")||t,operatorList:o,initialState:c}).then((function(){o.addOp(r.OPS.paintFormXObjectEnd,[]),g&&o.addOp(r.OPS.endGroup,[p]),d&&o.addOp(r.OPS.endMarkedContent,[])})));case 32:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r,n,i,o,s){return e.apply(this,arguments)}}()},{key:\"_sendImgData\",value:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=t?[t.data.buffer]:null;return this.parsingType3Font||a?this.handler.send(\"commonobj\",[e,\"Image\",t],r):this.handler.send(\"obj\",[e,this.pageIndex,\"Image\",t],r)}},{key:\"buildPaintImageXObject\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){var a,n,i,o,s,c,l,u,h,f,d,g,p,m,b,y,k,w,S,x,A,I,F,T,O,E=this;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=t.resources,n=t.image,i=t.isInline,o=void 0!==i&&i,s=t.operatorList,c=t.cacheKey,l=t.localImageCache,u=t.localColorSpaceCache,h=n.dict,f=h.objId,d=h.get(\"Width\",\"W\"),g=h.get(\"Height\",\"H\"),d&&(0,r.isNum)(d)&&g&&(0,r.isNum)(g)){e.next=8;break}return(0,r.warn)(\"Image dimensions are missing, or not numbers.\"),e.abrupt(\"return\",void 0);case 8:if(!(-1!==(p=this.options.maxImageSize)&&d*g>p)){e.next=12;break}return(0,r.warn)(\"Image exceeded maximum allowed size and was removed.\"),e.abrupt(\"return\",void 0);case 12:if(!(h.get(\"ImageMask\",\"IM\")||!1)){e.next=25;break}return y=h.get(\"Width\",\"W\"),k=h.get(\"Height\",\"H\"),w=y+7>>3,S=n.getBytes(w*k,!0),x=h.getArray(\"Decode\",\"D\"),(m=C.PDFImage.createMask({imgArray:S,width:y,height:k,imageIsFromDecodeStream:n instanceof v.DecodeStream,inverseDecode:!!x&&x[0]>0})).cached=!!c,b=[m],s.addOp(r.OPS.paintImageMaskXObject,b),c&&l.set(c,f,{fn:r.OPS.paintImageMaskXObject,args:b}),e.abrupt(\"return\",void 0);case 25:if(A=h.get(\"SMask\",\"SM\")||!1,I=h.get(\"Mask\")||!1,200,!o||A||I||!(d+g<200)){e.next=33;break}return F=new C.PDFImage({xref:this.xref,res:a,image:n,isInline:o,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache:u}),m=F.createImageData(!0),s.addOp(r.OPS.paintInlineImageXObject,[m]),e.abrupt(\"return\",void 0);case 33:return T=\"img_\".concat(this.idFactory.createObjId()),O=!1,this.parsingType3Font?T=\"\".concat(this.idFactory.getDocId(),\"_type3_\").concat(T):f&&(O=this.globalImageCache.shouldCache(f,this.pageIndex))&&(T=\"\".concat(this.idFactory.getDocId(),\"_\").concat(T)),s.addDependency(T),b=[T,d,g],C.PDFImage.buildImage({xref:this.xref,res:a,image:n,isInline:o,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache:u}).then((function(e){return m=e.createImageData(!1),E._sendImgData(T,m,O)})).catch((function(e){return(0,r.warn)('Unable to decode image \"'.concat(T,'\": \"').concat(e,'\".')),E._sendImgData(T,null,O)})),s.addOp(r.OPS.paintImageXObject,b),c&&(l.set(c,f,{fn:r.OPS.paintImageXObject,args:b}),f&&((0,r.assert)(!o,\"Cannot cache an inline image globally.\"),this.globalImageCache.addPageIndex(f,this.pageIndex),O&&this.globalImageCache.setData(f,{objId:T,fn:r.OPS.paintImageXObject,args:b}))),e.abrupt(\"return\",void 0);case 41:case\"end\":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:\"handleSMask\",value:function(e,t,a,r,n,i){var o=e.get(\"G\"),s={subtype:e.get(\"S\").name,backdrop:e.get(\"BC\")},c=e.get(\"TR\");if((0,f.isPDFFunction)(c)){for(var l=this._pdfFunctionFactory.create(c),u=new Uint8Array(256),h=new Float32Array(1),d=0;d<256;d++)h[0]=d/255,l(h,0,h,0),u[d]=255*h[0]|0;s.transferMap=u}return this.buildFormXObject(t,o,s,a,r,n.state.clone(),i)}},{key:\"handleTransferFunction\",value:function(e){var t;if(Array.isArray(e))t=e;else{if(!(0,f.isPDFFunction)(e))return null;t=[e]}var a,r=[],n=0,o=0,s=_createForOfIteratorHelper(t);try{for(s.s();!(a=s.n()).done;){var c=a.value,l=this.xref.fetchIfRef(c);if(n++,(0,i.isName)(l,\"Identity\"))r.push(null);else{if(!(0,f.isPDFFunction)(l))return null;for(var u=this._pdfFunctionFactory.create(l),h=new Uint8Array(256),d=new Float32Array(1),g=0;g<256;g++)d[0]=g/255,u(d,0,d,0),h[g]=255*d[0]|0;r.push(h),o++}}}catch(p){s.e(p)}finally{s.f()}return 1!==n&&4!==n||0===o?null:r}},{key:\"handleTilingType\",value:function(e,t,a,n,o,s,c){var l=this,u=new w.OperatorList,f=i.Dict.merge({xref:this.xref,dictArray:[o.get(\"Resources\"),a]});return this.getOperatorList({stream:n,task:c,resources:f,operatorList:u}).then((function(){return(0,h.getTilingPatternIR)({fnArray:u.fnArray,argsArray:u.argsArray},o,t)})).then((function(t){s.addDependencies(u.dependencies),s.addOp(e,t)}),(function(e){if(!(e instanceof r.AbortException)){if(l.options.ignoreErrors)return l.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorTilingPattern}),void(0,r.warn)('handleTilingType - ignoring pattern: \"'.concat(e,'\".'));throw e}}))}},{key:\"handleSetFont\",value:function(e,t,a,n,i,s){var c,l=this,u=0;return t&&(t=t.slice(),c=t[0].name,u=t[1]),this.loadFont(c,a,e).then((function(t){return t.font.isType3Font?t.loadType3Data(l,e,i).then((function(){return n.addDependencies(t.type3Dependencies),t})).catch((function(e){return l.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorFontLoadType3}),new E({loadedName:\"g_font_error\",font:new o.ErrorFont(\"Type3 font load error: \".concat(e)),dict:t.font,extraProperties:l.options.fontExtraProperties})})):t})).then((function(e){return s.font=e.font,s.fontSize=u,s.fontName=c,e.send(l.handler),e.loadedName}))}},{key:\"handleText\",value:function(t,a){var n=a.font,i=n.charsToGlyphs(t);n.data&&((!!(a.textRenderingMode&r.TextRenderingMode.ADD_TO_PATH_FLAG)||\"Pattern\"===a.fillColorSpace.name||n.disableFontFace||this.options.disableFontFace)&&e.buildFontPaths(n,i,this.handler));return i}},{key:\"ensureStateFont\",value:function(e){if(!e.font){var t=new r.FormatError(\"Missing setFont (Tf) operator before text rendering operator.\");if(this.options.ignoreErrors)return this.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorFontState}),void(0,r.warn)('ensureStateFont: \"'.concat(t,'\".'));throw t}}},{key:\"setGState\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){var a,n,o,s,c,l,u,h,f,d,g,p,m,v,b,y,k=this;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(a=t.resources,n=t.gState,o=t.operatorList,s=t.cacheKey,c=t.task,l=t.stateManager,u=t.localGStateCache,h=t.localColorSpaceCache,f=n.objId,d=!0,g=[],p=n.getKeys(),m=Promise.resolve(),v=function(){var e=p[b],t=n.get(e);switch(e){case\"Type\":break;case\"LW\":case\"LC\":case\"LJ\":case\"ML\":case\"D\":case\"RI\":case\"FL\":case\"CA\":case\"ca\":g.push([e,t]);break;case\"Font\":d=!1,m=m.then((function(){return k.handleSetFont(a,null,t[0],o,c,l.state).then((function(a){o.addDependency(a),g.push([e,[a,t[1]]])}))}));break;case\"BM\":g.push([e,F(t)]);break;case\"SMask\":if((0,i.isName)(t,\"None\")){g.push([e,!1]);break}(0,i.isDict)(t)?(d=!1,m=m.then((function(){return k.handleSMask(t,a,o,c,l,h)})),g.push([e,!0])):(0,r.warn)(\"Unsupported SMask type\");break;case\"TR\":var s=k.handleTransferFunction(t);g.push([e,s]);break;case\"OP\":case\"op\":case\"OPM\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":case\"TR2\":case\"HT\":case\"SM\":case\"SA\":case\"AIS\":case\"TK\":(0,r.info)(\"graphic state operator \"+e);break;default:(0,r.info)(\"Unknown graphic state operator \"+e)}},b=0,y=p.length;b<y;b++)v();return e.abrupt(\"return\",m.then((function(){g.length>0&&o.addOp(r.OPS.setGState,[g]),d&&u.set(s,f,g)})));case 9:case\"end\":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()},{key:\"loadFont\",value:function(t,a,n){var s,c=this,l=function(){return Promise.resolve(new E({loadedName:\"g_font_error\",font:new o.ErrorFont('Font \"'.concat(t,'\" is not available.')),dict:a,extraProperties:c.options.fontExtraProperties}))},u=this.xref;if(a){if(!(0,i.isRef)(a))throw new r.FormatError('The \"font\" object should be a reference.');s=a}else{var h=n.get(\"Font\");h&&(s=h.getRaw(t))}if(!s){var f='Font \"'.concat(t||a&&a.toString(),'\" is not available');if(!this.options.ignoreErrors&&!this.parsingType3Font)return(0,r.warn)(\"\".concat(f,\".\")),l();this.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorFontMissing}),(0,r.warn)(\"\".concat(f,\" -- attempting to fallback to a default font.\")),s=e.fallbackFontDict}if(this.fontCache.has(s))return this.fontCache.get(s);if(a=u.fetchIfRef(s),!(0,i.isDict)(a))return l();if(a.translated)return a.translated;var d,g,p=(0,r.createPromiseCapability)(),m=this.preEvaluateFont(a),v=m.descriptor,b=m.hash,y=(0,i.isRef)(s);if(y&&(d=\"f\".concat(s.toString())),b&&(0,i.isDict)(v)){v.fontAliases||(v.fontAliases=Object.create(null));var k=v.fontAliases;if(k[b]){var w=k[b].aliasRef;if(y&&w&&this.fontCache.has(w))return this.fontCache.putAlias(s,w),this.fontCache.get(s)}else k[b]={fontID:this.idFactory.createFontId()};y&&(k[b].aliasRef=s),d=k[b].fontID}y?this.fontCache.put(s,p.promise):(d||(d=this.idFactory.createFontId()),this.fontCache.put(\"id_\".concat(d),p.promise)),(0,r.assert)(d&&d.startsWith(\"f\"),'The \"fontID\" must be (correctly) defined.'),a.loadedName=\"\".concat(this.idFactory.getDocId(),\"_\").concat(d),a.translated=p.promise;try{g=this.translateFont(m)}catch(C){g=Promise.reject(C)}return g.then((function(e){void 0!==e.fontType&&(u.stats.fontTypes[e.fontType]=!0);p.resolve(new E({loadedName:a.loadedName,font:e,dict:a,extraProperties:c.options.fontExtraProperties}))})).catch((function(e){c.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorFontTranslate});try{var t=v&&v.get(\"FontFile3\"),n=t&&t.get(\"Subtype\"),i=(0,o.getFontType)(m.type,n&&n.name);u.stats.fontTypes[i]=!0}catch(s){}p.resolve(new E({loadedName:a.loadedName,font:new o.ErrorFont(e instanceof Error?e.message:e),dict:a,extraProperties:c.options.fontExtraProperties}))})),p.promise}},{key:\"buildPath\",value:function(e,t,a){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=e.length-1;if(a||(a=[]),i<0||e.fnArray[i]!==r.OPS.constructPath)n&&((0,r.warn)('Encountered path operator \"'.concat(t,'\" inside of a text object.')),e.addOp(r.OPS.save,null)),e.addOp(r.OPS.constructPath,[[t],a]),n&&e.addOp(r.OPS.restore,null);else{var o=e.argsArray[i];o[0].push(t),Array.prototype.push.apply(o[1],a)}}},{key:\"parseColorSpace\",value:function(e){var t=this,a=e.cs,n=e.resources,i=e.localColorSpaceCache;return m.ColorSpace.parseAsync({cs:a,xref:this.xref,resources:n,pdfFunctionFactory:this._pdfFunctionFactory,localColorSpaceCache:i}).catch((function(e){if(e instanceof r.AbortException)return null;if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorColorSpace}),(0,r.warn)('parseColorSpace - ignoring ColorSpace: \"'.concat(e,'\".')),null;throw e}))}},{key:\"handleColorN\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a,n,o,s,c,l,u){var f,d,g,p,m,v,b;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(f=n[n.length-1],!(0,i.isName)(f)||!(d=s.get(f.name))){e.next=16;break}if(g=(0,i.isStream)(d)?d.dict:d,(p=g.get(\"PatternType\"))!==x){e.next=9;break}return m=o.base?o.base.getRgb(n,0):null,e.abrupt(\"return\",this.handleTilingType(a,m,c,d,g,t,l));case 9:if(p!==A){e.next=15;break}return v=g.get(\"Shading\"),b=g.getArray(\"Matrix\"),d=h.Pattern.parseShading(v,b,this.xref,c,this.handler,this._pdfFunctionFactory,u),t.addOp(a,d.getIR()),e.abrupt(\"return\",void 0);case 15:throw new r.FormatError(\"Unknown PatternType: \".concat(p));case 16:throw new r.FormatError(\"Unknown PatternName: \".concat(f));case 17:case\"end\":return e.stop()}}),e,this)})));return function(t,a,r,n,i,o,s,c){return e.apply(this,arguments)}}()},{key:\"parseMarkedContentProps\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t,a){var n,o,s,c,l,u;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0,i.isName)(t)){e.next=5;break}o=a.get(\"Properties\"),n=o.get(t.name),e.next=10;break;case 5:if(!(0,i.isDict)(t)){e.next=9;break}n=t,e.next=10;break;case 9:throw new r.FormatError(\"Optional content properties malformed.\");case 10:if(\"OCG\"!==(s=n.get(\"Type\").name)){e.next=15;break}return e.abrupt(\"return\",{type:s,id:n.objId});case 15:if(\"OCMD\"!==s){e.next=27;break}if(c=n.get(\"OCGs\"),!Array.isArray(c)&&!(0,i.isDict)(c)){e.next=25;break}return l=[],Array.isArray(c)?n.get(\"OCGs\").forEach((function(e){l.push(e.toString())})):l.push(c.objId),u=null,n.get(\"VE\")&&(u=!0),e.abrupt(\"return\",{type:s,ids:l,policy:(0,i.isName)(n.get(\"P\"))?n.get(\"P\").name:null,expression:u});case 25:if(!(0,i.isRef)(c)){e.next=27;break}return e.abrupt(\"return\",{type:s,id:c.toString()});case 27:return e.abrupt(\"return\",null);case 28:case\"end\":return e.stop()}}),e)})));return function(t,a){return e.apply(this,arguments)}}()},{key:\"getOperatorList\",value:function(e){var t=this,a=e.stream,n=e.task,o=e.resources,s=e.operatorList,c=e.initialState,l=void 0===c?null:c;if(o=o||i.Dict.empty,l=l||new B,!s)throw new Error('getOperatorList: missing \"operatorList\" parameter');var u=this,f=this.xref,d=!1,p=new g.LocalImageCache,v=new g.LocalColorSpaceCache,b=new g.LocalGStateCache,y=o.get(\"XObject\")||i.Dict.empty,k=o.get(\"Pattern\")||i.Dict.empty,w=new P(l),C=new M(a,f,w),S=new T;function x(e){for(var t=0,a=C.savedStatesDepth;t<a;t++)s.addOp(r.OPS.restore,[])}return new Promise((function e(t,a){var c=function(r){Promise.all([r,s.ready]).then((function(){try{e(t,a)}catch(r){a(r)}}),a)};n.ensureNotTerminated(),S.reset();for(var l,g,A,F,T,O={};!(l=S.check())&&(O.args=null,C.read(O));){var E=O.args,P=O.fn;switch(0|P){case r.OPS.paintXObject:if(T=E[0].name){var _=p.getByName(T);if(_){s.addOp(_.fn,_.args),E=null;continue}}return void c(new Promise((function(e,t){if(!T)throw new r.FormatError(\"XObject must be referred to by name.\");var a=y.getRaw(T);if(a instanceof i.Ref){var c=p.getByRef(a);if(c)return s.addOp(c.fn,c.args),void e();var l=u.globalImageCache.getData(a,u.pageIndex);if(l)return s.addDependency(l.objId),s.addOp(l.fn,l.args),void e();a=f.fetch(a)}if(!(0,i.isStream)(a))throw new r.FormatError(\"XObject should be a stream\");var h=a.dict.get(\"Subtype\");if(!(0,i.isName)(h))throw new r.FormatError(\"XObject should have a Name subtype\");if(\"Form\"===h.name)return w.save(),void u.buildFormXObject(o,a,null,s,n,w.state.clone(),v).then((function(){w.restore(),e()}),t);if(\"Image\"!==h.name){if(\"PS\"!==h.name)throw new r.FormatError(\"Unhandled XObject subtype \".concat(h.name));(0,r.info)(\"Ignored XObject subtype PS\"),e()}else u.buildPaintImageXObject({resources:o,image:a,operatorList:s,cacheKey:T,localImageCache:p,localColorSpaceCache:v}).then(e,t)})).catch((function(e){if(!(e instanceof r.AbortException)){if(u.options.ignoreErrors)return u.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorXObject}),void(0,r.warn)('getOperatorList - ignoring XObject: \"'.concat(e,'\".'));throw e}})));case r.OPS.setFont:var B=E[1];return void c(u.handleSetFont(o,E,null,s,n,w.state).then((function(e){s.addDependency(e),s.addOp(r.OPS.setFont,[e,B])})));case r.OPS.beginText:d=!0;break;case r.OPS.endText:d=!1;break;case r.OPS.endInlineImage:var M=E[0].cacheKey;if(M){var D=p.getByName(M);if(D){s.addOp(D.fn,D.args),E=null;continue}}return void c(u.buildPaintImageXObject({resources:o,image:E[0],isInline:!0,operatorList:s,cacheKey:M,localImageCache:p,localColorSpaceCache:v}));case r.OPS.showText:if(!w.state.font){u.ensureStateFont(w.state);continue}E[0]=u.handleText(E[0],w.state);break;case r.OPS.showSpacedText:if(!w.state.font){u.ensureStateFont(w.state);continue}var R=E[0],N=[],L=R.length,U=w.state;for(g=0;g<L;++g){var q=R[g];(0,r.isString)(q)?Array.prototype.push.apply(N,u.handleText(q,U)):(0,r.isNum)(q)&&N.push(q)}E[0]=N,P=r.OPS.showText;break;case r.OPS.nextLineShowText:if(!w.state.font){u.ensureStateFont(w.state);continue}s.addOp(r.OPS.nextLine),E[0]=u.handleText(E[0],w.state),P=r.OPS.showText;break;case r.OPS.nextLineSetSpacingShowText:if(!w.state.font){u.ensureStateFont(w.state);continue}s.addOp(r.OPS.nextLine),s.addOp(r.OPS.setWordSpacing,[E.shift()]),s.addOp(r.OPS.setCharSpacing,[E.shift()]),E[0]=u.handleText(E[0],w.state),P=r.OPS.showText;break;case r.OPS.setTextRenderingMode:w.state.textRenderingMode=E[0];break;case r.OPS.setFillColorSpace:var j=m.ColorSpace.getCached(E[0],f,v);if(j){w.state.fillColorSpace=j;continue}return void c(u.parseColorSpace({cs:E[0],resources:o,localColorSpaceCache:v}).then((function(e){e&&(w.state.fillColorSpace=e)})));case r.OPS.setStrokeColorSpace:var z=m.ColorSpace.getCached(E[0],f,v);if(z){w.state.strokeColorSpace=z;continue}return void c(u.parseColorSpace({cs:E[0],resources:o,localColorSpaceCache:v}).then((function(e){e&&(w.state.strokeColorSpace=e)})));case r.OPS.setFillColor:E=(F=w.state.fillColorSpace).getRgb(E,0),P=r.OPS.setFillRGBColor;break;case r.OPS.setStrokeColor:E=(F=w.state.strokeColorSpace).getRgb(E,0),P=r.OPS.setStrokeRGBColor;break;case r.OPS.setFillGray:w.state.fillColorSpace=m.ColorSpace.singletons.gray,E=m.ColorSpace.singletons.gray.getRgb(E,0),P=r.OPS.setFillRGBColor;break;case r.OPS.setStrokeGray:w.state.strokeColorSpace=m.ColorSpace.singletons.gray,E=m.ColorSpace.singletons.gray.getRgb(E,0),P=r.OPS.setStrokeRGBColor;break;case r.OPS.setFillCMYKColor:w.state.fillColorSpace=m.ColorSpace.singletons.cmyk,E=m.ColorSpace.singletons.cmyk.getRgb(E,0),P=r.OPS.setFillRGBColor;break;case r.OPS.setStrokeCMYKColor:w.state.strokeColorSpace=m.ColorSpace.singletons.cmyk,E=m.ColorSpace.singletons.cmyk.getRgb(E,0),P=r.OPS.setStrokeRGBColor;break;case r.OPS.setFillRGBColor:w.state.fillColorSpace=m.ColorSpace.singletons.rgb,E=m.ColorSpace.singletons.rgb.getRgb(E,0);break;case r.OPS.setStrokeRGBColor:w.state.strokeColorSpace=m.ColorSpace.singletons.rgb,E=m.ColorSpace.singletons.rgb.getRgb(E,0);break;case r.OPS.setFillColorN:if(\"Pattern\"===(F=w.state.fillColorSpace).name)return void c(u.handleColorN(s,r.OPS.setFillColorN,E,F,k,o,n,v));E=F.getRgb(E,0),P=r.OPS.setFillRGBColor;break;case r.OPS.setStrokeColorN:if(\"Pattern\"===(F=w.state.strokeColorSpace).name)return void c(u.handleColorN(s,r.OPS.setStrokeColorN,E,F,k,o,n,v));E=F.getRgb(E,0),P=r.OPS.setStrokeRGBColor;break;case r.OPS.shadingFill:var H=o.get(\"Shading\");if(!H)throw new r.FormatError(\"No shading resource found\");var G=H.get(E[0].name);if(!G)throw new r.FormatError(\"No shading object found\");E=[h.Pattern.parseShading(G,null,f,o,u.handler,u._pdfFunctionFactory,v).getIR()],P=r.OPS.shadingFill;break;case r.OPS.setGState:if(T=E[0].name){var X=b.getByName(T);if(X){X.length>0&&s.addOp(r.OPS.setGState,[X]),E=null;continue}}return void c(new Promise((function(e,t){if(!T)throw new r.FormatError(\"GState must be referred to by name.\");var a=o.get(\"ExtGState\");if(!(a instanceof i.Dict))throw new r.FormatError(\"ExtGState should be a dictionary.\");var c=a.get(T);if(!(c instanceof i.Dict))throw new r.FormatError(\"GState should be a dictionary.\");u.setGState({resources:o,gState:c,operatorList:s,cacheKey:T,task:n,stateManager:w,localGStateCache:b,localColorSpaceCache:v}).then(e,t)})).catch((function(e){if(!(e instanceof r.AbortException)){if(u.options.ignoreErrors)return u.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorExtGState}),void(0,r.warn)('getOperatorList - ignoring ExtGState: \"'.concat(e,'\".'));throw e}})));case r.OPS.moveTo:case r.OPS.lineTo:case r.OPS.curveTo:case r.OPS.curveTo2:case r.OPS.curveTo3:case r.OPS.closePath:case r.OPS.rectangle:u.buildPath(s,P,E,d);continue;case r.OPS.markPoint:case r.OPS.markPointProps:case r.OPS.beginCompat:case r.OPS.endCompat:continue;case r.OPS.beginMarkedContentProps:if(!(0,i.isName)(E[0])){(0,r.warn)(\"Expected name for beginMarkedContentProps arg0=\".concat(E[0]));continue}if(\"OC\"===E[0].name)return void c(u.parseMarkedContentProps(E[1],o).then((function(e){s.addOp(r.OPS.beginMarkedContentProps,[\"OC\",e])})).catch((function(e){if(!(e instanceof r.AbortException)){if(u.options.ignoreErrors)return u.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorMarkedContent}),void(0,r.warn)('getOperatorList - ignoring beginMarkedContentProps: \"'.concat(e,'\".'));throw e}})));E=[E[0].name];break;case r.OPS.beginMarkedContent:case r.OPS.endMarkedContent:default:if(null!==E){for(g=0,A=E.length;g<A&&!(E[g]instanceof i.Dict);g++);if(g<A){(0,r.warn)(\"getOperatorList - ignoring operator: \"+P);continue}}}s.addOp(P,E)}l?c(I):(x(),t())})).catch((function(e){if(!(e instanceof r.AbortException)){if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorOperatorList}),(0,r.warn)('getOperatorList - ignoring errors during \"'.concat(n.name,'\" ')+'task: \"'.concat(e,'\".')),void x();throw e}}))}},{key:\"getTextContent\",value:function(e){var t=this,a=e.stream,n=e.task,o=e.resources,s=e.stateManager,c=void 0===s?null:s,u=e.normalizeWhitespace,h=void 0!==u&&u,f=e.combineTextItems,d=void 0!==f&&f,m=e.sink,v=e.seenStyles,b=void 0===v?Object.create(null):v;o=o||i.Dict.empty,c=c||new P(new _);var y,k=/\\s/g,w={items:[],styles:Object.create(null)},C={initialized:!1,str:[],width:0,height:0,vertical:!1,lastAdvanceWidth:0,lastAdvanceHeight:0,textAdvanceScale:0,spaceWidth:0,fakeSpaceMin:1/0,fakeMultiSpaceMin:1/0,fakeMultiSpaceMax:-0,textRunBreakAllowed:!1,transform:null,fontName:null},S=this,x=this.xref,A=null,F=new g.LocalImageCache,O=new g.LocalGStateCache,E=new M(a,x,c);function B(){if(C.initialized)return C;var e=y.font;e.loadedName in b||(b[e.loadedName]=!0,w.styles[e.loadedName]={fontFamily:e.fallbackName,ascent:e.ascent,descent:e.descent,vertical:e.vertical}),C.fontName=e.loadedName;var t=[y.fontSize*y.textHScale,0,0,y.fontSize,0,y.textRise];if(e.isType3Font&&y.fontSize<=1&&!(0,r.isArrayEqual)(y.fontMatrix,r.FONT_IDENTITY_MATRIX)){var a=e.bbox[3]-e.bbox[1];a>0&&(t[3]*=a*y.fontMatrix[3])}var n=r.Util.transform(y.ctm,r.Util.transform(y.textMatrix,t));C.transform=n,e.vertical?(C.width=Math.sqrt(n[0]*n[0]+n[1]*n[1]),C.height=0,C.vertical=!0):(C.width=0,C.height=Math.sqrt(n[2]*n[2]+n[3]*n[3]),C.vertical=!1);var i=y.textLineMatrix[0],o=y.textLineMatrix[1],s=Math.sqrt(i*i+o*o);i=y.ctm[0],o=y.ctm[1];var c=Math.sqrt(i*i+o*o);C.textAdvanceScale=c*s,C.lastAdvanceWidth=0,C.lastAdvanceHeight=0;var l=e.spaceWidth/1e3*y.fontSize;return l?(C.spaceWidth=l,C.fakeSpaceMin=.3*l,C.fakeMultiSpaceMin=1.5*l,C.fakeMultiSpaceMax=4*l,C.textRunBreakAllowed=!e.isMonospace):(C.spaceWidth=0,C.fakeSpaceMin=1/0,C.fakeMultiSpaceMin=1/0,C.fakeMultiSpaceMax=0,C.textRunBreakAllowed=!1),C.initialized=!0,C}function D(e){for(var t,a=0,r=e.length;a<r&&(t=e.charCodeAt(a))>=32&&t<=127;)a++;return a<r?e.replace(k,\" \"):e}function R(e,t){return S.loadFont(e,t,o).then((function(e){y.font=e.font,y.fontMatrix=e.font.fontMatrix||r.FONT_IDENTITY_MATRIX}))}function N(e){for(var t=y.font,a=B(),r=0,n=0,i=t.charsToGlyphs(e),o=0;o<i.length;o++){var s=i[o],c=null;c=t.vertical&&s.vmetric?s.vmetric[0]:s.width;var u=s.unicode,h=(0,l.getNormalizedUnicodes)();void 0!==h[u]&&(u=h[u]),u=(0,l.reverseIfRtl)(u);var f=y.charSpacing;if(s.isSpace){var d=y.wordSpacing;f+=d,d>0&&L(d,a.str)}var g=0,p=0;if(t.vertical)n+=p=c*y.fontMatrix[0]*y.fontSize+f;else r+=g=(c*y.fontMatrix[0]*y.fontSize+f)*y.textHScale;y.translateTextMatrix(g,p),a.str.push(u)}return t.vertical?(a.lastAdvanceHeight=n,a.height+=Math.abs(n)):(a.lastAdvanceWidth=r,a.width+=r),a}function L(e,t){if(!(e<C.fakeSpaceMin))if(e<C.fakeMultiSpaceMin)t.push(\" \");else for(var a=Math.round(e/C.spaceWidth);a-- >0;)t.push(\" \")}function U(){C.initialized&&(C.vertical?C.height*=C.textAdvanceScale:C.width*=C.textAdvanceScale,w.items.push(function(e){var t=e.str.join(\"\"),a=(0,p.bidi)(t,-1,e.vertical);return{str:h?D(a.str):a.str,dir:a.dir,width:e.width,height:e.height,transform:e.transform,fontName:e.fontName}}(C)),C.initialized=!1,C.str.length=0)}function q(){var e=w.items.length;e>0&&(m.enqueue(w,e),w.items=[],w.styles=Object.create(null))}var j=new T;return new Promise((function e(t,a){var s=function(r){q(),Promise.all([r,m.ready]).then((function(){try{e(t,a)}catch(r){a(r)}}),a)};n.ensureNotTerminated(),j.reset();for(var l,u={},f=[];!(l=j.check())&&(f.length=0,u.args=f,E.read(u));){y=c.state;var g,p=u.fn;switch(f=u.args,0|p){case r.OPS.setFont:var v=f[0].name,k=f[1];if(y.font&&v===y.fontName&&k===y.fontSize)break;return U(),y.fontName=v,y.fontSize=k,void s(R(v,null));case r.OPS.setTextRise:U(),y.textRise=f[0];break;case r.OPS.setHScale:U(),y.textHScale=f[0]/100;break;case r.OPS.setLeading:U(),y.leading=f[0];break;case r.OPS.moveText:var T=!!y.font&&0===(y.font.vertical?f[0]:f[1]);if(g=f[0]-f[1],d&&T&&C.initialized&&g>0&&g<=C.fakeMultiSpaceMax){y.translateTextLineMatrix(f[0],f[1]),C.width+=f[0]-C.lastAdvanceWidth,C.height+=f[1]-C.lastAdvanceHeight,L(f[0]-C.lastAdvanceWidth-(f[1]-C.lastAdvanceHeight),C.str);break}U(),y.translateTextLineMatrix(f[0],f[1]),y.textMatrix=y.textLineMatrix.slice();break;case r.OPS.setLeadingMoveText:U(),y.leading=-f[1],y.translateTextLineMatrix(f[0],f[1]),y.textMatrix=y.textLineMatrix.slice();break;case r.OPS.nextLine:U(),y.carriageReturn();break;case r.OPS.setTextMatrix:if(g=y.calcTextLineMatrixAdvance(f[0],f[1],f[2],f[3],f[4],f[5]),d&&null!==g&&C.initialized&&g.value>0&&g.value<=C.fakeMultiSpaceMax){y.translateTextLineMatrix(g.width,g.height),C.width+=g.width-C.lastAdvanceWidth,C.height+=g.height-C.lastAdvanceHeight,L(g.width-C.lastAdvanceWidth-(g.height-C.lastAdvanceHeight),C.str);break}U(),y.setTextMatrix(f[0],f[1],f[2],f[3],f[4],f[5]),y.setTextLineMatrix(f[0],f[1],f[2],f[3],f[4],f[5]);break;case r.OPS.setCharSpacing:y.charSpacing=f[0];break;case r.OPS.setWordSpacing:y.wordSpacing=f[0];break;case r.OPS.beginText:U(),y.textMatrix=r.IDENTITY_MATRIX.slice(),y.textLineMatrix=r.IDENTITY_MATRIX.slice();break;case r.OPS.showSpacedText:if(!c.state.font){S.ensureStateFont(c.state);continue}for(var _,M=f[0],D=0,z=M.length;D<z;D++)if(\"string\"===typeof M[D])N(M[D]);else if((0,r.isNum)(M[D])){B(),g=M[D]*y.fontSize/1e3;var H=!1;y.font.vertical?(_=g,y.translateTextMatrix(0,_),(H=C.textRunBreakAllowed&&g>C.fakeMultiSpaceMax)||(C.height+=_)):(_=(g=-g)*y.textHScale,y.translateTextMatrix(_,0),(H=C.textRunBreakAllowed&&g>C.fakeMultiSpaceMax)||(C.width+=_)),H?U():g>0&&L(g,C.str)}break;case r.OPS.showText:if(!c.state.font){S.ensureStateFont(c.state);continue}N(f[0]);break;case r.OPS.nextLineShowText:if(!c.state.font){S.ensureStateFont(c.state);continue}U(),y.carriageReturn(),N(f[0]);break;case r.OPS.nextLineSetSpacingShowText:if(!c.state.font){S.ensureStateFont(c.state);continue}U(),y.wordSpacing=f[0],y.charSpacing=f[1],y.carriageReturn(),N(f[2]);break;case r.OPS.paintXObject:U(),A||(A=o.get(\"XObject\")||i.Dict.empty);var G=f[0].name;if(G&&F.getByName(G))break;return void s(new Promise((function(e,t){if(!G)throw new r.FormatError(\"XObject must be referred to by name.\");var a=A.getRaw(G);if(a instanceof i.Ref){if(F.getByRef(a))return void e();a=x.fetch(a)}if(!(0,i.isStream)(a))throw new r.FormatError(\"XObject should be a stream\");var s=a.dict.get(\"Subtype\");if(!(0,i.isName)(s))throw new r.FormatError(\"XObject should have a Name subtype\");if(\"Form\"!==s.name)return F.set(G,a.dict.objId,!0),void e();var l=c.state.clone(),u=new P(l),f=a.dict.getArray(\"Matrix\");Array.isArray(f)&&6===f.length&&u.transform(f),q();var g={enqueueInvoked:!1,enqueue:function(e,t){this.enqueueInvoked=!0,m.enqueue(e,t)},get desiredSize(){return m.desiredSize},get ready(){return m.ready}};S.getTextContent({stream:a,task:n,resources:a.dict.get(\"Resources\")||o,stateManager:u,normalizeWhitespace:h,combineTextItems:d,sink:g,seenStyles:b}).then((function(){g.enqueueInvoked||F.set(G,a.dict.objId,!0),e()}),t)})).catch((function(e){if(!(e instanceof r.AbortException)){if(!S.options.ignoreErrors)throw e;(0,r.warn)('getTextContent - ignoring XObject: \"'.concat(e,'\".'))}})));case r.OPS.setGState:if((G=f[0].name)&&O.getByName(G))break;return void s(new Promise((function(e,t){if(!G)throw new r.FormatError(\"GState must be referred to by name.\");var a=o.get(\"ExtGState\");if(!(a instanceof i.Dict))throw new r.FormatError(\"ExtGState should be a dictionary.\");var n=a.get(G);if(!(n instanceof i.Dict))throw new r.FormatError(\"GState should be a dictionary.\");var s=n.get(\"Font\");if(!s)return O.set(G,n.objId,!0),void e();U(),y.fontName=null,y.fontSize=s[1],R(null,s[0]).then(e,t)})).catch((function(e){if(!(e instanceof r.AbortException)){if(!S.options.ignoreErrors)throw e;(0,r.warn)('getTextContent - ignoring ExtGState: \"'.concat(e,'\".'))}})))}if(w.items.length>=m.desiredSize){l=!0;break}}l?s(I):(U(),q(),t())})).catch((function(e){if(!(e instanceof r.AbortException)){if(t.options.ignoreErrors)return(0,r.warn)('getTextContent - ignoring errors during \"'.concat(n.name,'\" ')+'task: \"'.concat(e,'\".')),U(),void q();throw e}}))}},{key:\"extractDataStructures\",value:function(e,t,a){var n,c=this,l=this.xref,u=e.get(\"ToUnicode\")||t.get(\"ToUnicode\"),h=u?this.readToUnicode(u):Promise.resolve(void 0);if(a.composite){var f=e.get(\"CIDSystemInfo\");(0,i.isDict)(f)&&(a.cidSystemInfo={registry:(0,r.stringToPDFString)(f.get(\"Registry\")),ordering:(0,r.stringToPDFString)(f.get(\"Ordering\")),supplement:f.get(\"Supplement\")});var d=e.get(\"CIDToGIDMap\");(0,i.isStream)(d)&&(n=d.getBytes())}var g,p=[],m=null;if(e.has(\"Encoding\")){if(g=e.get(\"Encoding\"),(0,i.isDict)(g)){if(m=g.get(\"BaseEncoding\"),m=(0,i.isName)(m)?m.name:null,g.has(\"Differences\"))for(var v=g.get(\"Differences\"),b=0,y=0,k=v.length;y<k;y++){var w=l.fetchIfRef(v[y]);if((0,r.isNum)(w))b=w;else{if(!(0,i.isName)(w))throw new r.FormatError(\"Invalid entry in 'Differences' array: \".concat(w));p[b++]=w.name}}}else{if(!(0,i.isName)(g))throw new r.FormatError(\"Encoding is not a Name nor a Dict\");m=g.name}\"MacRomanEncoding\"!==m&&\"MacExpertEncoding\"!==m&&\"WinAnsiEncoding\"!==m&&(m=null)}if(m)a.defaultEncoding=(0,s.getEncoding)(m).slice();else{var C=!!(a.flags&o.FontFlags.Symbolic),S=!!(a.flags&o.FontFlags.Nonsymbolic);g=s.StandardEncoding,\"TrueType\"!==a.type||S||(g=s.WinAnsiEncoding),C&&(g=s.MacRomanEncoding,a.file||(/Symbol/i.test(a.name)?g=s.SymbolSetEncoding:/Dingbats|Wingdings/i.test(a.name)&&(g=s.ZapfDingbatsEncoding))),a.defaultEncoding=g}return a.differences=p,a.baseEncodingName=m,a.hasEncoding=!!m||p.length>0,a.dict=e,h.then((function(e){return a.toUnicode=e,c.buildToUnicode(a)})).then((function(e){return a.toUnicode=e,n&&(a.cidToGidMap=c.readCidToGidMap(n,e)),a}))}},{key:\"_buildSimpleFontToUnicode\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,r.assert)(!e.composite,\"Must be a simple font.\");var a=[],n=e.defaultEncoding.slice(),i=e.baseEncodingName,c=e.differences;for(var u in c){var h=c[u];\".notdef\"!==h&&(n[u]=h)}var f=(0,b.getGlyphsUnicode)();for(var d in n){var g=n[d];if(\"\"!==g)if(void 0!==f[g])a[d]=String.fromCharCode(f[g]);else{var p=0;switch(g[0]){case\"G\":3===g.length&&(p=parseInt(g.substring(1),16));break;case\"g\":5===g.length&&(p=parseInt(g.substring(1),16));break;case\"C\":case\"c\":if(g.length>=3&&g.length<=4){var m=g.substring(1);if(t){p=parseInt(m,16);break}if(p=+m,Number.isNaN(p)&&Number.isInteger(parseInt(m,16)))return this._buildSimpleFontToUnicode(e,!0)}break;default:var v=(0,l.getUnicodeForGlyph)(g,f);-1!==v&&(p=v)}if(p>0&&p<=1114111&&Number.isInteger(p)){if(i&&p===+d){var y=(0,s.getEncoding)(i);if(y&&(g=y[d])){a[d]=String.fromCharCode(f[g]);continue}}a[d]=String.fromCodePoint(p)}}}return new o.ToUnicodeMap(a)}},{key:\"buildToUnicode\",value:function(e){if(e.hasIncludedToUnicodeMap=!!e.toUnicode&&e.toUnicode.length>0,e.hasIncludedToUnicodeMap)return!e.composite&&e.hasEncoding&&(e.fallbackToUnicode=this._buildSimpleFontToUnicode(e)),Promise.resolve(e.toUnicode);if(!e.composite)return Promise.resolve(this._buildSimpleFontToUnicode(e));if(e.composite&&(e.cMap.builtInCMap&&!(e.cMap instanceof n.IdentityCMap)||\"Adobe\"===e.cidSystemInfo.registry&&(\"GB1\"===e.cidSystemInfo.ordering||\"CNS1\"===e.cidSystemInfo.ordering||\"Japan1\"===e.cidSystemInfo.ordering||\"Korea1\"===e.cidSystemInfo.ordering))){var t=e.cidSystemInfo.registry,a=e.cidSystemInfo.ordering,s=i.Name.get(t+\"-\"+a+\"-UCS2\");return n.CMapFactory.create({encoding:s,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(t){var a=e.cMap,n=[];return a.forEach((function(e,a){if(a>65535)throw new r.FormatError(\"Max size of CID is 65,535\");var i=t.lookup(a);i&&(n[e]=String.fromCharCode((i.charCodeAt(0)<<8)+i.charCodeAt(1)))})),new o.ToUnicodeMap(n)}))}return Promise.resolve(new o.IdentityToUnicodeMap(e.firstChar,e.lastChar))}},{key:\"readToUnicode\",value:function(e){var t=this,a=e;return(0,i.isName)(a)?n.CMapFactory.create({encoding:a,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(e){return e instanceof n.IdentityCMap?new o.IdentityToUnicodeMap(0,65535):new o.ToUnicodeMap(e.getMap())})):(0,i.isStream)(a)?n.CMapFactory.create({encoding:a,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(e){if(e instanceof n.IdentityCMap)return new o.IdentityToUnicodeMap(0,65535);var t=new Array(e.length);return e.forEach((function(e,a){for(var r=[],n=0;n<a.length;n+=2){var i=a.charCodeAt(n)<<8|a.charCodeAt(n+1);if(55296===(63488&i)){n+=2;var o=a.charCodeAt(n)<<8|a.charCodeAt(n+1);r.push(((1023&i)<<10)+(1023&o)+65536)}else r.push(i)}t[e]=String.fromCodePoint.apply(String,r)})),new o.ToUnicodeMap(t)}),(function(e){if(e instanceof r.AbortException)return null;if(t.options.ignoreErrors)return t.handler.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.errorFontToUnicode}),(0,r.warn)('readToUnicode - ignoring ToUnicode data: \"'.concat(e,'\".')),null;throw e})):Promise.resolve(null)}},{key:\"readCidToGidMap\",value:function(e,t){for(var a=[],r=0,n=e.length;r<n;r++){var i=e[r++]<<8|e[r],o=r>>1;(0!==i||t.has(o))&&(a[o]=i)}return a}},{key:\"extractWidths\",value:function(e,t,a){var r,n,s,c,l,u,h,f,d=this.xref,g=[],p=0,m=[];if(a.composite){if(p=e.has(\"DW\")?e.get(\"DW\"):1e3,f=e.get(\"W\"))for(n=0,s=f.length;n<s;n++)if(u=d.fetchIfRef(f[n++]),h=d.fetchIfRef(f[n]),Array.isArray(h))for(c=0,l=h.length;c<l;c++)g[u++]=d.fetchIfRef(h[c]);else{var v=d.fetchIfRef(f[++n]);for(c=u;c<=h;c++)g[c]=v}if(a.vertical){var b=e.getArray(\"DW2\")||[880,-1e3];if(r=[b[1],.5*p,b[0]],b=e.get(\"W2\"))for(n=0,s=b.length;n<s;n++)if(u=d.fetchIfRef(b[n++]),h=d.fetchIfRef(b[n]),Array.isArray(h))for(c=0,l=h.length;c<l;c++)m[u++]=[d.fetchIfRef(h[c++]),d.fetchIfRef(h[c++]),d.fetchIfRef(h[c])];else{var y=[d.fetchIfRef(b[++n]),d.fetchIfRef(b[++n]),d.fetchIfRef(b[++n])];for(c=u;c<=h;c++)m[c]=y}}}else{var k=a.firstChar;if(f=e.get(\"Widths\")){for(c=k,n=0,s=f.length;n<s;n++)g[c++]=d.fetchIfRef(f[n]);p=parseFloat(t.get(\"MissingWidth\"))||0}else{var w=e.get(\"BaseFont\");if((0,i.isName)(w)){var C=this.getBaseFontMetrics(w.name);g=this.buildCharCodeToWidth(C.widths,a),p=C.defaultWidth}}}var S=!0,x=p;for(var A in g){var I=g[A];if(I)if(x){if(x!==I){S=!1;break}}else x=I}S&&(a.flags|=o.FontFlags.FixedPitch),a.defaultWidth=p,a.widths=g,a.defaultVMetrics=r,a.vmetrics=m}},{key:\"isSerifFont\",value:function(e){var t=e.split(\"-\")[0];return t in(0,u.getSerifFonts)()||-1!==t.search(/serif/gi)}},{key:\"getBaseFontMetrics\",value:function(e){var t=0,a=[],n=!1,i=(0,u.getStdFontMap)()[e]||e,o=(0,y.getMetrics)();i in o||(i=this.isSerifFont(e)?\"Times-Roman\":\"Helvetica\");var s=o[i];return(0,r.isNum)(s)?(t=s,n=!0):a=s(),{defaultWidth:t,monospace:n,widths:a}}},{key:\"buildCharCodeToWidth\",value:function(e,t){for(var a=Object.create(null),r=t.differences,n=t.defaultEncoding,i=0;i<256;i++)i in r&&e[r[i]]?a[i]=e[r[i]]:i in n&&e[n[i]]&&(a[i]=e[n[i]]);return a}},{key:\"preEvaluateFont\",value:function(e){var t=e,a=e.get(\"Subtype\");if(!(0,i.isName)(a))throw new r.FormatError(\"invalid font Subtype\");var n,o=!1;if(\"Type0\"===a.name){var s=e.get(\"DescendantFonts\");if(!s)throw new r.FormatError(\"Descendant fonts are not specified\");if(a=(e=Array.isArray(s)?this.xref.fetchIfRef(s[0]):s).get(\"Subtype\"),!(0,i.isName)(a))throw new r.FormatError(\"invalid font Subtype\");o=!0}var c=e.get(\"FontDescriptor\");if(c){var l=new k.MurmurHash3_64,u=t.getRaw(\"Encoding\");if((0,i.isName)(u))l.update(u.name);else if((0,i.isRef)(u))l.update(u.toString());else if((0,i.isDict)(u)){var h,f=_createForOfIteratorHelper(u.getRawValues());try{for(f.s();!(h=f.n()).done;){var d=h.value;if((0,i.isName)(d))l.update(d.name);else if((0,i.isRef)(d))l.update(d.toString());else if(Array.isArray(d)){for(var g=d.length,p=new Array(g),m=0;m<g;m++){var v=d[m];(0,i.isName)(v)?p[m]=v.name:((0,r.isNum)(v)||(0,i.isRef)(v))&&(p[m]=v.toString())}l.update(p.join())}}}catch(x){f.e(x)}finally{f.f()}}var b=e.get(\"FirstChar\")||0,y=e.get(\"LastChar\")||(o?65535:255);l.update(\"\".concat(b,\"-\").concat(y));var w=e.get(\"ToUnicode\")||t.get(\"ToUnicode\");if((0,i.isStream)(w)){var C=w.str||w;n=C.buffer?new Uint8Array(C.buffer.buffer,0,C.bufferLength):new Uint8Array(C.bytes.buffer,C.start,C.end-C.start),l.update(n)}else(0,i.isName)(w)&&l.update(w.name);var S=e.get(\"Widths\")||t.get(\"Widths\");S&&(n=new Uint8Array(new Uint32Array(S).buffer),l.update(n))}return{descriptor:c,dict:e,baseDict:t,composite:o,type:a.name,hash:l?l.hexdigest():\"\"}}},{key:\"translateFont\",value:function(e){var t,a=this,s=e.baseDict,c=e.dict,l=e.composite,h=e.descriptor,f=e.type,d=l?65535:255,g=c.get(\"FirstChar\")||0,p=c.get(\"LastChar\")||d;if(!h){if(\"Type3\"!==f){var m=c.get(\"BaseFont\");if(!(0,i.isName)(m))throw new r.FormatError(\"Base font is not specified\");m=m.name.replace(/[,_]/g,\"-\");var v=this.getBaseFontMetrics(m),b=m.split(\"-\")[0],y=(this.isSerifFont(b)?o.FontFlags.Serif:0)|(v.monospace?o.FontFlags.FixedPitch:0)|((0,u.getSymbolsFonts)()[b]?o.FontFlags.Symbolic:o.FontFlags.Nonsymbolic);t={type:f,name:m,widths:v.widths,defaultWidth:v.defaultWidth,flags:y,firstChar:g,lastChar:p};var k=c.get(\"Widths\");return this.extractDataStructures(c,c,t).then((function(e){if(k){for(var t=[],r=g,n=0,i=k.length;n<i;n++)t[r++]=a.xref.fetchIfRef(k[n]);e.widths=t}else e.widths=a.buildCharCodeToWidth(v.widths,e);return new o.Font(m,null,e)}))}(h=new i.Dict(null)).set(\"FontName\",i.Name.get(f)),h.set(\"FontBBox\",c.getArray(\"FontBBox\")||[0,0,0,0])}var w=h.get(\"FontName\"),C=c.get(\"BaseFont\");if((0,r.isString)(w)&&(w=i.Name.get(w)),(0,r.isString)(C)&&(C=i.Name.get(C)),\"Type3\"!==f){var S=w&&w.name,x=C&&C.name;S!==x&&((0,r.info)(\"The FontDescriptor's FontName is \\\"\".concat(S,'\" but ')+\"should be the same as the Font's BaseFont \\\"\".concat(x,'\".')),S&&x&&x.startsWith(S)&&(w=C))}if(w=w||C,!(0,i.isName)(w))throw new r.FormatError(\"invalid font name\");var A,I=h.get(\"FontFile\",\"FontFile2\",\"FontFile3\");if(I&&I.dict){var F=I.dict.get(\"Subtype\");F&&(F=F.name);var T=I.dict.get(\"Length1\"),O=I.dict.get(\"Length2\"),E=I.dict.get(\"Length3\")}if(t={type:f,name:w.name,subtype:F,file:I,length1:T,length2:O,length3:E,loadedName:s.loadedName,composite:l,fixedPitch:!1,fontMatrix:c.getArray(\"FontMatrix\")||r.FONT_IDENTITY_MATRIX,firstChar:g||0,lastChar:p||d,bbox:h.getArray(\"FontBBox\"),ascent:h.get(\"Ascent\"),descent:h.get(\"Descent\"),xHeight:h.get(\"XHeight\"),capHeight:h.get(\"CapHeight\"),flags:h.get(\"Flags\"),italicAngle:h.get(\"ItalicAngle\"),isType3Font:!1},l){var P=s.get(\"Encoding\");(0,i.isName)(P)&&(t.cidEncoding=P.name),A=n.CMapFactory.create({encoding:P,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null}).then((function(e){t.cMap=e,t.vertical=t.cMap.vertical}))}else A=Promise.resolve(void 0);return A.then((function(){return a.extractDataStructures(c,s,t)})).then((function(e){return a.extractWidths(c,h,e),\"Type3\"===f&&(e.isType3Font=!0),new o.Font(w.name,I,e)}))}}],[{key:\"buildFontPaths\",value:function(e,t,a){function r(t){e.renderer.hasBuiltPath(t)||a.send(\"commonobj\",[\"\".concat(e.loadedName,\"_path_\").concat(t),\"FontPath\",e.renderer.getPathJs(t)])}var n,i=_createForOfIteratorHelper(t);try{for(i.s();!(n=i.n()).done;){var o=n.value;r(o.fontChar);var s=o.accent;s&&s.fontChar&&r(s.fontChar)}}catch(c){i.e(c)}finally{i.f()}}},{key:\"fallbackFontDict\",get:function(){var e=new i.Dict;return e.set(\"BaseFont\",i.Name.get(\"PDFJS-FallbackFont\")),e.set(\"Type\",i.Name.get(\"FallbackType\")),e.set(\"Subtype\",i.Name.get(\"FallbackType\")),e.set(\"Encoding\",i.Name.get(\"WinAnsiEncoding\")),(0,r.shadow)(this,\"fallbackFontDict\",e)}}]),e}();t.PartialEvaluator=O;var E=function(){function e(t){var a=t.loadedName,r=t.font,n=t.dict,i=t.extraProperties,o=void 0!==i&&i;_classCallCheck(this,e),this.loadedName=a,this.font=r,this.dict=n,this._extraProperties=o,this.type3Loaded=null,this.type3Dependencies=r.isType3Font?new Set:null,this.sent=!1}return _createClass(e,[{key:\"send\",value:function(e){this.sent||(this.sent=!0,e.send(\"commonobj\",[this.loadedName,\"Font\",this.font.exportData(this._extraProperties)]))}},{key:\"fallback\",value:function(e){if(this.font.data){this.font.disableFontFace=!0;var t=this.font.glyphCacheValues;O.buildFontPaths(this.font,t,e)}}},{key:\"loadType3Data\",value:function(e,t,a){if(this.type3Loaded)return this.type3Loaded;if(!this.font.isType3Font)throw new Error(\"Must be a Type3 font.\");var n=Object.create(e.options);n.ignoreErrors=!1;var i=e.clone(n);i.parsingType3Font=!0;var o,s=this.font,c=this.type3Dependencies,l=Promise.resolve(),u=this.dict.get(\"CharProcs\"),h=this.dict.get(\"Resources\")||t,f=Object.create(null),d=_createForOfIteratorHelper(u.getKeys());try{var g=function(){var e=o.value;l=l.then((function(){var t=u.get(e),n=new w.OperatorList;return i.getOperatorList({stream:t,task:a,resources:h,operatorList:n}).then((function(){f[e]=n.getIR();var t,a=_createForOfIteratorHelper(n.dependencies);try{for(a.s();!(t=a.n()).done;){var r=t.value;c.add(r)}}catch(i){a.e(i)}finally{a.f()}})).catch((function(t){(0,r.warn)('Type3 font resource \"'.concat(e,'\" is not available.'));var a=new w.OperatorList;f[e]=a.getIR()}))}))};for(d.s();!(o=d.n()).done;)g()}catch(p){d.e(p)}finally{d.f()}return this.type3Loaded=l.then((function(){s.charProcOperatorList=f})),this.type3Loaded}}]),e}(),P=function(){function e(t){_classCallCheck(this,e),this.state=t,this.stateStack=[]}return _createClass(e,[{key:\"save\",value:function(){var e=this.state;this.stateStack.push(this.state),this.state=e.clone()}},{key:\"restore\",value:function(){var e=this.stateStack.pop();e&&(this.state=e)}},{key:\"transform\",value:function(e){this.state.ctm=r.Util.transform(this.state.ctm,e)}}]),e}(),_=function(){function e(){_classCallCheck(this,e),this.ctm=new Float32Array(r.IDENTITY_MATRIX),this.fontName=null,this.fontSize=0,this.font=null,this.fontMatrix=r.FONT_IDENTITY_MATRIX,this.textMatrix=r.IDENTITY_MATRIX.slice(),this.textLineMatrix=r.IDENTITY_MATRIX.slice(),this.charSpacing=0,this.wordSpacing=0,this.leading=0,this.textHScale=1,this.textRise=0}return _createClass(e,[{key:\"setTextMatrix\",value:function(e,t,a,r,n,i){var o=this.textMatrix;o[0]=e,o[1]=t,o[2]=a,o[3]=r,o[4]=n,o[5]=i}},{key:\"setTextLineMatrix\",value:function(e,t,a,r,n,i){var o=this.textLineMatrix;o[0]=e,o[1]=t,o[2]=a,o[3]=r,o[4]=n,o[5]=i}},{key:\"translateTextMatrix\",value:function(e,t){var a=this.textMatrix;a[4]=a[0]*e+a[2]*t+a[4],a[5]=a[1]*e+a[3]*t+a[5]}},{key:\"translateTextLineMatrix\",value:function(e,t){var a=this.textLineMatrix;a[4]=a[0]*e+a[2]*t+a[4],a[5]=a[1]*e+a[3]*t+a[5]}},{key:\"calcTextLineMatrixAdvance\",value:function(e,t,a,r,n,i){var o=this.font;if(!o)return null;var s=this.textLineMatrix;if(e!==s[0]||t!==s[1]||a!==s[2]||r!==s[3])return null;var c=n-s[4],l=i-s[5];if(o.vertical&&0!==c||!o.vertical&&0!==l)return null;var u,h,f=e*r-t*a;return o.vertical?(u=-l*a/f,h=l*e/f):(u=c*r/f,h=-c*t/f),{width:u,height:h,value:o.vertical?h:u}}},{key:\"calcRenderMatrix\",value:function(e){var t=[this.fontSize*this.textHScale,0,0,this.fontSize,0,this.textRise];return r.Util.transform(e,r.Util.transform(this.textMatrix,t))}},{key:\"carriageReturn\",value:function(){this.translateTextLineMatrix(0,-this.leading),this.textMatrix=this.textLineMatrix.slice()}},{key:\"clone\",value:function(){var e=Object.create(this);return e.textMatrix=this.textMatrix.slice(),e.textLineMatrix=this.textLineMatrix.slice(),e.fontMatrix=this.fontMatrix.slice(),e}}]),e}(),B=function(){function e(){_classCallCheck(this,e),this.ctm=new Float32Array(r.IDENTITY_MATRIX),this.font=null,this.textRenderingMode=r.TextRenderingMode.FILL,this.fillColorSpace=m.ColorSpace.singletons.gray,this.strokeColorSpace=m.ColorSpace.singletons.gray}return _createClass(e,[{key:\"clone\",value:function(){return Object.create(this)}}]),e}(),M=function(){function e(t,a,r){_classCallCheck(this,e),this.parser=new d.Parser({lexer:new d.Lexer(t,e.opMap),xref:a}),this.stateManager=r,this.nonProcessedArgs=[],this._numInvalidPathOPS=0}return _createClass(e,[{key:\"savedStatesDepth\",get:function(){return this.stateManager.stateStack.length}},{key:\"read\",value:function(t){for(var a=t.args;;){var n=this.parser.getObj();if(n instanceof i.Cmd){var o=n.cmd,s=e.opMap[o];if(!s){(0,r.warn)('Unknown command \"'.concat(o,'\".'));continue}var c=s.id,l=s.numArgs,u=null!==a?a.length:0;if(s.variableArgs)u>l&&(0,r.info)(\"Command \".concat(o,\": expected [0, \").concat(l,\"] args, \")+\"but received \".concat(u,\" args.\"));else{if(u!==l){for(var h=this.nonProcessedArgs;u>l;)h.push(a.shift()),u--;for(;u<l&&0!==h.length;)null===a&&(a=[]),a.unshift(h.pop()),u++}if(u<l){var f=\"command \".concat(o,\": expected \").concat(l,\" args, \")+\"but received \".concat(u,\" args.\");if(c>=r.OPS.moveTo&&c<=r.OPS.endPath&&++this._numInvalidPathOPS>e.MAX_INVALID_PATH_OPS)throw new r.FormatError(\"Invalid \".concat(f));(0,r.warn)(\"Skipping \".concat(f)),null!==a&&(a.length=0);continue}}return this.preprocessCommand(c,a),t.fn=c,t.args=a,!0}if(n===i.EOF)return!1;if(null!==n&&(null===a&&(a=[]),a.push(n),a.length>33))throw new r.FormatError(\"Too many arguments\")}}},{key:\"preprocessCommand\",value:function(e,t){switch(0|e){case r.OPS.save:this.stateManager.save();break;case r.OPS.restore:this.stateManager.restore();break;case r.OPS.transform:this.stateManager.transform(t)}}}],[{key:\"opMap\",get:function(){var e=(0,c.getLookupTableFactory)((function(e){e.w={id:r.OPS.setLineWidth,numArgs:1,variableArgs:!1},e.J={id:r.OPS.setLineCap,numArgs:1,variableArgs:!1},e.j={id:r.OPS.setLineJoin,numArgs:1,variableArgs:!1},e.M={id:r.OPS.setMiterLimit,numArgs:1,variableArgs:!1},e.d={id:r.OPS.setDash,numArgs:2,variableArgs:!1},e.ri={id:r.OPS.setRenderingIntent,numArgs:1,variableArgs:!1},e.i={id:r.OPS.setFlatness,numArgs:1,variableArgs:!1},e.gs={id:r.OPS.setGState,numArgs:1,variableArgs:!1},e.q={id:r.OPS.save,numArgs:0,variableArgs:!1},e.Q={id:r.OPS.restore,numArgs:0,variableArgs:!1},e.cm={id:r.OPS.transform,numArgs:6,variableArgs:!1},e.m={id:r.OPS.moveTo,numArgs:2,variableArgs:!1},e.l={id:r.OPS.lineTo,numArgs:2,variableArgs:!1},e.c={id:r.OPS.curveTo,numArgs:6,variableArgs:!1},e.v={id:r.OPS.curveTo2,numArgs:4,variableArgs:!1},e.y={id:r.OPS.curveTo3,numArgs:4,variableArgs:!1},e.h={id:r.OPS.closePath,numArgs:0,variableArgs:!1},e.re={id:r.OPS.rectangle,numArgs:4,variableArgs:!1},e.S={id:r.OPS.stroke,numArgs:0,variableArgs:!1},e.s={id:r.OPS.closeStroke,numArgs:0,variableArgs:!1},e.f={id:r.OPS.fill,numArgs:0,variableArgs:!1},e.F={id:r.OPS.fill,numArgs:0,variableArgs:!1},e[\"f*\"]={id:r.OPS.eoFill,numArgs:0,variableArgs:!1},e.B={id:r.OPS.fillStroke,numArgs:0,variableArgs:!1},e[\"B*\"]={id:r.OPS.eoFillStroke,numArgs:0,variableArgs:!1},e.b={id:r.OPS.closeFillStroke,numArgs:0,variableArgs:!1},e[\"b*\"]={id:r.OPS.closeEOFillStroke,numArgs:0,variableArgs:!1},e.n={id:r.OPS.endPath,numArgs:0,variableArgs:!1},e.W={id:r.OPS.clip,numArgs:0,variableArgs:!1},e[\"W*\"]={id:r.OPS.eoClip,numArgs:0,variableArgs:!1},e.BT={id:r.OPS.beginText,numArgs:0,variableArgs:!1},e.ET={id:r.OPS.endText,numArgs:0,variableArgs:!1},e.Tc={id:r.OPS.setCharSpacing,numArgs:1,variableArgs:!1},e.Tw={id:r.OPS.setWordSpacing,numArgs:1,variableArgs:!1},e.Tz={id:r.OPS.setHScale,numArgs:1,variableArgs:!1},e.TL={id:r.OPS.setLeading,numArgs:1,variableArgs:!1},e.Tf={id:r.OPS.setFont,numArgs:2,variableArgs:!1},e.Tr={id:r.OPS.setTextRenderingMode,numArgs:1,variableArgs:!1},e.Ts={id:r.OPS.setTextRise,numArgs:1,variableArgs:!1},e.Td={id:r.OPS.moveText,numArgs:2,variableArgs:!1},e.TD={id:r.OPS.setLeadingMoveText,numArgs:2,variableArgs:!1},e.Tm={id:r.OPS.setTextMatrix,numArgs:6,variableArgs:!1},e[\"T*\"]={id:r.OPS.nextLine,numArgs:0,variableArgs:!1},e.Tj={id:r.OPS.showText,numArgs:1,variableArgs:!1},e.TJ={id:r.OPS.showSpacedText,numArgs:1,variableArgs:!1},e[\"'\"]={id:r.OPS.nextLineShowText,numArgs:1,variableArgs:!1},e['\"']={id:r.OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:!1},e.d0={id:r.OPS.setCharWidth,numArgs:2,variableArgs:!1},e.d1={id:r.OPS.setCharWidthAndBounds,numArgs:6,variableArgs:!1},e.CS={id:r.OPS.setStrokeColorSpace,numArgs:1,variableArgs:!1},e.cs={id:r.OPS.setFillColorSpace,numArgs:1,variableArgs:!1},e.SC={id:r.OPS.setStrokeColor,numArgs:4,variableArgs:!0},e.SCN={id:r.OPS.setStrokeColorN,numArgs:33,variableArgs:!0},e.sc={id:r.OPS.setFillColor,numArgs:4,variableArgs:!0},e.scn={id:r.OPS.setFillColorN,numArgs:33,variableArgs:!0},e.G={id:r.OPS.setStrokeGray,numArgs:1,variableArgs:!1},e.g={id:r.OPS.setFillGray,numArgs:1,variableArgs:!1},e.RG={id:r.OPS.setStrokeRGBColor,numArgs:3,variableArgs:!1},e.rg={id:r.OPS.setFillRGBColor,numArgs:3,variableArgs:!1},e.K={id:r.OPS.setStrokeCMYKColor,numArgs:4,variableArgs:!1},e.k={id:r.OPS.setFillCMYKColor,numArgs:4,variableArgs:!1},e.sh={id:r.OPS.shadingFill,numArgs:1,variableArgs:!1},e.BI={id:r.OPS.beginInlineImage,numArgs:0,variableArgs:!1},e.ID={id:r.OPS.beginImageData,numArgs:0,variableArgs:!1},e.EI={id:r.OPS.endInlineImage,numArgs:1,variableArgs:!1},e.Do={id:r.OPS.paintXObject,numArgs:1,variableArgs:!1},e.MP={id:r.OPS.markPoint,numArgs:1,variableArgs:!1},e.DP={id:r.OPS.markPointProps,numArgs:2,variableArgs:!1},e.BMC={id:r.OPS.beginMarkedContent,numArgs:1,variableArgs:!1},e.BDC={id:r.OPS.beginMarkedContentProps,numArgs:2,variableArgs:!1},e.EMC={id:r.OPS.endMarkedContent,numArgs:0,variableArgs:!1},e.BX={id:r.OPS.beginCompat,numArgs:0,variableArgs:!1},e.EX={id:r.OPS.endCompat,numArgs:0,variableArgs:!1},e.BM=null,e.BD=null,e.true=null,e.fa=null,e.fal=null,e.fals=null,e.false=null,e.nu=null,e.nul=null,e.null=null}));return(0,r.shadow)(this,\"opMap\",e())}},{key:\"MAX_INVALID_PATH_OPS\",get:function(){return(0,r.shadow)(this,\"MAX_INVALID_PATH_OPS\",20)}}]),e}()},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CMapFactory=t.IdentityCMap=t.CMap=void 0;var r=a(2),n=a(5),i=a(11),o=a(8),s=a(12),c=[\"Adobe-GB1-UCS2\",\"Adobe-CNS1-UCS2\",\"Adobe-Japan1-UCS2\",\"Adobe-Korea1-UCS2\",\"78-EUC-H\",\"78-EUC-V\",\"78-H\",\"78-RKSJ-H\",\"78-RKSJ-V\",\"78-V\",\"78ms-RKSJ-H\",\"78ms-RKSJ-V\",\"83pv-RKSJ-H\",\"90ms-RKSJ-H\",\"90ms-RKSJ-V\",\"90msp-RKSJ-H\",\"90msp-RKSJ-V\",\"90pv-RKSJ-H\",\"90pv-RKSJ-V\",\"Add-H\",\"Add-RKSJ-H\",\"Add-RKSJ-V\",\"Add-V\",\"Adobe-CNS1-0\",\"Adobe-CNS1-1\",\"Adobe-CNS1-2\",\"Adobe-CNS1-3\",\"Adobe-CNS1-4\",\"Adobe-CNS1-5\",\"Adobe-CNS1-6\",\"Adobe-GB1-0\",\"Adobe-GB1-1\",\"Adobe-GB1-2\",\"Adobe-GB1-3\",\"Adobe-GB1-4\",\"Adobe-GB1-5\",\"Adobe-Japan1-0\",\"Adobe-Japan1-1\",\"Adobe-Japan1-2\",\"Adobe-Japan1-3\",\"Adobe-Japan1-4\",\"Adobe-Japan1-5\",\"Adobe-Japan1-6\",\"Adobe-Korea1-0\",\"Adobe-Korea1-1\",\"Adobe-Korea1-2\",\"B5-H\",\"B5-V\",\"B5pc-H\",\"B5pc-V\",\"CNS-EUC-H\",\"CNS-EUC-V\",\"CNS1-H\",\"CNS1-V\",\"CNS2-H\",\"CNS2-V\",\"ETHK-B5-H\",\"ETHK-B5-V\",\"ETen-B5-H\",\"ETen-B5-V\",\"ETenms-B5-H\",\"ETenms-B5-V\",\"EUC-H\",\"EUC-V\",\"Ext-H\",\"Ext-RKSJ-H\",\"Ext-RKSJ-V\",\"Ext-V\",\"GB-EUC-H\",\"GB-EUC-V\",\"GB-H\",\"GB-V\",\"GBK-EUC-H\",\"GBK-EUC-V\",\"GBK2K-H\",\"GBK2K-V\",\"GBKp-EUC-H\",\"GBKp-EUC-V\",\"GBT-EUC-H\",\"GBT-EUC-V\",\"GBT-H\",\"GBT-V\",\"GBTpc-EUC-H\",\"GBTpc-EUC-V\",\"GBpc-EUC-H\",\"GBpc-EUC-V\",\"H\",\"HKdla-B5-H\",\"HKdla-B5-V\",\"HKdlb-B5-H\",\"HKdlb-B5-V\",\"HKgccs-B5-H\",\"HKgccs-B5-V\",\"HKm314-B5-H\",\"HKm314-B5-V\",\"HKm471-B5-H\",\"HKm471-B5-V\",\"HKscs-B5-H\",\"HKscs-B5-V\",\"Hankaku\",\"Hiragana\",\"KSC-EUC-H\",\"KSC-EUC-V\",\"KSC-H\",\"KSC-Johab-H\",\"KSC-Johab-V\",\"KSC-V\",\"KSCms-UHC-H\",\"KSCms-UHC-HW-H\",\"KSCms-UHC-HW-V\",\"KSCms-UHC-V\",\"KSCpc-EUC-H\",\"KSCpc-EUC-V\",\"Katakana\",\"NWP-H\",\"NWP-V\",\"RKSJ-H\",\"RKSJ-V\",\"Roman\",\"UniCNS-UCS2-H\",\"UniCNS-UCS2-V\",\"UniCNS-UTF16-H\",\"UniCNS-UTF16-V\",\"UniCNS-UTF32-H\",\"UniCNS-UTF32-V\",\"UniCNS-UTF8-H\",\"UniCNS-UTF8-V\",\"UniGB-UCS2-H\",\"UniGB-UCS2-V\",\"UniGB-UTF16-H\",\"UniGB-UTF16-V\",\"UniGB-UTF32-H\",\"UniGB-UTF32-V\",\"UniGB-UTF8-H\",\"UniGB-UTF8-V\",\"UniJIS-UCS2-H\",\"UniJIS-UCS2-HW-H\",\"UniJIS-UCS2-HW-V\",\"UniJIS-UCS2-V\",\"UniJIS-UTF16-H\",\"UniJIS-UTF16-V\",\"UniJIS-UTF32-H\",\"UniJIS-UTF32-V\",\"UniJIS-UTF8-H\",\"UniJIS-UTF8-V\",\"UniJIS2004-UTF16-H\",\"UniJIS2004-UTF16-V\",\"UniJIS2004-UTF32-H\",\"UniJIS2004-UTF32-V\",\"UniJIS2004-UTF8-H\",\"UniJIS2004-UTF8-V\",\"UniJISPro-UCS2-HW-V\",\"UniJISPro-UCS2-V\",\"UniJISPro-UTF8-V\",\"UniJISX0213-UTF32-H\",\"UniJISX0213-UTF32-V\",\"UniJISX02132004-UTF32-H\",\"UniJISX02132004-UTF32-V\",\"UniKS-UCS2-H\",\"UniKS-UCS2-V\",\"UniKS-UTF16-H\",\"UniKS-UTF16-V\",\"UniKS-UTF32-H\",\"UniKS-UTF32-V\",\"UniKS-UTF8-H\",\"UniKS-UTF8-V\",\"V\",\"WP-Symbol\"],l=Math.pow(2,24)-1,u=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];_classCallCheck(this,e),this.codespaceRanges=[[],[],[],[]],this.numCodespaceRanges=0,this._map=[],this.name=\"\",this.vertical=!1,this.useCMap=null,this.builtInCMap=t}return _createClass(e,[{key:\"addCodespaceRange\",value:function(e,t,a){this.codespaceRanges[e-1].push(t,a),this.numCodespaceRanges++}},{key:\"mapCidRange\",value:function(e,t,a){if(t-e>l)throw new Error(\"mapCidRange - ignoring data above MAX_MAP_RANGE.\");for(;e<=t;)this._map[e++]=a++}},{key:\"mapBfRange\",value:function(e,t,a){if(t-e>l)throw new Error(\"mapBfRange - ignoring data above MAX_MAP_RANGE.\");for(var r=a.length-1;e<=t;)this._map[e++]=a,a=a.substring(0,r)+String.fromCharCode(a.charCodeAt(r)+1)}},{key:\"mapBfRangeToArray\",value:function(e,t,a){if(t-e>l)throw new Error(\"mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.\");for(var r=a.length,n=0;e<=t&&n<r;)this._map[e]=a[n++],++e}},{key:\"mapOne\",value:function(e,t){this._map[e]=t}},{key:\"lookup\",value:function(e){return this._map[e]}},{key:\"contains\",value:function(e){return void 0!==this._map[e]}},{key:\"forEach\",value:function(e){var t=this._map,a=t.length;if(a<=65536)for(var r=0;r<a;r++)void 0!==t[r]&&e(r,t[r]);else for(var n in t)e(n,t[n])}},{key:\"charCodeOf\",value:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var a in t)if(t[a]===e)return 0|a;return-1}},{key:\"getMap\",value:function(){return this._map}},{key:\"readCharCode\",value:function(e,t,a){for(var r=0,n=this.codespaceRanges,i=0,o=n.length;i<o;i++){r=(r<<8|e.charCodeAt(t+i))>>>0;for(var s=n[i],c=0,l=s.length;c<l;){var u=s[c++],h=s[c++];if(r>=u&&r<=h)return a.charcode=r,void(a.length=i+1)}}a.charcode=0,a.length=1}},{key:\"length\",get:function(){return this._map.length}},{key:\"isIdentityCMap\",get:function(){if(\"Identity-H\"!==this.name&&\"Identity-V\"!==this.name)return!1;if(65536!==this._map.length)return!1;for(var e=0;e<65536;e++)if(this._map[e]!==e)return!1;return!0}}]),e}();t.CMap=u;var h=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r){var n;return _classCallCheck(this,a),(n=t.call(this)).vertical=e,n.addCodespaceRange(r,0,65535),n}return _createClass(a,[{key:\"mapCidRange\",value:function(e,t,a){(0,r.unreachable)(\"should not call mapCidRange\")}},{key:\"mapBfRange\",value:function(e,t,a){(0,r.unreachable)(\"should not call mapBfRange\")}},{key:\"mapBfRangeToArray\",value:function(e,t,a){(0,r.unreachable)(\"should not call mapBfRangeToArray\")}},{key:\"mapOne\",value:function(e,t){(0,r.unreachable)(\"should not call mapCidOne\")}},{key:\"lookup\",value:function(e){return Number.isInteger(e)&&e<=65535?e:void 0}},{key:\"contains\",value:function(e){return Number.isInteger(e)&&e<=65535}},{key:\"forEach\",value:function(e){for(var t=0;t<=65535;t++)e(t,t)}},{key:\"charCodeOf\",value:function(e){return Number.isInteger(e)&&e<=65535?e:-1}},{key:\"getMap\",value:function(){for(var e=new Array(65536),t=0;t<=65535;t++)e[t]=t;return e}},{key:\"length\",get:function(){return 65536}},{key:\"isIdentityCMap\",get:function(){(0,r.unreachable)(\"should not access .isIdentityCMap\")}}]),a}(u);t.IdentityCMap=h;var f=function(){function e(e,t){for(var a=0,r=0;r<=t;r++)a=a<<8|e[r];return a>>>0}function t(e,t){return 1===t?String.fromCharCode(e[0],e[1]):3===t?String.fromCharCode(e[0],e[1],e[2],e[3]):String.fromCharCode.apply(null,e.subarray(0,t+1))}function a(e,t,a){for(var r=0,n=a;n>=0;n--)r+=e[n]+t[n],e[n]=255&r,r>>=8}function n(e,t){for(var a=1,r=t;r>=0&&a>0;r--)a+=e[r],e[r]=255&a,a>>=8}var i=16;function o(e){this.buffer=e,this.pos=0,this.end=e.length,this.tmpBuf=new Uint8Array(19)}function s(){}return o.prototype={readByte:function(){return this.pos>=this.end?-1:this.buffer[this.pos++]},readNumber:function(){var e,t=0;do{var a=this.readByte();if(a<0)throw new r.FormatError(\"unexpected EOF in bcmap\");e=!(128&a),t=t<<7|127&a}while(!e);return t},readSigned:function(){var e=this.readNumber();return 1&e?~(e>>>1):e>>>1},readHex:function(e,t){e.set(this.buffer.subarray(this.pos,this.pos+t+1)),this.pos+=t+1},readHexNumber:function(e,t){var a,n=this.tmpBuf,i=0;do{var o=this.readByte();if(o<0)throw new r.FormatError(\"unexpected EOF in bcmap\");a=!(128&o),n[i++]=127&o}while(!a);for(var s=t,c=0,l=0;s>=0;){for(;l<8&&n.length>0;)c=n[--i]<<l|c,l+=7;e[s]=255&c,s--,c>>=8,l-=8}},readHexSigned:function(e,t){this.readHexNumber(e,t);for(var a=1&e[t]?255:0,r=0,n=0;n<=t;n++)r=(1&r)<<8|e[n],e[n]=r>>1^a},readString:function(){for(var e=this.readNumber(),t=\"\",a=0;a<e;a++)t+=String.fromCharCode(this.readNumber());return t}},s.prototype={process:function(r,s,c){return new Promise((function(l,u){var h=new o(r),f=h.readByte();s.vertical=!!(1&f);for(var d,g,p=null,m=new Uint8Array(i),v=new Uint8Array(i),b=new Uint8Array(i),y=new Uint8Array(i),k=new Uint8Array(i);(g=h.readByte())>=0;){var w=g>>5;if(7!==w){var C=!!(16&g),S=15&g;if(S+1>i)throw new Error(\"processBinaryCMap: Invalid dataSize.\");var x,A=h.readNumber();switch(w){case 0:for(h.readHex(m,S),h.readHexNumber(v,S),a(v,m,S),s.addCodespaceRange(S+1,e(m,S),e(v,S)),x=1;x<A;x++)n(v,S),h.readHexNumber(m,S),a(m,v,S),h.readHexNumber(v,S),a(v,m,S),s.addCodespaceRange(S+1,e(m,S),e(v,S));break;case 1:for(h.readHex(m,S),h.readHexNumber(v,S),a(v,m,S),h.readNumber(),x=1;x<A;x++)n(v,S),h.readHexNumber(m,S),a(m,v,S),h.readHexNumber(v,S),a(v,m,S),h.readNumber();break;case 2:for(h.readHex(b,S),d=h.readNumber(),s.mapOne(e(b,S),d),x=1;x<A;x++)n(b,S),C||(h.readHexNumber(k,S),a(b,k,S)),d=h.readSigned()+(d+1),s.mapOne(e(b,S),d);break;case 3:for(h.readHex(m,S),h.readHexNumber(v,S),a(v,m,S),d=h.readNumber(),s.mapCidRange(e(m,S),e(v,S),d),x=1;x<A;x++)n(v,S),C?m.set(v):(h.readHexNumber(m,S),a(m,v,S)),h.readHexNumber(v,S),a(v,m,S),d=h.readNumber(),s.mapCidRange(e(m,S),e(v,S),d);break;case 4:for(h.readHex(b,1),h.readHex(y,S),s.mapOne(e(b,1),t(y,S)),x=1;x<A;x++)n(b,1),C||(h.readHexNumber(k,1),a(b,k,1)),n(y,S),h.readHexSigned(k,S),a(y,k,S),s.mapOne(e(b,1),t(y,S));break;case 5:for(h.readHex(m,1),h.readHexNumber(v,1),a(v,m,1),h.readHex(y,S),s.mapBfRange(e(m,1),e(v,1),t(y,S)),x=1;x<A;x++)n(v,1),C?m.set(v):(h.readHexNumber(m,1),a(m,v,1)),h.readHexNumber(v,1),a(v,m,1),h.readHex(y,S),s.mapBfRange(e(m,1),e(v,1),t(y,S));break;default:return void u(new Error(\"processBinaryCMap: Unknown type: \"+w))}}else switch(31&g){case 0:h.readString();break;case 1:p=h.readString()}}l(p?c(p):s)}))}},s}(),d=function(){function e(e){for(var t=0,a=0;a<e.length;a++)t=t<<8|e.charCodeAt(a);return t>>>0}function t(e){if(!(0,r.isString)(e))throw new r.FormatError(\"Malformed CMap: expected string.\")}function a(e){if(!Number.isInteger(e))throw new r.FormatError(\"Malformed CMap: expected int.\")}function l(a,r){for(;;){var i=r.getObj();if((0,n.isEOF)(i))break;if((0,n.isCmd)(i,\"endbfchar\"))return;t(i);var o=e(i);t(i=r.getObj());var s=i;a.mapOne(o,s)}}function d(a,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endbfrange\"))return;t(o);var s=e(o);t(o=i.getObj());var c=e(o);if(o=i.getObj(),Number.isInteger(o)||(0,r.isString)(o)){var l=Number.isInteger(o)?String.fromCharCode(o):o;a.mapBfRange(s,c,l)}else{if(!(0,n.isCmd)(o,\"[\"))break;o=i.getObj();for(var u=[];!(0,n.isCmd)(o,\"]\")&&!(0,n.isEOF)(o);)u.push(o),o=i.getObj();a.mapBfRangeToArray(s,c,u)}}throw new r.FormatError(\"Invalid bf range.\")}function g(r,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endcidchar\"))return;t(o);var s=e(o);a(o=i.getObj());var c=o;r.mapOne(s,c)}}function p(r,i){for(;;){var o=i.getObj();if((0,n.isEOF)(o))break;if((0,n.isCmd)(o,\"endcidrange\"))return;t(o);var s=e(o);t(o=i.getObj());var c=e(o);a(o=i.getObj());var l=o;r.mapCidRange(s,c,l)}}function m(t,a){for(;;){var i=a.getObj();if((0,n.isEOF)(i))break;if((0,n.isCmd)(i,\"endcodespacerange\"))return;if(!(0,r.isString)(i))break;var o=e(i);if(i=a.getObj(),!(0,r.isString)(i))break;var s=e(i);t.addCodespaceRange(i.length,o,s)}throw new r.FormatError(\"Invalid codespace range.\")}function v(e,t){var a=t.getObj();Number.isInteger(a)&&(e.vertical=!!a)}function b(e,t){var a=t.getObj();(0,n.isName)(a)&&(0,r.isString)(a.name)&&(e.name=a.name)}function y(e,t,a,i){var s,c;e:for(;;)try{var u=t.getObj();if((0,n.isEOF)(u))break;if((0,n.isName)(u))\"WMode\"===u.name?v(e,t):\"CMapName\"===u.name&&b(e,t),s=u;else if((0,n.isCmd)(u))switch(u.cmd){case\"endcmap\":break e;case\"usecmap\":(0,n.isName)(s)&&(c=s.name);break;case\"begincodespacerange\":m(e,t);break;case\"beginbfchar\":l(e,t);break;case\"begincidchar\":g(e,t);break;case\"beginbfrange\":d(e,t);break;case\"begincidrange\":p(e,t)}}catch(h){if(h instanceof o.MissingDataException)throw h;(0,r.warn)(\"Invalid cMap data: \"+h);continue}return!i&&c&&(i=c),i?k(e,a,i):Promise.resolve(e)}function k(e,t,a){return w(a,t).then((function(t){if(e.useCMap=t,0===e.numCodespaceRanges){for(var a=e.useCMap.codespaceRanges,r=0;r<a.length;r++)e.codespaceRanges[r]=a[r].slice();e.numCodespaceRanges=e.useCMap.numCodespaceRanges}return e.useCMap.forEach((function(t,a){e.contains(t)||e.mapOne(t,e.useCMap.lookup(t))})),e}))}function w(e,t){return\"Identity-H\"===e?Promise.resolve(new h(!1,2)):\"Identity-V\"===e?Promise.resolve(new h(!0,2)):c.includes(e)?t?t(e).then((function(e){var a=e.cMapData,n=e.compressionType,o=new u(!0);if(n===r.CMapCompressionType.BINARY)return(new f).process(a,o,(function(e){return k(o,t,e)}));if(n===r.CMapCompressionType.NONE){var c=new i.Lexer(new s.Stream(a));return y(o,c,t,null)}return Promise.reject(new Error(\"TODO: Only BINARY/NONE CMap compression is currently supported.\"))})):Promise.reject(new Error(\"Built-in CMap parameters are not provided.\")):Promise.reject(new Error(\"Unknown CMap name: \"+e))}return{create:function(e){return _asyncToGenerator(_regeneratorRuntime.mark((function t(){var a,r,o,s,c;return _regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(a=e.encoding,r=e.fetchBuiltInCMap,o=e.useCMap,!(0,n.isName)(a)){t.next=7;break}return t.abrupt(\"return\",w(a.name,r));case 7:if(!(0,n.isStream)(a)){t.next=11;break}return s=new u,c=new i.Lexer(a),t.abrupt(\"return\",y(s,c,r,o).then((function(e){return e.isIdentityCMap?w(e.name,r):e})));case 11:throw new Error(\"Encoding required.\");case 12:case\"end\":return t.stop()}}),t)})))()}}}();t.CMapFactory=d},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getFontType=C,t.IdentityToUnicodeMap=t.ToUnicodeMap=t.FontFlags=t.Font=t.ErrorFont=t.SEAC_ANALYSIS_ENABLED=void 0;var r=a(2),n=a(31),i=a(34),o=a(33),s=a(35),c=a(36),l=a(8),u=a(37),h=a(29),f=a(12),d=a(38),g=[[57344,63743],[1048576,1114109]],p=1e3,m=!0;t.SEAC_ANALYSIS_ENABLED=m;var v=[\"ascent\",\"bbox\",\"black\",\"bold\",\"charProcOperatorList\",\"composite\",\"data\",\"defaultVMetrics\",\"defaultWidth\",\"descent\",\"fallbackName\",\"fontMatrix\",\"fontType\",\"isMonospace\",\"isSerifFont\",\"isType3Font\",\"italic\",\"loadedName\",\"mimetype\",\"missingFile\",\"name\",\"remeasure\",\"subtype\",\"type\",\"vertical\"],b=[\"cMap\",\"defaultEncoding\",\"differences\",\"isSymbolicFont\",\"seacMap\",\"toFontChar\",\"toUnicode\",\"vmetrics\",\"widths\"],y={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144};t.FontFlags=y;var k=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function w(e){if(e.fontMatrix&&e.fontMatrix[0]!==r.FONT_IDENTITY_MATRIX[0]){var t=.001/e.fontMatrix[0],a=e.widths;for(var n in a)a[n]*=t;e.defaultWidth*=t}}function C(e,t){switch(e){case\"Type1\":return\"Type1C\"===t?r.FontType.TYPE1C:r.FontType.TYPE1;case\"CIDFontType0\":return\"CIDFontType0C\"===t?r.FontType.CIDFONTTYPE0C:r.FontType.CIDFONTTYPE0;case\"OpenType\":return r.FontType.OPENTYPE;case\"TrueType\":return r.FontType.TRUETYPE;case\"CIDFontType2\":return r.FontType.CIDFONTTYPE2;case\"MMType1\":return r.FontType.MMTYPE1;case\"Type0\":return r.FontType.TYPE0;default:return r.FontType.UNKNOWN}}function S(e,t){if(void 0!==t[e])return e;var a=(0,c.getUnicodeForGlyph)(e,t);if(-1!==a)for(var n in t)if(t[n]===a)return n;return(0,r.info)(\"Unable to recover a standard glyph name for: \"+e),e}var x=function(){function e(e,t,a,r,n,i,o,s){this.fontChar=e,this.unicode=t,this.accent=a,this.width=r,this.vmetric=n,this.operatorListId=i,this.isSpace=o,this.isInFont=s}return e.prototype.matchesForCache=function(e,t,a,r,n,i,o,s){return this.fontChar===e&&this.unicode===t&&this.accent===a&&this.width===r&&this.vmetric===n&&this.operatorListId===i&&this.isSpace===o&&this.isInFont===s},e}(),A=function(){function e(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._map=e}return e.prototype={get length(){return this._map.length},forEach:function(e){for(var t in this._map)e(t,this._map[t].charCodeAt(0))},has:function(e){return void 0!==this._map[e]},get:function(e){return this._map[e]},charCodeOf:function(e){var t=this._map;if(t.length<=65536)return t.indexOf(e);for(var a in t)if(t[a]===e)return 0|a;return-1},amend:function(e){for(var t in e)this._map[t]=e[t]}},e}();t.ToUnicodeMap=A;var I=function(){function e(e,t){this.firstChar=e,this.lastChar=t}return e.prototype={get length(){return this.lastChar+1-this.firstChar},forEach:function(e){for(var t=this.firstChar,a=this.lastChar;t<=a;t++)e(t,t)},has:function(e){return this.firstChar<=e&&e<=this.lastChar},get:function(e){if(this.firstChar<=e&&e<=this.lastChar)return String.fromCharCode(e)},charCodeOf:function(e){return Number.isInteger(e)&&e>=this.firstChar&&e<=this.lastChar?e:-1},amend:function(e){(0,r.unreachable)(\"Should not call amend()\")}},e}();t.IdentityToUnicodeMap=I;var F=function(){function e(e,t,a){e[t]=a>>8&255,e[t+1]=255&a}function t(e,t,a){e[t]=a>>24&255,e[t+1]=a>>16&255,e[t+2]=a>>8&255,e[t+3]=255&a}function a(e,t,a){var r,n;if(a instanceof Uint8Array)e.set(a,t);else if(\"string\"===typeof a)for(r=0,n=a.length;r<n;r++)e[t++]=255&a.charCodeAt(r);else for(r=0,n=a.length;r<n;r++)e[t++]=255&a[r]}function n(e){this.sfnt=e,this.tables=Object.create(null)}n.getSearchParams=function(e,t){for(var a=1,r=0;(a^e)>a;)a<<=1,r++;var n=a*t;return{range:n,entry:r,rangeShift:t*e-n}};return n.prototype={toArray:function(){var i=this.sfnt,o=this.tables,s=Object.keys(o);s.sort();var c,u,h,f,d,g=s.length,p=12+16*g,m=[p];for(c=0;c<g;c++){p+=((f=o[s[c]]).length+3&-4)>>>0,m.push(p)}var v=new Uint8Array(p);for(c=0;c<g;c++)f=o[s[c]],a(v,m[c],f);\"true\"===i&&(i=(0,r.string32)(65536)),v[0]=255&i.charCodeAt(0),v[1]=255&i.charCodeAt(1),v[2]=255&i.charCodeAt(2),v[3]=255&i.charCodeAt(3),e(v,4,g);var b=n.getSearchParams(g,16);for(e(v,6,b.range),e(v,8,b.entry),e(v,10,b.rangeShift),p=12,c=0;c<g;c++){d=s[c],v[p]=255&d.charCodeAt(0),v[p+1]=255&d.charCodeAt(1),v[p+2]=255&d.charCodeAt(2),v[p+3]=255&d.charCodeAt(3);var y=0;for(u=m[c],h=m[c+1];u<h;u+=4){y=y+(0,l.readUint32)(v,u)>>>0}t(v,p+4,y),t(v,p+8,m[c]),t(v,p+12,o[d].length),p+=16}return v},addTable:function(e,t){if(e in this.tables)throw new Error(\"Table \"+e+\" already exists\");this.tables[e]=t}},n}(),T=function(){function e(e,t,a){var n;this.name=e,this.loadedName=a.loadedName,this.isType3Font=a.isType3Font,this.missingFile=!1,this.glyphCache=Object.create(null),this.isSerifFont=!!(a.flags&y.Serif),this.isSymbolicFont=!!(a.flags&y.Symbolic),this.isMonospace=!!(a.flags&y.FixedPitch);var i=a.type,o=a.subtype;this.type=i,this.subtype=o;var s=\"sans-serif\";if(this.isMonospace?s=\"monospace\":this.isSerifFont&&(s=\"serif\"),this.fallbackName=s,this.differences=a.differences,this.widths=a.widths,this.defaultWidth=a.defaultWidth,this.composite=a.composite,this.cMap=a.cMap,this.ascent=a.ascent/p,this.descent=a.descent/p,this.fontMatrix=a.fontMatrix,this.bbox=a.bbox,this.defaultEncoding=a.defaultEncoding,this.toUnicode=a.toUnicode,this.fallbackToUnicode=a.fallbackToUnicode||new A,this.toFontChar=[],\"Type3\"!==a.type){if(this.cidEncoding=a.cidEncoding,this.vertical=!!a.vertical,this.vertical&&(this.vmetrics=a.vmetrics,this.defaultVMetrics=a.defaultVMetrics),!t||t.isEmpty)return t&&(0,r.warn)('Font file is empty in \"'+e+'\" ('+this.loadedName+\")\"),void this.fallbackToSystemFont();var c=function(e,t){var a,n,i=t.type,o=t.subtype,s=t.composite;(function(e){var t=e.peekBytes(4);return 65536===(0,l.readUint32)(t,0)||\"true\"===(0,r.bytesToString)(t)})(e)||O(e)?a=s?\"CIDFontType2\":\"TrueType\":!function(e){var t=e.peekBytes(4);return\"OTTO\"===(0,r.bytesToString)(t)}(e)?!function(e){var t=e.peekBytes(2);if(37===t[0]&&33===t[1])return!0;if(128===t[0]&&1===t[1])return!0;return!1}(e)?!function(e){var t=e.peekBytes(4);if(t[0]>=1&&t[3]>=1&&t[3]<=4)return!0;return!1}(e)?((0,r.warn)(\"getFontFileType: Unable to detect correct font file Type/Subtype.\"),a=i,n=o):s?(a=\"CIDFontType0\",n=\"CIDFontType0C\"):(a=\"MMType1\"===i?\"MMType1\":\"Type1\",n=\"Type1C\"):a=s?\"CIDFontType0\":\"MMType1\"===i?\"MMType1\":\"Type1\":a=s?\"CIDFontType2\":\"OpenType\";return[a,n]}(t,a),u=_slicedToArray(c,2);i=u[0],o=u[1],i===this.type&&o===this.subtype||(0,r.info)(\"Inconsistent font file Type/SubType, expected: \"+\"\".concat(this.type,\"/\").concat(this.subtype,\" but found: \").concat(i,\"/\").concat(o,\".\"));try{var h;switch(i){case\"MMType1\":(0,r.info)(\"MMType1 font (\"+e+\"), falling back to Type1.\");case\"Type1\":case\"CIDFontType0\":this.mimetype=\"font/opentype\";var f=\"Type1C\"===o||\"CIDFontType0C\"===o?new _(t,a):new P(e,t,a);w(a),h=this.convert(e,f,a);break;case\"OpenType\":case\"TrueType\":case\"CIDFontType2\":this.mimetype=\"font/opentype\",h=this.checkAndRepair(e,t,a),this.isOpenType&&(w(a),i=\"OpenType\");break;default:throw new r.FormatError(\"Font \".concat(i,\" is not supported\"))}}catch(d){return(0,r.warn)(d),void this.fallbackToSystemFont()}this.data=h,this.fontType=C(i,o),this.fontMatrix=a.fontMatrix,this.widths=a.widths,this.defaultWidth=a.defaultWidth,this.toUnicode=a.toUnicode,this.seacMap=a.seacMap}else{for(n=0;n<256;n++)this.toFontChar[n]=this.differences[n]||a.defaultEncoding[n];this.fontType=r.FontType.TYPE3}}function t(e,t){return(e<<8)+t}function a(e,t){var a=(e<<8)+t;return 32768&a?a-65536:a}function d(e){return String.fromCharCode(e>>8&255,255&e)}function T(e){return e>32767?e=32767:e<-32768&&(e=-32768),String.fromCharCode(e>>8&255,255&e)}function O(e){var t=e.peekBytes(4);return\"ttcf\"===(0,r.bytesToString)(t)}function E(e,t,a){for(var r,n=[],i=0,o=e.length;i<o;i++)-1!==(r=(0,c.getUnicodeForGlyph)(e[i],t))&&(n[i]=r);for(var s in a)-1!==(r=(0,c.getUnicodeForGlyph)(a[s],t))&&(n[+s]=r);return n}function B(e,t,a){var n=Object.create(null),i=[],o=0,s=g[o][0],c=g[o][1];for(var l in e){var u=e[l|=0];if(t(u)){if(s>c){if(++o>=g.length){(0,r.warn)(\"Ran out of space in font private use area.\");break}s=g[o][0],c=g[o][1]}var h=s++;0===u&&(u=a),n[h]=u,i[l]=h}}return{toFontChar:i,charCodeToGlyphId:n,nextAvailableFontCharCode:s}}function M(e,t){var a,n,i,o,s=function(e,t){var a=[];for(var r in e)e[r]>=t||a.push({fontCharCode:0|r,glyphId:e[r]});0===a.length&&a.push({fontCharCode:0,glyphId:0}),a.sort((function(e,t){return e.fontCharCode-t.fontCharCode}));for(var n=[],i=a.length,o=0;o<i;){var s=a[o].fontCharCode,c=[a[o].glyphId];++o;for(var l=s;o<i&&l+1===a[o].fontCharCode&&(c.push(a[o].glyphId),++o,65535!==++l););n.push([s,l,c])}return n}(e,t),c=s[s.length-1][1]>65535?2:1,l=\"\\0\\0\"+d(c)+\"\\0\\x03\\0\\x01\"+(0,r.string32)(4+8*c);for(a=s.length-1;a>=0&&!(s[a][0]<=65535);--a);var u=a+1;s[a][0]<65535&&65535===s[a][1]&&(s[a][1]=65534);var h,f,g,p,m=s[a][1]<65535?1:0,v=u+m,b=F.getSearchParams(v,2),y=\"\",k=\"\",w=\"\",C=\"\",S=\"\",x=0;for(a=0,n=u;a<n;a++){f=(h=s[a])[0],g=h[1],y+=d(f),k+=d(g);var A=!0;for(i=1,o=(p=h[2]).length;i<o;++i)if(p[i]!==p[i-1]+1){A=!1;break}if(A){w+=d(p[0]-f&65535),C+=d(0)}else{var I=2*(v-a)+2*x;for(x+=g-f+1,w+=d(0),C+=d(I),i=0,o=p.length;i<o;++i)S+=d(p[i])}}m>0&&(k+=\"\\xff\\xff\",y+=\"\\xff\\xff\",w+=\"\\0\\x01\",C+=\"\\0\\0\");var T=\"\\0\\0\"+d(2*v)+d(b.range)+d(b.entry)+d(b.rangeShift)+k+\"\\0\\0\"+y+w+C+S,O=\"\",E=\"\";if(c>1){for(l+=\"\\0\\x03\\0\\n\"+(0,r.string32)(4+8*c+4+T.length),O=\"\",a=0,n=s.length;a<n;a++){f=(h=s[a])[0];var P=(p=h[2])[0];for(i=1,o=p.length;i<o;++i)p[i]!==p[i-1]+1&&(g=h[0]+i-1,O+=(0,r.string32)(f)+(0,r.string32)(g)+(0,r.string32)(P),f=g+1,P=p[i]);O+=(0,r.string32)(f)+(0,r.string32)(h[1])+(0,r.string32)(P)}E=\"\\0\\f\\0\\0\"+(0,r.string32)(O.length+16)+\"\\0\\0\\0\\0\"+(0,r.string32)(O.length/12)}return l+\"\\0\\x04\"+d(T.length+4)+T+E+O}function D(e,t,a){a=a||{unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};var n=0,i=0,o=0,s=0,l=null,u=0;if(t){for(var h in t){(l>(h|=0)||!l)&&(l=h),u<h&&(u=h);var f=(0,c.getUnicodeRangeFor)(h);if(f<32)n|=1<<f;else if(f<64)i|=1<<f-32;else if(f<96)o|=1<<f-64;else{if(!(f<123))throw new r.FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\");s|=1<<f-96}}u>65535&&(u=65535)}else l=0,u=255;var g=e.bbox||[0,0,0,0],m=a.unitsPerEm||1/(e.fontMatrix||r.FONT_IDENTITY_MATRIX)[0],v=e.ascentScaled?1:m/p,b=a.ascent||Math.round(v*(e.ascent||g[3])),y=a.descent||Math.round(v*(e.descent||g[1]));y>0&&e.descent>0&&g[1]<0&&(y=-y);var k=a.yMax||b,w=-a.yMin||-y;return\"\\0\\x03\\x02$\\x01\\xf4\\0\\x05\\0\\0\\x02\\x8a\\x02\\xbb\\0\\0\\0\\x8c\\x02\\x8a\\x02\\xbb\\0\\0\\x01\\xdf\\x001\\x01\\x02\\0\\0\\0\\0\\x06\"+String.fromCharCode(e.fixedPitch?9:0)+\"\\0\\0\\0\\0\\0\\0\"+(0,r.string32)(n)+(0,r.string32)(i)+(0,r.string32)(o)+(0,r.string32)(s)+\"*21*\"+d(e.italicAngle?1:0)+d(l||e.firstChar)+d(u||e.lastChar)+d(b)+d(y)+\"\\0d\"+d(k)+d(w)+\"\\0\\0\\0\\0\\0\\0\\0\\0\"+d(e.xHeight)+d(e.capHeight)+d(0)+d(l||e.firstChar)+\"\\0\\x03\"}function R(e){var t=Math.floor(e.italicAngle*Math.pow(2,16));return\"\\0\\x03\\0\\0\"+(0,r.string32)(t)+\"\\0\\0\\0\\0\"+(0,r.string32)(e.fixedPitch)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"}function N(e,t){t||(t=[[],[]]);var a,r,n,i,o,s=[t[0][0]||\"Original licence\",t[0][1]||e,t[0][2]||\"Unknown\",t[0][3]||\"uniqueID\",t[0][4]||e,t[0][5]||\"Version 0.11\",t[0][6]||\"\",t[0][7]||\"Unknown\",t[0][8]||\"Unknown\",t[0][9]||\"Unknown\"],c=[];for(a=0,r=s.length;a<r;a++){var l=[];for(n=0,i=(o=t[1][a]||s[a]).length;n<i;n++)l.push(d(o.charCodeAt(n)));c.push(l.join(\"\"))}var u=[s,c],h=[\"\\0\\x01\",\"\\0\\x03\"],f=[\"\\0\\0\",\"\\0\\x01\"],g=[\"\\0\\0\",\"\\x04\\t\"],p=s.length*h.length,m=\"\\0\\0\"+d(p)+d(12*p+6),v=0;for(a=0,r=h.length;a<r;a++){var b=u[a];for(n=0,i=b.length;n<i;n++){o=b[n],m+=h[a]+f[a]+g[a]+d(n)+d(o.length)+d(v),v+=o.length}}return m+=s.join(\"\")+c.join(\"\")}return e.prototype={name:null,font:null,mimetype:null,disableFontFace:!1,get renderer(){var e=u.FontRendererFactory.create(this,m);return(0,r.shadow)(this,\"renderer\",e)},exportData:function(){var e,t,a,r=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=r?[].concat(v,b):v,i=Object.create(null),o=_createForOfIteratorHelper(n);try{for(o.s();!(a=o.n()).done;)void 0!==(t=this[e=a.value])&&(i[e]=t)}catch(s){o.e(s)}finally{o.f()}return i},fallbackToSystemFont:function(){var e=this;this.missingFile=!0;var t=this.name,a=this.type,n=this.subtype,l=t.replace(/[,_]/g,\"-\").replace(/\\s/g,\"\"),u=(0,s.getStdFontMap)(),h=(0,s.getNonStdFontMap)(),f=!!u[l]||!(!h[l]||!u[h[l]]);if(l=u[l]||h[l]||l,this.bold=-1!==l.search(/bold/gi),this.italic=-1!==l.search(/oblique/gi)||-1!==l.search(/italic/gi),this.black=-1!==t.search(/Black/g),this.remeasure=Object.keys(this.widths).length>0,f&&\"CIDFontType2\"===a&&this.cidEncoding.startsWith(\"Identity-\")){var d=(0,s.getGlyphMapForStandardFonts)(),g=[];for(var p in d)g[+p]=d[p];if(/Arial-?Black/i.test(t)){var m=(0,s.getSupplementalGlyphMapForArialBlack)();for(var v in m)g[+v]=m[v]}else if(/Calibri/i.test(t)){var b=(0,s.getSupplementalGlyphMapForCalibri)();for(var y in b)g[+y]=b[y]}this.toUnicode instanceof I||this.toUnicode.forEach((function(e,t){g[+e]=t})),this.toFontChar=g,this.toUnicode=new A(g)}else if(/Symbol/i.test(l))this.toFontChar=E(o.SymbolSetEncoding,(0,i.getGlyphsUnicode)(),this.differences);else if(/Dingbats/i.test(l))/Wingdings/i.test(t)&&(0,r.warn)(\"Non-embedded Wingdings font, falling back to ZapfDingbats.\"),this.toFontChar=E(o.ZapfDingbatsEncoding,(0,i.getDingbatsGlyphsUnicode)(),this.differences);else if(f)this.toFontChar=E(this.defaultEncoding,(0,i.getGlyphsUnicode)(),this.differences);else{var k=(0,i.getGlyphsUnicode)(),w=[];if(this.toUnicode.forEach((function(t,a){if(!e.composite){var r=e.differences[t]||e.defaultEncoding[t],n=(0,c.getUnicodeForGlyph)(r,k);-1!==n&&(a=n)}w[+t]=a})),this.composite&&this.toUnicode instanceof I&&/Verdana/i.test(t)){var S=(0,s.getGlyphMapForStandardFonts)();for(var x in S)w[+x]=S[x]}this.toFontChar=w}this.loadedName=l.split(\"-\")[0],this.fontType=C(a,n)},checkAndRepair:function(e,s,c){var l=[\"OS/2\",\"cmap\",\"head\",\"hhea\",\"hmtx\",\"maxp\",\"name\",\"post\",\"loca\",\"glyf\",\"fpgm\",\"prep\",\"cvt \",\"CFF \"];function u(e,t){var a=Object.create(null);a[\"OS/2\"]=null,a.cmap=null,a.head=null,a.hhea=null,a.hmtx=null,a.maxp=null,a.name=null,a.post=null;for(var r=0;r<t;r++){var n=d(e);l.includes(n.tag)&&(0!==n.length&&(a[n.tag]=n))}return a}function d(e){var t=(0,r.bytesToString)(e.getBytes(4)),a=e.getInt32()>>>0,n=e.getInt32()>>>0,i=e.getInt32()>>>0,o=e.pos;e.pos=e.start?e.start:0,e.skip(n);var s=e.getBytes(i);return e.pos=o,\"head\"===t&&(s[8]=s[9]=s[10]=s[11]=0,s[17]|=32),{tag:t,checksum:a,length:i,offset:n,data:s}}function g(e){return{version:(0,r.bytesToString)(e.getBytes(4)),numTables:e.getUint16(),searchRange:e.getUint16(),entrySelector:e.getUint16(),rangeShift:e.getUint16()}}function p(e,t,r,n,i,o){var s={length:0,sizeOfInstructions:0};if(r-t<=12)return s;var c,l,u,h=e.subarray(t,r),f=a(h[0],h[1]);if(f<0)return u=f=-1,(c=h)[(l=0)+1]=u,c[l]=u>>>8,n.set(h,i),s.length=h.length,s;var d,g=10,p=0;for(d=0;d<f;d++){p=(h[g]<<8|h[g+1])+1,g+=2}var m=g,v=h[g]<<8|h[g+1];s.sizeOfInstructions=v;var b=g+=2+v,y=0;for(d=0;d<p;d++){var k=h[g++];192&k&&(h[g-1]=63&k);var w=2;2&k?w=1:16&k&&(w=0);var C=2;4&k?C=1:32&k&&(C=0);var S=w+C;if(y+=S,8&k){var x=h[g++];d+=x,y+=x*S}}if(0===y)return s;var A=g+y;return A>h.length?s:!o&&v>0?(n.set(h.subarray(0,m),i),n.set([0,0],i+m),n.set(h.subarray(b,A),i+m+2),A-=v,h.length-A>3&&(A=A+3&-4),s.length=A,s):h.length-A>3?(A=A+3&-4,n.set(h.subarray(0,A),i),s.length=A,s):(n.set(h,i),s.length=h.length,s)}function v(e){var t=(s.start?s.start:0)+e.offset;s.pos=t;var a=[[],[]],n=e.length,i=t+n;if(0!==s.getUint16()||n<6)return a;var o,c,l=s.getUint16(),u=s.getUint16(),h=[];for(o=0;o<l&&s.pos+12<=i;o++){var f={platform:s.getUint16(),encoding:s.getUint16(),language:s.getUint16(),name:s.getUint16(),length:s.getUint16(),offset:s.getUint16()};(1===f.platform&&0===f.encoding&&0===f.language||3===f.platform&&1===f.encoding&&1033===f.language)&&h.push(f)}for(o=0,c=h.length;o<c;o++){var d=h[o];if(!(d.length<=0)){var g=t+u+d.offset;if(!(g+d.length>i)){s.pos=g;var p=d.name;if(d.encoding){for(var m=\"\",v=0,b=d.length;v<b;v+=2)m+=String.fromCharCode(s.getUint16());a[1][p]=m}else a[0][p]=(0,r.bytesToString)(s.getBytes(d.length))}}}return a}var b,y,C,x,A=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function I(e,t){for(var a,n,i,o,s,c=e.data,l=0,u=0,h=0,f=[],d=[],g=[],p=t.tooComplexToFollowFunctions,m=!1,v=0,b=0,y=c.length;l<y;){var k=c[l++];if(64===k)if(n=c[l++],m||b)l+=n;else for(a=0;a<n;a++)f.push(c[l++]);else if(65===k)if(n=c[l++],m||b)l+=2*n;else for(a=0;a<n;a++)i=c[l++],f.push(i<<8|c[l++]);else if(176===(248&k))if(n=k-176+1,m||b)l+=n;else for(a=0;a<n;a++)f.push(c[l++]);else if(184===(248&k))if(n=k-184+1,m||b)l+=2*n;else for(a=0;a<n;a++)i=c[l++],f.push(i<<8|c[l++]);else if(43!==k||p)if(44!==k||p){if(45===k)if(m)m=!1,u=l;else{if(!(s=d.pop()))return(0,r.warn)(\"TT: ENDF bad stack\"),void(t.hintsValid=!1);o=g.pop(),c=s.data,l=s.i,t.functionsStackDeltas[o]=f.length-s.stackTop}else if(137===k)(m||b)&&((0,r.warn)(\"TT: nested IDEFs not allowed\"),p=!0),m=!0,h=l;else if(88===k)++v;else if(27===k)b=v;else if(89===k)b===v&&(b=0),--v;else if(28===k&&!m&&!b){var w=f[f.length-1];w>0&&(l+=w-1)}}else(m||b)&&((0,r.warn)(\"TT: nested FDEFs not allowed\"),p=!0),m=!0,h=l,o=f.pop(),t.functionsDefined[o]={data:c,i:l};else if(!m&&!b)if(o=f[f.length-1],isNaN(o))(0,r.info)(\"TT: CALL empty stack (or invalid entry).\");else if(t.functionsUsed[o]=!0,o in t.functionsStackDeltas){var C=f.length+t.functionsStackDeltas[o];if(C<0)return(0,r.warn)(\"TT: CALL invalid functions stack delta.\"),void(t.hintsValid=!1);f.length=C}else if(o in t.functionsDefined&&!g.includes(o)){if(d.push({data:c,i:l,stackTop:f.length-1}),g.push(o),!(s=t.functionsDefined[o]))return(0,r.warn)(\"TT: CALL non-existent function\"),void(t.hintsValid=!1);c=s.data,l=s.i}if(!m&&!b){var S=0;for(k<=142?S=A[k]:k>=192&&k<=223?S=-1:k>=224&&(S=-2),k>=113&&k<=117&&(n=f.pop(),isNaN(n)||(S=2*-n));S<0&&f.length>0;)f.pop(),S++;for(;S>0;)f.push(NaN),S--}}t.tooComplexToFollowFunctions=p;var x=[c];l>c.length&&x.push(new Uint8Array(l-c.length)),h>u&&((0,r.warn)(\"TT: complementing a missing function tail\"),x.push(new Uint8Array([34,45]))),function(e,t){if(t.length>1){var a,r,n=0;for(a=0,r=t.length;a<r;a++)n+=t[a].length;n=n+3&-4;var i=new Uint8Array(n),o=0;for(a=0,r=t.length;a<r;a++)i.set(t[a],o),o+=t[a].length;e.data=i,e.length=n}}(e,x)}if(O(s=new f.Stream(new Uint8Array(s.getBytes())))){var T=function(e,t){for(var a=function(e){var t=(0,r.bytesToString)(e.getBytes(4));(0,r.assert)(\"ttcf\"===t,\"Must be a TrueType Collection font.\");for(var a=e.getUint16(),n=e.getUint16(),i=e.getInt32()>>>0,o=[],s=0;s<i;s++)o.push(e.getInt32()>>>0);var c={ttcTag:t,majorVersion:a,minorVersion:n,numFonts:i,offsetTable:o};switch(a){case 1:return c;case 2:return c.dsigTag=e.getInt32()>>>0,c.dsigLength=e.getInt32()>>>0,c.dsigOffset=e.getInt32()>>>0,c}throw new r.FormatError(\"Invalid TrueType Collection majorVersion: \".concat(a,\".\"))}(e),n=a.numFonts,i=a.offsetTable,o=0;o<n;o++){e.pos=(e.start||0)+i[o];var s=g(e),c=u(e,s.numTables);if(!c.name)throw new r.FormatError('TrueType Collection font must contain a \"name\" table.');for(var l=v(c.name),h=0,f=l.length;h<f;h++)for(var d=0,p=l[h].length;d<p;d++){var m=l[h][d];if(m&&m.replace(/\\s/g,\"\")===t)return{header:s,tables:c}}}throw new r.FormatError('TrueType Collection does not contain \"'.concat(t,'\" font.'))}(s,this.name);b=T.header,y=T.tables}else b=g(s),y=u(s,b.numTables);var E=!y[\"CFF \"];if(E){if(!y.loca)throw new r.FormatError('Required \"loca\" table is not found');y.glyf||((0,r.warn)('Required \"glyf\" table is not found -- trying to recover.'),y.glyf={tag:\"glyf\",data:new Uint8Array(0)}),this.isOpenType=!1}else{var P=c.composite&&((c.cidToGidMap||[]).length>0||!(c.cMap instanceof h.IdentityCMap));if(\"OTTO\"===b.version&&!P||!y.head||!y.hhea||!y.maxp||!y.post)return x=new f.Stream(y[\"CFF \"].data),C=new _(x,c),w(c),this.convert(e,C,c);delete y.glyf,delete y.loca,delete y.fpgm,delete y.prep,delete y[\"cvt \"],this.isOpenType=!0}if(!y.maxp)throw new r.FormatError('Required \"maxp\" table is not found');s.pos=(s.start||0)+y.maxp.offset;var L=s.getInt32(),U=s.getUint16(),q=U+1,j=!0;q>65535&&(j=!1,q=U,(0,r.warn)(\"Not enough space in glyfs to duplicate first glyph.\"));var z=0,H=0;L>=65536&&y.maxp.length>=22&&(s.pos+=8,s.getUint16()>2&&(y.maxp.data[14]=0,y.maxp.data[15]=2),s.pos+=4,z=s.getUint16(),s.pos+=4,H=s.getUint16());y.maxp.data[4]=q>>8,y.maxp.data[5]=255&q;var G=function(e,t,a,n){var i={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:!1,hintsValid:!0};if(e&&I(e,i),t&&I(t,i),e&&function(e,t){if(!e.tooComplexToFollowFunctions){if(e.functionsDefined.length>t)return(0,r.warn)(\"TT: more functions defined than expected\"),void(e.hintsValid=!1);for(var a=0,n=e.functionsUsed.length;a<n;a++){if(a>t)return(0,r.warn)(\"TT: invalid function id: \"+a),void(e.hintsValid=!1);if(e.functionsUsed[a]&&!e.functionsDefined[a])return(0,r.warn)(\"TT: undefined function: \"+a),void(e.hintsValid=!1)}}}(i,n),a&&1&a.length){var o=new Uint8Array(a.length+1);o.set(a.data),a.data=o}return i.hintsValid}(y.fpgm,y.prep,y[\"cvt \"],z);if(G||(delete y.fpgm,delete y.prep,delete y[\"cvt \"]),function(e,t,a,n,i){if(t){e.pos=(e.start?e.start:0)+t.offset,e.pos+=4,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=2,e.pos+=8,e.pos+=2;var o=e.getUint16();o>n&&((0,r.info)(\"The numOfMetrics (\"+o+\") should not be greater than the numGlyphs (\"+n+\")\"),o=n,t.data[34]=(65280&o)>>8,t.data[35]=255&o);var s=n-o-(a.length-4*o>>1);if(s>0){var c=new Uint8Array(a.length+2*s);c.set(a.data),i&&(c[a.length]=a.data[2],c[a.length+1]=a.data[3]),a.data=c}}else a&&(a.data=null)}(s,y.hhea,y.hmtx,q,j),!y.head)throw new r.FormatError('Required \"head\" table is not found');!function(e,a,n){var i,o,s,c,l=e.data,u=(i=l[0],o=l[1],s=l[2],c=l[3],(i<<24)+(o<<16)+(s<<8)+c);u>>16!==1&&((0,r.info)(\"Attempting to fix invalid version in head table: \"+u),l[0]=0,l[1]=1,l[2]=0,l[3]=0);var h=t(l[50],l[51]);if(h<0||h>1){(0,r.info)(\"Attempting to fix invalid indexToLocFormat in head table: \"+h);var f=a+1;if(n===f<<1)l[50]=0,l[51]=0;else{if(n!==f<<2)throw new r.FormatError(\"Could not fix indexToLocFormat: \"+h);l[50]=0,l[51]=1}}}(y.head,U,E?y.loca.length:0);var X=Object.create(null);if(E){var W=t(y.head.data[50],y.head.data[51]),V=function(e,t,a,r,n,i,o){var s,c,l;r?(s=4,c=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]},l=function(e,t,a){e[t]=a>>>24&255,e[t+1]=a>>16&255,e[t+2]=a>>8&255,e[t+3]=255&a}):(s=2,c=function(e,t){return e[t]<<9|e[t+1]<<1},l=function(e,t,a){e[t]=a>>9&255,e[t+1]=a>>1&255});var u=i?a+1:a,h=s*(1+u),f=new Uint8Array(h);f.set(e.data.subarray(0,h)),e.data=f;var d,g,m=t.data,v=m.length,b=new Uint8Array(v),y=[];for(d=0,g=0;d<a+1;d++,g+=s){var k=c(f,g);k>v&&(k=v),y.push({index:d,offset:k,endOffset:0})}for(y.sort((function(e,t){return e.offset-t.offset})),d=0;d<a;d++)y[d].endOffset=y[d+1].offset;y.sort((function(e,t){return e.index-t.index}));var w=Object.create(null),C=0;for(l(f,0,C),d=0,g=s;d<a;d++,g+=s){var S=p(m,y[d].offset,y[d].endOffset,b,C,n),x=S.length;0===x&&(w[d]=!0),S.sizeOfInstructions>o&&(o=S.sizeOfInstructions),l(f,g,C+=x)}if(0===C){var A=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(d=0,g=s;d<u;d++,g+=s)l(f,g,A.length);t.data=A}else if(i){var I=c(f,s);b.length>I+C?t.data=b.subarray(0,I+C):(t.data=new Uint8Array(I+C),t.data.set(b.subarray(0,C))),t.data.set(b.subarray(0,I),C),l(e.data,f.length-s,C+I)}else t.data=b.subarray(0,C);return{missingGlyphs:w,maxSizeOfInstructions:o}}(y.loca,y.glyf,U,W,G,j,H);X=V.missingGlyphs,L>=65536&&y.maxp.length>=22&&(y.maxp.data[26]=V.maxSizeOfInstructions>>8,y.maxp.data[27]=255&V.maxSizeOfInstructions)}if(!y.hhea)throw new r.FormatError('Required \"hhea\" table is not found');0===y.hhea.data[10]&&0===y.hhea.data[11]&&(y.hhea.data[10]=255,y.hhea.data[11]=255);var K={unitsPerEm:t(y.head.data[18],y.head.data[19]),yMax:t(y.head.data[42],y.head.data[43]),yMin:a(y.head.data[38],y.head.data[39]),ascent:t(y.hhea.data[4],y.hhea.data[5]),descent:a(y.hhea.data[6],y.hhea.data[7])};this.ascent=K.ascent/K.unitsPerEm,this.descent=K.descent/K.unitsPerEm,y.post&&function(e,t,a){var n=(s.start?s.start:0)+e.offset;s.pos=n;var i,o=n+e.length,c=s.getInt32();s.skip(28);var l,u=!0;switch(c){case 65536:i=k;break;case 131072:var h=s.getUint16();if(h!==a){u=!1;break}var f=[];for(l=0;l<h;++l){var d=s.getUint16();if(d>=32768){u=!1;break}f.push(d)}if(!u)break;for(var g=[],p=[];s.pos<o;){var m=s.getByte();for(p.length=m,l=0;l<m;++l)p[l]=String.fromCharCode(s.getByte());g.push(p.join(\"\"))}for(i=[],l=0;l<h;++l){var v=f[l];v<258?i.push(k[v]):i.push(g[v-258])}break;case 196608:break;default:(0,r.warn)(\"Unknown/unsupported post table version \"+c),u=!1,t.defaultEncoding&&(i=t.defaultEncoding)}t.glyphNames=i}(y.post,c,U),y.post={tag:\"post\",data:R(c)};var Y=[];function J(e){return!X[e]}if(c.composite){var Z=c.cidToGidMap||[],Q=0===Z.length;c.cMap.forEach((function(e,t){if(t>65535)throw new r.FormatError(\"Max size of CID is 65,535\");var a=-1;Q?a=t:void 0!==Z[t]&&(a=Z[t]),a>=0&&a<U&&J(a)&&(Y[e]=a)}))}else{var $=function(e,t,a,n){if(!e)return(0,r.warn)(\"No cmap table available.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var i,o=(t.start?t.start:0)+e.offset;t.pos=o,t.skip(2);for(var s,c=t.getUint16(),l=!1,u=0;u<c;u++){var h=t.getUint16(),f=t.getUint16(),d=t.getInt32()>>>0,g=!1;if((!s||s.platformId!==h||s.encodingId!==f)&&(0!==h||0!==f&&1!==f&&3!==f?1===h&&0===f?g=!0:3!==h||1!==f||!n&&s?a&&3===h&&0===f&&(g=!0,l=!0):(g=!0,a||(l=!0)):g=!0,g&&(s={platformId:h,encodingId:f,offset:d}),l))break}if(s&&(t.pos=o+s.offset),!s||-1===t.peekByte())return(0,r.warn)(\"Could not find a preferred cmap table.\"),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var p=t.getUint16();t.skip(4);var m,v,b=!1,y=[];if(0===p){for(m=0;m<256;m++){var k=t.getByte();k&&y.push({charCode:m,glyphId:k})}b=!0}else if(4===p){var w=t.getUint16()>>1;t.skip(6);var C,S=[];for(C=0;C<w;C++)S.push({end:t.getUint16()});for(t.skip(2),C=0;C<w;C++)S[C].start=t.getUint16();for(C=0;C<w;C++)S[C].delta=t.getUint16();var x=0;for(C=0;C<w;C++){i=S[C];var A=t.getUint16();if(A){var I=(A>>1)-(w-C);i.offsetIndex=I,x=Math.max(x,I+i.end-i.start+1)}else i.offsetIndex=-1}var F=[];for(m=0;m<x;m++)F.push(t.getUint16());for(C=0;C<w;C++){o=(i=S[C]).start;var T=i.end,O=i.delta;for(I=i.offsetIndex,m=o;m<=T;m++)65535!==m&&(v=(v=I<0?m:F[I+m-o])+O&65535,y.push({charCode:m,glyphId:v}))}}else{if(6!==p)return(0,r.warn)(\"cmap table has unsupported format: \"+p),{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:!1};var E=t.getUint16(),P=t.getUint16();for(m=0;m<P;m++){v=t.getUint16();var _=E+m;y.push({charCode:_,glyphId:v})}}for(y.sort((function(e,t){return e.charCode-t.charCode})),u=1;u<y.length;u++)y[u-1].charCode===y[u].charCode&&(y.splice(u,1),u--);return{platformId:s.platformId,encodingId:s.encodingId,mappings:y,hasShortCmap:b}}(y.cmap,s,this.isSymbolicFont,c.hasEncoding),ee=$.platformId,te=$.encodingId,ae=$.mappings,re=ae.length,ne=[];if(!c.hasEncoding||\"MacRomanEncoding\"!==c.baseEncodingName&&\"WinAnsiEncoding\"!==c.baseEncodingName||(ne=(0,o.getEncoding)(c.baseEncodingName)),c.hasEncoding&&!this.isSymbolicFont&&(3===ee&&1===te||1===ee&&0===te))for(var ie=(0,i.getGlyphsUnicode)(),oe=0;oe<256;oe++){var se,ce;if(se=this.differences&&oe in this.differences?this.differences[oe]:oe in ne&&\"\"!==ne[oe]?ne[oe]:o.StandardEncoding[oe]){var le;ce=S(se,ie),3===ee&&1===te?le=ie[ce]:1===ee&&0===te&&(le=o.MacRomanEncoding.indexOf(ce));for(var ue=0;ue<re;++ue)if(ae[ue].charCode===le){Y[oe]=ae[ue].glyphId;break}}}else if(0===ee)for(var he=0;he<re;++he)Y[ae[he].charCode]=ae[he].glyphId;else for(var fe=0;fe<re;++fe){var de=ae[fe].charCode;3===ee&&de>=61440&&de<=61695&&(de&=255),Y[de]=ae[fe].glyphId}if(c.glyphNames&&ne.length)for(var ge=0;ge<256;++ge)if(void 0===Y[ge]&&ne[ge]){se=ne[ge];var pe=c.glyphNames.indexOf(se);pe>0&&J(pe)&&(Y[ge]=pe)}}0===Y.length&&(Y[0]=0);var me=q-1;j||(me=0);var ve=B(Y,J,me);if(this.toFontChar=ve.toFontChar,y.cmap={tag:\"cmap\",data:M(ve.charCodeToGlyphId,q)},y[\"OS/2\"]&&function(e,t){t.pos=(t.start||0)+e.offset;var a=t.getUint16();t.skip(60);var r=t.getUint16();return!(a<4&&768&r)&&!(t.getUint16()>t.getUint16())&&(t.skip(6),0!==t.getUint16()&&(e.data[8]=e.data[9]=0,!0))}(y[\"OS/2\"],s)||(y[\"OS/2\"]={tag:\"OS/2\",data:D(c,ve.charCodeToGlyphId,K)}),!E)try{x=new f.Stream(y[\"CFF \"].data),(C=new n.CFFParser(x,c,m).parse()).duplicateFirstGlyph();var be=new n.CFFCompiler(C);y[\"CFF \"].data=be.compile()}catch(Ce){(0,r.warn)(\"Failed to compile font \"+c.loadedName)}if(y.name){var ye=v(y.name);y.name.data=N(e,ye)}else y.name={tag:\"name\",data:N(this.name)};var ke=new F(b.version);for(var we in y)ke.addTable(we,y[we].data);return ke.toArray()},convert:function(e,t,a){a.fixedPitch=!1,a.builtInEncoding&&function(e,t){if(!e.hasIncludedToUnicodeMap&&!e.hasEncoding&&t!==e.defaultEncoding&&!(e.toUnicode instanceof I)){var a=[],r=(0,i.getGlyphsUnicode)();for(var n in t){var o=t[n],s=(0,c.getUnicodeForGlyph)(o,r);-1!==s&&(a[n]=String.fromCharCode(s))}e.toUnicode.amend(a)}}(a,a.builtInEncoding);var n=1;t instanceof _&&(n=t.numGlyphs-1);var s=t.getGlyphMapping(a),l=B(s,t.hasGlyphId.bind(t),n);this.toFontChar=l.toFontChar;var u=t.numGlyphs;function h(e,t){var a=null;for(var r in e)t===e[r]&&(a||(a=[]),a.push(0|r));return a}function f(e,t){for(var a in e)if(t===e[a])return 0|a;return l.charCodeToGlyphId[l.nextAvailableFontCharCode]=t,l.nextAvailableFontCharCode++}var g=t.seacs;if(g&&g.length){var p=a.fontMatrix||r.FONT_IDENTITY_MATRIX,m=t.getCharset(),v=Object.create(null);for(var b in g){var y=g[b|=0],k=o.StandardEncoding[y[2]],w=o.StandardEncoding[y[3]],C=m.indexOf(k),S=m.indexOf(w);if(!(C<0||S<0)){var x={x:y[0]*p[0]+y[1]*p[2]+p[4],y:y[0]*p[1]+y[1]*p[3]+p[5]},A=h(s,b);if(A)for(var O=0,E=A.length;O<E;O++){var P=A[O],L=l.charCodeToGlyphId,U=f(L,C),q=f(L,S);v[P]={baseFontCharCode:U,accentFontCharCode:q,accentOffset:x}}}}a.seacMap=v}var j=1/(a.fontMatrix||r.FONT_IDENTITY_MATRIX)[0],z=new F(\"OTTO\");return z.addTable(\"CFF \",t.data),z.addTable(\"OS/2\",D(a,l.charCodeToGlyphId)),z.addTable(\"cmap\",M(l.charCodeToGlyphId,u)),z.addTable(\"head\",\"\\0\\x01\\0\\0\\0\\0\\x10\\0\\0\\0\\0\\0_\\x0f<\\xf5\\0\\0\"+T(j)+\"\\0\\0\\0\\0\\x9e\\v~'\\0\\0\\0\\0\\x9e\\v~'\\0\\0\"+T(a.descent)+\"\\x0f\\xff\"+T(a.ascent)+d(a.italicAngle?2:0)+\"\\0\\x11\\0\\0\\0\\0\\0\\0\"),z.addTable(\"hhea\",\"\\0\\x01\\0\\0\"+T(a.ascent)+T(a.descent)+\"\\0\\0\\xff\\xff\\0\\0\\0\\0\\0\\0\"+T(a.capHeight)+T(Math.tan(a.italicAngle)*a.xHeight)+\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"+d(u)),z.addTable(\"hmtx\",function(){for(var e=t.charstrings,a=t.cff?t.cff.widths:null,r=\"\\0\\0\\0\\0\",n=1,i=u;n<i;n++){var o=0;if(e){var s=e[n-1];o=\"width\"in s?s.width:0}else a&&(o=Math.ceil(a[n]||0));r+=d(o)+d(0)}return r}()),z.addTable(\"maxp\",\"\\0\\0P\\0\"+d(u)),z.addTable(\"name\",N(e)),z.addTable(\"post\",R(a)),z.toArray()},get spaceWidth(){for(var e,t=[\"space\",\"minus\",\"one\",\"i\",\"I\"],a=0,n=t.length;a<n;a++){var o=t[a];if(o in this.widths){e=this.widths[o];break}var s=(0,i.getGlyphsUnicode)()[o],c=0;if(this.composite&&this.cMap.contains(s)&&(c=this.cMap.lookup(s)),!c&&this.toUnicode&&(c=this.toUnicode.charCodeOf(s)),c<=0&&(c=s),e=this.widths[c])break}return e=e||this.defaultWidth,(0,r.shadow)(this,\"spaceWidth\",e)},charToGlyph:function(e,t){var a,n,i,o=e;this.cMap&&this.cMap.contains(e)&&(o=this.cMap.lookup(e)),n=this.widths[o],n=(0,r.isNum)(n)?n:this.defaultWidth;var s=this.vmetrics&&this.vmetrics[o],l=this.toUnicode.get(e)||this.fallbackToUnicode.get(e)||e;\"number\"===typeof l&&(l=String.fromCharCode(l));var u=e in this.toFontChar;if(a=this.toFontChar[e]||e,this.missingFile){var h=this.differences[e]||this.defaultEncoding[e];\".notdef\"!==h&&\"\"!==h||\"Type1\"!==this.type||(a=32),a=(0,c.mapSpecialUnicodeValues)(a)}this.isType3Font&&(i=a);var f=null;if(this.seacMap&&this.seacMap[e]){u=!0;var d=this.seacMap[e];a=d.baseFontCharCode,f={fontChar:String.fromCodePoint(d.accentFontCharCode),offset:d.accentOffset}}var g=\"\";\"number\"===typeof a&&(a<=1114111?g=String.fromCodePoint(a):(0,r.warn)(\"charToGlyph - invalid fontCharCode: \".concat(a)));var p=this.glyphCache[e];return p&&p.matchesForCache(g,l,f,n,s,i,t,u)||(p=new x(g,l,f,n,s,i,t,u),this.glyphCache[e]=p),p},charsToGlyphs:function(e){var t,a,r,n=this.charsCache;if(n&&(t=n[e]))return t;n||(n=this.charsCache=Object.create(null)),t=[];var i,o=e,s=0;if(this.cMap)for(var c=Object.create(null);s<e.length;){this.cMap.readCharCode(e,s,c),r=c.charcode;var l=c.length;s+=l;var u=1===l&&32===e.charCodeAt(s-1);a=this.charToGlyph(r,u),t.push(a)}else for(s=0,i=e.length;s<i;++s)r=e.charCodeAt(s),a=this.charToGlyph(r,32===r),t.push(a);return n[o]=t},get glyphCacheValues(){return Object.values(this.glyphCache)}},e}();t.Font=T;var O=function(){function e(e){this.error=e,this.loadedName=\"g_font_error\",this.missingFile=!0}return e.prototype={charsToGlyphs:function(){return[]},exportData:function(){return{error:this.error}}},e}();function E(e,t,a){var r,n,s,c=Object.create(null),l=!!(e.flags&y.Symbolic);if(e.baseEncodingName)for(s=(0,o.getEncoding)(e.baseEncodingName),n=0;n<s.length;n++)r=a.indexOf(s[n]),c[n]=r>=0?r:0;else if(l)for(n in t)c[n]=t[n];else for(s=o.StandardEncoding,n=0;n<s.length;n++)r=a.indexOf(s[n]),c[n]=r>=0?r:0;var u,h=e.differences;if(h)for(n in h){var f=h[n];if(-1===(r=a.indexOf(f))){u||(u=(0,i.getGlyphsUnicode)());var d=S(f,u);d!==f&&(r=a.indexOf(d))}c[n]=r>=0?r:0}return c}t.ErrorFont=O;var P=function(){function e(e,t,a){for(var r,n=e.length,i=t.length,o=n-i,s=a,c=!1;s<o;){for(r=0;r<i&&e[s+r]===t[r];)r++;if(r>=i){for(s+=r;s<n&&(0,l.isWhiteSpace)(e[s]);)s++;c=!0;break}s++}return{found:c,length:s}}function t(t,a,n){var i=n.length1,o=(n.length2,a.peekBytes(6)),s=128===o[0]&&1===o[1];s&&(a.skip(6),i=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);var c=function(t,a){var n,i,o,s,c=[101,101,120,101,99],u=t.pos;try{i=(n=t.getBytes(a)).length}catch(h){if(h instanceof l.MissingDataException)throw h}if(i===a&&(o=e(n,c,a-2*c.length)).found&&o.length===a)return{stream:new f.Stream(n),length:a};for((0,r.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.'),t.pos=u;0!==(o=e(t.peekBytes(2048),c,0)).length;)if(t.pos+=o.length,o.found){s=t.pos-u;break}return t.pos=u,s?{stream:new f.Stream(t.getBytes(s)),length:s}:((0,r.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.'),{stream:new f.Stream(t.getBytes(a)),length:a})}(a,i);new d.Type1Parser(c.stream,!1,m).extractFontHeader(n),s&&((o=a.getBytes(6))[5],o[4],o[3],o[2]);var u=function(e,t){var a=e.getBytes();return{stream:new f.Stream(a),length:a.length}}(a),h=new d.Type1Parser(u.stream,!0,m).extractFontProgram(n);for(var g in h.properties)n[g]=h.properties[g];var p=h.charstrings,v=this.getType2Charstrings(p),b=this.getType2Subrs(h.subrs);this.charstrings=p,this.data=this.wrap(t,v,this.charstrings,b,n),this.seacs=this.getSeacs(h.charstrings)}return t.prototype={get numGlyphs(){return this.charstrings.length+1},getCharset:function(){for(var e=[\".notdef\"],t=this.charstrings,a=0;a<t.length;a++)e.push(t[a].glyphName);return e},getGlyphMapping:function(e){var t=this.charstrings;if(e.composite){for(var a=Object.create(null),r=0,n=t.length;r<n;r++){a[e.cMap.charCodeOf(r)]=r+1}return a}var i,o=[\".notdef\"];for(i=0;i<t.length;i++)o.push(t[i].glyphName);var s=e.builtInEncoding;if(s){var c=Object.create(null);for(var l in s)(i=o.indexOf(s[l]))>=0&&(c[l]=i)}return E(e,c,o)},hasGlyphId:function(e){return!(e<0||e>=this.numGlyphs)&&(0===e||this.charstrings[e-1].charstring.length>0)},getSeacs:function(e){var t,a,r=[];for(t=0,a=e.length;t<a;t++){var n=e[t];n.seac&&(r[t+1]=n.seac)}return r},getType2Charstrings:function(e){for(var t=[],a=0,r=e.length;a<r;a++)t.push(e[a].charstring);return t},getType2Subrs:function(e){var t=0,a=e.length;t=a<1133?107:a<33769?1131:32768;var r,n=[];for(r=0;r<t;r++)n.push([11]);for(r=0;r<a;r++)n.push(e[r]);return n},wrap:function(e,t,a,r,i){var o=new n.CFF;o.header=new n.CFFHeader(1,0,4,4),o.names=[e];var s=new n.CFFTopDict;s.setByName(\"version\",391),s.setByName(\"Notice\",392),s.setByName(\"FullName\",393),s.setByName(\"FamilyName\",394),s.setByName(\"Weight\",395),s.setByName(\"Encoding\",null),s.setByName(\"FontMatrix\",i.fontMatrix),s.setByName(\"FontBBox\",i.bbox),s.setByName(\"charset\",null),s.setByName(\"CharStrings\",null),s.setByName(\"Private\",null),o.topDict=s;var c=new n.CFFStrings;c.add(\"Version 0.11\"),c.add(\"See original notice\"),c.add(e),c.add(e),c.add(\"Medium\"),o.strings=c,o.globalSubrIndex=new n.CFFIndex;var l,u,h=t.length,f=[\".notdef\"];for(l=0;l<h;l++){var d=a[l].glyphName;-1===n.CFFStandardStrings.indexOf(d)&&c.add(d),f.push(d)}o.charset=new n.CFFCharset(!1,0,f);var g=new n.CFFIndex;for(g.add([139,14]),l=0;l<h;l++)g.add(t[l]);o.charStrings=g;var p=new n.CFFPrivateDict;p.setByName(\"Subrs\",null);var m=[\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StemSnapH\",\"StemSnapV\",\"BlueShift\",\"BlueFuzz\",\"BlueScale\",\"LanguageGroup\",\"ExpansionFactor\",\"ForceBold\",\"StdHW\",\"StdVW\"];for(l=0,u=m.length;l<u;l++){var v=m[l];if(v in i.privateData){var b=i.privateData[v];if(Array.isArray(b))for(var y=b.length-1;y>0;y--)b[y]-=b[y-1];p.setByName(v,b)}}o.topDict.privateDict=p;var k=new n.CFFIndex;for(l=0,u=r.length;l<u;l++)k.add(r[l]);return p.subrsIndex=k,new n.CFFCompiler(o).compile()}},t}(),_=function(){function e(e,t){this.properties=t;var a=new n.CFFParser(e,t,m);this.cff=a.parse(),this.cff.duplicateFirstGlyph();var i=new n.CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=i.compile()}catch(o){(0,r.warn)(\"Failed to compile font \"+t.loadedName),this.data=e}}return e.prototype={get numGlyphs(){return this.cff.charStrings.count},getCharset:function(){return this.cff.charset.charset},getGlyphMapping:function(){var e,t,a=this.cff,r=this.properties,n=a.charset.charset;if(r.composite){if(e=Object.create(null),a.isCIDFont)for(t=0;t<n.length;t++){var i=n[t];e[r.cMap.charCodeOf(i)]=t}else for(t=0;t<a.charStrings.count;t++)e[r.cMap.charCodeOf(t)]=t;return e}return e=E(r,a.encoding?a.encoding.encoding:null,n)},hasGlyphId:function(e){return this.cff.hasGlyphId(e)}},e}()},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CFFFDSelect=t.CFFCompiler=t.CFFPrivateDict=t.CFFTopDict=t.CFFCharset=t.CFFIndex=t.CFFStrings=t.CFFHeader=t.CFF=t.CFFParser=t.CFFStandardStrings=void 0;var r=a(2),n=a(32),i=a(33),o=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"];t.CFFStandardStrings=o;var s=391,c=function(){var e=[null,{id:\"hstem\",min:2,stackClearing:!0,stem:!0},null,{id:\"vstem\",min:2,stackClearing:!0,stem:!0},{id:\"vmoveto\",min:1,stackClearing:!0},{id:\"rlineto\",min:2,resetStack:!0},{id:\"hlineto\",min:1,resetStack:!0},{id:\"vlineto\",min:1,resetStack:!0},{id:\"rrcurveto\",min:6,resetStack:!0},null,{id:\"callsubr\",min:1,undefStack:!0},{id:\"return\",min:0,undefStack:!0},null,null,{id:\"endchar\",min:0,stackClearing:!0},null,null,null,{id:\"hstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"hintmask\",min:0,stackClearing:!0},{id:\"cntrmask\",min:0,stackClearing:!0},{id:\"rmoveto\",min:2,stackClearing:!0},{id:\"hmoveto\",min:1,stackClearing:!0},{id:\"vstemhm\",min:2,stackClearing:!0,stem:!0},{id:\"rcurveline\",min:8,resetStack:!0},{id:\"rlinecurve\",min:8,resetStack:!0},{id:\"vvcurveto\",min:4,resetStack:!0},{id:\"hhcurveto\",min:4,resetStack:!0},null,{id:\"callgsubr\",min:1,undefStack:!0},{id:\"vhcurveto\",min:4,resetStack:!0},{id:\"hvcurveto\",min:4,resetStack:!0}],t=[null,null,null,{id:\"and\",min:2,stackDelta:-1},{id:\"or\",min:2,stackDelta:-1},{id:\"not\",min:1,stackDelta:0},null,null,null,{id:\"abs\",min:1,stackDelta:0},{id:\"add\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]+e[t-1]}},{id:\"sub\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]-e[t-1]}},{id:\"div\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]/e[t-1]}},null,{id:\"neg\",min:1,stackDelta:0,stackFn:function(e,t){e[t-1]=-e[t-1]}},{id:\"eq\",min:2,stackDelta:-1},null,null,{id:\"drop\",min:1,stackDelta:-1},null,{id:\"put\",min:2,stackDelta:-2},{id:\"get\",min:1,stackDelta:0},{id:\"ifelse\",min:4,stackDelta:-3},{id:\"random\",min:0,stackDelta:1},{id:\"mul\",min:2,stackDelta:-1,stackFn:function(e,t){e[t-2]=e[t-2]*e[t-1]}},null,{id:\"sqrt\",min:1,stackDelta:0},{id:\"dup\",min:1,stackDelta:1},{id:\"exch\",min:2,stackDelta:0},{id:\"index\",min:2,stackDelta:0},{id:\"roll\",min:3,stackDelta:-2},null,null,null,{id:\"hflex\",min:7,resetStack:!0},{id:\"flex\",min:13,resetStack:!0},{id:\"hflex1\",min:9,resetStack:!0},{id:\"flex1\",min:11,resetStack:!0}];return function(){function a(e,t,r){_classCallCheck(this,a),this.bytes=e.getBytes(),this.properties=t,this.seacAnalysisEnabled=!!r}return _createClass(a,[{key:\"parse\",value:function(){var e=this.properties,t=new l;this.cff=t;var a=this.parseHeader(),r=this.parseIndex(a.endPos),n=this.parseIndex(r.endPos),i=this.parseIndex(n.endPos),o=this.parseIndex(i.endPos),s=this.parseDict(n.obj.get(0)),c=this.createDict(g,s,t.strings);t.header=a.obj,t.names=this.parseNameIndex(r.obj),t.strings=this.parseStringIndex(i.obj),t.topDict=c,t.globalSubrIndex=o.obj,this.parsePrivateDict(t.topDict),t.isCIDFont=c.hasName(\"ROS\");var u=c.getByName(\"CharStrings\"),h=this.parseIndex(u).obj,f=c.getByName(\"FontMatrix\");f&&(e.fontMatrix=f);var d,p,m=c.getByName(\"FontBBox\");if(m&&(e.ascent=Math.max(m[3],m[1]),e.descent=Math.min(m[1],m[3]),e.ascentScaled=!0),t.isCIDFont){for(var v=this.parseIndex(c.getByName(\"FDArray\")).obj,b=0,y=v.count;b<y;++b){var k=v.get(b),w=this.createDict(g,this.parseDict(k),t.strings);this.parsePrivateDict(w),t.fdArray.push(w)}p=null,d=this.parseCharsets(c.getByName(\"charset\"),h.count,t.strings,!0),t.fdSelect=this.parseFDSelect(c.getByName(\"FDSelect\"),h.count)}else d=this.parseCharsets(c.getByName(\"charset\"),h.count,t.strings,!1),p=this.parseEncoding(c.getByName(\"Encoding\"),e,t.strings,d.charset);t.charset=d,t.encoding=p;var C=this.parseCharStrings({charStrings:h,localSubrIndex:c.privateDict.subrsIndex,globalSubrIndex:o.obj,fdSelect:t.fdSelect,fdArray:t.fdArray,privateDict:c.privateDict});return t.charStrings=C.charStrings,t.seacs=C.seacs,t.widths=C.widths,t}},{key:\"parseHeader\",value:function(){for(var e=this.bytes,t=e.length,a=0;a<t&&1!==e[a];)++a;if(a>=t)throw new r.FormatError(\"Invalid CFF header\");0!==a&&((0,r.info)(\"cff data is shifted\"),e=e.subarray(a),this.bytes=e);var n=e[0],i=e[1],o=e[2],s=e[3];return{obj:new u(n,i,o,s),endPos:o}}},{key:\"parseDict\",value:function(e){var t=0;function a(){var a=e[t++];return 30===a?function(){var a=\"\",r=15,n=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"],i=e.length;for(;t<i;){var o=e[t++],s=o>>4,c=15&o;if(s===r)break;if(a+=n[s],c===r)break;a+=n[c]}return parseFloat(a)}():28===a?a=((a=e[t++])<<24|e[t++]<<16)>>16:29===a?a=(a=(a=(a=e[t++])<<8|e[t++])<<8|e[t++])<<8|e[t++]:a>=32&&a<=246?a-139:a>=247&&a<=250?256*(a-247)+e[t++]+108:a>=251&&a<=254?-256*(a-251)-e[t++]-108:((0,r.warn)('CFFParser_parseDict: \"'+a+'\" is a reserved command.'),NaN)}var n=[],i=[];t=0;for(var o=e.length;t<o;){var s=e[t];s<=21?(12===s&&(s=s<<8|e[++t]),i.push([s,n]),n=[],++t):n.push(a())}return i}},{key:\"parseIndex\",value:function(e){var t,a,r=new f,n=this.bytes,i=n[e++]<<8|n[e++],o=[],s=e;if(0!==i){var c=n[e++],l=e+(i+1)*c-1;for(t=0,a=i+1;t<a;++t){for(var u=0,h=0;h<c;++h)u<<=8,u+=n[e++];o.push(l+u)}s=o[i]}for(t=0,a=o.length-1;t<a;++t){var d=o[t],g=o[t+1];r.add(n.subarray(d,g))}return{obj:r,endPos:s}}},{key:\"parseNameIndex\",value:function(e){for(var t=[],a=0,n=e.count;a<n;++a){var i=e.get(a);t.push((0,r.bytesToString)(i))}return t}},{key:\"parseStringIndex\",value:function(e){for(var t=new h,a=0,n=e.count;a<n;++a){var i=e.get(a);t.add((0,r.bytesToString)(i))}return t}},{key:\"createDict\",value:function(e,t,a){for(var r=new e(a),n=0,i=t.length;n<i;++n){var o=t[n],s=o[0],c=o[1];r.setByKey(s,c)}return r}},{key:\"parseCharString\",value:function(a,n,i,o){if(!n||a.callDepth>10)return!1;for(var s=a.stackSize,c=a.stack,l=n.length,u=0;u<l;){var h=n[u++],f=null;if(12===h){var d=n[u++];0===d?(n[u-2]=139,n[u-1]=22,s=0):f=t[d]}else if(28===h)c[s]=(n[u]<<24|n[u+1]<<16)>>16,u+=2,s++;else if(14===h){if(s>=4&&(s-=4,this.seacAnalysisEnabled))return a.seac=c.slice(s,s+4),!1;f=e[h]}else if(h>=32&&h<=246)c[s]=h-139,s++;else if(h>=247&&h<=254)c[s]=h<251?(h-247<<8)+n[u]+108:-(h-251<<8)-n[u]-108,u++,s++;else if(255===h)c[s]=(n[u]<<24|n[u+1]<<16|n[u+2]<<8|n[u+3])/65536,u+=4,s++;else if(19===h||20===h)a.hints+=s>>1,u+=a.hints+7>>3,s%=2,f=e[h];else{if(10===h||29===h){var g;if(!(g=10===h?i:o))return f=e[h],(0,r.warn)(\"Missing subrsIndex for \"+f.id),!1;var p=32768;g.count<1240?p=107:g.count<33900&&(p=1131);var m=c[--s]+p;if(m<0||m>=g.count||isNaN(m))return f=e[h],(0,r.warn)(\"Out of bounds subrIndex for \"+f.id),!1;if(a.stackSize=s,a.callDepth++,!this.parseCharString(a,g.get(m),i,o))return!1;a.callDepth--,s=a.stackSize;continue}if(11===h)return a.stackSize=s,!0;f=e[h]}if(f){if(f.stem&&(a.hints+=s>>1,3===h||23===h?a.hasVStems=!0:!a.hasVStems||1!==h&&18!==h||((0,r.warn)(\"CFF stem hints are in wrong order\"),n[u-1]=1===h?3:23)),\"min\"in f&&!a.undefStack&&s<f.min)return(0,r.warn)(\"Not enough parameters for \"+f.id+\"; actual: \"+s+\", expected: \"+f.min),!1;a.firstStackClearing&&f.stackClearing&&(a.firstStackClearing=!1,(s-=f.min)>=2&&f.stem?s%=2:s>1&&(0,r.warn)(\"Found too many parameters for stack-clearing command\"),s>0&&c[s-1]>=0&&(a.width=c[s-1])),\"stackDelta\"in f?(\"stackFn\"in f&&f.stackFn(c,s),s+=f.stackDelta):f.stackClearing?s=0:f.resetStack?(s=0,a.undefStack=!1):f.undefStack&&(s=0,a.undefStack=!0,a.firstStackClearing=!1)}}return a.stackSize=s,!0}},{key:\"parseCharStrings\",value:function(e){for(var t=e.charStrings,a=e.localSubrIndex,n=e.globalSubrIndex,i=e.fdSelect,o=e.fdArray,s=e.privateDict,c=[],l=[],u=t.count,h=0;h<u;h++){var f=t.get(h),d={callDepth:0,stackSize:0,stack:[],undefStack:!0,hints:0,firstStackClearing:!0,seac:null,width:null,hasVStems:!1},g=!0,p=null,m=s;if(i&&o.length){var v=i.getFDIndex(h);-1===v&&((0,r.warn)(\"Glyph index is not in fd select.\"),g=!1),v>=o.length&&((0,r.warn)(\"Invalid fd index for glyph index.\"),g=!1),g&&(p=(m=o[v].privateDict).subrsIndex)}else a&&(p=a);if(g&&(g=this.parseCharString(d,f,p,n)),null!==d.width){var b=m.getByName(\"nominalWidthX\");l[h]=b+d.width}else{var y=m.getByName(\"defaultWidthX\");l[h]=y}null!==d.seac&&(c[h]=d.seac),g||t.set(h,new Uint8Array([14]))}return{charStrings:t,seacs:c,widths:l}}},{key:\"emptyPrivateDictionary\",value:function(e){var t=this.createDict(p,[],e.strings);e.setByKey(18,[0,0]),e.privateDict=t}},{key:\"parsePrivateDict\",value:function(e){if(e.hasName(\"Private\")){var t=e.getByName(\"Private\");if(Array.isArray(t)&&2===t.length){var a=t[0],r=t[1];if(0===a||r>=this.bytes.length)this.emptyPrivateDictionary(e);else{var n=r+a,i=this.bytes.subarray(r,n),o=this.parseDict(i),s=this.createDict(p,o,e.strings);if(e.privateDict=s,s.getByName(\"Subrs\")){var c=s.getByName(\"Subrs\"),l=r+c;if(0===c||l>=this.bytes.length)this.emptyPrivateDictionary(e);else{var u=this.parseIndex(l);s.subrsIndex=u.obj}}}}else e.removeByName(\"Private\")}else this.emptyPrivateDictionary(e)}},{key:\"parseCharsets\",value:function(e,t,a,i){if(0===e)return new v(!0,m.ISO_ADOBE,n.ISOAdobeCharset);if(1===e)return new v(!0,m.EXPERT,n.ExpertCharset);if(2===e)return new v(!0,m.EXPERT_SUBSET,n.ExpertSubsetCharset);var o,s,c,l=this.bytes,u=e,h=l[e++],f=[i?0:\".notdef\"];switch(t-=1,h){case 0:for(c=0;c<t;c++)o=l[e++]<<8|l[e++],f.push(i?o:a.get(o));break;case 1:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++],c=0;c<=s;c++)f.push(i?o++:a.get(o++));break;case 2:for(;f.length<=t;)for(o=l[e++]<<8|l[e++],s=l[e++]<<8|l[e++],c=0;c<=s;c++)f.push(i?o++:a.get(o++));break;default:throw new r.FormatError(\"Unknown charset format\")}var d=e,g=l.subarray(u,d);return new v(!1,h,f,g)}},{key:\"parseEncoding\",value:function(e,t,a,n){var o,s,c,l=Object.create(null),u=this.bytes,h=!1,f=null;if(0===e||1===e){h=!0,o=e;var d=e?i.ExpertEncoding:i.StandardEncoding;for(s=0,c=n.length;s<c;s++){var g=d.indexOf(n[s]);-1!==g&&(l[g]=s)}}else{var p=e;switch(127&(o=u[e++])){case 0:var m=u[e++];for(s=1;s<=m;s++)l[u[e++]]=s;break;case 1:var v=u[e++],y=1;for(s=0;s<v;s++)for(var k=u[e++],w=u[e++],C=k;C<=k+w;C++)l[C]=y++;break;default:throw new r.FormatError(\"Unknown encoding format: \".concat(o,\" in CFF\"))}var S=e;128&o&&(u[p]&=127,function(){var t=u[e++];for(s=0;s<t;s++){var r=u[e++],i=(u[e++]<<8)+(255&u[e++]);l[r]=n.indexOf(a.get(i))}}()),f=u.subarray(p,S)}return new b(h,o&=127,l,f)}},{key:\"parseFDSelect\",value:function(e,t){var a,n=this.bytes,i=n[e++],o=[];switch(i){case 0:for(a=0;a<t;++a){var s=n[e++];o.push(s)}break;case 3:var c=n[e++]<<8|n[e++];for(a=0;a<c;++a){var l=n[e++]<<8|n[e++];0===a&&0!==l&&((0,r.warn)(\"parseFDSelect: The first range must have a first GID of 0 -- trying to recover.\"),l=0);for(var u=n[e++],h=n[e]<<8|n[e+1],f=l;f<h;++f)o.push(u)}e+=2;break;default:throw new r.FormatError('parseFDSelect: Unknown format \"'.concat(i,'\".'))}if(o.length!==t)throw new r.FormatError(\"parseFDSelect: Invalid font data.\");return new y(i,o)}}]),a}()}();t.CFFParser=c;var l=function(){function e(){_classCallCheck(this,e),this.header=null,this.names=[],this.topDict=null,this.strings=new h,this.globalSubrIndex=null,this.encoding=null,this.charset=null,this.charStrings=null,this.fdArray=[],this.fdSelect=null,this.isCIDFont=!1}return _createClass(e,[{key:\"duplicateFirstGlyph\",value:function(){if(this.charStrings.count>=65535)(0,r.warn)(\"Not enough space in charstrings to duplicate first glyph.\");else{var e=this.charStrings.get(0);this.charStrings.add(e),this.isCIDFont&&this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0])}}},{key:\"hasGlyphId\",value:function(e){return!(e<0||e>=this.charStrings.count)&&this.charStrings.get(e).length>0}}]),e}();t.CFF=l;var u=function e(t,a,r,n){_classCallCheck(this,e),this.major=t,this.minor=a,this.hdrSize=r,this.offSize=n};t.CFFHeader=u;var h=function(){function e(){_classCallCheck(this,e),this.strings=[]}return _createClass(e,[{key:\"get\",value:function(e){return e>=0&&e<=390?o[e]:e-s<=this.strings.length?this.strings[e-s]:o[0]}},{key:\"getSID\",value:function(e){var t=o.indexOf(e);return-1!==t?t:-1!==(t=this.strings.indexOf(e))?t+s:-1}},{key:\"add\",value:function(e){this.strings.push(e)}},{key:\"count\",get:function(){return this.strings.length}}]),e}();t.CFFStrings=h;var f=function(){function e(){_classCallCheck(this,e),this.objects=[],this.length=0}return _createClass(e,[{key:\"add\",value:function(e){this.length+=e.length,this.objects.push(e)}},{key:\"set\",value:function(e,t){this.length+=t.length-this.objects[e].length,this.objects[e]=t}},{key:\"get\",value:function(e){return this.objects[e]}},{key:\"count\",get:function(){return this.objects.length}}]),e}();t.CFFIndex=f;var d=function(){function e(t,a){_classCallCheck(this,e),this.keyToNameMap=t.keyToNameMap,this.nameToKeyMap=t.nameToKeyMap,this.defaults=t.defaults,this.types=t.types,this.opcodes=t.opcodes,this.order=t.order,this.strings=a,this.values=Object.create(null)}return _createClass(e,[{key:\"setByKey\",value:function(e,t){if(!(e in this.keyToNameMap))return!1;var a=t.length;if(0===a)return!0;for(var n=0;n<a;n++)if(isNaN(t[n]))return(0,r.warn)('Invalid CFFDict value: \"'+t+'\" for key \"'+e+'\".'),!0;var i=this.types[e];return\"num\"!==i&&\"sid\"!==i&&\"offset\"!==i||(t=t[0]),this.values[e]=t,!0}},{key:\"setByName\",value:function(e,t){if(!(e in this.nameToKeyMap))throw new r.FormatError('Invalid dictionary name \"'.concat(e,'\"'));this.values[this.nameToKeyMap[e]]=t}},{key:\"hasName\",value:function(e){return this.nameToKeyMap[e]in this.values}},{key:\"getByName\",value:function(e){if(!(e in this.nameToKeyMap))throw new r.FormatError(\"Invalid dictionary name \".concat(e,'\"'));var t=this.nameToKeyMap[e];return t in this.values?this.values[t]:this.defaults[t]}},{key:\"removeByName\",value:function(e){delete this.values[this.nameToKeyMap[e]]}}],[{key:\"createTables\",value:function(e){for(var t={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]},a=0,r=e.length;a<r;++a){var n=e[a],i=Array.isArray(n[0])?(n[0][0]<<8)+n[0][1]:n[0];t.keyToNameMap[i]=n[1],t.nameToKeyMap[n[1]]=i,t.types[i]=n[2],t.defaults[i]=n[3],t.opcodes[i]=Array.isArray(n[0])?n[0]:[n[0]],t.order.push(i)}return t}}]),e}(),g=function(){var e=[[[12,30],\"ROS\",[\"sid\",\"sid\",\"num\"],null],[[12,20],\"SyntheticBase\",\"num\",null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"num\",0],[[12,2],\"ItalicAngle\",\"num\",0],[[12,3],\"UnderlinePosition\",\"num\",-100],[[12,4],\"UnderlineThickness\",\"num\",50],[[12,5],\"PaintType\",\"num\",0],[[12,6],\"CharstringType\",\"num\",2],[[12,7],\"FontMatrix\",[\"num\",\"num\",\"num\",\"num\",\"num\",\"num\"],[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"num\",null],[5,\"FontBBox\",[\"num\",\"num\",\"num\",\"num\"],[0,0,0,0]],[[12,8],\"StrokeWidth\",\"num\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",\"offset\",0],[16,\"Encoding\",\"offset\",0],[17,\"CharStrings\",\"offset\",0],[18,\"Private\",[\"offset\",\"offset\"],null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"num\",0],[[12,32],\"CIDFontRevision\",\"num\",0],[[12,33],\"CIDFontType\",\"num\",0],[[12,34],\"CIDCount\",\"num\",8720],[[12,35],\"UIDBase\",\"num\",null],[[12,37],\"FDSelect\",\"offset\",null],[[12,36],\"FDArray\",\"offset\",null],[[12,38],\"FontName\",\"sid\",null]],t=null;return function(a){_inherits(n,a);var r=_createSuper(n);function n(a){var i;return _classCallCheck(this,n),null===t&&(t=d.createTables(e)),(i=r.call(this,t,a)).privateDict=null,i}return n}(d)}();t.CFFTopDict=g;var p=function(){var e=[[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"num\",.039625],[[12,10],\"BlueShift\",\"num\",7],[[12,11],\"BlueFuzz\",\"num\",1],[10,\"StdHW\",\"num\",null],[11,\"StdVW\",\"num\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"num\",0],[[12,17],\"LanguageGroup\",\"num\",0],[[12,18],\"ExpansionFactor\",\"num\",.06],[[12,19],\"initialRandomSeed\",\"num\",0],[20,\"defaultWidthX\",\"num\",0],[21,\"nominalWidthX\",\"num\",0],[19,\"Subrs\",\"offset\",null]],t=null;return function(a){_inherits(n,a);var r=_createSuper(n);function n(a){var i;return _classCallCheck(this,n),null===t&&(t=d.createTables(e)),(i=r.call(this,t,a)).subrsIndex=null,i}return n}(d)}();t.CFFPrivateDict=p;var m={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2},v=function e(t,a,r,n){_classCallCheck(this,e),this.predefined=t,this.format=a,this.charset=r,this.raw=n};t.CFFCharset=v;var b=function e(t,a,r,n){_classCallCheck(this,e),this.predefined=t,this.format=a,this.encoding=r,this.raw=n},y=function(){function e(t,a){_classCallCheck(this,e),this.format=t,this.fdSelect=a}return _createClass(e,[{key:\"getFDIndex\",value:function(e){return e<0||e>=this.fdSelect.length?-1:this.fdSelect[e]}}]),e}();t.CFFFDSelect=y;var k=function(){function e(){_classCallCheck(this,e),this.offsets=Object.create(null)}return _createClass(e,[{key:\"isTracking\",value:function(e){return e in this.offsets}},{key:\"track\",value:function(e,t){if(e in this.offsets)throw new r.FormatError(\"Already tracking location of \".concat(e));this.offsets[e]=t}},{key:\"offset\",value:function(e){for(var t in this.offsets)this.offsets[t]+=e}},{key:\"setEntryLocation\",value:function(e,t,a){if(!(e in this.offsets))throw new r.FormatError(\"Not tracking location of \".concat(e));for(var n=a.data,i=this.offsets[e],o=0,s=t.length;o<s;++o){var c=5*o+i,l=c+1,u=c+2,h=c+3,f=c+4;if(29!==n[c]||0!==n[l]||0!==n[u]||0!==n[h]||0!==n[f])throw new r.FormatError(\"writing to an offset that is not empty\");var d=t[o];n[c]=29,n[l]=d>>24&255,n[u]=d>>16&255,n[h]=d>>8&255,n[f]=255&d}}}]),e}(),w=function(){function e(t){_classCallCheck(this,e),this.cff=t}return _createClass(e,[{key:\"compile\",value:function(){var e=this.cff,t={data:[],length:0,add:function(e){this.data=this.data.concat(e),this.length=this.data.length}},a=this.compileHeader(e.header);t.add(a);var n=this.compileNameIndex(e.names);if(t.add(n),e.isCIDFont&&e.topDict.hasName(\"FontMatrix\")){var i=e.topDict.getByName(\"FontMatrix\");e.topDict.removeByName(\"FontMatrix\");for(var o=0,s=e.fdArray.length;o<s;o++){var c=e.fdArray[o],l=i.slice(0);c.hasName(\"FontMatrix\")&&(l=r.Util.transform(l,c.getByName(\"FontMatrix\"))),c.setByName(\"FontMatrix\",l)}}e.topDict.setByName(\"charset\",0);var u=this.compileTopDicts([e.topDict],t.length,e.isCIDFont);t.add(u.output);var h=u.trackers[0],f=this.compileStringIndex(e.strings.strings);t.add(f);var d=this.compileIndex(e.globalSubrIndex);if(t.add(d),e.encoding&&e.topDict.hasName(\"Encoding\"))if(e.encoding.predefined)h.setEntryLocation(\"Encoding\",[e.encoding.format],t);else{var g=this.compileEncoding(e.encoding);h.setEntryLocation(\"Encoding\",[t.length],t),t.add(g)}var p=this.compileCharset(e.charset,e.charStrings.count,e.strings,e.isCIDFont);h.setEntryLocation(\"charset\",[t.length],t),t.add(p);var m=this.compileCharStrings(e.charStrings);if(h.setEntryLocation(\"CharStrings\",[t.length],t),t.add(m),e.isCIDFont){h.setEntryLocation(\"FDSelect\",[t.length],t);var v=this.compileFDSelect(e.fdSelect);t.add(v),u=this.compileTopDicts(e.fdArray,t.length,!0),h.setEntryLocation(\"FDArray\",[t.length],t),t.add(u.output);var b=u.trackers;this.compilePrivateDicts(e.fdArray,b,t)}return this.compilePrivateDicts([e.topDict],[h],t),t.add([0]),t.data}},{key:\"encodeNumber\",value:function(e){return Number.isInteger(e)?this.encodeInteger(e):this.encodeFloat(e)}},{key:\"encodeFloat\",value:function(t){var a=t.toString(),r=e.EncodeFloatRegExp.exec(a);if(r){var n=parseFloat(\"1e\"+((r[2]?+r[2]:0)+r[1].length));a=(Math.round(t*n)/n).toString()}var i,o,s=\"\";for(i=0,o=a.length;i<o;++i){var c=a[i];s+=\"e\"===c?\"-\"===a[++i]?\"c\":\"b\":\".\"===c?\"a\":\"-\"===c?\"e\":c}var l=[30];for(i=0,o=(s+=1&s.length?\"f\":\"ff\").length;i<o;i+=2)l.push(parseInt(s.substring(i,i+2),16));return l}},{key:\"encodeInteger\",value:function(e){return e>=-107&&e<=107?[e+139]:e>=108&&e<=1131?[247+((e-=108)>>8),255&e]:e>=-1131&&e<=-108?[251+((e=-e-108)>>8),255&e]:e>=-32768&&e<=32767?[28,e>>8&255,255&e]:[29,e>>24&255,e>>16&255,e>>8&255,255&e]}},{key:\"compileHeader\",value:function(e){return[e.major,e.minor,e.hdrSize,e.offSize]}},{key:\"compileNameIndex\",value:function(e){for(var t=new f,a=0,n=e.length;a<n;++a){for(var i=e[a],o=Math.min(i.length,127),s=new Array(o),c=0;c<o;c++){var l=i[c];(l<\"!\"||l>\"~\"||\"[\"===l||\"]\"===l||\"(\"===l||\")\"===l||\"{\"===l||\"}\"===l||\"<\"===l||\">\"===l||\"/\"===l||\"%\"===l)&&(l=\"_\"),s[c]=l}\"\"===(s=s.join(\"\"))&&(s=\"Bad_Font_Name\"),t.add((0,r.stringToBytes)(s))}return this.compileIndex(t)}},{key:\"compileTopDicts\",value:function(e,t,a){for(var r=[],n=new f,i=0,o=e.length;i<o;++i){var s=e[i];a&&(s.removeByName(\"CIDFontVersion\"),s.removeByName(\"CIDFontRevision\"),s.removeByName(\"CIDFontType\"),s.removeByName(\"CIDCount\"),s.removeByName(\"UIDBase\"));var c=new k,l=this.compileDict(s,c);r.push(c),n.add(l),c.offset(t)}return{trackers:r,output:n=this.compileIndex(n,r)}}},{key:\"compilePrivateDicts\",value:function(e,t,a){for(var n=0,i=e.length;n<i;++n){var o=e[n],s=o.privateDict;if(!s||!o.hasName(\"Private\"))throw new r.FormatError(\"There must be a private dictionary.\");var c=new k,l=this.compileDict(s,c),u=a.length;if(c.offset(u),l.length||(u=0),t[n].setEntryLocation(\"Private\",[l.length,u],a),a.add(l),s.subrsIndex&&s.hasName(\"Subrs\")){var h=this.compileIndex(s.subrsIndex);c.setEntryLocation(\"Subrs\",[l.length],a),a.add(h)}}}},{key:\"compileDict\",value:function(e,t){for(var a=[],n=e.order,i=0;i<n.length;++i){var o=n[i];if(o in e.values){var s=e.values[o],c=e.types[o];if(Array.isArray(c)||(c=[c]),Array.isArray(s)||(s=[s]),0!==s.length){for(var l=0,u=c.length;l<u;++l){var h=c[l],f=s[l];switch(h){case\"num\":case\"sid\":a=a.concat(this.encodeNumber(f));break;case\"offset\":var d=e.keyToNameMap[o];t.isTracking(d)||t.track(d,a.length),a=a.concat([29,0,0,0,0]);break;case\"array\":case\"delta\":a=a.concat(this.encodeNumber(f));for(var g=1,p=s.length;g<p;++g)a=a.concat(this.encodeNumber(s[g]));break;default:throw new r.FormatError(\"Unknown data type of \".concat(h))}}a=a.concat(e.opcodes[o])}}}return a}},{key:\"compileStringIndex\",value:function(e){for(var t=new f,a=0,n=e.length;a<n;++a)t.add((0,r.stringToBytes)(e[a]));return this.compileIndex(t)}},{key:\"compileGlobalSubrIndex\",value:function(){var e=this.cff.globalSubrIndex;this.out.writeByteArray(this.compileIndex(e))}},{key:\"compileCharStrings\",value:function(e){for(var t=new f,a=0;a<e.count;a++){var r=e.get(a);0!==r.length?t.add(r):t.add(new Uint8Array([139,14]))}return this.compileIndex(t)}},{key:\"compileCharset\",value:function(e,t,a,n){var i,o=t-1;if(n)i=new Uint8Array([2,0,0,o>>8&255,255&o]);else{(i=new Uint8Array(1+2*o))[0]=0;for(var s=0,c=e.charset.length,l=!1,u=1;u<i.length;u+=2){var h=0;if(s<c){var f=e.charset[s++];-1===(h=a.getSID(f))&&(h=0,l||(l=!0,(0,r.warn)(\"Couldn't find \".concat(f,\" in CFF strings\"))))}i[u]=h>>8&255,i[u+1]=255&h}}return this.compileTypedArray(i)}},{key:\"compileEncoding\",value:function(e){return this.compileTypedArray(e.raw)}},{key:\"compileFDSelect\",value:function(e){var t,a,r=e.format;switch(r){case 0:for((t=new Uint8Array(1+e.fdSelect.length))[0]=r,a=0;a<e.fdSelect.length;a++)t[a+1]=e.fdSelect[a];break;case 3:var n=e.fdSelect[0],i=[r,0,0,0,0,n];for(a=1;a<e.fdSelect.length;a++){var o=e.fdSelect[a];o!==n&&(i.push(a>>8&255,255&a,o),n=o)}var s=(i.length-3)/3;i[1]=s>>8&255,i[2]=255&s,i.push(a>>8&255,255&a),t=new Uint8Array(i)}return this.compileTypedArray(t)}},{key:\"compileTypedArray\",value:function(e){for(var t=[],a=0,r=e.length;a<r;++a)t[a]=e[a];return t}},{key:\"compileIndex\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],a=e.objects,r=a.length;if(0===r)return[0,0,0];var n,i,o=[r>>8&255,255&r],s=1;for(n=0;n<r;++n)s+=a[n].length;i=s<256?1:s<65536?2:s<16777216?3:4,o.push(i);var c=1;for(n=0;n<r+1;n++)1===i?o.push(255&c):2===i?o.push(c>>8&255,255&c):3===i?o.push(c>>16&255,c>>8&255,255&c):o.push(c>>>24&255,c>>16&255,c>>8&255,255&c),a[n]&&(c+=a[n].length);for(n=0;n<r;n++){t[n]&&t[n].offset(o.length);for(var l=0,u=a[n].length;l<u;l++)o.push(a[n][l])}return o}}],[{key:\"EncodeFloatRegExp\",get:function(){return(0,r.shadow)(this,\"EncodeFloatRegExp\",/\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/)}}]),e}();t.CFFCompiler=w},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ExpertSubsetCharset=t.ExpertCharset=t.ISOAdobeCharset=void 0;t.ISOAdobeCharset=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"];t.ExpertCharset=[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];t.ExpertSubsetCharset=[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"]},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getEncoding=function(e){switch(e){case\"WinAnsiEncoding\":return s;case\"StandardEncoding\":return o;case\"MacRomanEncoding\":return i;case\"SymbolSetEncoding\":return c;case\"ZapfDingbatsEncoding\":return l;case\"ExpertEncoding\":return r;case\"MacExpertEncoding\":return n;default:return null}},t.ExpertEncoding=t.ZapfDingbatsEncoding=t.SymbolSetEncoding=t.MacRomanEncoding=t.StandardEncoding=t.WinAnsiEncoding=void 0;var r=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];t.ExpertEncoding=r;var n=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"centoldstyle\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"\",\"threequartersemdash\",\"\",\"questionsmall\",\"\",\"\",\"\",\"\",\"Ethsmall\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"\",\"\",\"\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hypheninferior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"asuperior\",\"centsuperior\",\"\",\"\",\"\",\"\",\"Aacutesmall\",\"Agravesmall\",\"Acircumflexsmall\",\"Adieresissmall\",\"Atildesmall\",\"Aringsmall\",\"Ccedillasmall\",\"Eacutesmall\",\"Egravesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Iacutesmall\",\"Igravesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ntildesmall\",\"Oacutesmall\",\"Ogravesmall\",\"Ocircumflexsmall\",\"Odieresissmall\",\"Otildesmall\",\"Uacutesmall\",\"Ugravesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"\",\"eightsuperior\",\"fourinferior\",\"threeinferior\",\"sixinferior\",\"eightinferior\",\"seveninferior\",\"Scaronsmall\",\"\",\"centinferior\",\"twoinferior\",\"\",\"Dieresissmall\",\"\",\"Caronsmall\",\"osuperior\",\"fiveinferior\",\"\",\"commainferior\",\"periodinferior\",\"Yacutesmall\",\"\",\"dollarinferior\",\"\",\"\",\"Thornsmall\",\"\",\"nineinferior\",\"zeroinferior\",\"Zcaronsmall\",\"AEsmall\",\"Oslashsmall\",\"questiondownsmall\",\"oneinferior\",\"Lslashsmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"Cedillasmall\",\"\",\"\",\"\",\"\",\"\",\"OEsmall\",\"figuredash\",\"hyphensuperior\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"\",\"Ydieresissmall\",\"\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"ninesuperior\",\"zerosuperior\",\"\",\"esuperior\",\"rsuperior\",\"tsuperior\",\"\",\"\",\"isuperior\",\"ssuperior\",\"dsuperior\",\"\",\"\",\"\",\"\",\"\",\"lsuperior\",\"Ogoneksmall\",\"Brevesmall\",\"Macronsmall\",\"bsuperior\",\"nsuperior\",\"msuperior\",\"commasuperior\",\"periodsuperior\",\"Dotaccentsmall\",\"Ringsmall\",\"\",\"\",\"\",\"\"],i=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"space\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\"];t.MacRomanEncoding=i;var o=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"\",\"\",\"\",\"\"];t.StandardEncoding=o;var s=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"bullet\",\"Euro\",\"bullet\",\"quotesinglbase\",\"florin\",\"quotedblbase\",\"ellipsis\",\"dagger\",\"daggerdbl\",\"circumflex\",\"perthousand\",\"Scaron\",\"guilsinglleft\",\"OE\",\"bullet\",\"Zcaron\",\"bullet\",\"bullet\",\"quoteleft\",\"quoteright\",\"quotedblleft\",\"quotedblright\",\"bullet\",\"endash\",\"emdash\",\"tilde\",\"trademark\",\"scaron\",\"guilsinglright\",\"oe\",\"bullet\",\"zcaron\",\"Ydieresis\",\"space\",\"exclamdown\",\"cent\",\"sterling\",\"currency\",\"yen\",\"brokenbar\",\"section\",\"dieresis\",\"copyright\",\"ordfeminine\",\"guillemotleft\",\"logicalnot\",\"hyphen\",\"registered\",\"macron\",\"degree\",\"plusminus\",\"twosuperior\",\"threesuperior\",\"acute\",\"mu\",\"paragraph\",\"periodcentered\",\"cedilla\",\"onesuperior\",\"ordmasculine\",\"guillemotright\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondown\",\"Agrave\",\"Aacute\",\"Acircumflex\",\"Atilde\",\"Adieresis\",\"Aring\",\"AE\",\"Ccedilla\",\"Egrave\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Igrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Eth\",\"Ntilde\",\"Ograve\",\"Oacute\",\"Ocircumflex\",\"Otilde\",\"Odieresis\",\"multiply\",\"Oslash\",\"Ugrave\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Yacute\",\"Thorn\",\"germandbls\",\"agrave\",\"aacute\",\"acircumflex\",\"atilde\",\"adieresis\",\"aring\",\"ae\",\"ccedilla\",\"egrave\",\"eacute\",\"ecircumflex\",\"edieresis\",\"igrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"eth\",\"ntilde\",\"ograve\",\"oacute\",\"ocircumflex\",\"otilde\",\"odieresis\",\"divide\",\"oslash\",\"ugrave\",\"uacute\",\"ucircumflex\",\"udieresis\",\"yacute\",\"thorn\",\"ydieresis\"];t.WinAnsiEncoding=s;var c=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"universal\",\"numbersign\",\"existential\",\"percent\",\"ampersand\",\"suchthat\",\"parenleft\",\"parenright\",\"asteriskmath\",\"plus\",\"comma\",\"minus\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"congruent\",\"Alpha\",\"Beta\",\"Chi\",\"Delta\",\"Epsilon\",\"Phi\",\"Gamma\",\"Eta\",\"Iota\",\"theta1\",\"Kappa\",\"Lambda\",\"Mu\",\"Nu\",\"Omicron\",\"Pi\",\"Theta\",\"Rho\",\"Sigma\",\"Tau\",\"Upsilon\",\"sigma1\",\"Omega\",\"Xi\",\"Psi\",\"Zeta\",\"bracketleft\",\"therefore\",\"bracketright\",\"perpendicular\",\"underscore\",\"radicalex\",\"alpha\",\"beta\",\"chi\",\"delta\",\"epsilon\",\"phi\",\"gamma\",\"eta\",\"iota\",\"phi1\",\"kappa\",\"lambda\",\"mu\",\"nu\",\"omicron\",\"pi\",\"theta\",\"rho\",\"sigma\",\"tau\",\"upsilon\",\"omega1\",\"omega\",\"xi\",\"psi\",\"zeta\",\"braceleft\",\"bar\",\"braceright\",\"similar\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Euro\",\"Upsilon1\",\"minute\",\"lessequal\",\"fraction\",\"infinity\",\"florin\",\"club\",\"diamond\",\"heart\",\"spade\",\"arrowboth\",\"arrowleft\",\"arrowup\",\"arrowright\",\"arrowdown\",\"degree\",\"plusminus\",\"second\",\"greaterequal\",\"multiply\",\"proportional\",\"partialdiff\",\"bullet\",\"divide\",\"notequal\",\"equivalence\",\"approxequal\",\"ellipsis\",\"arrowvertex\",\"arrowhorizex\",\"carriagereturn\",\"aleph\",\"Ifraktur\",\"Rfraktur\",\"weierstrass\",\"circlemultiply\",\"circleplus\",\"emptyset\",\"intersection\",\"union\",\"propersuperset\",\"reflexsuperset\",\"notsubset\",\"propersubset\",\"reflexsubset\",\"element\",\"notelement\",\"angle\",\"gradient\",\"registerserif\",\"copyrightserif\",\"trademarkserif\",\"product\",\"radical\",\"dotmath\",\"logicalnot\",\"logicaland\",\"logicalor\",\"arrowdblboth\",\"arrowdblleft\",\"arrowdblup\",\"arrowdblright\",\"arrowdbldown\",\"lozenge\",\"angleleft\",\"registersans\",\"copyrightsans\",\"trademarksans\",\"summation\",\"parenlefttp\",\"parenleftex\",\"parenleftbt\",\"bracketlefttp\",\"bracketleftex\",\"bracketleftbt\",\"bracelefttp\",\"braceleftmid\",\"braceleftbt\",\"braceex\",\"\",\"angleright\",\"integral\",\"integraltp\",\"integralex\",\"integralbt\",\"parenrighttp\",\"parenrightex\",\"parenrightbt\",\"bracketrighttp\",\"bracketrightex\",\"bracketrightbt\",\"bracerighttp\",\"bracerightmid\",\"bracerightbt\",\"\"];t.SymbolSetEncoding=c;var l=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"a1\",\"a2\",\"a202\",\"a3\",\"a4\",\"a5\",\"a119\",\"a118\",\"a117\",\"a11\",\"a12\",\"a13\",\"a14\",\"a15\",\"a16\",\"a105\",\"a17\",\"a18\",\"a19\",\"a20\",\"a21\",\"a22\",\"a23\",\"a24\",\"a25\",\"a26\",\"a27\",\"a28\",\"a6\",\"a7\",\"a8\",\"a9\",\"a10\",\"a29\",\"a30\",\"a31\",\"a32\",\"a33\",\"a34\",\"a35\",\"a36\",\"a37\",\"a38\",\"a39\",\"a40\",\"a41\",\"a42\",\"a43\",\"a44\",\"a45\",\"a46\",\"a47\",\"a48\",\"a49\",\"a50\",\"a51\",\"a52\",\"a53\",\"a54\",\"a55\",\"a56\",\"a57\",\"a58\",\"a59\",\"a60\",\"a61\",\"a62\",\"a63\",\"a64\",\"a65\",\"a66\",\"a67\",\"a68\",\"a69\",\"a70\",\"a71\",\"a72\",\"a73\",\"a74\",\"a203\",\"a75\",\"a204\",\"a76\",\"a77\",\"a78\",\"a79\",\"a81\",\"a82\",\"a83\",\"a84\",\"a97\",\"a98\",\"a99\",\"a100\",\"\",\"a89\",\"a90\",\"a93\",\"a94\",\"a91\",\"a92\",\"a205\",\"a85\",\"a206\",\"a86\",\"a87\",\"a88\",\"a95\",\"a96\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"a101\",\"a102\",\"a103\",\"a104\",\"a106\",\"a107\",\"a108\",\"a112\",\"a111\",\"a110\",\"a109\",\"a120\",\"a121\",\"a122\",\"a123\",\"a124\",\"a125\",\"a126\",\"a127\",\"a128\",\"a129\",\"a130\",\"a131\",\"a132\",\"a133\",\"a134\",\"a135\",\"a136\",\"a137\",\"a138\",\"a139\",\"a140\",\"a141\",\"a142\",\"a143\",\"a144\",\"a145\",\"a146\",\"a147\",\"a148\",\"a149\",\"a150\",\"a151\",\"a152\",\"a153\",\"a154\",\"a155\",\"a156\",\"a157\",\"a158\",\"a159\",\"a160\",\"a161\",\"a163\",\"a164\",\"a196\",\"a165\",\"a192\",\"a166\",\"a167\",\"a168\",\"a169\",\"a170\",\"a171\",\"a172\",\"a173\",\"a162\",\"a174\",\"a175\",\"a176\",\"a177\",\"a178\",\"a179\",\"a193\",\"a180\",\"a199\",\"a181\",\"a200\",\"a182\",\"\",\"a201\",\"a183\",\"a184\",\"a197\",\"a185\",\"a194\",\"a198\",\"a186\",\"a195\",\"a187\",\"a188\",\"a189\",\"a190\",\"a191\",\"\"];t.ZapfDingbatsEncoding=l},function(e,t,a){var r=a(8).getLookupTableFactory,n=r((function(e){e.A=65,e.AE=198,e.AEacute=508,e.AEmacron=482,e.AEsmall=63462,e.Aacute=193,e.Aacutesmall=63457,e.Abreve=258,e.Abreveacute=7854,e.Abrevecyrillic=1232,e.Abrevedotbelow=7862,e.Abrevegrave=7856,e.Abrevehookabove=7858,e.Abrevetilde=7860,e.Acaron=461,e.Acircle=9398,e.Acircumflex=194,e.Acircumflexacute=7844,e.Acircumflexdotbelow=7852,e.Acircumflexgrave=7846,e.Acircumflexhookabove=7848,e.Acircumflexsmall=63458,e.Acircumflextilde=7850,e.Acute=63177,e.Acutesmall=63412,e.Acyrillic=1040,e.Adblgrave=512,e.Adieresis=196,e.Adieresiscyrillic=1234,e.Adieresismacron=478,e.Adieresissmall=63460,e.Adotbelow=7840,e.Adotmacron=480,e.Agrave=192,e.Agravesmall=63456,e.Ahookabove=7842,e.Aiecyrillic=1236,e.Ainvertedbreve=514,e.Alpha=913,e.Alphatonos=902,e.Amacron=256,e.Amonospace=65313,e.Aogonek=260,e.Aring=197,e.Aringacute=506,e.Aringbelow=7680,e.Aringsmall=63461,e.Asmall=63329,e.Atilde=195,e.Atildesmall=63459,e.Aybarmenian=1329,e.B=66,e.Bcircle=9399,e.Bdotaccent=7682,e.Bdotbelow=7684,e.Becyrillic=1041,e.Benarmenian=1330,e.Beta=914,e.Bhook=385,e.Blinebelow=7686,e.Bmonospace=65314,e.Brevesmall=63220,e.Bsmall=63330,e.Btopbar=386,e.C=67,e.Caarmenian=1342,e.Cacute=262,e.Caron=63178,e.Caronsmall=63221,e.Ccaron=268,e.Ccedilla=199,e.Ccedillaacute=7688,e.Ccedillasmall=63463,e.Ccircle=9400,e.Ccircumflex=264,e.Cdot=266,e.Cdotaccent=266,e.Cedillasmall=63416,e.Chaarmenian=1353,e.Cheabkhasiancyrillic=1212,e.Checyrillic=1063,e.Chedescenderabkhasiancyrillic=1214,e.Chedescendercyrillic=1206,e.Chedieresiscyrillic=1268,e.Cheharmenian=1347,e.Chekhakassiancyrillic=1227,e.Cheverticalstrokecyrillic=1208,e.Chi=935,e.Chook=391,e.Circumflexsmall=63222,e.Cmonospace=65315,e.Coarmenian=1361,e.Csmall=63331,e.D=68,e.DZ=497,e.DZcaron=452,e.Daarmenian=1332,e.Dafrican=393,e.Dcaron=270,e.Dcedilla=7696,e.Dcircle=9401,e.Dcircumflexbelow=7698,e.Dcroat=272,e.Ddotaccent=7690,e.Ddotbelow=7692,e.Decyrillic=1044,e.Deicoptic=1006,e.Delta=8710,e.Deltagreek=916,e.Dhook=394,e.Dieresis=63179,e.DieresisAcute=63180,e.DieresisGrave=63181,e.Dieresissmall=63400,e.Digammagreek=988,e.Djecyrillic=1026,e.Dlinebelow=7694,e.Dmonospace=65316,e.Dotaccentsmall=63223,e.Dslash=272,e.Dsmall=63332,e.Dtopbar=395,e.Dz=498,e.Dzcaron=453,e.Dzeabkhasiancyrillic=1248,e.Dzecyrillic=1029,e.Dzhecyrillic=1039,e.E=69,e.Eacute=201,e.Eacutesmall=63465,e.Ebreve=276,e.Ecaron=282,e.Ecedillabreve=7708,e.Echarmenian=1333,e.Ecircle=9402,e.Ecircumflex=202,e.Ecircumflexacute=7870,e.Ecircumflexbelow=7704,e.Ecircumflexdotbelow=7878,e.Ecircumflexgrave=7872,e.Ecircumflexhookabove=7874,e.Ecircumflexsmall=63466,e.Ecircumflextilde=7876,e.Ecyrillic=1028,e.Edblgrave=516,e.Edieresis=203,e.Edieresissmall=63467,e.Edot=278,e.Edotaccent=278,e.Edotbelow=7864,e.Efcyrillic=1060,e.Egrave=200,e.Egravesmall=63464,e.Eharmenian=1335,e.Ehookabove=7866,e.Eightroman=8551,e.Einvertedbreve=518,e.Eiotifiedcyrillic=1124,e.Elcyrillic=1051,e.Elevenroman=8554,e.Emacron=274,e.Emacronacute=7702,e.Emacrongrave=7700,e.Emcyrillic=1052,e.Emonospace=65317,e.Encyrillic=1053,e.Endescendercyrillic=1186,e.Eng=330,e.Enghecyrillic=1188,e.Enhookcyrillic=1223,e.Eogonek=280,e.Eopen=400,e.Epsilon=917,e.Epsilontonos=904,e.Ercyrillic=1056,e.Ereversed=398,e.Ereversedcyrillic=1069,e.Escyrillic=1057,e.Esdescendercyrillic=1194,e.Esh=425,e.Esmall=63333,e.Eta=919,e.Etarmenian=1336,e.Etatonos=905,e.Eth=208,e.Ethsmall=63472,e.Etilde=7868,e.Etildebelow=7706,e.Euro=8364,e.Ezh=439,e.Ezhcaron=494,e.Ezhreversed=440,e.F=70,e.Fcircle=9403,e.Fdotaccent=7710,e.Feharmenian=1366,e.Feicoptic=996,e.Fhook=401,e.Fitacyrillic=1138,e.Fiveroman=8548,e.Fmonospace=65318,e.Fourroman=8547,e.Fsmall=63334,e.G=71,e.GBsquare=13191,e.Gacute=500,e.Gamma=915,e.Gammaafrican=404,e.Gangiacoptic=1002,e.Gbreve=286,e.Gcaron=486,e.Gcedilla=290,e.Gcircle=9404,e.Gcircumflex=284,e.Gcommaaccent=290,e.Gdot=288,e.Gdotaccent=288,e.Gecyrillic=1043,e.Ghadarmenian=1346,e.Ghemiddlehookcyrillic=1172,e.Ghestrokecyrillic=1170,e.Gheupturncyrillic=1168,e.Ghook=403,e.Gimarmenian=1331,e.Gjecyrillic=1027,e.Gmacron=7712,e.Gmonospace=65319,e.Grave=63182,e.Gravesmall=63328,e.Gsmall=63335,e.Gsmallhook=667,e.Gstroke=484,e.H=72,e.H18533=9679,e.H18543=9642,e.H18551=9643,e.H22073=9633,e.HPsquare=13259,e.Haabkhasiancyrillic=1192,e.Hadescendercyrillic=1202,e.Hardsigncyrillic=1066,e.Hbar=294,e.Hbrevebelow=7722,e.Hcedilla=7720,e.Hcircle=9405,e.Hcircumflex=292,e.Hdieresis=7718,e.Hdotaccent=7714,e.Hdotbelow=7716,e.Hmonospace=65320,e.Hoarmenian=1344,e.Horicoptic=1e3,e.Hsmall=63336,e.Hungarumlaut=63183,e.Hungarumlautsmall=63224,e.Hzsquare=13200,e.I=73,e.IAcyrillic=1071,e.IJ=306,e.IUcyrillic=1070,e.Iacute=205,e.Iacutesmall=63469,e.Ibreve=300,e.Icaron=463,e.Icircle=9406,e.Icircumflex=206,e.Icircumflexsmall=63470,e.Icyrillic=1030,e.Idblgrave=520,e.Idieresis=207,e.Idieresisacute=7726,e.Idieresiscyrillic=1252,e.Idieresissmall=63471,e.Idot=304,e.Idotaccent=304,e.Idotbelow=7882,e.Iebrevecyrillic=1238,e.Iecyrillic=1045,e.Ifraktur=8465,e.Igrave=204,e.Igravesmall=63468,e.Ihookabove=7880,e.Iicyrillic=1048,e.Iinvertedbreve=522,e.Iishortcyrillic=1049,e.Imacron=298,e.Imacroncyrillic=1250,e.Imonospace=65321,e.Iniarmenian=1339,e.Iocyrillic=1025,e.Iogonek=302,e.Iota=921,e.Iotaafrican=406,e.Iotadieresis=938,e.Iotatonos=906,e.Ismall=63337,e.Istroke=407,e.Itilde=296,e.Itildebelow=7724,e.Izhitsacyrillic=1140,e.Izhitsadblgravecyrillic=1142,e.J=74,e.Jaarmenian=1345,e.Jcircle=9407,e.Jcircumflex=308,e.Jecyrillic=1032,e.Jheharmenian=1355,e.Jmonospace=65322,e.Jsmall=63338,e.K=75,e.KBsquare=13189,e.KKsquare=13261,e.Kabashkircyrillic=1184,e.Kacute=7728,e.Kacyrillic=1050,e.Kadescendercyrillic=1178,e.Kahookcyrillic=1219,e.Kappa=922,e.Kastrokecyrillic=1182,e.Kaverticalstrokecyrillic=1180,e.Kcaron=488,e.Kcedilla=310,e.Kcircle=9408,e.Kcommaaccent=310,e.Kdotbelow=7730,e.Keharmenian=1364,e.Kenarmenian=1343,e.Khacyrillic=1061,e.Kheicoptic=998,e.Khook=408,e.Kjecyrillic=1036,e.Klinebelow=7732,e.Kmonospace=65323,e.Koppacyrillic=1152,e.Koppagreek=990,e.Ksicyrillic=1134,e.Ksmall=63339,e.L=76,e.LJ=455,e.LL=63167,e.Lacute=313,e.Lambda=923,e.Lcaron=317,e.Lcedilla=315,e.Lcircle=9409,e.Lcircumflexbelow=7740,e.Lcommaaccent=315,e.Ldot=319,e.Ldotaccent=319,e.Ldotbelow=7734,e.Ldotbelowmacron=7736,e.Liwnarmenian=1340,e.Lj=456,e.Ljecyrillic=1033,e.Llinebelow=7738,e.Lmonospace=65324,e.Lslash=321,e.Lslashsmall=63225,e.Lsmall=63340,e.M=77,e.MBsquare=13190,e.Macron=63184,e.Macronsmall=63407,e.Macute=7742,e.Mcircle=9410,e.Mdotaccent=7744,e.Mdotbelow=7746,e.Menarmenian=1348,e.Mmonospace=65325,e.Msmall=63341,e.Mturned=412,e.Mu=924,e.N=78,e.NJ=458,e.Nacute=323,e.Ncaron=327,e.Ncedilla=325,e.Ncircle=9411,e.Ncircumflexbelow=7754,e.Ncommaaccent=325,e.Ndotaccent=7748,e.Ndotbelow=7750,e.Nhookleft=413,e.Nineroman=8552,e.Nj=459,e.Njecyrillic=1034,e.Nlinebelow=7752,e.Nmonospace=65326,e.Nowarmenian=1350,e.Nsmall=63342,e.Ntilde=209,e.Ntildesmall=63473,e.Nu=925,e.O=79,e.OE=338,e.OEsmall=63226,e.Oacute=211,e.Oacutesmall=63475,e.Obarredcyrillic=1256,e.Obarreddieresiscyrillic=1258,e.Obreve=334,e.Ocaron=465,e.Ocenteredtilde=415,e.Ocircle=9412,e.Ocircumflex=212,e.Ocircumflexacute=7888,e.Ocircumflexdotbelow=7896,e.Ocircumflexgrave=7890,e.Ocircumflexhookabove=7892,e.Ocircumflexsmall=63476,e.Ocircumflextilde=7894,e.Ocyrillic=1054,e.Odblacute=336,e.Odblgrave=524,e.Odieresis=214,e.Odieresiscyrillic=1254,e.Odieresissmall=63478,e.Odotbelow=7884,e.Ogoneksmall=63227,e.Ograve=210,e.Ogravesmall=63474,e.Oharmenian=1365,e.Ohm=8486,e.Ohookabove=7886,e.Ohorn=416,e.Ohornacute=7898,e.Ohorndotbelow=7906,e.Ohorngrave=7900,e.Ohornhookabove=7902,e.Ohorntilde=7904,e.Ohungarumlaut=336,e.Oi=418,e.Oinvertedbreve=526,e.Omacron=332,e.Omacronacute=7762,e.Omacrongrave=7760,e.Omega=8486,e.Omegacyrillic=1120,e.Omegagreek=937,e.Omegaroundcyrillic=1146,e.Omegatitlocyrillic=1148,e.Omegatonos=911,e.Omicron=927,e.Omicrontonos=908,e.Omonospace=65327,e.Oneroman=8544,e.Oogonek=490,e.Oogonekmacron=492,e.Oopen=390,e.Oslash=216,e.Oslashacute=510,e.Oslashsmall=63480,e.Osmall=63343,e.Ostrokeacute=510,e.Otcyrillic=1150,e.Otilde=213,e.Otildeacute=7756,e.Otildedieresis=7758,e.Otildesmall=63477,e.P=80,e.Pacute=7764,e.Pcircle=9413,e.Pdotaccent=7766,e.Pecyrillic=1055,e.Peharmenian=1354,e.Pemiddlehookcyrillic=1190,e.Phi=934,e.Phook=420,e.Pi=928,e.Piwrarmenian=1363,e.Pmonospace=65328,e.Psi=936,e.Psicyrillic=1136,e.Psmall=63344,e.Q=81,e.Qcircle=9414,e.Qmonospace=65329,e.Qsmall=63345,e.R=82,e.Raarmenian=1356,e.Racute=340,e.Rcaron=344,e.Rcedilla=342,e.Rcircle=9415,e.Rcommaaccent=342,e.Rdblgrave=528,e.Rdotaccent=7768,e.Rdotbelow=7770,e.Rdotbelowmacron=7772,e.Reharmenian=1360,e.Rfraktur=8476,e.Rho=929,e.Ringsmall=63228,e.Rinvertedbreve=530,e.Rlinebelow=7774,e.Rmonospace=65330,e.Rsmall=63346,e.Rsmallinverted=641,e.Rsmallinvertedsuperior=694,e.S=83,e.SF010000=9484,e.SF020000=9492,e.SF030000=9488,e.SF040000=9496,e.SF050000=9532,e.SF060000=9516,e.SF070000=9524,e.SF080000=9500,e.SF090000=9508,e.SF100000=9472,e.SF110000=9474,e.SF190000=9569,e.SF200000=9570,e.SF210000=9558,e.SF220000=9557,e.SF230000=9571,e.SF240000=9553,e.SF250000=9559,e.SF260000=9565,e.SF270000=9564,e.SF280000=9563,e.SF360000=9566,e.SF370000=9567,e.SF380000=9562,e.SF390000=9556,e.SF400000=9577,e.SF410000=9574,e.SF420000=9568,e.SF430000=9552,e.SF440000=9580,e.SF450000=9575,e.SF460000=9576,e.SF470000=9572,e.SF480000=9573,e.SF490000=9561,e.SF500000=9560,e.SF510000=9554,e.SF520000=9555,e.SF530000=9579,e.SF540000=9578,e.Sacute=346,e.Sacutedotaccent=7780,e.Sampigreek=992,e.Scaron=352,e.Scarondotaccent=7782,e.Scaronsmall=63229,e.Scedilla=350,e.Schwa=399,e.Schwacyrillic=1240,e.Schwadieresiscyrillic=1242,e.Scircle=9416,e.Scircumflex=348,e.Scommaaccent=536,e.Sdotaccent=7776,e.Sdotbelow=7778,e.Sdotbelowdotaccent=7784,e.Seharmenian=1357,e.Sevenroman=8550,e.Shaarmenian=1351,e.Shacyrillic=1064,e.Shchacyrillic=1065,e.Sheicoptic=994,e.Shhacyrillic=1210,e.Shimacoptic=1004,e.Sigma=931,e.Sixroman=8549,e.Smonospace=65331,e.Softsigncyrillic=1068,e.Ssmall=63347,e.Stigmagreek=986,e.T=84,e.Tau=932,e.Tbar=358,e.Tcaron=356,e.Tcedilla=354,e.Tcircle=9417,e.Tcircumflexbelow=7792,e.Tcommaaccent=354,e.Tdotaccent=7786,e.Tdotbelow=7788,e.Tecyrillic=1058,e.Tedescendercyrillic=1196,e.Tenroman=8553,e.Tetsecyrillic=1204,e.Theta=920,e.Thook=428,e.Thorn=222,e.Thornsmall=63486,e.Threeroman=8546,e.Tildesmall=63230,e.Tiwnarmenian=1359,e.Tlinebelow=7790,e.Tmonospace=65332,e.Toarmenian=1337,e.Tonefive=444,e.Tonesix=388,e.Tonetwo=423,e.Tretroflexhook=430,e.Tsecyrillic=1062,e.Tshecyrillic=1035,e.Tsmall=63348,e.Twelveroman=8555,e.Tworoman=8545,e.U=85,e.Uacute=218,e.Uacutesmall=63482,e.Ubreve=364,e.Ucaron=467,e.Ucircle=9418,e.Ucircumflex=219,e.Ucircumflexbelow=7798,e.Ucircumflexsmall=63483,e.Ucyrillic=1059,e.Udblacute=368,e.Udblgrave=532,e.Udieresis=220,e.Udieresisacute=471,e.Udieresisbelow=7794,e.Udieresiscaron=473,e.Udieresiscyrillic=1264,e.Udieresisgrave=475,e.Udieresismacron=469,e.Udieresissmall=63484,e.Udotbelow=7908,e.Ugrave=217,e.Ugravesmall=63481,e.Uhookabove=7910,e.Uhorn=431,e.Uhornacute=7912,e.Uhorndotbelow=7920,e.Uhorngrave=7914,e.Uhornhookabove=7916,e.Uhorntilde=7918,e.Uhungarumlaut=368,e.Uhungarumlautcyrillic=1266,e.Uinvertedbreve=534,e.Ukcyrillic=1144,e.Umacron=362,e.Umacroncyrillic=1262,e.Umacrondieresis=7802,e.Umonospace=65333,e.Uogonek=370,e.Upsilon=933,e.Upsilon1=978,e.Upsilonacutehooksymbolgreek=979,e.Upsilonafrican=433,e.Upsilondieresis=939,e.Upsilondieresishooksymbolgreek=980,e.Upsilonhooksymbol=978,e.Upsilontonos=910,e.Uring=366,e.Ushortcyrillic=1038,e.Usmall=63349,e.Ustraightcyrillic=1198,e.Ustraightstrokecyrillic=1200,e.Utilde=360,e.Utildeacute=7800,e.Utildebelow=7796,e.V=86,e.Vcircle=9419,e.Vdotbelow=7806,e.Vecyrillic=1042,e.Vewarmenian=1358,e.Vhook=434,e.Vmonospace=65334,e.Voarmenian=1352,e.Vsmall=63350,e.Vtilde=7804,e.W=87,e.Wacute=7810,e.Wcircle=9420,e.Wcircumflex=372,e.Wdieresis=7812,e.Wdotaccent=7814,e.Wdotbelow=7816,e.Wgrave=7808,e.Wmonospace=65335,e.Wsmall=63351,e.X=88,e.Xcircle=9421,e.Xdieresis=7820,e.Xdotaccent=7818,e.Xeharmenian=1341,e.Xi=926,e.Xmonospace=65336,e.Xsmall=63352,e.Y=89,e.Yacute=221,e.Yacutesmall=63485,e.Yatcyrillic=1122,e.Ycircle=9422,e.Ycircumflex=374,e.Ydieresis=376,e.Ydieresissmall=63487,e.Ydotaccent=7822,e.Ydotbelow=7924,e.Yericyrillic=1067,e.Yerudieresiscyrillic=1272,e.Ygrave=7922,e.Yhook=435,e.Yhookabove=7926,e.Yiarmenian=1349,e.Yicyrillic=1031,e.Yiwnarmenian=1362,e.Ymonospace=65337,e.Ysmall=63353,e.Ytilde=7928,e.Yusbigcyrillic=1130,e.Yusbigiotifiedcyrillic=1132,e.Yuslittlecyrillic=1126,e.Yuslittleiotifiedcyrillic=1128,e.Z=90,e.Zaarmenian=1334,e.Zacute=377,e.Zcaron=381,e.Zcaronsmall=63231,e.Zcircle=9423,e.Zcircumflex=7824,e.Zdot=379,e.Zdotaccent=379,e.Zdotbelow=7826,e.Zecyrillic=1047,e.Zedescendercyrillic=1176,e.Zedieresiscyrillic=1246,e.Zeta=918,e.Zhearmenian=1338,e.Zhebrevecyrillic=1217,e.Zhecyrillic=1046,e.Zhedescendercyrillic=1174,e.Zhedieresiscyrillic=1244,e.Zlinebelow=7828,e.Zmonospace=65338,e.Zsmall=63354,e.Zstroke=437,e.a=97,e.aabengali=2438,e.aacute=225,e.aadeva=2310,e.aagujarati=2694,e.aagurmukhi=2566,e.aamatragurmukhi=2622,e.aarusquare=13059,e.aavowelsignbengali=2494,e.aavowelsigndeva=2366,e.aavowelsigngujarati=2750,e.abbreviationmarkarmenian=1375,e.abbreviationsigndeva=2416,e.abengali=2437,e.abopomofo=12570,e.abreve=259,e.abreveacute=7855,e.abrevecyrillic=1233,e.abrevedotbelow=7863,e.abrevegrave=7857,e.abrevehookabove=7859,e.abrevetilde=7861,e.acaron=462,e.acircle=9424,e.acircumflex=226,e.acircumflexacute=7845,e.acircumflexdotbelow=7853,e.acircumflexgrave=7847,e.acircumflexhookabove=7849,e.acircumflextilde=7851,e.acute=180,e.acutebelowcmb=791,e.acutecmb=769,e.acutecomb=769,e.acutedeva=2388,e.acutelowmod=719,e.acutetonecmb=833,e.acyrillic=1072,e.adblgrave=513,e.addakgurmukhi=2673,e.adeva=2309,e.adieresis=228,e.adieresiscyrillic=1235,e.adieresismacron=479,e.adotbelow=7841,e.adotmacron=481,e.ae=230,e.aeacute=509,e.aekorean=12624,e.aemacron=483,e.afii00208=8213,e.afii08941=8356,e.afii10017=1040,e.afii10018=1041,e.afii10019=1042,e.afii10020=1043,e.afii10021=1044,e.afii10022=1045,e.afii10023=1025,e.afii10024=1046,e.afii10025=1047,e.afii10026=1048,e.afii10027=1049,e.afii10028=1050,e.afii10029=1051,e.afii10030=1052;e.afii10031=1053,e.afii10032=1054,e.afii10033=1055,e.afii10034=1056,e.afii10035=1057,e.afii10036=1058,e.afii10037=1059,e.afii10038=1060,e.afii10039=1061,e.afii10040=1062,e.afii10041=1063,e.afii10042=1064,e.afii10043=1065,e.afii10044=1066,e.afii10045=1067,e.afii10046=1068,e.afii10047=1069,e.afii10048=1070,e.afii10049=1071,e.afii10050=1168,e.afii10051=1026,e.afii10052=1027,e.afii10053=1028,e.afii10054=1029,e.afii10055=1030,e.afii10056=1031,e.afii10057=1032,e.afii10058=1033,e.afii10059=1034,e.afii10060=1035,e.afii10061=1036,e.afii10062=1038,e.afii10063=63172,e.afii10064=63173,e.afii10065=1072,e.afii10066=1073,e.afii10067=1074,e.afii10068=1075,e.afii10069=1076,e.afii10070=1077,e.afii10071=1105,e.afii10072=1078,e.afii10073=1079,e.afii10074=1080,e.afii10075=1081,e.afii10076=1082,e.afii10077=1083,e.afii10078=1084,e.afii10079=1085,e.afii10080=1086,e.afii10081=1087,e.afii10082=1088,e.afii10083=1089,e.afii10084=1090,e.afii10085=1091,e.afii10086=1092,e.afii10087=1093,e.afii10088=1094,e.afii10089=1095,e.afii10090=1096,e.afii10091=1097,e.afii10092=1098,e.afii10093=1099,e.afii10094=1100,e.afii10095=1101,e.afii10096=1102,e.afii10097=1103,e.afii10098=1169,e.afii10099=1106,e.afii10100=1107,e.afii10101=1108,e.afii10102=1109,e.afii10103=1110,e.afii10104=1111,e.afii10105=1112,e.afii10106=1113,e.afii10107=1114,e.afii10108=1115,e.afii10109=1116,e.afii10110=1118,e.afii10145=1039,e.afii10146=1122,e.afii10147=1138,e.afii10148=1140,e.afii10192=63174,e.afii10193=1119,e.afii10194=1123,e.afii10195=1139,e.afii10196=1141,e.afii10831=63175,e.afii10832=63176,e.afii10846=1241,e.afii299=8206,e.afii300=8207,e.afii301=8205,e.afii57381=1642,e.afii57388=1548,e.afii57392=1632,e.afii57393=1633,e.afii57394=1634,e.afii57395=1635,e.afii57396=1636,e.afii57397=1637,e.afii57398=1638,e.afii57399=1639,e.afii57400=1640,e.afii57401=1641,e.afii57403=1563,e.afii57407=1567,e.afii57409=1569,e.afii57410=1570,e.afii57411=1571,e.afii57412=1572,e.afii57413=1573,e.afii57414=1574,e.afii57415=1575,e.afii57416=1576,e.afii57417=1577,e.afii57418=1578,e.afii57419=1579,e.afii57420=1580,e.afii57421=1581,e.afii57422=1582,e.afii57423=1583,e.afii57424=1584,e.afii57425=1585,e.afii57426=1586,e.afii57427=1587,e.afii57428=1588,e.afii57429=1589,e.afii57430=1590,e.afii57431=1591,e.afii57432=1592,e.afii57433=1593,e.afii57434=1594,e.afii57440=1600,e.afii57441=1601,e.afii57442=1602,e.afii57443=1603,e.afii57444=1604,e.afii57445=1605,e.afii57446=1606,e.afii57448=1608,e.afii57449=1609,e.afii57450=1610,e.afii57451=1611,e.afii57452=1612,e.afii57453=1613,e.afii57454=1614,e.afii57455=1615,e.afii57456=1616,e.afii57457=1617,e.afii57458=1618,e.afii57470=1607,e.afii57505=1700,e.afii57506=1662,e.afii57507=1670,e.afii57508=1688,e.afii57509=1711,e.afii57511=1657,e.afii57512=1672,e.afii57513=1681,e.afii57514=1722,e.afii57519=1746,e.afii57534=1749,e.afii57636=8362,e.afii57645=1470,e.afii57658=1475,e.afii57664=1488,e.afii57665=1489,e.afii57666=1490,e.afii57667=1491,e.afii57668=1492,e.afii57669=1493,e.afii57670=1494,e.afii57671=1495,e.afii57672=1496,e.afii57673=1497,e.afii57674=1498,e.afii57675=1499,e.afii57676=1500,e.afii57677=1501,e.afii57678=1502,e.afii57679=1503,e.afii57680=1504,e.afii57681=1505,e.afii57682=1506,e.afii57683=1507,e.afii57684=1508,e.afii57685=1509,e.afii57686=1510,e.afii57687=1511,e.afii57688=1512,e.afii57689=1513,e.afii57690=1514,e.afii57694=64298,e.afii57695=64299,e.afii57700=64331,e.afii57705=64287,e.afii57716=1520,e.afii57717=1521,e.afii57718=1522,e.afii57723=64309,e.afii57793=1460,e.afii57794=1461,e.afii57795=1462,e.afii57796=1467,e.afii57797=1464,e.afii57798=1463,e.afii57799=1456,e.afii57800=1458,e.afii57801=1457,e.afii57802=1459,e.afii57803=1474,e.afii57804=1473,e.afii57806=1465,e.afii57807=1468,e.afii57839=1469,e.afii57841=1471,e.afii57842=1472,e.afii57929=700,e.afii61248=8453,e.afii61289=8467,e.afii61352=8470,e.afii61573=8236,e.afii61574=8237,e.afii61575=8238,e.afii61664=8204,e.afii63167=1645,e.afii64937=701,e.agrave=224,e.agujarati=2693,e.agurmukhi=2565,e.ahiragana=12354,e.ahookabove=7843,e.aibengali=2448,e.aibopomofo=12574,e.aideva=2320,e.aiecyrillic=1237,e.aigujarati=2704,e.aigurmukhi=2576,e.aimatragurmukhi=2632,e.ainarabic=1593,e.ainfinalarabic=65226,e.aininitialarabic=65227,e.ainmedialarabic=65228,e.ainvertedbreve=515,e.aivowelsignbengali=2504,e.aivowelsigndeva=2376,e.aivowelsigngujarati=2760,e.akatakana=12450,e.akatakanahalfwidth=65393,e.akorean=12623,e.alef=1488,e.alefarabic=1575,e.alefdageshhebrew=64304,e.aleffinalarabic=65166,e.alefhamzaabovearabic=1571,e.alefhamzaabovefinalarabic=65156,e.alefhamzabelowarabic=1573,e.alefhamzabelowfinalarabic=65160,e.alefhebrew=1488,e.aleflamedhebrew=64335,e.alefmaddaabovearabic=1570,e.alefmaddaabovefinalarabic=65154,e.alefmaksuraarabic=1609,e.alefmaksurafinalarabic=65264,e.alefmaksurainitialarabic=65267,e.alefmaksuramedialarabic=65268,e.alefpatahhebrew=64302,e.alefqamatshebrew=64303,e.aleph=8501,e.allequal=8780,e.alpha=945,e.alphatonos=940,e.amacron=257,e.amonospace=65345,e.ampersand=38,e.ampersandmonospace=65286,e.ampersandsmall=63270,e.amsquare=13250,e.anbopomofo=12578,e.angbopomofo=12580,e.angbracketleft=12296,e.angbracketright=12297,e.angkhankhuthai=3674,e.angle=8736,e.anglebracketleft=12296,e.anglebracketleftvertical=65087,e.anglebracketright=12297,e.anglebracketrightvertical=65088,e.angleleft=9001,e.angleright=9002,e.angstrom=8491,e.anoteleia=903,e.anudattadeva=2386,e.anusvarabengali=2434,e.anusvaradeva=2306,e.anusvaragujarati=2690,e.aogonek=261,e.apaatosquare=13056,e.aparen=9372,e.apostrophearmenian=1370,e.apostrophemod=700,e.apple=63743,e.approaches=8784,e.approxequal=8776,e.approxequalorimage=8786,e.approximatelyequal=8773,e.araeaekorean=12686,e.araeakorean=12685,e.arc=8978,e.arighthalfring=7834,e.aring=229,e.aringacute=507,e.aringbelow=7681,e.arrowboth=8596,e.arrowdashdown=8675,e.arrowdashleft=8672,e.arrowdashright=8674,e.arrowdashup=8673,e.arrowdblboth=8660,e.arrowdbldown=8659,e.arrowdblleft=8656,e.arrowdblright=8658,e.arrowdblup=8657,e.arrowdown=8595,e.arrowdownleft=8601,e.arrowdownright=8600,e.arrowdownwhite=8681,e.arrowheaddownmod=709,e.arrowheadleftmod=706,e.arrowheadrightmod=707,e.arrowheadupmod=708,e.arrowhorizex=63719,e.arrowleft=8592,e.arrowleftdbl=8656,e.arrowleftdblstroke=8653,e.arrowleftoverright=8646,e.arrowleftwhite=8678,e.arrowright=8594,e.arrowrightdblstroke=8655,e.arrowrightheavy=10142,e.arrowrightoverleft=8644,e.arrowrightwhite=8680,e.arrowtableft=8676,e.arrowtabright=8677,e.arrowup=8593,e.arrowupdn=8597,e.arrowupdnbse=8616,e.arrowupdownbase=8616,e.arrowupleft=8598,e.arrowupleftofdown=8645,e.arrowupright=8599,e.arrowupwhite=8679,e.arrowvertex=63718,e.asciicircum=94,e.asciicircummonospace=65342,e.asciitilde=126,e.asciitildemonospace=65374,e.ascript=593,e.ascriptturned=594,e.asmallhiragana=12353,e.asmallkatakana=12449,e.asmallkatakanahalfwidth=65383,e.asterisk=42,e.asteriskaltonearabic=1645,e.asteriskarabic=1645,e.asteriskmath=8727,e.asteriskmonospace=65290,e.asterisksmall=65121,e.asterism=8258,e.asuperior=63209,e.asymptoticallyequal=8771,e.at=64,e.atilde=227,e.atmonospace=65312,e.atsmall=65131,e.aturned=592,e.aubengali=2452,e.aubopomofo=12576,e.audeva=2324,e.augujarati=2708,e.augurmukhi=2580,e.aulengthmarkbengali=2519,e.aumatragurmukhi=2636,e.auvowelsignbengali=2508,e.auvowelsigndeva=2380,e.auvowelsigngujarati=2764,e.avagrahadeva=2365,e.aybarmenian=1377,e.ayin=1506,e.ayinaltonehebrew=64288,e.ayinhebrew=1506,e.b=98,e.babengali=2476,e.backslash=92,e.backslashmonospace=65340,e.badeva=2348,e.bagujarati=2732,e.bagurmukhi=2604,e.bahiragana=12400,e.bahtthai=3647,e.bakatakana=12496,e.bar=124,e.barmonospace=65372,e.bbopomofo=12549,e.bcircle=9425,e.bdotaccent=7683,e.bdotbelow=7685,e.beamedsixteenthnotes=9836,e.because=8757,e.becyrillic=1073,e.beharabic=1576,e.behfinalarabic=65168,e.behinitialarabic=65169,e.behiragana=12409,e.behmedialarabic=65170,e.behmeeminitialarabic=64671,e.behmeemisolatedarabic=64520,e.behnoonfinalarabic=64621,e.bekatakana=12505,e.benarmenian=1378,e.bet=1489,e.beta=946,e.betasymbolgreek=976,e.betdagesh=64305,e.betdageshhebrew=64305,e.bethebrew=1489,e.betrafehebrew=64332,e.bhabengali=2477,e.bhadeva=2349,e.bhagujarati=2733,e.bhagurmukhi=2605,e.bhook=595,e.bihiragana=12403,e.bikatakana=12499,e.bilabialclick=664,e.bindigurmukhi=2562,e.birusquare=13105,e.blackcircle=9679,e.blackdiamond=9670,e.blackdownpointingtriangle=9660,e.blackleftpointingpointer=9668,e.blackleftpointingtriangle=9664,e.blacklenticularbracketleft=12304,e.blacklenticularbracketleftvertical=65083,e.blacklenticularbracketright=12305,e.blacklenticularbracketrightvertical=65084,e.blacklowerlefttriangle=9699,e.blacklowerrighttriangle=9698,e.blackrectangle=9644,e.blackrightpointingpointer=9658,e.blackrightpointingtriangle=9654,e.blacksmallsquare=9642,e.blacksmilingface=9787,e.blacksquare=9632,e.blackstar=9733,e.blackupperlefttriangle=9700,e.blackupperrighttriangle=9701,e.blackuppointingsmalltriangle=9652,e.blackuppointingtriangle=9650,e.blank=9251,e.blinebelow=7687,e.block=9608,e.bmonospace=65346,e.bobaimaithai=3610,e.bohiragana=12412,e.bokatakana=12508,e.bparen=9373,e.bqsquare=13251,e.braceex=63732,e.braceleft=123,e.braceleftbt=63731,e.braceleftmid=63730,e.braceleftmonospace=65371,e.braceleftsmall=65115,e.bracelefttp=63729,e.braceleftvertical=65079,e.braceright=125,e.bracerightbt=63742,e.bracerightmid=63741,e.bracerightmonospace=65373,e.bracerightsmall=65116,e.bracerighttp=63740,e.bracerightvertical=65080,e.bracketleft=91,e.bracketleftbt=63728,e.bracketleftex=63727,e.bracketleftmonospace=65339,e.bracketlefttp=63726,e.bracketright=93,e.bracketrightbt=63739,e.bracketrightex=63738,e.bracketrightmonospace=65341,e.bracketrighttp=63737,e.breve=728,e.brevebelowcmb=814,e.brevecmb=774,e.breveinvertedbelowcmb=815,e.breveinvertedcmb=785,e.breveinverteddoublecmb=865,e.bridgebelowcmb=810,e.bridgeinvertedbelowcmb=826,e.brokenbar=166,e.bstroke=384,e.bsuperior=63210,e.btopbar=387,e.buhiragana=12406,e.bukatakana=12502,e.bullet=8226,e.bulletinverse=9688,e.bulletoperator=8729,e.bullseye=9678,e.c=99,e.caarmenian=1390,e.cabengali=2458,e.cacute=263,e.cadeva=2330,e.cagujarati=2714,e.cagurmukhi=2586,e.calsquare=13192,e.candrabindubengali=2433,e.candrabinducmb=784,e.candrabindudeva=2305,e.candrabindugujarati=2689,e.capslock=8682,e.careof=8453,e.caron=711,e.caronbelowcmb=812,e.caroncmb=780,e.carriagereturn=8629,e.cbopomofo=12568,e.ccaron=269,e.ccedilla=231,e.ccedillaacute=7689,e.ccircle=9426,e.ccircumflex=265,e.ccurl=597,e.cdot=267,e.cdotaccent=267,e.cdsquare=13253,e.cedilla=184,e.cedillacmb=807,e.cent=162,e.centigrade=8451,e.centinferior=63199,e.centmonospace=65504,e.centoldstyle=63394,e.centsuperior=63200,e.chaarmenian=1401,e.chabengali=2459,e.chadeva=2331,e.chagujarati=2715,e.chagurmukhi=2587,e.chbopomofo=12564,e.cheabkhasiancyrillic=1213,e.checkmark=10003,e.checyrillic=1095,e.chedescenderabkhasiancyrillic=1215,e.chedescendercyrillic=1207,e.chedieresiscyrillic=1269,e.cheharmenian=1395,e.chekhakassiancyrillic=1228,e.cheverticalstrokecyrillic=1209,e.chi=967,e.chieuchacirclekorean=12919,e.chieuchaparenkorean=12823,e.chieuchcirclekorean=12905,e.chieuchkorean=12618,e.chieuchparenkorean=12809,e.chochangthai=3594,e.chochanthai=3592,e.chochingthai=3593,e.chochoethai=3596,e.chook=392,e.cieucacirclekorean=12918,e.cieucaparenkorean=12822,e.cieuccirclekorean=12904,e.cieuckorean=12616,e.cieucparenkorean=12808,e.cieucuparenkorean=12828,e.circle=9675,e.circlecopyrt=169,e.circlemultiply=8855,e.circleot=8857,e.circleplus=8853,e.circlepostalmark=12342,e.circlewithlefthalfblack=9680,e.circlewithrighthalfblack=9681,e.circumflex=710,e.circumflexbelowcmb=813,e.circumflexcmb=770,e.clear=8999,e.clickalveolar=450,e.clickdental=448,e.clicklateral=449,e.clickretroflex=451,e.club=9827,e.clubsuitblack=9827,e.clubsuitwhite=9831,e.cmcubedsquare=13220,e.cmonospace=65347,e.cmsquaredsquare=13216,e.coarmenian=1409,e.colon=58,e.colonmonetary=8353,e.colonmonospace=65306,e.colonsign=8353,e.colonsmall=65109,e.colontriangularhalfmod=721,e.colontriangularmod=720,e.comma=44,e.commaabovecmb=787,e.commaaboverightcmb=789,e.commaaccent=63171,e.commaarabic=1548,e.commaarmenian=1373,e.commainferior=63201,e.commamonospace=65292,e.commareversedabovecmb=788,e.commareversedmod=701,e.commasmall=65104,e.commasuperior=63202,e.commaturnedabovecmb=786,e.commaturnedmod=699,e.compass=9788,e.congruent=8773,e.contourintegral=8750,e.control=8963,e.controlACK=6,e.controlBEL=7,e.controlBS=8,e.controlCAN=24,e.controlCR=13,e.controlDC1=17,e.controlDC2=18,e.controlDC3=19,e.controlDC4=20,e.controlDEL=127,e.controlDLE=16,e.controlEM=25,e.controlENQ=5,e.controlEOT=4,e.controlESC=27,e.controlETB=23,e.controlETX=3,e.controlFF=12,e.controlFS=28,e.controlGS=29,e.controlHT=9,e.controlLF=10,e.controlNAK=21,e.controlNULL=0,e.controlRS=30,e.controlSI=15,e.controlSO=14,e.controlSOT=2,e.controlSTX=1,e.controlSUB=26,e.controlSYN=22,e.controlUS=31,e.controlVT=11,e.copyright=169,e.copyrightsans=63721,e.copyrightserif=63193,e.cornerbracketleft=12300,e.cornerbracketlefthalfwidth=65378,e.cornerbracketleftvertical=65089,e.cornerbracketright=12301,e.cornerbracketrighthalfwidth=65379,e.cornerbracketrightvertical=65090,e.corporationsquare=13183,e.cosquare=13255,e.coverkgsquare=13254,e.cparen=9374,e.cruzeiro=8354,e.cstretched=663,e.curlyand=8911,e.curlyor=8910,e.currency=164,e.cyrBreve=63185,e.cyrFlex=63186,e.cyrbreve=63188,e.cyrflex=63189,e.d=100,e.daarmenian=1380,e.dabengali=2470,e.dadarabic=1590,e.dadeva=2342,e.dadfinalarabic=65214,e.dadinitialarabic=65215,e.dadmedialarabic=65216,e.dagesh=1468,e.dageshhebrew=1468,e.dagger=8224,e.daggerdbl=8225,e.dagujarati=2726,e.dagurmukhi=2598,e.dahiragana=12384,e.dakatakana=12480,e.dalarabic=1583,e.dalet=1491,e.daletdagesh=64307,e.daletdageshhebrew=64307,e.dalethebrew=1491,e.dalfinalarabic=65194,e.dammaarabic=1615,e.dammalowarabic=1615,e.dammatanaltonearabic=1612,e.dammatanarabic=1612,e.danda=2404,e.dargahebrew=1447,e.dargalefthebrew=1447,e.dasiapneumatacyrilliccmb=1157,e.dblGrave=63187,e.dblanglebracketleft=12298,e.dblanglebracketleftvertical=65085,e.dblanglebracketright=12299,e.dblanglebracketrightvertical=65086,e.dblarchinvertedbelowcmb=811,e.dblarrowleft=8660,e.dblarrowright=8658,e.dbldanda=2405,e.dblgrave=63190,e.dblgravecmb=783,e.dblintegral=8748,e.dbllowline=8215,e.dbllowlinecmb=819,e.dbloverlinecmb=831,e.dblprimemod=698,e.dblverticalbar=8214,e.dblverticallineabovecmb=782,e.dbopomofo=12553,e.dbsquare=13256,e.dcaron=271,e.dcedilla=7697,e.dcircle=9427,e.dcircumflexbelow=7699,e.dcroat=273,e.ddabengali=2465,e.ddadeva=2337,e.ddagujarati=2721,e.ddagurmukhi=2593,e.ddalarabic=1672,e.ddalfinalarabic=64393,e.dddhadeva=2396,e.ddhabengali=2466,e.ddhadeva=2338,e.ddhagujarati=2722,e.ddhagurmukhi=2594,e.ddotaccent=7691,e.ddotbelow=7693,e.decimalseparatorarabic=1643,e.decimalseparatorpersian=1643,e.decyrillic=1076,e.degree=176,e.dehihebrew=1453,e.dehiragana=12391,e.deicoptic=1007,e.dekatakana=12487,e.deleteleft=9003,e.deleteright=8998,e.delta=948,e.deltaturned=397,e.denominatorminusonenumeratorbengali=2552,e.dezh=676,e.dhabengali=2471,e.dhadeva=2343,e.dhagujarati=2727,e.dhagurmukhi=2599,e.dhook=599,e.dialytikatonos=901,e.dialytikatonoscmb=836,e.diamond=9830,e.diamondsuitwhite=9826,e.dieresis=168,e.dieresisacute=63191,e.dieresisbelowcmb=804,e.dieresiscmb=776,e.dieresisgrave=63192,e.dieresistonos=901,e.dihiragana=12386,e.dikatakana=12482,e.dittomark=12291,e.divide=247,e.divides=8739,e.divisionslash=8725,e.djecyrillic=1106,e.dkshade=9619,e.dlinebelow=7695,e.dlsquare=13207,e.dmacron=273,e.dmonospace=65348,e.dnblock=9604,e.dochadathai=3598,e.dodekthai=3604,e.dohiragana=12393,e.dokatakana=12489,e.dollar=36;e.dollarinferior=63203,e.dollarmonospace=65284,e.dollaroldstyle=63268,e.dollarsmall=65129,e.dollarsuperior=63204,e.dong=8363,e.dorusquare=13094,e.dotaccent=729,e.dotaccentcmb=775,e.dotbelowcmb=803,e.dotbelowcomb=803,e.dotkatakana=12539,e.dotlessi=305,e.dotlessj=63166,e.dotlessjstrokehook=644,e.dotmath=8901,e.dottedcircle=9676,e.doubleyodpatah=64287,e.doubleyodpatahhebrew=64287,e.downtackbelowcmb=798,e.downtackmod=725,e.dparen=9375,e.dsuperior=63211,e.dtail=598,e.dtopbar=396,e.duhiragana=12389,e.dukatakana=12485,e.dz=499,e.dzaltone=675,e.dzcaron=454,e.dzcurl=677,e.dzeabkhasiancyrillic=1249,e.dzecyrillic=1109,e.dzhecyrillic=1119,e.e=101,e.eacute=233,e.earth=9793,e.ebengali=2447,e.ebopomofo=12572,e.ebreve=277,e.ecandradeva=2317,e.ecandragujarati=2701,e.ecandravowelsigndeva=2373,e.ecandravowelsigngujarati=2757,e.ecaron=283,e.ecedillabreve=7709,e.echarmenian=1381,e.echyiwnarmenian=1415,e.ecircle=9428,e.ecircumflex=234,e.ecircumflexacute=7871,e.ecircumflexbelow=7705,e.ecircumflexdotbelow=7879,e.ecircumflexgrave=7873,e.ecircumflexhookabove=7875,e.ecircumflextilde=7877,e.ecyrillic=1108,e.edblgrave=517,e.edeva=2319,e.edieresis=235,e.edot=279,e.edotaccent=279,e.edotbelow=7865,e.eegurmukhi=2575,e.eematragurmukhi=2631,e.efcyrillic=1092,e.egrave=232,e.egujarati=2703,e.eharmenian=1383,e.ehbopomofo=12573,e.ehiragana=12360,e.ehookabove=7867,e.eibopomofo=12575,e.eight=56,e.eightarabic=1640,e.eightbengali=2542,e.eightcircle=9319,e.eightcircleinversesansserif=10129,e.eightdeva=2414,e.eighteencircle=9329,e.eighteenparen=9349,e.eighteenperiod=9369,e.eightgujarati=2798,e.eightgurmukhi=2670,e.eighthackarabic=1640,e.eighthangzhou=12328,e.eighthnotebeamed=9835,e.eightideographicparen=12839,e.eightinferior=8328,e.eightmonospace=65304,e.eightoldstyle=63288,e.eightparen=9339,e.eightperiod=9359,e.eightpersian=1784,e.eightroman=8567,e.eightsuperior=8312,e.eightthai=3672,e.einvertedbreve=519,e.eiotifiedcyrillic=1125,e.ekatakana=12456,e.ekatakanahalfwidth=65396,e.ekonkargurmukhi=2676,e.ekorean=12628,e.elcyrillic=1083,e.element=8712,e.elevencircle=9322,e.elevenparen=9342,e.elevenperiod=9362,e.elevenroman=8570,e.ellipsis=8230,e.ellipsisvertical=8942,e.emacron=275,e.emacronacute=7703,e.emacrongrave=7701,e.emcyrillic=1084,e.emdash=8212,e.emdashvertical=65073,e.emonospace=65349,e.emphasismarkarmenian=1371,e.emptyset=8709,e.enbopomofo=12579,e.encyrillic=1085,e.endash=8211,e.endashvertical=65074,e.endescendercyrillic=1187,e.eng=331,e.engbopomofo=12581,e.enghecyrillic=1189,e.enhookcyrillic=1224,e.enspace=8194,e.eogonek=281,e.eokorean=12627,e.eopen=603,e.eopenclosed=666,e.eopenreversed=604,e.eopenreversedclosed=606,e.eopenreversedhook=605,e.eparen=9376,e.epsilon=949,e.epsilontonos=941,e.equal=61,e.equalmonospace=65309,e.equalsmall=65126,e.equalsuperior=8316,e.equivalence=8801,e.erbopomofo=12582,e.ercyrillic=1088,e.ereversed=600,e.ereversedcyrillic=1101,e.escyrillic=1089,e.esdescendercyrillic=1195,e.esh=643,e.eshcurl=646,e.eshortdeva=2318,e.eshortvowelsigndeva=2374,e.eshreversedloop=426,e.eshsquatreversed=645,e.esmallhiragana=12359,e.esmallkatakana=12455,e.esmallkatakanahalfwidth=65386,e.estimated=8494,e.esuperior=63212,e.eta=951,e.etarmenian=1384,e.etatonos=942,e.eth=240,e.etilde=7869,e.etildebelow=7707,e.etnahtafoukhhebrew=1425,e.etnahtafoukhlefthebrew=1425,e.etnahtahebrew=1425,e.etnahtalefthebrew=1425,e.eturned=477,e.eukorean=12641,e.euro=8364,e.evowelsignbengali=2503,e.evowelsigndeva=2375,e.evowelsigngujarati=2759,e.exclam=33,e.exclamarmenian=1372,e.exclamdbl=8252,e.exclamdown=161,e.exclamdownsmall=63393,e.exclammonospace=65281,e.exclamsmall=63265,e.existential=8707,e.ezh=658,e.ezhcaron=495,e.ezhcurl=659,e.ezhreversed=441,e.ezhtail=442,e.f=102,e.fadeva=2398,e.fagurmukhi=2654,e.fahrenheit=8457,e.fathaarabic=1614,e.fathalowarabic=1614,e.fathatanarabic=1611,e.fbopomofo=12552,e.fcircle=9429,e.fdotaccent=7711,e.feharabic=1601,e.feharmenian=1414,e.fehfinalarabic=65234,e.fehinitialarabic=65235,e.fehmedialarabic=65236,e.feicoptic=997,e.female=9792,e.ff=64256,e.f_f=64256,e.ffi=64259,e.ffl=64260,e.fi=64257,e.fifteencircle=9326,e.fifteenparen=9346,e.fifteenperiod=9366,e.figuredash=8210,e.filledbox=9632,e.filledrect=9644,e.finalkaf=1498,e.finalkafdagesh=64314,e.finalkafdageshhebrew=64314,e.finalkafhebrew=1498,e.finalmem=1501,e.finalmemhebrew=1501,e.finalnun=1503,e.finalnunhebrew=1503,e.finalpe=1507,e.finalpehebrew=1507,e.finaltsadi=1509,e.finaltsadihebrew=1509,e.firsttonechinese=713,e.fisheye=9673,e.fitacyrillic=1139,e.five=53,e.fivearabic=1637,e.fivebengali=2539,e.fivecircle=9316,e.fivecircleinversesansserif=10126,e.fivedeva=2411,e.fiveeighths=8541,e.fivegujarati=2795,e.fivegurmukhi=2667,e.fivehackarabic=1637,e.fivehangzhou=12325,e.fiveideographicparen=12836,e.fiveinferior=8325,e.fivemonospace=65301,e.fiveoldstyle=63285,e.fiveparen=9336,e.fiveperiod=9356,e.fivepersian=1781,e.fiveroman=8564,e.fivesuperior=8309,e.fivethai=3669,e.fl=64258,e.florin=402,e.fmonospace=65350,e.fmsquare=13209,e.fofanthai=3615,e.fofathai=3613,e.fongmanthai=3663,e.forall=8704,e.four=52,e.fourarabic=1636,e.fourbengali=2538,e.fourcircle=9315,e.fourcircleinversesansserif=10125,e.fourdeva=2410,e.fourgujarati=2794,e.fourgurmukhi=2666,e.fourhackarabic=1636,e.fourhangzhou=12324,e.fourideographicparen=12835,e.fourinferior=8324,e.fourmonospace=65300,e.fournumeratorbengali=2551,e.fouroldstyle=63284,e.fourparen=9335,e.fourperiod=9355,e.fourpersian=1780,e.fourroman=8563,e.foursuperior=8308,e.fourteencircle=9325,e.fourteenparen=9345,e.fourteenperiod=9365,e.fourthai=3668,e.fourthtonechinese=715,e.fparen=9377,e.fraction=8260,e.franc=8355,e.g=103,e.gabengali=2455,e.gacute=501,e.gadeva=2327,e.gafarabic=1711,e.gaffinalarabic=64403,e.gafinitialarabic=64404,e.gafmedialarabic=64405,e.gagujarati=2711,e.gagurmukhi=2583,e.gahiragana=12364,e.gakatakana=12460,e.gamma=947,e.gammalatinsmall=611,e.gammasuperior=736,e.gangiacoptic=1003,e.gbopomofo=12557,e.gbreve=287,e.gcaron=487,e.gcedilla=291,e.gcircle=9430,e.gcircumflex=285,e.gcommaaccent=291,e.gdot=289,e.gdotaccent=289,e.gecyrillic=1075,e.gehiragana=12370,e.gekatakana=12466,e.geometricallyequal=8785,e.gereshaccenthebrew=1436,e.gereshhebrew=1523,e.gereshmuqdamhebrew=1437,e.germandbls=223,e.gershayimaccenthebrew=1438,e.gershayimhebrew=1524,e.getamark=12307,e.ghabengali=2456,e.ghadarmenian=1394,e.ghadeva=2328,e.ghagujarati=2712,e.ghagurmukhi=2584,e.ghainarabic=1594,e.ghainfinalarabic=65230,e.ghaininitialarabic=65231,e.ghainmedialarabic=65232,e.ghemiddlehookcyrillic=1173,e.ghestrokecyrillic=1171,e.gheupturncyrillic=1169,e.ghhadeva=2394,e.ghhagurmukhi=2650,e.ghook=608,e.ghzsquare=13203,e.gihiragana=12366,e.gikatakana=12462,e.gimarmenian=1379,e.gimel=1490,e.gimeldagesh=64306,e.gimeldageshhebrew=64306,e.gimelhebrew=1490,e.gjecyrillic=1107,e.glottalinvertedstroke=446,e.glottalstop=660,e.glottalstopinverted=662,e.glottalstopmod=704,e.glottalstopreversed=661,e.glottalstopreversedmod=705,e.glottalstopreversedsuperior=740,e.glottalstopstroke=673,e.glottalstopstrokereversed=674,e.gmacron=7713,e.gmonospace=65351,e.gohiragana=12372,e.gokatakana=12468,e.gparen=9378,e.gpasquare=13228,e.gradient=8711,e.grave=96,e.gravebelowcmb=790,e.gravecmb=768,e.gravecomb=768,e.gravedeva=2387,e.gravelowmod=718,e.gravemonospace=65344,e.gravetonecmb=832,e.greater=62,e.greaterequal=8805,e.greaterequalorless=8923,e.greatermonospace=65310,e.greaterorequivalent=8819,e.greaterorless=8823,e.greateroverequal=8807,e.greatersmall=65125,e.gscript=609,e.gstroke=485,e.guhiragana=12368,e.guillemotleft=171,e.guillemotright=187,e.guilsinglleft=8249,e.guilsinglright=8250,e.gukatakana=12464,e.guramusquare=13080,e.gysquare=13257,e.h=104,e.haabkhasiancyrillic=1193,e.haaltonearabic=1729,e.habengali=2489,e.hadescendercyrillic=1203,e.hadeva=2361,e.hagujarati=2745,e.hagurmukhi=2617,e.haharabic=1581,e.hahfinalarabic=65186,e.hahinitialarabic=65187,e.hahiragana=12399,e.hahmedialarabic=65188,e.haitusquare=13098,e.hakatakana=12495,e.hakatakanahalfwidth=65418,e.halantgurmukhi=2637,e.hamzaarabic=1569,e.hamzalowarabic=1569,e.hangulfiller=12644,e.hardsigncyrillic=1098,e.harpoonleftbarbup=8636,e.harpoonrightbarbup=8640,e.hasquare=13258,e.hatafpatah=1458,e.hatafpatah16=1458,e.hatafpatah23=1458,e.hatafpatah2f=1458,e.hatafpatahhebrew=1458,e.hatafpatahnarrowhebrew=1458,e.hatafpatahquarterhebrew=1458,e.hatafpatahwidehebrew=1458,e.hatafqamats=1459,e.hatafqamats1b=1459,e.hatafqamats28=1459,e.hatafqamats34=1459,e.hatafqamatshebrew=1459,e.hatafqamatsnarrowhebrew=1459,e.hatafqamatsquarterhebrew=1459,e.hatafqamatswidehebrew=1459,e.hatafsegol=1457,e.hatafsegol17=1457,e.hatafsegol24=1457,e.hatafsegol30=1457,e.hatafsegolhebrew=1457,e.hatafsegolnarrowhebrew=1457,e.hatafsegolquarterhebrew=1457,e.hatafsegolwidehebrew=1457,e.hbar=295,e.hbopomofo=12559,e.hbrevebelow=7723,e.hcedilla=7721,e.hcircle=9431,e.hcircumflex=293,e.hdieresis=7719,e.hdotaccent=7715,e.hdotbelow=7717,e.he=1492,e.heart=9829,e.heartsuitblack=9829,e.heartsuitwhite=9825,e.hedagesh=64308,e.hedageshhebrew=64308,e.hehaltonearabic=1729,e.heharabic=1607,e.hehebrew=1492,e.hehfinalaltonearabic=64423,e.hehfinalalttwoarabic=65258,e.hehfinalarabic=65258,e.hehhamzaabovefinalarabic=64421,e.hehhamzaaboveisolatedarabic=64420,e.hehinitialaltonearabic=64424,e.hehinitialarabic=65259,e.hehiragana=12408,e.hehmedialaltonearabic=64425,e.hehmedialarabic=65260,e.heiseierasquare=13179,e.hekatakana=12504,e.hekatakanahalfwidth=65421,e.hekutaarusquare=13110,e.henghook=615,e.herutusquare=13113,e.het=1495,e.hethebrew=1495,e.hhook=614,e.hhooksuperior=689,e.hieuhacirclekorean=12923,e.hieuhaparenkorean=12827,e.hieuhcirclekorean=12909,e.hieuhkorean=12622,e.hieuhparenkorean=12813,e.hihiragana=12402,e.hikatakana=12498,e.hikatakanahalfwidth=65419,e.hiriq=1460,e.hiriq14=1460,e.hiriq21=1460,e.hiriq2d=1460,e.hiriqhebrew=1460,e.hiriqnarrowhebrew=1460,e.hiriqquarterhebrew=1460,e.hiriqwidehebrew=1460,e.hlinebelow=7830,e.hmonospace=65352,e.hoarmenian=1392,e.hohipthai=3627,e.hohiragana=12411,e.hokatakana=12507,e.hokatakanahalfwidth=65422,e.holam=1465,e.holam19=1465,e.holam26=1465,e.holam32=1465,e.holamhebrew=1465,e.holamnarrowhebrew=1465,e.holamquarterhebrew=1465,e.holamwidehebrew=1465,e.honokhukthai=3630,e.hookabovecomb=777,e.hookcmb=777,e.hookpalatalizedbelowcmb=801,e.hookretroflexbelowcmb=802,e.hoonsquare=13122,e.horicoptic=1001,e.horizontalbar=8213,e.horncmb=795,e.hotsprings=9832,e.house=8962,e.hparen=9379,e.hsuperior=688,e.hturned=613,e.huhiragana=12405,e.huiitosquare=13107,e.hukatakana=12501,e.hukatakanahalfwidth=65420,e.hungarumlaut=733,e.hungarumlautcmb=779,e.hv=405,e.hyphen=45,e.hypheninferior=63205,e.hyphenmonospace=65293,e.hyphensmall=65123,e.hyphensuperior=63206,e.hyphentwo=8208,e.i=105,e.iacute=237,e.iacyrillic=1103,e.ibengali=2439,e.ibopomofo=12583,e.ibreve=301,e.icaron=464,e.icircle=9432,e.icircumflex=238,e.icyrillic=1110,e.idblgrave=521,e.ideographearthcircle=12943,e.ideographfirecircle=12939,e.ideographicallianceparen=12863,e.ideographiccallparen=12858,e.ideographiccentrecircle=12965,e.ideographicclose=12294,e.ideographiccomma=12289,e.ideographiccommaleft=65380,e.ideographiccongratulationparen=12855,e.ideographiccorrectcircle=12963,e.ideographicearthparen=12847,e.ideographicenterpriseparen=12861,e.ideographicexcellentcircle=12957,e.ideographicfestivalparen=12864,e.ideographicfinancialcircle=12950,e.ideographicfinancialparen=12854,e.ideographicfireparen=12843,e.ideographichaveparen=12850,e.ideographichighcircle=12964,e.ideographiciterationmark=12293,e.ideographiclaborcircle=12952,e.ideographiclaborparen=12856,e.ideographicleftcircle=12967,e.ideographiclowcircle=12966,e.ideographicmedicinecircle=12969,e.ideographicmetalparen=12846,e.ideographicmoonparen=12842,e.ideographicnameparen=12852,e.ideographicperiod=12290,e.ideographicprintcircle=12958,e.ideographicreachparen=12867,e.ideographicrepresentparen=12857,e.ideographicresourceparen=12862,e.ideographicrightcircle=12968,e.ideographicsecretcircle=12953,e.ideographicselfparen=12866,e.ideographicsocietyparen=12851,e.ideographicspace=12288,e.ideographicspecialparen=12853,e.ideographicstockparen=12849,e.ideographicstudyparen=12859,e.ideographicsunparen=12848,e.ideographicsuperviseparen=12860,e.ideographicwaterparen=12844,e.ideographicwoodparen=12845,e.ideographiczero=12295,e.ideographmetalcircle=12942,e.ideographmooncircle=12938,e.ideographnamecircle=12948,e.ideographsuncircle=12944,e.ideographwatercircle=12940,e.ideographwoodcircle=12941,e.ideva=2311,e.idieresis=239,e.idieresisacute=7727,e.idieresiscyrillic=1253,e.idotbelow=7883,e.iebrevecyrillic=1239,e.iecyrillic=1077,e.ieungacirclekorean=12917,e.ieungaparenkorean=12821,e.ieungcirclekorean=12903,e.ieungkorean=12615,e.ieungparenkorean=12807,e.igrave=236,e.igujarati=2695,e.igurmukhi=2567,e.ihiragana=12356,e.ihookabove=7881,e.iibengali=2440,e.iicyrillic=1080,e.iideva=2312,e.iigujarati=2696,e.iigurmukhi=2568,e.iimatragurmukhi=2624,e.iinvertedbreve=523,e.iishortcyrillic=1081,e.iivowelsignbengali=2496,e.iivowelsigndeva=2368,e.iivowelsigngujarati=2752,e.ij=307,e.ikatakana=12452,e.ikatakanahalfwidth=65394,e.ikorean=12643,e.ilde=732,e.iluyhebrew=1452,e.imacron=299,e.imacroncyrillic=1251,e.imageorapproximatelyequal=8787,e.imatragurmukhi=2623,e.imonospace=65353,e.increment=8710,e.infinity=8734,e.iniarmenian=1387,e.integral=8747,e.integralbottom=8993,e.integralbt=8993,e.integralex=63733,e.integraltop=8992,e.integraltp=8992,e.intersection=8745,e.intisquare=13061,e.invbullet=9688,e.invcircle=9689,e.invsmileface=9787,e.iocyrillic=1105,e.iogonek=303,e.iota=953,e.iotadieresis=970,e.iotadieresistonos=912,e.iotalatin=617,e.iotatonos=943,e.iparen=9380,e.irigurmukhi=2674,e.ismallhiragana=12355,e.ismallkatakana=12451,e.ismallkatakanahalfwidth=65384,e.issharbengali=2554,e.istroke=616,e.isuperior=63213,e.iterationhiragana=12445,e.iterationkatakana=12541,e.itilde=297,e.itildebelow=7725,e.iubopomofo=12585,e.iucyrillic=1102,e.ivowelsignbengali=2495,e.ivowelsigndeva=2367,e.ivowelsigngujarati=2751,e.izhitsacyrillic=1141,e.izhitsadblgravecyrillic=1143,e.j=106,e.jaarmenian=1393,e.jabengali=2460,e.jadeva=2332,e.jagujarati=2716,e.jagurmukhi=2588,e.jbopomofo=12560,e.jcaron=496,e.jcircle=9433,e.jcircumflex=309,e.jcrossedtail=669,e.jdotlessstroke=607,e.jecyrillic=1112,e.jeemarabic=1580,e.jeemfinalarabic=65182,e.jeeminitialarabic=65183,e.jeemmedialarabic=65184,e.jeharabic=1688,e.jehfinalarabic=64395,e.jhabengali=2461,e.jhadeva=2333,e.jhagujarati=2717,e.jhagurmukhi=2589,e.jheharmenian=1403,e.jis=12292,e.jmonospace=65354,e.jparen=9381,e.jsuperior=690,e.k=107,e.kabashkircyrillic=1185,e.kabengali=2453,e.kacute=7729,e.kacyrillic=1082,e.kadescendercyrillic=1179,e.kadeva=2325,e.kaf=1499,e.kafarabic=1603,e.kafdagesh=64315,e.kafdageshhebrew=64315,e.kaffinalarabic=65242,e.kafhebrew=1499,e.kafinitialarabic=65243,e.kafmedialarabic=65244,e.kafrafehebrew=64333,e.kagujarati=2709,e.kagurmukhi=2581,e.kahiragana=12363,e.kahookcyrillic=1220,e.kakatakana=12459,e.kakatakanahalfwidth=65398,e.kappa=954,e.kappasymbolgreek=1008,e.kapyeounmieumkorean=12657,e.kapyeounphieuphkorean=12676,e.kapyeounpieupkorean=12664,e.kapyeounssangpieupkorean=12665,e.karoriisquare=13069,e.kashidaautoarabic=1600,e.kashidaautonosidebearingarabic=1600,e.kasmallkatakana=12533,e.kasquare=13188,e.kasraarabic=1616,e.kasratanarabic=1613,e.kastrokecyrillic=1183,e.katahiraprolongmarkhalfwidth=65392,e.kaverticalstrokecyrillic=1181,e.kbopomofo=12558,e.kcalsquare=13193,e.kcaron=489,e.kcedilla=311,e.kcircle=9434,e.kcommaaccent=311,e.kdotbelow=7731,e.keharmenian=1412,e.kehiragana=12369,e.kekatakana=12465,e.kekatakanahalfwidth=65401,e.kenarmenian=1391,e.kesmallkatakana=12534,e.kgreenlandic=312,e.khabengali=2454,e.khacyrillic=1093,e.khadeva=2326,e.khagujarati=2710,e.khagurmukhi=2582,e.khaharabic=1582,e.khahfinalarabic=65190,e.khahinitialarabic=65191,e.khahmedialarabic=65192,e.kheicoptic=999,e.khhadeva=2393,e.khhagurmukhi=2649,e.khieukhacirclekorean=12920,e.khieukhaparenkorean=12824,e.khieukhcirclekorean=12906,e.khieukhkorean=12619,e.khieukhparenkorean=12810,e.khokhaithai=3586,e.khokhonthai=3589,e.khokhuatthai=3587,e.khokhwaithai=3588,e.khomutthai=3675,e.khook=409,e.khorakhangthai=3590,e.khzsquare=13201,e.kihiragana=12365,e.kikatakana=12461,e.kikatakanahalfwidth=65399,e.kiroguramusquare=13077,e.kiromeetorusquare=13078,e.kirosquare=13076,e.kiyeokacirclekorean=12910,e.kiyeokaparenkorean=12814,e.kiyeokcirclekorean=12896,e.kiyeokkorean=12593,e.kiyeokparenkorean=12800,e.kiyeoksioskorean=12595,e.kjecyrillic=1116,e.klinebelow=7733,e.klsquare=13208,e.kmcubedsquare=13222;e.kmonospace=65355,e.kmsquaredsquare=13218,e.kohiragana=12371,e.kohmsquare=13248,e.kokaithai=3585,e.kokatakana=12467,e.kokatakanahalfwidth=65402,e.kooposquare=13086,e.koppacyrillic=1153,e.koreanstandardsymbol=12927,e.koroniscmb=835,e.kparen=9382,e.kpasquare=13226,e.ksicyrillic=1135,e.ktsquare=13263,e.kturned=670,e.kuhiragana=12367,e.kukatakana=12463,e.kukatakanahalfwidth=65400,e.kvsquare=13240,e.kwsquare=13246,e.l=108,e.labengali=2482,e.lacute=314,e.ladeva=2354,e.lagujarati=2738,e.lagurmukhi=2610,e.lakkhangyaothai=3653,e.lamaleffinalarabic=65276,e.lamalefhamzaabovefinalarabic=65272,e.lamalefhamzaaboveisolatedarabic=65271,e.lamalefhamzabelowfinalarabic=65274,e.lamalefhamzabelowisolatedarabic=65273,e.lamalefisolatedarabic=65275,e.lamalefmaddaabovefinalarabic=65270,e.lamalefmaddaaboveisolatedarabic=65269,e.lamarabic=1604,e.lambda=955,e.lambdastroke=411,e.lamed=1500,e.lameddagesh=64316,e.lameddageshhebrew=64316,e.lamedhebrew=1500,e.lamfinalarabic=65246,e.lamhahinitialarabic=64714,e.laminitialarabic=65247,e.lamjeeminitialarabic=64713,e.lamkhahinitialarabic=64715,e.lamlamhehisolatedarabic=65010,e.lammedialarabic=65248,e.lammeemhahinitialarabic=64904,e.lammeeminitialarabic=64716,e.largecircle=9711,e.lbar=410,e.lbelt=620,e.lbopomofo=12556,e.lcaron=318,e.lcedilla=316,e.lcircle=9435,e.lcircumflexbelow=7741,e.lcommaaccent=316,e.ldot=320,e.ldotaccent=320,e.ldotbelow=7735,e.ldotbelowmacron=7737,e.leftangleabovecmb=794,e.lefttackbelowcmb=792,e.less=60,e.lessequal=8804,e.lessequalorgreater=8922,e.lessmonospace=65308,e.lessorequivalent=8818,e.lessorgreater=8822,e.lessoverequal=8806,e.lesssmall=65124,e.lezh=622,e.lfblock=9612,e.lhookretroflex=621,e.lira=8356,e.liwnarmenian=1388,e.lj=457,e.ljecyrillic=1113,e.ll=63168,e.lladeva=2355,e.llagujarati=2739,e.llinebelow=7739,e.llladeva=2356,e.llvocalicbengali=2529,e.llvocalicdeva=2401,e.llvocalicvowelsignbengali=2531,e.llvocalicvowelsigndeva=2403,e.lmiddletilde=619,e.lmonospace=65356,e.lmsquare=13264,e.lochulathai=3628,e.logicaland=8743,e.logicalnot=172,e.logicalnotreversed=8976,e.logicalor=8744,e.lolingthai=3621,e.longs=383,e.lowlinecenterline=65102,e.lowlinecmb=818,e.lowlinedashed=65101,e.lozenge=9674,e.lparen=9383,e.lslash=322,e.lsquare=8467,e.lsuperior=63214,e.ltshade=9617,e.luthai=3622,e.lvocalicbengali=2444,e.lvocalicdeva=2316,e.lvocalicvowelsignbengali=2530,e.lvocalicvowelsigndeva=2402,e.lxsquare=13267,e.m=109,e.mabengali=2478,e.macron=175,e.macronbelowcmb=817,e.macroncmb=772,e.macronlowmod=717,e.macronmonospace=65507,e.macute=7743,e.madeva=2350,e.magujarati=2734,e.magurmukhi=2606,e.mahapakhhebrew=1444,e.mahapakhlefthebrew=1444,e.mahiragana=12414,e.maichattawalowleftthai=63637,e.maichattawalowrightthai=63636,e.maichattawathai=3659,e.maichattawaupperleftthai=63635,e.maieklowleftthai=63628,e.maieklowrightthai=63627,e.maiekthai=3656,e.maiekupperleftthai=63626,e.maihanakatleftthai=63620,e.maihanakatthai=3633,e.maitaikhuleftthai=63625,e.maitaikhuthai=3655,e.maitholowleftthai=63631,e.maitholowrightthai=63630,e.maithothai=3657,e.maithoupperleftthai=63629,e.maitrilowleftthai=63634,e.maitrilowrightthai=63633,e.maitrithai=3658,e.maitriupperleftthai=63632,e.maiyamokthai=3654,e.makatakana=12510,e.makatakanahalfwidth=65423,e.male=9794,e.mansyonsquare=13127,e.maqafhebrew=1470,e.mars=9794,e.masoracirclehebrew=1455,e.masquare=13187,e.mbopomofo=12551,e.mbsquare=13268,e.mcircle=9436,e.mcubedsquare=13221,e.mdotaccent=7745,e.mdotbelow=7747,e.meemarabic=1605,e.meemfinalarabic=65250,e.meeminitialarabic=65251,e.meemmedialarabic=65252,e.meemmeeminitialarabic=64721,e.meemmeemisolatedarabic=64584,e.meetorusquare=13133,e.mehiragana=12417,e.meizierasquare=13182,e.mekatakana=12513,e.mekatakanahalfwidth=65426,e.mem=1502,e.memdagesh=64318,e.memdageshhebrew=64318,e.memhebrew=1502,e.menarmenian=1396,e.merkhahebrew=1445,e.merkhakefulahebrew=1446,e.merkhakefulalefthebrew=1446,e.merkhalefthebrew=1445,e.mhook=625,e.mhzsquare=13202,e.middledotkatakanahalfwidth=65381,e.middot=183,e.mieumacirclekorean=12914,e.mieumaparenkorean=12818,e.mieumcirclekorean=12900,e.mieumkorean=12609,e.mieumpansioskorean=12656,e.mieumparenkorean=12804,e.mieumpieupkorean=12654,e.mieumsioskorean=12655,e.mihiragana=12415,e.mikatakana=12511,e.mikatakanahalfwidth=65424,e.minus=8722,e.minusbelowcmb=800,e.minuscircle=8854,e.minusmod=727,e.minusplus=8723,e.minute=8242,e.miribaarusquare=13130,e.mirisquare=13129,e.mlonglegturned=624,e.mlsquare=13206,e.mmcubedsquare=13219,e.mmonospace=65357,e.mmsquaredsquare=13215,e.mohiragana=12418,e.mohmsquare=13249,e.mokatakana=12514,e.mokatakanahalfwidth=65427,e.molsquare=13270,e.momathai=3617,e.moverssquare=13223,e.moverssquaredsquare=13224,e.mparen=9384,e.mpasquare=13227,e.mssquare=13235,e.msuperior=63215,e.mturned=623,e.mu=181,e.mu1=181,e.muasquare=13186,e.muchgreater=8811,e.muchless=8810,e.mufsquare=13196,e.mugreek=956,e.mugsquare=13197,e.muhiragana=12416,e.mukatakana=12512,e.mukatakanahalfwidth=65425,e.mulsquare=13205,e.multiply=215,e.mumsquare=13211,e.munahhebrew=1443,e.munahlefthebrew=1443,e.musicalnote=9834,e.musicalnotedbl=9835,e.musicflatsign=9837,e.musicsharpsign=9839,e.mussquare=13234,e.muvsquare=13238,e.muwsquare=13244,e.mvmegasquare=13241,e.mvsquare=13239,e.mwmegasquare=13247,e.mwsquare=13245,e.n=110,e.nabengali=2472,e.nabla=8711,e.nacute=324,e.nadeva=2344,e.nagujarati=2728,e.nagurmukhi=2600,e.nahiragana=12394,e.nakatakana=12490,e.nakatakanahalfwidth=65413,e.napostrophe=329,e.nasquare=13185,e.nbopomofo=12555,e.nbspace=160,e.ncaron=328,e.ncedilla=326,e.ncircle=9437,e.ncircumflexbelow=7755,e.ncommaaccent=326,e.ndotaccent=7749,e.ndotbelow=7751,e.nehiragana=12397,e.nekatakana=12493,e.nekatakanahalfwidth=65416,e.newsheqelsign=8362,e.nfsquare=13195,e.ngabengali=2457,e.ngadeva=2329,e.ngagujarati=2713,e.ngagurmukhi=2585,e.ngonguthai=3591,e.nhiragana=12435,e.nhookleft=626,e.nhookretroflex=627,e.nieunacirclekorean=12911,e.nieunaparenkorean=12815,e.nieuncieuckorean=12597,e.nieuncirclekorean=12897,e.nieunhieuhkorean=12598,e.nieunkorean=12596,e.nieunpansioskorean=12648,e.nieunparenkorean=12801,e.nieunsioskorean=12647,e.nieuntikeutkorean=12646,e.nihiragana=12395,e.nikatakana=12491,e.nikatakanahalfwidth=65414,e.nikhahitleftthai=63641,e.nikhahitthai=3661,e.nine=57,e.ninearabic=1641,e.ninebengali=2543,e.ninecircle=9320,e.ninecircleinversesansserif=10130,e.ninedeva=2415,e.ninegujarati=2799,e.ninegurmukhi=2671,e.ninehackarabic=1641,e.ninehangzhou=12329,e.nineideographicparen=12840,e.nineinferior=8329,e.ninemonospace=65305,e.nineoldstyle=63289,e.nineparen=9340,e.nineperiod=9360,e.ninepersian=1785,e.nineroman=8568,e.ninesuperior=8313,e.nineteencircle=9330,e.nineteenparen=9350,e.nineteenperiod=9370,e.ninethai=3673,e.nj=460,e.njecyrillic=1114,e.nkatakana=12531,e.nkatakanahalfwidth=65437,e.nlegrightlong=414,e.nlinebelow=7753,e.nmonospace=65358,e.nmsquare=13210,e.nnabengali=2467,e.nnadeva=2339,e.nnagujarati=2723,e.nnagurmukhi=2595,e.nnnadeva=2345,e.nohiragana=12398,e.nokatakana=12494,e.nokatakanahalfwidth=65417,e.nonbreakingspace=160,e.nonenthai=3603,e.nonuthai=3609,e.noonarabic=1606,e.noonfinalarabic=65254,e.noonghunnaarabic=1722,e.noonghunnafinalarabic=64415,e.nooninitialarabic=65255,e.noonjeeminitialarabic=64722,e.noonjeemisolatedarabic=64587,e.noonmedialarabic=65256,e.noonmeeminitialarabic=64725,e.noonmeemisolatedarabic=64590,e.noonnoonfinalarabic=64653,e.notcontains=8716,e.notelement=8713,e.notelementof=8713,e.notequal=8800,e.notgreater=8815,e.notgreaternorequal=8817,e.notgreaternorless=8825,e.notidentical=8802,e.notless=8814,e.notlessnorequal=8816,e.notparallel=8742,e.notprecedes=8832,e.notsubset=8836,e.notsucceeds=8833,e.notsuperset=8837,e.nowarmenian=1398,e.nparen=9385,e.nssquare=13233,e.nsuperior=8319,e.ntilde=241,e.nu=957,e.nuhiragana=12396,e.nukatakana=12492,e.nukatakanahalfwidth=65415,e.nuktabengali=2492,e.nuktadeva=2364,e.nuktagujarati=2748,e.nuktagurmukhi=2620,e.numbersign=35,e.numbersignmonospace=65283,e.numbersignsmall=65119,e.numeralsigngreek=884,e.numeralsignlowergreek=885,e.numero=8470,e.nun=1504,e.nundagesh=64320,e.nundageshhebrew=64320,e.nunhebrew=1504,e.nvsquare=13237,e.nwsquare=13243,e.nyabengali=2462,e.nyadeva=2334,e.nyagujarati=2718,e.nyagurmukhi=2590,e.o=111,e.oacute=243,e.oangthai=3629,e.obarred=629,e.obarredcyrillic=1257,e.obarreddieresiscyrillic=1259,e.obengali=2451,e.obopomofo=12571,e.obreve=335,e.ocandradeva=2321,e.ocandragujarati=2705,e.ocandravowelsigndeva=2377,e.ocandravowelsigngujarati=2761,e.ocaron=466,e.ocircle=9438,e.ocircumflex=244,e.ocircumflexacute=7889,e.ocircumflexdotbelow=7897,e.ocircumflexgrave=7891,e.ocircumflexhookabove=7893,e.ocircumflextilde=7895,e.ocyrillic=1086,e.odblacute=337,e.odblgrave=525,e.odeva=2323,e.odieresis=246,e.odieresiscyrillic=1255,e.odotbelow=7885,e.oe=339,e.oekorean=12634,e.ogonek=731,e.ogonekcmb=808,e.ograve=242,e.ogujarati=2707,e.oharmenian=1413,e.ohiragana=12362,e.ohookabove=7887,e.ohorn=417,e.ohornacute=7899,e.ohorndotbelow=7907,e.ohorngrave=7901,e.ohornhookabove=7903,e.ohorntilde=7905,e.ohungarumlaut=337,e.oi=419,e.oinvertedbreve=527,e.okatakana=12458,e.okatakanahalfwidth=65397,e.okorean=12631,e.olehebrew=1451,e.omacron=333,e.omacronacute=7763,e.omacrongrave=7761,e.omdeva=2384,e.omega=969,e.omega1=982,e.omegacyrillic=1121,e.omegalatinclosed=631,e.omegaroundcyrillic=1147,e.omegatitlocyrillic=1149,e.omegatonos=974,e.omgujarati=2768,e.omicron=959,e.omicrontonos=972,e.omonospace=65359,e.one=49,e.onearabic=1633,e.onebengali=2535,e.onecircle=9312,e.onecircleinversesansserif=10122,e.onedeva=2407,e.onedotenleader=8228,e.oneeighth=8539,e.onefitted=63196,e.onegujarati=2791,e.onegurmukhi=2663,e.onehackarabic=1633,e.onehalf=189,e.onehangzhou=12321,e.oneideographicparen=12832,e.oneinferior=8321,e.onemonospace=65297,e.onenumeratorbengali=2548,e.oneoldstyle=63281,e.oneparen=9332,e.oneperiod=9352,e.onepersian=1777,e.onequarter=188,e.oneroman=8560,e.onesuperior=185,e.onethai=3665,e.onethird=8531,e.oogonek=491,e.oogonekmacron=493,e.oogurmukhi=2579,e.oomatragurmukhi=2635,e.oopen=596,e.oparen=9386,e.openbullet=9702,e.option=8997,e.ordfeminine=170,e.ordmasculine=186,e.orthogonal=8735,e.oshortdeva=2322,e.oshortvowelsigndeva=2378,e.oslash=248,e.oslashacute=511,e.osmallhiragana=12361,e.osmallkatakana=12457,e.osmallkatakanahalfwidth=65387,e.ostrokeacute=511,e.osuperior=63216,e.otcyrillic=1151,e.otilde=245,e.otildeacute=7757,e.otildedieresis=7759,e.oubopomofo=12577,e.overline=8254,e.overlinecenterline=65098,e.overlinecmb=773,e.overlinedashed=65097,e.overlinedblwavy=65100,e.overlinewavy=65099,e.overscore=175,e.ovowelsignbengali=2507,e.ovowelsigndeva=2379,e.ovowelsigngujarati=2763,e.p=112,e.paampssquare=13184,e.paasentosquare=13099,e.pabengali=2474,e.pacute=7765,e.padeva=2346,e.pagedown=8671,e.pageup=8670,e.pagujarati=2730,e.pagurmukhi=2602,e.pahiragana=12401,e.paiyannoithai=3631,e.pakatakana=12497,e.palatalizationcyrilliccmb=1156,e.palochkacyrillic=1216,e.pansioskorean=12671,e.paragraph=182,e.parallel=8741,e.parenleft=40,e.parenleftaltonearabic=64830,e.parenleftbt=63725,e.parenleftex=63724,e.parenleftinferior=8333,e.parenleftmonospace=65288,e.parenleftsmall=65113,e.parenleftsuperior=8317,e.parenlefttp=63723,e.parenleftvertical=65077,e.parenright=41,e.parenrightaltonearabic=64831,e.parenrightbt=63736,e.parenrightex=63735,e.parenrightinferior=8334,e.parenrightmonospace=65289,e.parenrightsmall=65114,e.parenrightsuperior=8318,e.parenrighttp=63734,e.parenrightvertical=65078,e.partialdiff=8706,e.paseqhebrew=1472,e.pashtahebrew=1433,e.pasquare=13225,e.patah=1463,e.patah11=1463,e.patah1d=1463,e.patah2a=1463,e.patahhebrew=1463,e.patahnarrowhebrew=1463,e.patahquarterhebrew=1463,e.patahwidehebrew=1463,e.pazerhebrew=1441,e.pbopomofo=12550,e.pcircle=9439,e.pdotaccent=7767,e.pe=1508,e.pecyrillic=1087,e.pedagesh=64324,e.pedageshhebrew=64324,e.peezisquare=13115,e.pefinaldageshhebrew=64323,e.peharabic=1662,e.peharmenian=1402,e.pehebrew=1508,e.pehfinalarabic=64343,e.pehinitialarabic=64344,e.pehiragana=12410,e.pehmedialarabic=64345,e.pekatakana=12506,e.pemiddlehookcyrillic=1191,e.perafehebrew=64334,e.percent=37,e.percentarabic=1642,e.percentmonospace=65285,e.percentsmall=65130,e.period=46,e.periodarmenian=1417,e.periodcentered=183,e.periodhalfwidth=65377,e.periodinferior=63207,e.periodmonospace=65294,e.periodsmall=65106,e.periodsuperior=63208,e.perispomenigreekcmb=834,e.perpendicular=8869,e.perthousand=8240,e.peseta=8359,e.pfsquare=13194,e.phabengali=2475,e.phadeva=2347,e.phagujarati=2731,e.phagurmukhi=2603,e.phi=966,e.phi1=981,e.phieuphacirclekorean=12922,e.phieuphaparenkorean=12826,e.phieuphcirclekorean=12908,e.phieuphkorean=12621,e.phieuphparenkorean=12812,e.philatin=632,e.phinthuthai=3642,e.phisymbolgreek=981,e.phook=421,e.phophanthai=3614,e.phophungthai=3612,e.phosamphaothai=3616,e.pi=960,e.pieupacirclekorean=12915,e.pieupaparenkorean=12819,e.pieupcieuckorean=12662,e.pieupcirclekorean=12901,e.pieupkiyeokkorean=12658,e.pieupkorean=12610,e.pieupparenkorean=12805,e.pieupsioskiyeokkorean=12660,e.pieupsioskorean=12612,e.pieupsiostikeutkorean=12661,e.pieupthieuthkorean=12663,e.pieuptikeutkorean=12659,e.pihiragana=12404,e.pikatakana=12500,e.pisymbolgreek=982,e.piwrarmenian=1411,e.plus=43,e.plusbelowcmb=799,e.pluscircle=8853,e.plusminus=177,e.plusmod=726,e.plusmonospace=65291,e.plussmall=65122,e.plussuperior=8314,e.pmonospace=65360,e.pmsquare=13272,e.pohiragana=12413,e.pointingindexdownwhite=9759,e.pointingindexleftwhite=9756,e.pointingindexrightwhite=9758,e.pointingindexupwhite=9757,e.pokatakana=12509,e.poplathai=3611,e.postalmark=12306,e.postalmarkface=12320,e.pparen=9387,e.precedes=8826,e.prescription=8478,e.primemod=697,e.primereversed=8245,e.product=8719,e.projective=8965,e.prolongedkana=12540,e.propellor=8984,e.propersubset=8834,e.propersuperset=8835,e.proportion=8759,e.proportional=8733,e.psi=968,e.psicyrillic=1137,e.psilipneumatacyrilliccmb=1158,e.pssquare=13232,e.puhiragana=12407,e.pukatakana=12503,e.pvsquare=13236,e.pwsquare=13242,e.q=113,e.qadeva=2392,e.qadmahebrew=1448,e.qafarabic=1602,e.qaffinalarabic=65238,e.qafinitialarabic=65239,e.qafmedialarabic=65240,e.qamats=1464,e.qamats10=1464,e.qamats1a=1464,e.qamats1c=1464,e.qamats27=1464,e.qamats29=1464,e.qamats33=1464,e.qamatsde=1464,e.qamatshebrew=1464,e.qamatsnarrowhebrew=1464,e.qamatsqatanhebrew=1464,e.qamatsqatannarrowhebrew=1464,e.qamatsqatanquarterhebrew=1464,e.qamatsqatanwidehebrew=1464,e.qamatsquarterhebrew=1464,e.qamatswidehebrew=1464,e.qarneyparahebrew=1439,e.qbopomofo=12561,e.qcircle=9440,e.qhook=672,e.qmonospace=65361,e.qof=1511,e.qofdagesh=64327,e.qofdageshhebrew=64327,e.qofhebrew=1511,e.qparen=9388,e.quarternote=9833,e.qubuts=1467,e.qubuts18=1467,e.qubuts25=1467,e.qubuts31=1467,e.qubutshebrew=1467,e.qubutsnarrowhebrew=1467,e.qubutsquarterhebrew=1467,e.qubutswidehebrew=1467,e.question=63,e.questionarabic=1567,e.questionarmenian=1374,e.questiondown=191,e.questiondownsmall=63423,e.questiongreek=894,e.questionmonospace=65311,e.questionsmall=63295,e.quotedbl=34,e.quotedblbase=8222,e.quotedblleft=8220,e.quotedblmonospace=65282,e.quotedblprime=12318,e.quotedblprimereversed=12317,e.quotedblright=8221,e.quoteleft=8216,e.quoteleftreversed=8219,e.quotereversed=8219,e.quoteright=8217,e.quoterightn=329,e.quotesinglbase=8218,e.quotesingle=39,e.quotesinglemonospace=65287,e.r=114,e.raarmenian=1404,e.rabengali=2480,e.racute=341,e.radeva=2352,e.radical=8730,e.radicalex=63717,e.radoverssquare=13230,e.radoverssquaredsquare=13231,e.radsquare=13229,e.rafe=1471,e.rafehebrew=1471,e.ragujarati=2736,e.ragurmukhi=2608,e.rahiragana=12425,e.rakatakana=12521,e.rakatakanahalfwidth=65431,e.ralowerdiagonalbengali=2545,e.ramiddlediagonalbengali=2544,e.ramshorn=612,e.ratio=8758,e.rbopomofo=12566,e.rcaron=345,e.rcedilla=343,e.rcircle=9441,e.rcommaaccent=343,e.rdblgrave=529,e.rdotaccent=7769,e.rdotbelow=7771,e.rdotbelowmacron=7773,e.referencemark=8251,e.reflexsubset=8838,e.reflexsuperset=8839,e.registered=174,e.registersans=63720,e.registerserif=63194,e.reharabic=1585,e.reharmenian=1408,e.rehfinalarabic=65198,e.rehiragana=12428,e.rekatakana=12524,e.rekatakanahalfwidth=65434,e.resh=1512,e.reshdageshhebrew=64328,e.reshhebrew=1512,e.reversedtilde=8765,e.reviahebrew=1431;e.reviamugrashhebrew=1431,e.revlogicalnot=8976,e.rfishhook=638,e.rfishhookreversed=639,e.rhabengali=2525,e.rhadeva=2397,e.rho=961,e.rhook=637,e.rhookturned=635,e.rhookturnedsuperior=693,e.rhosymbolgreek=1009,e.rhotichookmod=734,e.rieulacirclekorean=12913,e.rieulaparenkorean=12817,e.rieulcirclekorean=12899,e.rieulhieuhkorean=12608,e.rieulkiyeokkorean=12602,e.rieulkiyeoksioskorean=12649,e.rieulkorean=12601,e.rieulmieumkorean=12603,e.rieulpansioskorean=12652,e.rieulparenkorean=12803,e.rieulphieuphkorean=12607,e.rieulpieupkorean=12604,e.rieulpieupsioskorean=12651,e.rieulsioskorean=12605,e.rieulthieuthkorean=12606,e.rieultikeutkorean=12650,e.rieulyeorinhieuhkorean=12653,e.rightangle=8735,e.righttackbelowcmb=793,e.righttriangle=8895,e.rihiragana=12426,e.rikatakana=12522,e.rikatakanahalfwidth=65432,e.ring=730,e.ringbelowcmb=805,e.ringcmb=778,e.ringhalfleft=703,e.ringhalfleftarmenian=1369,e.ringhalfleftbelowcmb=796,e.ringhalfleftcentered=723,e.ringhalfright=702,e.ringhalfrightbelowcmb=825,e.ringhalfrightcentered=722,e.rinvertedbreve=531,e.rittorusquare=13137,e.rlinebelow=7775,e.rlongleg=636,e.rlonglegturned=634,e.rmonospace=65362,e.rohiragana=12429,e.rokatakana=12525,e.rokatakanahalfwidth=65435,e.roruathai=3619,e.rparen=9389,e.rrabengali=2524,e.rradeva=2353,e.rragurmukhi=2652,e.rreharabic=1681,e.rrehfinalarabic=64397,e.rrvocalicbengali=2528,e.rrvocalicdeva=2400,e.rrvocalicgujarati=2784,e.rrvocalicvowelsignbengali=2500,e.rrvocalicvowelsigndeva=2372,e.rrvocalicvowelsigngujarati=2756,e.rsuperior=63217,e.rtblock=9616,e.rturned=633,e.rturnedsuperior=692,e.ruhiragana=12427,e.rukatakana=12523,e.rukatakanahalfwidth=65433,e.rupeemarkbengali=2546,e.rupeesignbengali=2547,e.rupiah=63197,e.ruthai=3620,e.rvocalicbengali=2443,e.rvocalicdeva=2315,e.rvocalicgujarati=2699,e.rvocalicvowelsignbengali=2499,e.rvocalicvowelsigndeva=2371,e.rvocalicvowelsigngujarati=2755,e.s=115,e.sabengali=2488,e.sacute=347,e.sacutedotaccent=7781,e.sadarabic=1589,e.sadeva=2360,e.sadfinalarabic=65210,e.sadinitialarabic=65211,e.sadmedialarabic=65212,e.sagujarati=2744,e.sagurmukhi=2616,e.sahiragana=12373,e.sakatakana=12469,e.sakatakanahalfwidth=65403,e.sallallahoualayhewasallamarabic=65018,e.samekh=1505,e.samekhdagesh=64321,e.samekhdageshhebrew=64321,e.samekhhebrew=1505,e.saraaathai=3634,e.saraaethai=3649,e.saraaimaimalaithai=3652,e.saraaimaimuanthai=3651,e.saraamthai=3635,e.saraathai=3632,e.saraethai=3648,e.saraiileftthai=63622,e.saraiithai=3637,e.saraileftthai=63621,e.saraithai=3636,e.saraothai=3650,e.saraueeleftthai=63624,e.saraueethai=3639,e.saraueleftthai=63623,e.sarauethai=3638,e.sarauthai=3640,e.sarauuthai=3641,e.sbopomofo=12569,e.scaron=353,e.scarondotaccent=7783,e.scedilla=351,e.schwa=601,e.schwacyrillic=1241,e.schwadieresiscyrillic=1243,e.schwahook=602,e.scircle=9442,e.scircumflex=349,e.scommaaccent=537,e.sdotaccent=7777,e.sdotbelow=7779,e.sdotbelowdotaccent=7785,e.seagullbelowcmb=828,e.second=8243,e.secondtonechinese=714,e.section=167,e.seenarabic=1587,e.seenfinalarabic=65202,e.seeninitialarabic=65203,e.seenmedialarabic=65204,e.segol=1462,e.segol13=1462,e.segol1f=1462,e.segol2c=1462,e.segolhebrew=1462,e.segolnarrowhebrew=1462,e.segolquarterhebrew=1462,e.segoltahebrew=1426,e.segolwidehebrew=1462,e.seharmenian=1405,e.sehiragana=12379,e.sekatakana=12475,e.sekatakanahalfwidth=65406,e.semicolon=59,e.semicolonarabic=1563,e.semicolonmonospace=65307,e.semicolonsmall=65108,e.semivoicedmarkkana=12444,e.semivoicedmarkkanahalfwidth=65439,e.sentisquare=13090,e.sentosquare=13091,e.seven=55,e.sevenarabic=1639,e.sevenbengali=2541,e.sevencircle=9318,e.sevencircleinversesansserif=10128,e.sevendeva=2413,e.seveneighths=8542,e.sevengujarati=2797,e.sevengurmukhi=2669,e.sevenhackarabic=1639,e.sevenhangzhou=12327,e.sevenideographicparen=12838,e.seveninferior=8327,e.sevenmonospace=65303,e.sevenoldstyle=63287,e.sevenparen=9338,e.sevenperiod=9358,e.sevenpersian=1783,e.sevenroman=8566,e.sevensuperior=8311,e.seventeencircle=9328,e.seventeenparen=9348,e.seventeenperiod=9368,e.seventhai=3671,e.sfthyphen=173,e.shaarmenian=1399,e.shabengali=2486,e.shacyrillic=1096,e.shaddaarabic=1617,e.shaddadammaarabic=64609,e.shaddadammatanarabic=64606,e.shaddafathaarabic=64608,e.shaddakasraarabic=64610,e.shaddakasratanarabic=64607,e.shade=9618,e.shadedark=9619,e.shadelight=9617,e.shademedium=9618,e.shadeva=2358,e.shagujarati=2742,e.shagurmukhi=2614,e.shalshelethebrew=1427,e.shbopomofo=12565,e.shchacyrillic=1097,e.sheenarabic=1588,e.sheenfinalarabic=65206,e.sheeninitialarabic=65207,e.sheenmedialarabic=65208,e.sheicoptic=995,e.sheqel=8362,e.sheqelhebrew=8362,e.sheva=1456,e.sheva115=1456,e.sheva15=1456,e.sheva22=1456,e.sheva2e=1456,e.shevahebrew=1456,e.shevanarrowhebrew=1456,e.shevaquarterhebrew=1456,e.shevawidehebrew=1456,e.shhacyrillic=1211,e.shimacoptic=1005,e.shin=1513,e.shindagesh=64329,e.shindageshhebrew=64329,e.shindageshshindot=64300,e.shindageshshindothebrew=64300,e.shindageshsindot=64301,e.shindageshsindothebrew=64301,e.shindothebrew=1473,e.shinhebrew=1513,e.shinshindot=64298,e.shinshindothebrew=64298,e.shinsindot=64299,e.shinsindothebrew=64299,e.shook=642,e.sigma=963,e.sigma1=962,e.sigmafinal=962,e.sigmalunatesymbolgreek=1010,e.sihiragana=12375,e.sikatakana=12471,e.sikatakanahalfwidth=65404,e.siluqhebrew=1469,e.siluqlefthebrew=1469,e.similar=8764,e.sindothebrew=1474,e.siosacirclekorean=12916,e.siosaparenkorean=12820,e.sioscieuckorean=12670,e.sioscirclekorean=12902,e.sioskiyeokkorean=12666,e.sioskorean=12613,e.siosnieunkorean=12667,e.siosparenkorean=12806,e.siospieupkorean=12669,e.siostikeutkorean=12668,e.six=54,e.sixarabic=1638,e.sixbengali=2540,e.sixcircle=9317,e.sixcircleinversesansserif=10127,e.sixdeva=2412,e.sixgujarati=2796,e.sixgurmukhi=2668,e.sixhackarabic=1638,e.sixhangzhou=12326,e.sixideographicparen=12837,e.sixinferior=8326,e.sixmonospace=65302,e.sixoldstyle=63286,e.sixparen=9337,e.sixperiod=9357,e.sixpersian=1782,e.sixroman=8565,e.sixsuperior=8310,e.sixteencircle=9327,e.sixteencurrencydenominatorbengali=2553,e.sixteenparen=9347,e.sixteenperiod=9367,e.sixthai=3670,e.slash=47,e.slashmonospace=65295,e.slong=383,e.slongdotaccent=7835,e.smileface=9786,e.smonospace=65363,e.sofpasuqhebrew=1475,e.softhyphen=173,e.softsigncyrillic=1100,e.sohiragana=12381,e.sokatakana=12477,e.sokatakanahalfwidth=65407,e.soliduslongoverlaycmb=824,e.solidusshortoverlaycmb=823,e.sorusithai=3625,e.sosalathai=3624,e.sosothai=3595,e.sosuathai=3626,e.space=32,e.spacehackarabic=32,e.spade=9824,e.spadesuitblack=9824,e.spadesuitwhite=9828,e.sparen=9390,e.squarebelowcmb=827,e.squarecc=13252,e.squarecm=13213,e.squarediagonalcrosshatchfill=9641,e.squarehorizontalfill=9636,e.squarekg=13199,e.squarekm=13214,e.squarekmcapital=13262,e.squareln=13265,e.squarelog=13266,e.squaremg=13198,e.squaremil=13269,e.squaremm=13212,e.squaremsquared=13217,e.squareorthogonalcrosshatchfill=9638,e.squareupperlefttolowerrightfill=9639,e.squareupperrighttolowerleftfill=9640,e.squareverticalfill=9637,e.squarewhitewithsmallblack=9635,e.srsquare=13275,e.ssabengali=2487,e.ssadeva=2359,e.ssagujarati=2743,e.ssangcieuckorean=12617,e.ssanghieuhkorean=12677,e.ssangieungkorean=12672,e.ssangkiyeokkorean=12594,e.ssangnieunkorean=12645,e.ssangpieupkorean=12611,e.ssangsioskorean=12614,e.ssangtikeutkorean=12600,e.ssuperior=63218,e.sterling=163,e.sterlingmonospace=65505,e.strokelongoverlaycmb=822,e.strokeshortoverlaycmb=821,e.subset=8834,e.subsetnotequal=8842,e.subsetorequal=8838,e.succeeds=8827,e.suchthat=8715,e.suhiragana=12377,e.sukatakana=12473,e.sukatakanahalfwidth=65405,e.sukunarabic=1618,e.summation=8721,e.sun=9788,e.superset=8835,e.supersetnotequal=8843,e.supersetorequal=8839,e.svsquare=13276,e.syouwaerasquare=13180,e.t=116,e.tabengali=2468,e.tackdown=8868,e.tackleft=8867,e.tadeva=2340,e.tagujarati=2724,e.tagurmukhi=2596,e.taharabic=1591,e.tahfinalarabic=65218,e.tahinitialarabic=65219,e.tahiragana=12383,e.tahmedialarabic=65220,e.taisyouerasquare=13181,e.takatakana=12479,e.takatakanahalfwidth=65408,e.tatweelarabic=1600,e.tau=964,e.tav=1514,e.tavdages=64330,e.tavdagesh=64330,e.tavdageshhebrew=64330,e.tavhebrew=1514,e.tbar=359,e.tbopomofo=12554,e.tcaron=357,e.tccurl=680,e.tcedilla=355,e.tcheharabic=1670,e.tchehfinalarabic=64379,e.tchehinitialarabic=64380,e.tchehmedialarabic=64381,e.tcircle=9443,e.tcircumflexbelow=7793,e.tcommaaccent=355,e.tdieresis=7831,e.tdotaccent=7787,e.tdotbelow=7789,e.tecyrillic=1090,e.tedescendercyrillic=1197,e.teharabic=1578,e.tehfinalarabic=65174,e.tehhahinitialarabic=64674,e.tehhahisolatedarabic=64524,e.tehinitialarabic=65175,e.tehiragana=12390,e.tehjeeminitialarabic=64673,e.tehjeemisolatedarabic=64523,e.tehmarbutaarabic=1577,e.tehmarbutafinalarabic=65172,e.tehmedialarabic=65176,e.tehmeeminitialarabic=64676,e.tehmeemisolatedarabic=64526,e.tehnoonfinalarabic=64627,e.tekatakana=12486,e.tekatakanahalfwidth=65411,e.telephone=8481,e.telephoneblack=9742,e.telishagedolahebrew=1440,e.telishaqetanahebrew=1449,e.tencircle=9321,e.tenideographicparen=12841,e.tenparen=9341,e.tenperiod=9361,e.tenroman=8569,e.tesh=679,e.tet=1496,e.tetdagesh=64312,e.tetdageshhebrew=64312,e.tethebrew=1496,e.tetsecyrillic=1205,e.tevirhebrew=1435,e.tevirlefthebrew=1435,e.thabengali=2469,e.thadeva=2341,e.thagujarati=2725,e.thagurmukhi=2597,e.thalarabic=1584,e.thalfinalarabic=65196,e.thanthakhatlowleftthai=63640,e.thanthakhatlowrightthai=63639,e.thanthakhatthai=3660,e.thanthakhatupperleftthai=63638,e.theharabic=1579,e.thehfinalarabic=65178,e.thehinitialarabic=65179,e.thehmedialarabic=65180,e.thereexists=8707,e.therefore=8756,e.theta=952,e.theta1=977,e.thetasymbolgreek=977,e.thieuthacirclekorean=12921,e.thieuthaparenkorean=12825,e.thieuthcirclekorean=12907,e.thieuthkorean=12620,e.thieuthparenkorean=12811,e.thirteencircle=9324,e.thirteenparen=9344,e.thirteenperiod=9364,e.thonangmonthothai=3601,e.thook=429,e.thophuthaothai=3602,e.thorn=254,e.thothahanthai=3607,e.thothanthai=3600,e.thothongthai=3608,e.thothungthai=3606,e.thousandcyrillic=1154,e.thousandsseparatorarabic=1644,e.thousandsseparatorpersian=1644,e.three=51,e.threearabic=1635,e.threebengali=2537,e.threecircle=9314,e.threecircleinversesansserif=10124,e.threedeva=2409,e.threeeighths=8540,e.threegujarati=2793,e.threegurmukhi=2665,e.threehackarabic=1635,e.threehangzhou=12323,e.threeideographicparen=12834,e.threeinferior=8323,e.threemonospace=65299,e.threenumeratorbengali=2550,e.threeoldstyle=63283,e.threeparen=9334,e.threeperiod=9354,e.threepersian=1779,e.threequarters=190,e.threequartersemdash=63198,e.threeroman=8562,e.threesuperior=179,e.threethai=3667,e.thzsquare=13204,e.tihiragana=12385,e.tikatakana=12481,e.tikatakanahalfwidth=65409,e.tikeutacirclekorean=12912,e.tikeutaparenkorean=12816,e.tikeutcirclekorean=12898,e.tikeutkorean=12599,e.tikeutparenkorean=12802,e.tilde=732,e.tildebelowcmb=816,e.tildecmb=771,e.tildecomb=771,e.tildedoublecmb=864,e.tildeoperator=8764,e.tildeoverlaycmb=820,e.tildeverticalcmb=830,e.timescircle=8855,e.tipehahebrew=1430,e.tipehalefthebrew=1430,e.tippigurmukhi=2672,e.titlocyrilliccmb=1155,e.tiwnarmenian=1407,e.tlinebelow=7791,e.tmonospace=65364,e.toarmenian=1385,e.tohiragana=12392,e.tokatakana=12488,e.tokatakanahalfwidth=65412,e.tonebarextrahighmod=741,e.tonebarextralowmod=745,e.tonebarhighmod=742,e.tonebarlowmod=744,e.tonebarmidmod=743,e.tonefive=445,e.tonesix=389,e.tonetwo=424,e.tonos=900,e.tonsquare=13095,e.topatakthai=3599,e.tortoiseshellbracketleft=12308,e.tortoiseshellbracketleftsmall=65117,e.tortoiseshellbracketleftvertical=65081,e.tortoiseshellbracketright=12309,e.tortoiseshellbracketrightsmall=65118,e.tortoiseshellbracketrightvertical=65082,e.totaothai=3605,e.tpalatalhook=427,e.tparen=9391,e.trademark=8482,e.trademarksans=63722,e.trademarkserif=63195,e.tretroflexhook=648,e.triagdn=9660,e.triaglf=9668,e.triagrt=9658,e.triagup=9650,e.ts=678,e.tsadi=1510,e.tsadidagesh=64326,e.tsadidageshhebrew=64326,e.tsadihebrew=1510,e.tsecyrillic=1094,e.tsere=1461,e.tsere12=1461,e.tsere1e=1461,e.tsere2b=1461,e.tserehebrew=1461,e.tserenarrowhebrew=1461,e.tserequarterhebrew=1461,e.tserewidehebrew=1461,e.tshecyrillic=1115,e.tsuperior=63219,e.ttabengali=2463,e.ttadeva=2335,e.ttagujarati=2719,e.ttagurmukhi=2591,e.tteharabic=1657,e.ttehfinalarabic=64359,e.ttehinitialarabic=64360,e.ttehmedialarabic=64361,e.tthabengali=2464,e.tthadeva=2336,e.tthagujarati=2720,e.tthagurmukhi=2592,e.tturned=647,e.tuhiragana=12388,e.tukatakana=12484,e.tukatakanahalfwidth=65410,e.tusmallhiragana=12387,e.tusmallkatakana=12483,e.tusmallkatakanahalfwidth=65391,e.twelvecircle=9323,e.twelveparen=9343,e.twelveperiod=9363,e.twelveroman=8571,e.twentycircle=9331,e.twentyhangzhou=21316,e.twentyparen=9351,e.twentyperiod=9371,e.two=50,e.twoarabic=1634,e.twobengali=2536,e.twocircle=9313,e.twocircleinversesansserif=10123,e.twodeva=2408,e.twodotenleader=8229,e.twodotleader=8229,e.twodotleadervertical=65072,e.twogujarati=2792,e.twogurmukhi=2664,e.twohackarabic=1634,e.twohangzhou=12322,e.twoideographicparen=12833,e.twoinferior=8322,e.twomonospace=65298,e.twonumeratorbengali=2549,e.twooldstyle=63282,e.twoparen=9333,e.twoperiod=9353,e.twopersian=1778,e.tworoman=8561,e.twostroke=443,e.twosuperior=178,e.twothai=3666,e.twothirds=8532,e.u=117,e.uacute=250,e.ubar=649,e.ubengali=2441,e.ubopomofo=12584,e.ubreve=365,e.ucaron=468,e.ucircle=9444,e.ucircumflex=251,e.ucircumflexbelow=7799,e.ucyrillic=1091,e.udattadeva=2385,e.udblacute=369,e.udblgrave=533,e.udeva=2313,e.udieresis=252,e.udieresisacute=472,e.udieresisbelow=7795,e.udieresiscaron=474,e.udieresiscyrillic=1265,e.udieresisgrave=476,e.udieresismacron=470,e.udotbelow=7909,e.ugrave=249,e.ugujarati=2697,e.ugurmukhi=2569,e.uhiragana=12358,e.uhookabove=7911,e.uhorn=432,e.uhornacute=7913,e.uhorndotbelow=7921,e.uhorngrave=7915,e.uhornhookabove=7917,e.uhorntilde=7919,e.uhungarumlaut=369,e.uhungarumlautcyrillic=1267,e.uinvertedbreve=535,e.ukatakana=12454,e.ukatakanahalfwidth=65395,e.ukcyrillic=1145,e.ukorean=12636,e.umacron=363,e.umacroncyrillic=1263,e.umacrondieresis=7803,e.umatragurmukhi=2625,e.umonospace=65365,e.underscore=95,e.underscoredbl=8215,e.underscoremonospace=65343,e.underscorevertical=65075,e.underscorewavy=65103,e.union=8746,e.universal=8704,e.uogonek=371,e.uparen=9392,e.upblock=9600,e.upperdothebrew=1476,e.upsilon=965,e.upsilondieresis=971,e.upsilondieresistonos=944,e.upsilonlatin=650,e.upsilontonos=973,e.uptackbelowcmb=797,e.uptackmod=724,e.uragurmukhi=2675,e.uring=367,e.ushortcyrillic=1118,e.usmallhiragana=12357,e.usmallkatakana=12453,e.usmallkatakanahalfwidth=65385,e.ustraightcyrillic=1199,e.ustraightstrokecyrillic=1201,e.utilde=361,e.utildeacute=7801,e.utildebelow=7797,e.uubengali=2442,e.uudeva=2314,e.uugujarati=2698,e.uugurmukhi=2570,e.uumatragurmukhi=2626,e.uuvowelsignbengali=2498,e.uuvowelsigndeva=2370,e.uuvowelsigngujarati=2754,e.uvowelsignbengali=2497,e.uvowelsigndeva=2369,e.uvowelsigngujarati=2753,e.v=118,e.vadeva=2357,e.vagujarati=2741,e.vagurmukhi=2613,e.vakatakana=12535,e.vav=1493,e.vavdagesh=64309,e.vavdagesh65=64309,e.vavdageshhebrew=64309,e.vavhebrew=1493,e.vavholam=64331,e.vavholamhebrew=64331,e.vavvavhebrew=1520,e.vavyodhebrew=1521,e.vcircle=9445,e.vdotbelow=7807,e.vecyrillic=1074,e.veharabic=1700,e.vehfinalarabic=64363,e.vehinitialarabic=64364,e.vehmedialarabic=64365,e.vekatakana=12537,e.venus=9792,e.verticalbar=124,e.verticallineabovecmb=781,e.verticallinebelowcmb=809,e.verticallinelowmod=716,e.verticallinemod=712,e.vewarmenian=1406,e.vhook=651,e.vikatakana=12536,e.viramabengali=2509,e.viramadeva=2381,e.viramagujarati=2765,e.visargabengali=2435,e.visargadeva=2307,e.visargagujarati=2691,e.vmonospace=65366,e.voarmenian=1400,e.voicediterationhiragana=12446,e.voicediterationkatakana=12542,e.voicedmarkkana=12443,e.voicedmarkkanahalfwidth=65438,e.vokatakana=12538,e.vparen=9393,e.vtilde=7805,e.vturned=652,e.vuhiragana=12436,e.vukatakana=12532,e.w=119,e.wacute=7811,e.waekorean=12633,e.wahiragana=12431,e.wakatakana=12527,e.wakatakanahalfwidth=65436,e.wakorean=12632,e.wasmallhiragana=12430,e.wasmallkatakana=12526,e.wattosquare=13143,e.wavedash=12316,e.wavyunderscorevertical=65076,e.wawarabic=1608,e.wawfinalarabic=65262,e.wawhamzaabovearabic=1572,e.wawhamzaabovefinalarabic=65158,e.wbsquare=13277,e.wcircle=9446,e.wcircumflex=373,e.wdieresis=7813,e.wdotaccent=7815,e.wdotbelow=7817,e.wehiragana=12433,e.weierstrass=8472,e.wekatakana=12529,e.wekorean=12638,e.weokorean=12637,e.wgrave=7809,e.whitebullet=9702,e.whitecircle=9675,e.whitecircleinverse=9689,e.whitecornerbracketleft=12302,e.whitecornerbracketleftvertical=65091,e.whitecornerbracketright=12303,e.whitecornerbracketrightvertical=65092,e.whitediamond=9671,e.whitediamondcontainingblacksmalldiamond=9672,e.whitedownpointingsmalltriangle=9663,e.whitedownpointingtriangle=9661,e.whiteleftpointingsmalltriangle=9667,e.whiteleftpointingtriangle=9665,e.whitelenticularbracketleft=12310,e.whitelenticularbracketright=12311,e.whiterightpointingsmalltriangle=9657;e.whiterightpointingtriangle=9655,e.whitesmallsquare=9643,e.whitesmilingface=9786,e.whitesquare=9633,e.whitestar=9734,e.whitetelephone=9743,e.whitetortoiseshellbracketleft=12312,e.whitetortoiseshellbracketright=12313,e.whiteuppointingsmalltriangle=9653,e.whiteuppointingtriangle=9651,e.wihiragana=12432,e.wikatakana=12528,e.wikorean=12639,e.wmonospace=65367,e.wohiragana=12434,e.wokatakana=12530,e.wokatakanahalfwidth=65382,e.won=8361,e.wonmonospace=65510,e.wowaenthai=3623,e.wparen=9394,e.wring=7832,e.wsuperior=695,e.wturned=653,e.wynn=447,e.x=120,e.xabovecmb=829,e.xbopomofo=12562,e.xcircle=9447,e.xdieresis=7821,e.xdotaccent=7819,e.xeharmenian=1389,e.xi=958,e.xmonospace=65368,e.xparen=9395,e.xsuperior=739,e.y=121,e.yaadosquare=13134,e.yabengali=2479,e.yacute=253,e.yadeva=2351,e.yaekorean=12626,e.yagujarati=2735,e.yagurmukhi=2607,e.yahiragana=12420,e.yakatakana=12516,e.yakatakanahalfwidth=65428,e.yakorean=12625,e.yamakkanthai=3662,e.yasmallhiragana=12419,e.yasmallkatakana=12515,e.yasmallkatakanahalfwidth=65388,e.yatcyrillic=1123,e.ycircle=9448,e.ycircumflex=375,e.ydieresis=255,e.ydotaccent=7823,e.ydotbelow=7925,e.yeharabic=1610,e.yehbarreearabic=1746,e.yehbarreefinalarabic=64431,e.yehfinalarabic=65266,e.yehhamzaabovearabic=1574,e.yehhamzaabovefinalarabic=65162,e.yehhamzaaboveinitialarabic=65163,e.yehhamzaabovemedialarabic=65164,e.yehinitialarabic=65267,e.yehmedialarabic=65268,e.yehmeeminitialarabic=64733,e.yehmeemisolatedarabic=64600,e.yehnoonfinalarabic=64660,e.yehthreedotsbelowarabic=1745,e.yekorean=12630,e.yen=165,e.yenmonospace=65509,e.yeokorean=12629,e.yeorinhieuhkorean=12678,e.yerahbenyomohebrew=1450,e.yerahbenyomolefthebrew=1450,e.yericyrillic=1099,e.yerudieresiscyrillic=1273,e.yesieungkorean=12673,e.yesieungpansioskorean=12675,e.yesieungsioskorean=12674,e.yetivhebrew=1434,e.ygrave=7923,e.yhook=436,e.yhookabove=7927,e.yiarmenian=1397,e.yicyrillic=1111,e.yikorean=12642,e.yinyang=9775,e.yiwnarmenian=1410,e.ymonospace=65369,e.yod=1497,e.yoddagesh=64313,e.yoddageshhebrew=64313,e.yodhebrew=1497,e.yodyodhebrew=1522,e.yodyodpatahhebrew=64287,e.yohiragana=12424,e.yoikorean=12681,e.yokatakana=12520,e.yokatakanahalfwidth=65430,e.yokorean=12635,e.yosmallhiragana=12423,e.yosmallkatakana=12519,e.yosmallkatakanahalfwidth=65390,e.yotgreek=1011,e.yoyaekorean=12680,e.yoyakorean=12679,e.yoyakthai=3618,e.yoyingthai=3597,e.yparen=9396,e.ypogegrammeni=890,e.ypogegrammenigreekcmb=837,e.yr=422,e.yring=7833,e.ysuperior=696,e.ytilde=7929,e.yturned=654,e.yuhiragana=12422,e.yuikorean=12684,e.yukatakana=12518,e.yukatakanahalfwidth=65429,e.yukorean=12640,e.yusbigcyrillic=1131,e.yusbigiotifiedcyrillic=1133,e.yuslittlecyrillic=1127,e.yuslittleiotifiedcyrillic=1129,e.yusmallhiragana=12421,e.yusmallkatakana=12517,e.yusmallkatakanahalfwidth=65389,e.yuyekorean=12683,e.yuyeokorean=12682,e.yyabengali=2527,e.yyadeva=2399,e.z=122,e.zaarmenian=1382,e.zacute=378,e.zadeva=2395,e.zagurmukhi=2651,e.zaharabic=1592,e.zahfinalarabic=65222,e.zahinitialarabic=65223,e.zahiragana=12374,e.zahmedialarabic=65224,e.zainarabic=1586,e.zainfinalarabic=65200,e.zakatakana=12470,e.zaqefgadolhebrew=1429,e.zaqefqatanhebrew=1428,e.zarqahebrew=1432,e.zayin=1494,e.zayindagesh=64310,e.zayindageshhebrew=64310,e.zayinhebrew=1494,e.zbopomofo=12567,e.zcaron=382,e.zcircle=9449,e.zcircumflex=7825,e.zcurl=657,e.zdot=380,e.zdotaccent=380,e.zdotbelow=7827,e.zecyrillic=1079,e.zedescendercyrillic=1177,e.zedieresiscyrillic=1247,e.zehiragana=12380,e.zekatakana=12476,e.zero=48,e.zeroarabic=1632,e.zerobengali=2534,e.zerodeva=2406,e.zerogujarati=2790,e.zerogurmukhi=2662,e.zerohackarabic=1632,e.zeroinferior=8320,e.zeromonospace=65296,e.zerooldstyle=63280,e.zeropersian=1776,e.zerosuperior=8304,e.zerothai=3664,e.zerowidthjoiner=65279,e.zerowidthnonjoiner=8204,e.zerowidthspace=8203,e.zeta=950,e.zhbopomofo=12563,e.zhearmenian=1386,e.zhebrevecyrillic=1218,e.zhecyrillic=1078,e.zhedescendercyrillic=1175,e.zhedieresiscyrillic=1245,e.zihiragana=12376,e.zikatakana=12472,e.zinorhebrew=1454,e.zlinebelow=7829,e.zmonospace=65370,e.zohiragana=12382,e.zokatakana=12478,e.zparen=9397,e.zretroflexhook=656,e.zstroke=438,e.zuhiragana=12378,e.zukatakana=12474,e[\".notdef\"]=0,e.angbracketleftbig=9001,e.angbracketleftBig=9001,e.angbracketleftbigg=9001,e.angbracketleftBigg=9001,e.angbracketrightBig=9002,e.angbracketrightbig=9002,e.angbracketrightBigg=9002,e.angbracketrightbigg=9002,e.arrowhookleft=8618,e.arrowhookright=8617,e.arrowlefttophalf=8636,e.arrowleftbothalf=8637,e.arrownortheast=8599,e.arrownorthwest=8598,e.arrowrighttophalf=8640,e.arrowrightbothalf=8641,e.arrowsoutheast=8600,e.arrowsouthwest=8601,e.backslashbig=8726,e.backslashBig=8726,e.backslashBigg=8726,e.backslashbigg=8726,e.bardbl=8214,e.bracehtipdownleft=65079,e.bracehtipdownright=65079,e.bracehtipupleft=65080,e.bracehtipupright=65080,e.braceleftBig=123,e.braceleftbig=123,e.braceleftbigg=123,e.braceleftBigg=123,e.bracerightBig=125,e.bracerightbig=125,e.bracerightbigg=125,e.bracerightBigg=125,e.bracketleftbig=91,e.bracketleftBig=91,e.bracketleftbigg=91,e.bracketleftBigg=91,e.bracketrightBig=93,e.bracketrightbig=93,e.bracketrightbigg=93,e.bracketrightBigg=93,e.ceilingleftbig=8968,e.ceilingleftBig=8968,e.ceilingleftBigg=8968,e.ceilingleftbigg=8968,e.ceilingrightbig=8969,e.ceilingrightBig=8969,e.ceilingrightbigg=8969,e.ceilingrightBigg=8969,e.circledotdisplay=8857,e.circledottext=8857,e.circlemultiplydisplay=8855,e.circlemultiplytext=8855,e.circleplusdisplay=8853,e.circleplustext=8853,e.contintegraldisplay=8750,e.contintegraltext=8750,e.coproductdisplay=8720,e.coproducttext=8720,e.floorleftBig=8970,e.floorleftbig=8970,e.floorleftbigg=8970,e.floorleftBigg=8970,e.floorrightbig=8971,e.floorrightBig=8971,e.floorrightBigg=8971,e.floorrightbigg=8971,e.hatwide=770,e.hatwider=770,e.hatwidest=770,e.intercal=7488,e.integraldisplay=8747,e.integraltext=8747,e.intersectiondisplay=8898,e.intersectiontext=8898,e.logicalanddisplay=8743,e.logicalandtext=8743,e.logicalordisplay=8744,e.logicalortext=8744,e.parenleftBig=40,e.parenleftbig=40,e.parenleftBigg=40,e.parenleftbigg=40,e.parenrightBig=41,e.parenrightbig=41,e.parenrightBigg=41,e.parenrightbigg=41,e.prime=8242,e.productdisplay=8719,e.producttext=8719,e.radicalbig=8730,e.radicalBig=8730,e.radicalBigg=8730,e.radicalbigg=8730,e.radicalbt=8730,e.radicaltp=8730,e.radicalvertex=8730,e.slashbig=47,e.slashBig=47,e.slashBigg=47,e.slashbigg=47,e.summationdisplay=8721,e.summationtext=8721,e.tildewide=732,e.tildewider=732,e.tildewidest=732,e.uniondisplay=8899,e.unionmultidisplay=8846,e.unionmultitext=8846,e.unionsqdisplay=8852,e.unionsqtext=8852,e.uniontext=8899,e.vextenddouble=8741,e.vextendsingle=8739})),i=r((function(e){e.space=32,e.a1=9985,e.a2=9986,e.a202=9987,e.a3=9988,e.a4=9742,e.a5=9990,e.a119=9991,e.a118=9992,e.a117=9993,e.a11=9755,e.a12=9758,e.a13=9996,e.a14=9997,e.a15=9998,e.a16=9999,e.a105=1e4,e.a17=10001,e.a18=10002,e.a19=10003,e.a20=10004,e.a21=10005,e.a22=10006,e.a23=10007,e.a24=10008,e.a25=10009,e.a26=10010,e.a27=10011,e.a28=10012,e.a6=10013,e.a7=10014,e.a8=10015,e.a9=10016,e.a10=10017,e.a29=10018,e.a30=10019,e.a31=10020,e.a32=10021,e.a33=10022,e.a34=10023,e.a35=9733,e.a36=10025,e.a37=10026,e.a38=10027,e.a39=10028,e.a40=10029,e.a41=10030,e.a42=10031,e.a43=10032,e.a44=10033,e.a45=10034,e.a46=10035,e.a47=10036,e.a48=10037,e.a49=10038,e.a50=10039,e.a51=10040,e.a52=10041,e.a53=10042,e.a54=10043,e.a55=10044,e.a56=10045,e.a57=10046,e.a58=10047,e.a59=10048,e.a60=10049,e.a61=10050,e.a62=10051,e.a63=10052,e.a64=10053,e.a65=10054,e.a66=10055,e.a67=10056,e.a68=10057,e.a69=10058,e.a70=10059,e.a71=9679,e.a72=10061,e.a73=9632,e.a74=10063,e.a203=10064,e.a75=10065,e.a204=10066,e.a76=9650,e.a77=9660,e.a78=9670,e.a79=10070,e.a81=9687,e.a82=10072,e.a83=10073,e.a84=10074,e.a97=10075,e.a98=10076,e.a99=10077,e.a100=10078,e.a101=10081,e.a102=10082,e.a103=10083,e.a104=10084,e.a106=10085,e.a107=10086,e.a108=10087,e.a112=9827,e.a111=9830,e.a110=9829,e.a109=9824,e.a120=9312,e.a121=9313,e.a122=9314,e.a123=9315,e.a124=9316,e.a125=9317,e.a126=9318,e.a127=9319,e.a128=9320,e.a129=9321,e.a130=10102,e.a131=10103,e.a132=10104,e.a133=10105,e.a134=10106,e.a135=10107,e.a136=10108,e.a137=10109,e.a138=10110,e.a139=10111,e.a140=10112,e.a141=10113,e.a142=10114,e.a143=10115,e.a144=10116,e.a145=10117,e.a146=10118,e.a147=10119,e.a148=10120,e.a149=10121,e.a150=10122,e.a151=10123,e.a152=10124,e.a153=10125,e.a154=10126,e.a155=10127,e.a156=10128,e.a157=10129,e.a158=10130,e.a159=10131,e.a160=10132,e.a161=8594,e.a163=8596,e.a164=8597,e.a196=10136,e.a165=10137,e.a192=10138,e.a166=10139,e.a167=10140,e.a168=10141,e.a169=10142,e.a170=10143,e.a171=10144,e.a172=10145,e.a173=10146,e.a162=10147,e.a174=10148,e.a175=10149,e.a176=10150,e.a177=10151,e.a178=10152,e.a179=10153,e.a193=10154,e.a180=10155,e.a199=10156,e.a181=10157,e.a200=10158,e.a182=10159,e.a201=10161,e.a183=10162,e.a184=10163,e.a197=10164,e.a185=10165,e.a194=10166,e.a198=10167,e.a186=10168,e.a195=10169,e.a187=10170,e.a188=10171,e.a189=10172,e.a190=10173,e.a191=10174,e.a89=10088,e.a90=10089,e.a93=10090,e.a94=10091,e.a91=10092,e.a92=10093,e.a205=10094,e.a85=10095,e.a206=10096,e.a86=10097,e.a87=10098,e.a88=10099,e.a95=10100,e.a96=10101,e[\".notdef\"]=0}));t.getGlyphsUnicode=n,t.getDingbatsGlyphsUnicode=i},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSupplementalGlyphMapForCalibri=t.getSupplementalGlyphMapForArialBlack=t.getGlyphMapForStandardFonts=t.getSymbolsFonts=t.getSerifFonts=t.getNonStdFontMap=t.getStdFontMap=void 0;var r=a(8),n=(0,r.getLookupTableFactory)((function(e){e.ArialNarrow=\"Helvetica\",e[\"ArialNarrow-Bold\"]=\"Helvetica-Bold\",e[\"ArialNarrow-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialNarrow-Italic\"]=\"Helvetica-Oblique\",e.ArialBlack=\"Helvetica\",e[\"ArialBlack-Bold\"]=\"Helvetica-Bold\",e[\"ArialBlack-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"ArialBlack-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-Black\"]=\"Helvetica\",e[\"Arial-Black-Bold\"]=\"Helvetica-Bold\",e[\"Arial-Black-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Black-Italic\"]=\"Helvetica-Oblique\",e.Arial=\"Helvetica\",e[\"Arial-Bold\"]=\"Helvetica-Bold\",e[\"Arial-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Arial-Italic\"]=\"Helvetica-Oblique\",e[\"Arial-BoldItalicMT\"]=\"Helvetica-BoldOblique\",e[\"Arial-BoldMT\"]=\"Helvetica-Bold\",e[\"Arial-ItalicMT\"]=\"Helvetica-Oblique\",e.ArialMT=\"Helvetica\",e[\"Courier-Bold\"]=\"Courier-Bold\",e[\"Courier-BoldItalic\"]=\"Courier-BoldOblique\",e[\"Courier-Italic\"]=\"Courier-Oblique\",e.CourierNew=\"Courier\",e[\"CourierNew-Bold\"]=\"Courier-Bold\",e[\"CourierNew-BoldItalic\"]=\"Courier-BoldOblique\",e[\"CourierNew-Italic\"]=\"Courier-Oblique\",e[\"CourierNewPS-BoldItalicMT\"]=\"Courier-BoldOblique\",e[\"CourierNewPS-BoldMT\"]=\"Courier-Bold\",e[\"CourierNewPS-ItalicMT\"]=\"Courier-Oblique\",e.CourierNewPSMT=\"Courier\",e.Helvetica=\"Helvetica\",e[\"Helvetica-Bold\"]=\"Helvetica-Bold\",e[\"Helvetica-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-BoldOblique\"]=\"Helvetica-BoldOblique\",e[\"Helvetica-Italic\"]=\"Helvetica-Oblique\",e[\"Helvetica-Oblique\"]=\"Helvetica-Oblique\",e[\"Symbol-Bold\"]=\"Symbol\",e[\"Symbol-BoldItalic\"]=\"Symbol\",e[\"Symbol-Italic\"]=\"Symbol\",e.TimesNewRoman=\"Times-Roman\",e[\"TimesNewRoman-Bold\"]=\"Times-Bold\",e[\"TimesNewRoman-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRoman-Italic\"]=\"Times-Italic\",e.TimesNewRomanPS=\"Times-Roman\",e[\"TimesNewRomanPS-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPS-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldItalicMT\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPS-BoldMT\"]=\"Times-Bold\",e[\"TimesNewRomanPS-Italic\"]=\"Times-Italic\",e[\"TimesNewRomanPS-ItalicMT\"]=\"Times-Italic\",e.TimesNewRomanPSMT=\"Times-Roman\",e[\"TimesNewRomanPSMT-Bold\"]=\"Times-Bold\",e[\"TimesNewRomanPSMT-BoldItalic\"]=\"Times-BoldItalic\",e[\"TimesNewRomanPSMT-Italic\"]=\"Times-Italic\"}));t.getStdFontMap=n;var i=(0,r.getLookupTableFactory)((function(e){e.Calibri=\"Helvetica\",e[\"Calibri-Bold\"]=\"Helvetica-Bold\",e[\"Calibri-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"Calibri-Italic\"]=\"Helvetica-Oblique\",e.CenturyGothic=\"Helvetica\",e[\"CenturyGothic-Bold\"]=\"Helvetica-Bold\",e[\"CenturyGothic-BoldItalic\"]=\"Helvetica-BoldOblique\",e[\"CenturyGothic-Italic\"]=\"Helvetica-Oblique\",e.ComicSansMS=\"Comic Sans MS\",e[\"ComicSansMS-Bold\"]=\"Comic Sans MS-Bold\",e[\"ComicSansMS-BoldItalic\"]=\"Comic Sans MS-BoldItalic\",e[\"ComicSansMS-Italic\"]=\"Comic Sans MS-Italic\",e.LucidaConsole=\"Courier\",e[\"LucidaConsole-Bold\"]=\"Courier-Bold\",e[\"LucidaConsole-BoldItalic\"]=\"Courier-BoldOblique\",e[\"LucidaConsole-Italic\"]=\"Courier-Oblique\",e[\"LucidaSans-Demi\"]=\"Helvetica-Bold\",e[\"MS-Gothic\"]=\"MS Gothic\",e[\"MS-Gothic-Bold\"]=\"MS Gothic-Bold\",e[\"MS-Gothic-BoldItalic\"]=\"MS Gothic-BoldItalic\",e[\"MS-Gothic-Italic\"]=\"MS Gothic-Italic\",e[\"MS-Mincho\"]=\"MS Mincho\",e[\"MS-Mincho-Bold\"]=\"MS Mincho-Bold\",e[\"MS-Mincho-BoldItalic\"]=\"MS Mincho-BoldItalic\",e[\"MS-Mincho-Italic\"]=\"MS Mincho-Italic\",e[\"MS-PGothic\"]=\"MS PGothic\",e[\"MS-PGothic-Bold\"]=\"MS PGothic-Bold\",e[\"MS-PGothic-BoldItalic\"]=\"MS PGothic-BoldItalic\",e[\"MS-PGothic-Italic\"]=\"MS PGothic-Italic\",e[\"MS-PMincho\"]=\"MS PMincho\",e[\"MS-PMincho-Bold\"]=\"MS PMincho-Bold\",e[\"MS-PMincho-BoldItalic\"]=\"MS PMincho-BoldItalic\",e[\"MS-PMincho-Italic\"]=\"MS PMincho-Italic\",e.NuptialScript=\"Times-Italic\",e.SegoeUISymbol=\"Helvetica\",e.Wingdings=\"ZapfDingbats\",e[\"Wingdings-Regular\"]=\"ZapfDingbats\"}));t.getNonStdFontMap=i;var o=(0,r.getLookupTableFactory)((function(e){e[\"Adobe Jenson\"]=!0,e[\"Adobe Text\"]=!0,e.Albertus=!0,e.Aldus=!0,e.Alexandria=!0,e.Algerian=!0,e[\"American Typewriter\"]=!0,e.Antiqua=!0,e.Apex=!0,e.Arno=!0,e.Aster=!0,e.Aurora=!0,e.Baskerville=!0,e.Bell=!0,e.Bembo=!0,e[\"Bembo Schoolbook\"]=!0,e.Benguiat=!0,e[\"Berkeley Old Style\"]=!0,e[\"Bernhard Modern\"]=!0,e[\"Berthold City\"]=!0,e.Bodoni=!0,e[\"Bauer Bodoni\"]=!0,e[\"Book Antiqua\"]=!0,e.Bookman=!0,e[\"Bordeaux Roman\"]=!0,e[\"Californian FB\"]=!0,e.Calisto=!0,e.Calvert=!0,e.Capitals=!0,e.Cambria=!0,e.Cartier=!0,e.Caslon=!0,e.Catull=!0,e.Centaur=!0,e[\"Century Old Style\"]=!0,e[\"Century Schoolbook\"]=!0,e.Chaparral=!0,e[\"Charis SIL\"]=!0,e.Cheltenham=!0,e[\"Cholla Slab\"]=!0,e.Clarendon=!0,e.Clearface=!0,e.Cochin=!0,e.Colonna=!0,e[\"Computer Modern\"]=!0,e[\"Concrete Roman\"]=!0,e.Constantia=!0,e[\"Cooper Black\"]=!0,e.Corona=!0,e.Ecotype=!0,e.Egyptienne=!0,e.Elephant=!0,e.Excelsior=!0,e.Fairfield=!0,e[\"FF Scala\"]=!0,e.Folkard=!0,e.Footlight=!0,e.FreeSerif=!0,e[\"Friz Quadrata\"]=!0,e.Garamond=!0,e.Gentium=!0,e.Georgia=!0,e.Gloucester=!0,e[\"Goudy Old Style\"]=!0,e[\"Goudy Schoolbook\"]=!0,e[\"Goudy Pro Font\"]=!0,e.Granjon=!0,e[\"Guardian Egyptian\"]=!0,e.Heather=!0,e.Hercules=!0,e[\"High Tower Text\"]=!0,e.Hiroshige=!0,e[\"Hoefler Text\"]=!0,e[\"Humana Serif\"]=!0,e.Imprint=!0,e[\"Ionic No. 5\"]=!0,e.Janson=!0,e.Joanna=!0,e.Korinna=!0,e.Lexicon=!0,e[\"Liberation Serif\"]=!0,e[\"Linux Libertine\"]=!0,e.Literaturnaya=!0,e.Lucida=!0,e[\"Lucida Bright\"]=!0,e.Melior=!0,e.Memphis=!0,e.Miller=!0,e.Minion=!0,e.Modern=!0,e[\"Mona Lisa\"]=!0,e[\"Mrs Eaves\"]=!0,e[\"MS Serif\"]=!0,e[\"Museo Slab\"]=!0,e[\"New York\"]=!0,e[\"Nimbus Roman\"]=!0,e[\"NPS Rawlinson Roadway\"]=!0,e.NuptialScript=!0,e.Palatino=!0,e.Perpetua=!0,e.Plantin=!0,e[\"Plantin Schoolbook\"]=!0,e.Playbill=!0,e[\"Poor Richard\"]=!0,e[\"Rawlinson Roadway\"]=!0,e.Renault=!0,e.Requiem=!0,e.Rockwell=!0,e.Roman=!0,e[\"Rotis Serif\"]=!0,e.Sabon=!0,e.Scala=!0,e.Seagull=!0,e.Sistina=!0,e.Souvenir=!0,e.STIX=!0,e[\"Stone Informal\"]=!0,e[\"Stone Serif\"]=!0,e.Sylfaen=!0,e.Times=!0,e.Trajan=!0,e[\"Trinit\\xe9\"]=!0,e[\"Trump Mediaeval\"]=!0,e.Utopia=!0,e[\"Vale Type\"]=!0,e[\"Bitstream Vera\"]=!0,e[\"Vera Serif\"]=!0,e.Versailles=!0,e.Wanted=!0,e.Weiss=!0,e[\"Wide Latin\"]=!0,e.Windsor=!0,e.XITS=!0}));t.getSerifFonts=o;var s=(0,r.getLookupTableFactory)((function(e){e.Dingbats=!0,e.Symbol=!0,e.ZapfDingbats=!0}));t.getSymbolsFonts=s;var c=(0,r.getLookupTableFactory)((function(e){e[2]=10,e[3]=32,e[4]=33,e[5]=34,e[6]=35,e[7]=36,e[8]=37,e[9]=38,e[10]=39,e[11]=40,e[12]=41,e[13]=42,e[14]=43,e[15]=44,e[16]=45,e[17]=46,e[18]=47,e[19]=48,e[20]=49,e[21]=50,e[22]=51,e[23]=52,e[24]=53,e[25]=54,e[26]=55,e[27]=56,e[28]=57,e[29]=58,e[30]=894,e[31]=60,e[32]=61,e[33]=62,e[34]=63,e[35]=64,e[36]=65,e[37]=66,e[38]=67,e[39]=68,e[40]=69,e[41]=70,e[42]=71,e[43]=72,e[44]=73,e[45]=74,e[46]=75,e[47]=76,e[48]=77,e[49]=78,e[50]=79,e[51]=80,e[52]=81,e[53]=82,e[54]=83,e[55]=84,e[56]=85,e[57]=86,e[58]=87,e[59]=88,e[60]=89,e[61]=90,e[62]=91,e[63]=92,e[64]=93,e[65]=94,e[66]=95,e[67]=96,e[68]=97,e[69]=98,e[70]=99,e[71]=100,e[72]=101,e[73]=102,e[74]=103,e[75]=104,e[76]=105,e[77]=106,e[78]=107,e[79]=108,e[80]=109,e[81]=110,e[82]=111,e[83]=112,e[84]=113,e[85]=114,e[86]=115,e[87]=116,e[88]=117,e[89]=118,e[90]=119,e[91]=120,e[92]=121,e[93]=122,e[94]=123,e[95]=124,e[96]=125,e[97]=126,e[98]=196,e[99]=197,e[100]=199,e[101]=201,e[102]=209,e[103]=214,e[104]=220,e[105]=225,e[106]=224,e[107]=226,e[108]=228,e[109]=227,e[110]=229,e[111]=231,e[112]=233,e[113]=232,e[114]=234,e[115]=235,e[116]=237,e[117]=236,e[118]=238,e[119]=239,e[120]=241,e[121]=243,e[122]=242,e[123]=244,e[124]=246,e[125]=245,e[126]=250,e[127]=249,e[128]=251,e[129]=252,e[130]=8224,e[131]=176,e[132]=162,e[133]=163,e[134]=167,e[135]=8226,e[136]=182,e[137]=223,e[138]=174,e[139]=169,e[140]=8482,e[141]=180,e[142]=168,e[143]=8800,e[144]=198,e[145]=216,e[146]=8734,e[147]=177,e[148]=8804,e[149]=8805,e[150]=165,e[151]=181,e[152]=8706,e[153]=8721,e[154]=8719,e[156]=8747,e[157]=170,e[158]=186,e[159]=8486,e[160]=230,e[161]=248,e[162]=191,e[163]=161,e[164]=172,e[165]=8730,e[166]=402,e[167]=8776,e[168]=8710,e[169]=171,e[170]=187,e[171]=8230,e[210]=218,e[223]=711,e[224]=321,e[225]=322,e[227]=353,e[229]=382,e[234]=253,e[252]=263,e[253]=268,e[254]=269,e[258]=258,e[260]=260,e[261]=261,e[265]=280,e[266]=281,e[268]=283,e[269]=313,e[275]=323,e[276]=324,e[278]=328,e[284]=345,e[285]=346,e[286]=347,e[292]=367,e[295]=377,e[296]=378,e[298]=380,e[305]=963,e[306]=964,e[307]=966,e[308]=8215,e[309]=8252,e[310]=8319,e[311]=8359,e[312]=8592,e[313]=8593,e[337]=9552,e[493]=1039,e[494]=1040,e[705]=1524,e[706]=8362,e[710]=64288,e[711]=64298,e[759]=1617,e[761]=1776,e[763]=1778,e[775]=1652,e[777]=1764,e[778]=1780,e[779]=1781,e[780]=1782,e[782]=771,e[783]=64726,e[786]=8363,e[788]=8532,e[790]=768,e[791]=769,e[792]=768,e[795]=803,e[797]=64336,e[798]=64337,e[799]=64342,e[800]=64343,e[801]=64344,e[802]=64345,e[803]=64362,e[804]=64363,e[805]=64364,e[2424]=7821,e[2425]=7822,e[2426]=7823,e[2427]=7824,e[2428]=7825,e[2429]=7826,e[2430]=7827,e[2433]=7682,e[2678]=8045,e[2679]=8046,e[2830]=1552,e[2838]=686,e[2840]=751,e[2842]=753,e[2843]=754,e[2844]=755,e[2846]=757,e[2856]=767,e[2857]=848,e[2858]=849,e[2862]=853,e[2863]=854,e[2864]=855,e[2865]=861,e[2866]=862,e[2906]=7460,e[2908]=7462,e[2909]=7463,e[2910]=7464,e[2912]=7466,e[2913]=7467,e[2914]=7468,e[2916]=7470,e[2917]=7471,e[2918]=7472,e[2920]=7474,e[2921]=7475,e[2922]=7476,e[2924]=7478,e[2925]=7479,e[2926]=7480,e[2928]=7482,e[2929]=7483,e[2930]=7484,e[2932]=7486,e[2933]=7487,e[2934]=7488,e[2936]=7490,e[2937]=7491,e[2938]=7492,e[2940]=7494,e[2941]=7495,e[2942]=7496,e[2944]=7498,e[2946]=7500,e[2948]=7502,e[2950]=7504,e[2951]=7505,e[2952]=7506,e[2954]=7508,e[2955]=7509,e[2956]=7510,e[2958]=7512,e[2959]=7513,e[2960]=7514,e[2962]=7516,e[2963]=7517,e[2964]=7518,e[2966]=7520,e[2967]=7521,e[2968]=7522,e[2970]=7524,e[2971]=7525,e[2972]=7526,e[2974]=7528,e[2975]=7529,e[2976]=7530,e[2978]=1537,e[2979]=1538,e[2980]=1539,e[2982]=1549,e[2983]=1551,e[2984]=1552,e[2986]=1554,e[2987]=1555,e[2988]=1556,e[2990]=1623,e[2991]=1624,e[2995]=1775,e[2999]=1791,e[3002]=64290,e[3003]=64291,e[3004]=64292,e[3006]=64294,e[3007]=64295,e[3008]=64296,e[3011]=1900,e[3014]=8223,e[3015]=8244,e[3017]=7532,e[3018]=7533,e[3019]=7534,e[3075]=7590,e[3076]=7591,e[3079]=7594,e[3080]=7595,e[3083]=7598,e[3084]=7599,e[3087]=7602,e[3088]=7603,e[3091]=7606,e[3092]=7607,e[3095]=7610,e[3096]=7611,e[3099]=7614,e[3100]=7615,e[3103]=7618,e[3104]=7619,e[3107]=8337,e[3108]=8338,e[3116]=1884,e[3119]=1885,e[3120]=1885,e[3123]=1886,e[3124]=1886,e[3127]=1887,e[3128]=1887,e[3131]=1888,e[3132]=1888,e[3135]=1889,e[3136]=1889,e[3139]=1890,e[3140]=1890,e[3143]=1891,e[3144]=1891,e[3147]=1892,e[3148]=1892,e[3153]=580,e[3154]=581,e[3157]=584,e[3158]=585,e[3161]=588,e[3162]=589,e[3165]=891,e[3166]=892,e[3169]=1274,e[3170]=1275,e[3173]=1278,e[3174]=1279,e[3181]=7622,e[3182]=7623,e[3282]=11799,e[3316]=578,e[3379]=42785,e[3393]=1159,e[3416]=8377}));t.getGlyphMapForStandardFonts=c;var l=(0,r.getLookupTableFactory)((function(e){e[227]=322,e[264]=261,e[291]=346}));t.getSupplementalGlyphMapForArialBlack=l;var u=(0,r.getLookupTableFactory)((function(e){e[1]=32,e[4]=65,e[17]=66,e[18]=67,e[24]=68,e[28]=69,e[38]=70,e[39]=71,e[44]=72,e[47]=73,e[58]=74,e[60]=75,e[62]=76,e[68]=77,e[69]=78,e[75]=79,e[87]=80,e[89]=81,e[90]=82,e[94]=83,e[100]=84,e[104]=85,e[115]=86,e[116]=87,e[121]=88,e[122]=89,e[127]=90,e[258]=97,e[268]=261,e[271]=98,e[272]=99,e[273]=263,e[282]=100,e[286]=101,e[295]=281,e[296]=102,e[336]=103,e[346]=104,e[349]=105,e[361]=106,e[364]=107,e[367]=108,e[371]=322,e[373]=109,e[374]=110,e[381]=111,e[383]=243,e[393]=112,e[395]=113,e[396]=114,e[400]=115,e[401]=347,e[410]=116,e[437]=117,e[448]=118,e[449]=119,e[454]=120,e[455]=121,e[460]=122,e[463]=380,e[853]=44,e[855]=58,e[856]=46,e[876]=47,e[878]=45,e[882]=45,e[894]=40,e[895]=41,e[896]=91,e[897]=93,e[923]=64,e[1004]=48,e[1005]=49,e[1006]=50,e[1007]=51,e[1008]=52,e[1009]=53,e[1010]=54,e[1011]=55,e[1012]=56,e[1013]=57,e[1081]=37,e[1085]=43,e[1086]=45}));t.getSupplementalGlyphMapForCalibri=u},function(e,t,a){var r=a(8).getLookupTableFactory,n=r((function(e){e[63721]=169,e[63193]=169,e[63720]=174,e[63194]=174,e[63722]=8482,e[63195]=8482,e[63729]=9127,e[63730]=9128,e[63731]=9129,e[63740]=9131,e[63741]=9132,e[63742]=9133,e[63726]=9121,e[63727]=9122,e[63728]=9123,e[63737]=9124,e[63738]=9125,e[63739]=9126,e[63723]=9115,e[63724]=9116,e[63725]=9117,e[63734]=9118,e[63735]=9119,e[63736]=9120}));var i=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}];var o=r((function(e){e[\"\\xa8\"]=\" \\u0308\",e[\"\\xaf\"]=\" \\u0304\",e[\"\\xb4\"]=\" \\u0301\",e[\"\\xb5\"]=\"\\u03bc\",e[\"\\xb8\"]=\" \\u0327\",e[\"\\u0132\"]=\"IJ\",e[\"\\u0133\"]=\"ij\",e[\"\\u013f\"]=\"L\\xb7\",e[\"\\u0140\"]=\"l\\xb7\",e[\"\\u0149\"]=\"\\u02bcn\",e[\"\\u017f\"]=\"s\",e[\"\\u01c4\"]=\"D\\u017d\",e[\"\\u01c5\"]=\"D\\u017e\",e[\"\\u01c6\"]=\"d\\u017e\",e[\"\\u01c7\"]=\"LJ\",e[\"\\u01c8\"]=\"Lj\",e[\"\\u01c9\"]=\"lj\",e[\"\\u01ca\"]=\"NJ\",e[\"\\u01cb\"]=\"Nj\",e[\"\\u01cc\"]=\"nj\",e[\"\\u01f1\"]=\"DZ\",e[\"\\u01f2\"]=\"Dz\",e[\"\\u01f3\"]=\"dz\",e[\"\\u02d8\"]=\" \\u0306\",e[\"\\u02d9\"]=\" \\u0307\",e[\"\\u02da\"]=\" \\u030a\",e[\"\\u02db\"]=\" \\u0328\",e[\"\\u02dc\"]=\" \\u0303\",e[\"\\u02dd\"]=\" \\u030b\",e[\"\\u037a\"]=\" \\u0345\",e[\"\\u0384\"]=\" \\u0301\",e[\"\\u03d0\"]=\"\\u03b2\",e[\"\\u03d1\"]=\"\\u03b8\",e[\"\\u03d2\"]=\"\\u03a5\",e[\"\\u03d5\"]=\"\\u03c6\",e[\"\\u03d6\"]=\"\\u03c0\",e[\"\\u03f0\"]=\"\\u03ba\",e[\"\\u03f1\"]=\"\\u03c1\",e[\"\\u03f2\"]=\"\\u03c2\",e[\"\\u03f4\"]=\"\\u0398\",e[\"\\u03f5\"]=\"\\u03b5\",e[\"\\u03f9\"]=\"\\u03a3\",e[\"\\u0587\"]=\"\\u0565\\u0582\",e[\"\\u0675\"]=\"\\u0627\\u0674\",e[\"\\u0676\"]=\"\\u0648\\u0674\",e[\"\\u0677\"]=\"\\u06c7\\u0674\",e[\"\\u0678\"]=\"\\u064a\\u0674\",e[\"\\u0e33\"]=\"\\u0e4d\\u0e32\",e[\"\\u0eb3\"]=\"\\u0ecd\\u0eb2\",e[\"\\u0edc\"]=\"\\u0eab\\u0e99\",e[\"\\u0edd\"]=\"\\u0eab\\u0ea1\",e[\"\\u0f77\"]=\"\\u0fb2\\u0f81\",e[\"\\u0f79\"]=\"\\u0fb3\\u0f81\",e[\"\\u1e9a\"]=\"a\\u02be\",e[\"\\u1fbd\"]=\" \\u0313\",e[\"\\u1fbf\"]=\" \\u0313\",e[\"\\u1fc0\"]=\" \\u0342\",e[\"\\u1ffe\"]=\" \\u0314\",e[\"\\u2002\"]=\" \",e[\"\\u2003\"]=\" \",e[\"\\u2004\"]=\" \",e[\"\\u2005\"]=\" \",e[\"\\u2006\"]=\" \",e[\"\\u2008\"]=\" \",e[\"\\u2009\"]=\" \",e[\"\\u200a\"]=\" \",e[\"\\u2017\"]=\" \\u0333\",e[\"\\u2024\"]=\".\",e[\"\\u2025\"]=\"..\",e[\"\\u2026\"]=\"...\",e[\"\\u2033\"]=\"\\u2032\\u2032\",e[\"\\u2034\"]=\"\\u2032\\u2032\\u2032\",e[\"\\u2036\"]=\"\\u2035\\u2035\",e[\"\\u2037\"]=\"\\u2035\\u2035\\u2035\",e[\"\\u203c\"]=\"!!\",e[\"\\u203e\"]=\" \\u0305\",e[\"\\u2047\"]=\"??\",e[\"\\u2048\"]=\"?!\",e[\"\\u2049\"]=\"!?\",e[\"\\u2057\"]=\"\\u2032\\u2032\\u2032\\u2032\",e[\"\\u205f\"]=\" \",e[\"\\u20a8\"]=\"Rs\",e[\"\\u2100\"]=\"a/c\",e[\"\\u2101\"]=\"a/s\",e[\"\\u2103\"]=\"\\xb0C\",e[\"\\u2105\"]=\"c/o\",e[\"\\u2106\"]=\"c/u\",e[\"\\u2107\"]=\"\\u0190\",e[\"\\u2109\"]=\"\\xb0F\",e[\"\\u2116\"]=\"No\",e[\"\\u2121\"]=\"TEL\",e[\"\\u2135\"]=\"\\u05d0\",e[\"\\u2136\"]=\"\\u05d1\",e[\"\\u2137\"]=\"\\u05d2\",e[\"\\u2138\"]=\"\\u05d3\",e[\"\\u213b\"]=\"FAX\",e[\"\\u2160\"]=\"I\",e[\"\\u2161\"]=\"II\",e[\"\\u2162\"]=\"III\",e[\"\\u2163\"]=\"IV\",e[\"\\u2164\"]=\"V\",e[\"\\u2165\"]=\"VI\",e[\"\\u2166\"]=\"VII\",e[\"\\u2167\"]=\"VIII\",e[\"\\u2168\"]=\"IX\",e[\"\\u2169\"]=\"X\",e[\"\\u216a\"]=\"XI\",e[\"\\u216b\"]=\"XII\",e[\"\\u216c\"]=\"L\",e[\"\\u216d\"]=\"C\",e[\"\\u216e\"]=\"D\",e[\"\\u216f\"]=\"M\",e[\"\\u2170\"]=\"i\",e[\"\\u2171\"]=\"ii\",e[\"\\u2172\"]=\"iii\",e[\"\\u2173\"]=\"iv\",e[\"\\u2174\"]=\"v\",e[\"\\u2175\"]=\"vi\",e[\"\\u2176\"]=\"vii\",e[\"\\u2177\"]=\"viii\",e[\"\\u2178\"]=\"ix\",e[\"\\u2179\"]=\"x\",e[\"\\u217a\"]=\"xi\",e[\"\\u217b\"]=\"xii\",e[\"\\u217c\"]=\"l\",e[\"\\u217d\"]=\"c\",e[\"\\u217e\"]=\"d\",e[\"\\u217f\"]=\"m\",e[\"\\u222c\"]=\"\\u222b\\u222b\",e[\"\\u222d\"]=\"\\u222b\\u222b\\u222b\",e[\"\\u222f\"]=\"\\u222e\\u222e\",e[\"\\u2230\"]=\"\\u222e\\u222e\\u222e\",e[\"\\u2474\"]=\"(1)\",e[\"\\u2475\"]=\"(2)\",e[\"\\u2476\"]=\"(3)\",e[\"\\u2477\"]=\"(4)\",e[\"\\u2478\"]=\"(5)\",e[\"\\u2479\"]=\"(6)\",e[\"\\u247a\"]=\"(7)\",e[\"\\u247b\"]=\"(8)\",e[\"\\u247c\"]=\"(9)\",e[\"\\u247d\"]=\"(10)\",e[\"\\u247e\"]=\"(11)\",e[\"\\u247f\"]=\"(12)\",e[\"\\u2480\"]=\"(13)\",e[\"\\u2481\"]=\"(14)\",e[\"\\u2482\"]=\"(15)\",e[\"\\u2483\"]=\"(16)\",e[\"\\u2484\"]=\"(17)\",e[\"\\u2485\"]=\"(18)\",e[\"\\u2486\"]=\"(19)\",e[\"\\u2487\"]=\"(20)\",e[\"\\u2488\"]=\"1.\",e[\"\\u2489\"]=\"2.\",e[\"\\u248a\"]=\"3.\",e[\"\\u248b\"]=\"4.\",e[\"\\u248c\"]=\"5.\",e[\"\\u248d\"]=\"6.\",e[\"\\u248e\"]=\"7.\",e[\"\\u248f\"]=\"8.\",e[\"\\u2490\"]=\"9.\",e[\"\\u2491\"]=\"10.\",e[\"\\u2492\"]=\"11.\",e[\"\\u2493\"]=\"12.\",e[\"\\u2494\"]=\"13.\",e[\"\\u2495\"]=\"14.\",e[\"\\u2496\"]=\"15.\",e[\"\\u2497\"]=\"16.\",e[\"\\u2498\"]=\"17.\",e[\"\\u2499\"]=\"18.\",e[\"\\u249a\"]=\"19.\",e[\"\\u249b\"]=\"20.\",e[\"\\u249c\"]=\"(a)\",e[\"\\u249d\"]=\"(b)\",e[\"\\u249e\"]=\"(c)\",e[\"\\u249f\"]=\"(d)\",e[\"\\u24a0\"]=\"(e)\",e[\"\\u24a1\"]=\"(f)\",e[\"\\u24a2\"]=\"(g)\",e[\"\\u24a3\"]=\"(h)\",e[\"\\u24a4\"]=\"(i)\",e[\"\\u24a5\"]=\"(j)\",e[\"\\u24a6\"]=\"(k)\",e[\"\\u24a7\"]=\"(l)\",e[\"\\u24a8\"]=\"(m)\",e[\"\\u24a9\"]=\"(n)\",e[\"\\u24aa\"]=\"(o)\",e[\"\\u24ab\"]=\"(p)\",e[\"\\u24ac\"]=\"(q)\",e[\"\\u24ad\"]=\"(r)\",e[\"\\u24ae\"]=\"(s)\",e[\"\\u24af\"]=\"(t)\",e[\"\\u24b0\"]=\"(u)\",e[\"\\u24b1\"]=\"(v)\",e[\"\\u24b2\"]=\"(w)\",e[\"\\u24b3\"]=\"(x)\",e[\"\\u24b4\"]=\"(y)\",e[\"\\u24b5\"]=\"(z)\",e[\"\\u2a0c\"]=\"\\u222b\\u222b\\u222b\\u222b\",e[\"\\u2a74\"]=\"::=\",e[\"\\u2a75\"]=\"==\",e[\"\\u2a76\"]=\"===\",e[\"\\u2e9f\"]=\"\\u6bcd\",e[\"\\u2ef3\"]=\"\\u9f9f\",e[\"\\u2f00\"]=\"\\u4e00\",e[\"\\u2f01\"]=\"\\u4e28\",e[\"\\u2f02\"]=\"\\u4e36\",e[\"\\u2f03\"]=\"\\u4e3f\",e[\"\\u2f04\"]=\"\\u4e59\",e[\"\\u2f05\"]=\"\\u4e85\",e[\"\\u2f06\"]=\"\\u4e8c\",e[\"\\u2f07\"]=\"\\u4ea0\",e[\"\\u2f08\"]=\"\\u4eba\",e[\"\\u2f09\"]=\"\\u513f\",e[\"\\u2f0a\"]=\"\\u5165\",e[\"\\u2f0b\"]=\"\\u516b\",e[\"\\u2f0c\"]=\"\\u5182\",e[\"\\u2f0d\"]=\"\\u5196\",e[\"\\u2f0e\"]=\"\\u51ab\",e[\"\\u2f0f\"]=\"\\u51e0\",e[\"\\u2f10\"]=\"\\u51f5\",e[\"\\u2f11\"]=\"\\u5200\",e[\"\\u2f12\"]=\"\\u529b\",e[\"\\u2f13\"]=\"\\u52f9\",e[\"\\u2f14\"]=\"\\u5315\",e[\"\\u2f15\"]=\"\\u531a\",e[\"\\u2f16\"]=\"\\u5338\",e[\"\\u2f17\"]=\"\\u5341\",e[\"\\u2f18\"]=\"\\u535c\",e[\"\\u2f19\"]=\"\\u5369\",e[\"\\u2f1a\"]=\"\\u5382\",e[\"\\u2f1b\"]=\"\\u53b6\",e[\"\\u2f1c\"]=\"\\u53c8\",e[\"\\u2f1d\"]=\"\\u53e3\",e[\"\\u2f1e\"]=\"\\u56d7\",e[\"\\u2f1f\"]=\"\\u571f\",e[\"\\u2f20\"]=\"\\u58eb\",e[\"\\u2f21\"]=\"\\u5902\",e[\"\\u2f22\"]=\"\\u590a\",e[\"\\u2f23\"]=\"\\u5915\",e[\"\\u2f24\"]=\"\\u5927\",e[\"\\u2f25\"]=\"\\u5973\",e[\"\\u2f26\"]=\"\\u5b50\",e[\"\\u2f27\"]=\"\\u5b80\",e[\"\\u2f28\"]=\"\\u5bf8\",e[\"\\u2f29\"]=\"\\u5c0f\",e[\"\\u2f2a\"]=\"\\u5c22\",e[\"\\u2f2b\"]=\"\\u5c38\",e[\"\\u2f2c\"]=\"\\u5c6e\",e[\"\\u2f2d\"]=\"\\u5c71\",e[\"\\u2f2e\"]=\"\\u5ddb\",e[\"\\u2f2f\"]=\"\\u5de5\",e[\"\\u2f30\"]=\"\\u5df1\",e[\"\\u2f31\"]=\"\\u5dfe\",e[\"\\u2f32\"]=\"\\u5e72\",e[\"\\u2f33\"]=\"\\u5e7a\",e[\"\\u2f34\"]=\"\\u5e7f\",e[\"\\u2f35\"]=\"\\u5ef4\",e[\"\\u2f36\"]=\"\\u5efe\",e[\"\\u2f37\"]=\"\\u5f0b\",e[\"\\u2f38\"]=\"\\u5f13\",e[\"\\u2f39\"]=\"\\u5f50\",e[\"\\u2f3a\"]=\"\\u5f61\",e[\"\\u2f3b\"]=\"\\u5f73\",e[\"\\u2f3c\"]=\"\\u5fc3\",e[\"\\u2f3d\"]=\"\\u6208\",e[\"\\u2f3e\"]=\"\\u6236\",e[\"\\u2f3f\"]=\"\\u624b\",e[\"\\u2f40\"]=\"\\u652f\",e[\"\\u2f41\"]=\"\\u6534\",e[\"\\u2f42\"]=\"\\u6587\",e[\"\\u2f43\"]=\"\\u6597\",e[\"\\u2f44\"]=\"\\u65a4\",e[\"\\u2f45\"]=\"\\u65b9\",e[\"\\u2f46\"]=\"\\u65e0\",e[\"\\u2f47\"]=\"\\u65e5\",e[\"\\u2f48\"]=\"\\u66f0\",e[\"\\u2f49\"]=\"\\u6708\",e[\"\\u2f4a\"]=\"\\u6728\",e[\"\\u2f4b\"]=\"\\u6b20\",e[\"\\u2f4c\"]=\"\\u6b62\",e[\"\\u2f4d\"]=\"\\u6b79\",e[\"\\u2f4e\"]=\"\\u6bb3\",e[\"\\u2f4f\"]=\"\\u6bcb\",e[\"\\u2f50\"]=\"\\u6bd4\",e[\"\\u2f51\"]=\"\\u6bdb\",e[\"\\u2f52\"]=\"\\u6c0f\",e[\"\\u2f53\"]=\"\\u6c14\",e[\"\\u2f54\"]=\"\\u6c34\",e[\"\\u2f55\"]=\"\\u706b\",e[\"\\u2f56\"]=\"\\u722a\",e[\"\\u2f57\"]=\"\\u7236\",e[\"\\u2f58\"]=\"\\u723b\",e[\"\\u2f59\"]=\"\\u723f\",e[\"\\u2f5a\"]=\"\\u7247\",e[\"\\u2f5b\"]=\"\\u7259\",e[\"\\u2f5c\"]=\"\\u725b\",e[\"\\u2f5d\"]=\"\\u72ac\",e[\"\\u2f5e\"]=\"\\u7384\",e[\"\\u2f5f\"]=\"\\u7389\",e[\"\\u2f60\"]=\"\\u74dc\",e[\"\\u2f61\"]=\"\\u74e6\",e[\"\\u2f62\"]=\"\\u7518\",e[\"\\u2f63\"]=\"\\u751f\",e[\"\\u2f64\"]=\"\\u7528\",e[\"\\u2f65\"]=\"\\u7530\",e[\"\\u2f66\"]=\"\\u758b\",e[\"\\u2f67\"]=\"\\u7592\",e[\"\\u2f68\"]=\"\\u7676\",e[\"\\u2f69\"]=\"\\u767d\",e[\"\\u2f6a\"]=\"\\u76ae\",e[\"\\u2f6b\"]=\"\\u76bf\",e[\"\\u2f6c\"]=\"\\u76ee\",e[\"\\u2f6d\"]=\"\\u77db\",e[\"\\u2f6e\"]=\"\\u77e2\",e[\"\\u2f6f\"]=\"\\u77f3\",e[\"\\u2f70\"]=\"\\u793a\",e[\"\\u2f71\"]=\"\\u79b8\",e[\"\\u2f72\"]=\"\\u79be\",e[\"\\u2f73\"]=\"\\u7a74\",e[\"\\u2f74\"]=\"\\u7acb\",e[\"\\u2f75\"]=\"\\u7af9\",e[\"\\u2f76\"]=\"\\u7c73\",e[\"\\u2f77\"]=\"\\u7cf8\",e[\"\\u2f78\"]=\"\\u7f36\",e[\"\\u2f79\"]=\"\\u7f51\",e[\"\\u2f7a\"]=\"\\u7f8a\",e[\"\\u2f7b\"]=\"\\u7fbd\",e[\"\\u2f7c\"]=\"\\u8001\",e[\"\\u2f7d\"]=\"\\u800c\",e[\"\\u2f7e\"]=\"\\u8012\",e[\"\\u2f7f\"]=\"\\u8033\",e[\"\\u2f80\"]=\"\\u807f\",e[\"\\u2f81\"]=\"\\u8089\",e[\"\\u2f82\"]=\"\\u81e3\",e[\"\\u2f83\"]=\"\\u81ea\",e[\"\\u2f84\"]=\"\\u81f3\",e[\"\\u2f85\"]=\"\\u81fc\",e[\"\\u2f86\"]=\"\\u820c\",e[\"\\u2f87\"]=\"\\u821b\",e[\"\\u2f88\"]=\"\\u821f\",e[\"\\u2f89\"]=\"\\u826e\",e[\"\\u2f8a\"]=\"\\u8272\",e[\"\\u2f8b\"]=\"\\u8278\",e[\"\\u2f8c\"]=\"\\u864d\",e[\"\\u2f8d\"]=\"\\u866b\",e[\"\\u2f8e\"]=\"\\u8840\",e[\"\\u2f8f\"]=\"\\u884c\",e[\"\\u2f90\"]=\"\\u8863\",e[\"\\u2f91\"]=\"\\u897e\",e[\"\\u2f92\"]=\"\\u898b\",e[\"\\u2f93\"]=\"\\u89d2\",e[\"\\u2f94\"]=\"\\u8a00\",e[\"\\u2f95\"]=\"\\u8c37\",e[\"\\u2f96\"]=\"\\u8c46\",e[\"\\u2f97\"]=\"\\u8c55\",e[\"\\u2f98\"]=\"\\u8c78\",e[\"\\u2f99\"]=\"\\u8c9d\",e[\"\\u2f9a\"]=\"\\u8d64\",e[\"\\u2f9b\"]=\"\\u8d70\",e[\"\\u2f9c\"]=\"\\u8db3\",e[\"\\u2f9d\"]=\"\\u8eab\",e[\"\\u2f9e\"]=\"\\u8eca\",e[\"\\u2f9f\"]=\"\\u8f9b\",e[\"\\u2fa0\"]=\"\\u8fb0\",e[\"\\u2fa1\"]=\"\\u8fb5\",e[\"\\u2fa2\"]=\"\\u9091\",e[\"\\u2fa3\"]=\"\\u9149\",e[\"\\u2fa4\"]=\"\\u91c6\",e[\"\\u2fa5\"]=\"\\u91cc\",e[\"\\u2fa6\"]=\"\\u91d1\",e[\"\\u2fa7\"]=\"\\u9577\",e[\"\\u2fa8\"]=\"\\u9580\",e[\"\\u2fa9\"]=\"\\u961c\",e[\"\\u2faa\"]=\"\\u96b6\",e[\"\\u2fab\"]=\"\\u96b9\",e[\"\\u2fac\"]=\"\\u96e8\",e[\"\\u2fad\"]=\"\\u9751\",e[\"\\u2fae\"]=\"\\u975e\",e[\"\\u2faf\"]=\"\\u9762\",e[\"\\u2fb0\"]=\"\\u9769\",e[\"\\u2fb1\"]=\"\\u97cb\",e[\"\\u2fb2\"]=\"\\u97ed\",e[\"\\u2fb3\"]=\"\\u97f3\",e[\"\\u2fb4\"]=\"\\u9801\",e[\"\\u2fb5\"]=\"\\u98a8\",e[\"\\u2fb6\"]=\"\\u98db\",e[\"\\u2fb7\"]=\"\\u98df\",e[\"\\u2fb8\"]=\"\\u9996\",e[\"\\u2fb9\"]=\"\\u9999\",e[\"\\u2fba\"]=\"\\u99ac\",e[\"\\u2fbb\"]=\"\\u9aa8\",e[\"\\u2fbc\"]=\"\\u9ad8\",e[\"\\u2fbd\"]=\"\\u9adf\",e[\"\\u2fbe\"]=\"\\u9b25\",e[\"\\u2fbf\"]=\"\\u9b2f\",e[\"\\u2fc0\"]=\"\\u9b32\",e[\"\\u2fc1\"]=\"\\u9b3c\",e[\"\\u2fc2\"]=\"\\u9b5a\",e[\"\\u2fc3\"]=\"\\u9ce5\",e[\"\\u2fc4\"]=\"\\u9e75\",e[\"\\u2fc5\"]=\"\\u9e7f\",e[\"\\u2fc6\"]=\"\\u9ea5\",e[\"\\u2fc7\"]=\"\\u9ebb\",e[\"\\u2fc8\"]=\"\\u9ec3\",e[\"\\u2fc9\"]=\"\\u9ecd\",e[\"\\u2fca\"]=\"\\u9ed1\",e[\"\\u2fcb\"]=\"\\u9ef9\",e[\"\\u2fcc\"]=\"\\u9efd\",e[\"\\u2fcd\"]=\"\\u9f0e\",e[\"\\u2fce\"]=\"\\u9f13\",e[\"\\u2fcf\"]=\"\\u9f20\",e[\"\\u2fd0\"]=\"\\u9f3b\",e[\"\\u2fd1\"]=\"\\u9f4a\",e[\"\\u2fd2\"]=\"\\u9f52\",e[\"\\u2fd3\"]=\"\\u9f8d\",e[\"\\u2fd4\"]=\"\\u9f9c\",e[\"\\u2fd5\"]=\"\\u9fa0\",e[\"\\u3036\"]=\"\\u3012\",e[\"\\u3038\"]=\"\\u5341\",e[\"\\u3039\"]=\"\\u5344\",e[\"\\u303a\"]=\"\\u5345\",e[\"\\u309b\"]=\" \\u3099\",e[\"\\u309c\"]=\" \\u309a\",e[\"\\u3131\"]=\"\\u1100\",e[\"\\u3132\"]=\"\\u1101\",e[\"\\u3133\"]=\"\\u11aa\",e[\"\\u3134\"]=\"\\u1102\",e[\"\\u3135\"]=\"\\u11ac\",e[\"\\u3136\"]=\"\\u11ad\",e[\"\\u3137\"]=\"\\u1103\",e[\"\\u3138\"]=\"\\u1104\",e[\"\\u3139\"]=\"\\u1105\",e[\"\\u313a\"]=\"\\u11b0\",e[\"\\u313b\"]=\"\\u11b1\",e[\"\\u313c\"]=\"\\u11b2\",e[\"\\u313d\"]=\"\\u11b3\",e[\"\\u313e\"]=\"\\u11b4\",e[\"\\u313f\"]=\"\\u11b5\",e[\"\\u3140\"]=\"\\u111a\",e[\"\\u3141\"]=\"\\u1106\",e[\"\\u3142\"]=\"\\u1107\",e[\"\\u3143\"]=\"\\u1108\",e[\"\\u3144\"]=\"\\u1121\",e[\"\\u3145\"]=\"\\u1109\",e[\"\\u3146\"]=\"\\u110a\",e[\"\\u3147\"]=\"\\u110b\",e[\"\\u3148\"]=\"\\u110c\",e[\"\\u3149\"]=\"\\u110d\",e[\"\\u314a\"]=\"\\u110e\",e[\"\\u314b\"]=\"\\u110f\",e[\"\\u314c\"]=\"\\u1110\",e[\"\\u314d\"]=\"\\u1111\",e[\"\\u314e\"]=\"\\u1112\",e[\"\\u314f\"]=\"\\u1161\",e[\"\\u3150\"]=\"\\u1162\",e[\"\\u3151\"]=\"\\u1163\",e[\"\\u3152\"]=\"\\u1164\",e[\"\\u3153\"]=\"\\u1165\",e[\"\\u3154\"]=\"\\u1166\",e[\"\\u3155\"]=\"\\u1167\",e[\"\\u3156\"]=\"\\u1168\",e[\"\\u3157\"]=\"\\u1169\",e[\"\\u3158\"]=\"\\u116a\",e[\"\\u3159\"]=\"\\u116b\",e[\"\\u315a\"]=\"\\u116c\",e[\"\\u315b\"]=\"\\u116d\",e[\"\\u315c\"]=\"\\u116e\",e[\"\\u315d\"]=\"\\u116f\",e[\"\\u315e\"]=\"\\u1170\",e[\"\\u315f\"]=\"\\u1171\",e[\"\\u3160\"]=\"\\u1172\",e[\"\\u3161\"]=\"\\u1173\",e[\"\\u3162\"]=\"\\u1174\",e[\"\\u3163\"]=\"\\u1175\",e[\"\\u3164\"]=\"\\u1160\",e[\"\\u3165\"]=\"\\u1114\",e[\"\\u3166\"]=\"\\u1115\",e[\"\\u3167\"]=\"\\u11c7\",e[\"\\u3168\"]=\"\\u11c8\",e[\"\\u3169\"]=\"\\u11cc\",e[\"\\u316a\"]=\"\\u11ce\",e[\"\\u316b\"]=\"\\u11d3\",e[\"\\u316c\"]=\"\\u11d7\",e[\"\\u316d\"]=\"\\u11d9\",e[\"\\u316e\"]=\"\\u111c\",e[\"\\u316f\"]=\"\\u11dd\",e[\"\\u3170\"]=\"\\u11df\",e[\"\\u3171\"]=\"\\u111d\",e[\"\\u3172\"]=\"\\u111e\",e[\"\\u3173\"]=\"\\u1120\",e[\"\\u3174\"]=\"\\u1122\",e[\"\\u3175\"]=\"\\u1123\",e[\"\\u3176\"]=\"\\u1127\",e[\"\\u3177\"]=\"\\u1129\",e[\"\\u3178\"]=\"\\u112b\",e[\"\\u3179\"]=\"\\u112c\",e[\"\\u317a\"]=\"\\u112d\",e[\"\\u317b\"]=\"\\u112e\",e[\"\\u317c\"]=\"\\u112f\",e[\"\\u317d\"]=\"\\u1132\",e[\"\\u317e\"]=\"\\u1136\",e[\"\\u317f\"]=\"\\u1140\",e[\"\\u3180\"]=\"\\u1147\",e[\"\\u3181\"]=\"\\u114c\",e[\"\\u3182\"]=\"\\u11f1\",e[\"\\u3183\"]=\"\\u11f2\",e[\"\\u3184\"]=\"\\u1157\",e[\"\\u3185\"]=\"\\u1158\",e[\"\\u3186\"]=\"\\u1159\",e[\"\\u3187\"]=\"\\u1184\",e[\"\\u3188\"]=\"\\u1185\",e[\"\\u3189\"]=\"\\u1188\",e[\"\\u318a\"]=\"\\u1191\",e[\"\\u318b\"]=\"\\u1192\",e[\"\\u318c\"]=\"\\u1194\",e[\"\\u318d\"]=\"\\u119e\",e[\"\\u318e\"]=\"\\u11a1\",e[\"\\u3200\"]=\"(\\u1100)\",e[\"\\u3201\"]=\"(\\u1102)\",e[\"\\u3202\"]=\"(\\u1103)\",e[\"\\u3203\"]=\"(\\u1105)\",e[\"\\u3204\"]=\"(\\u1106)\",e[\"\\u3205\"]=\"(\\u1107)\",e[\"\\u3206\"]=\"(\\u1109)\",e[\"\\u3207\"]=\"(\\u110b)\",e[\"\\u3208\"]=\"(\\u110c)\",e[\"\\u3209\"]=\"(\\u110e)\",e[\"\\u320a\"]=\"(\\u110f)\",e[\"\\u320b\"]=\"(\\u1110)\",e[\"\\u320c\"]=\"(\\u1111)\",e[\"\\u320d\"]=\"(\\u1112)\",e[\"\\u320e\"]=\"(\\u1100\\u1161)\",e[\"\\u320f\"]=\"(\\u1102\\u1161)\",e[\"\\u3210\"]=\"(\\u1103\\u1161)\",e[\"\\u3211\"]=\"(\\u1105\\u1161)\",e[\"\\u3212\"]=\"(\\u1106\\u1161)\",e[\"\\u3213\"]=\"(\\u1107\\u1161)\",e[\"\\u3214\"]=\"(\\u1109\\u1161)\",e[\"\\u3215\"]=\"(\\u110b\\u1161)\",e[\"\\u3216\"]=\"(\\u110c\\u1161)\",e[\"\\u3217\"]=\"(\\u110e\\u1161)\",e[\"\\u3218\"]=\"(\\u110f\\u1161)\",e[\"\\u3219\"]=\"(\\u1110\\u1161)\",e[\"\\u321a\"]=\"(\\u1111\\u1161)\",e[\"\\u321b\"]=\"(\\u1112\\u1161)\",e[\"\\u321c\"]=\"(\\u110c\\u116e)\",e[\"\\u321d\"]=\"(\\u110b\\u1169\\u110c\\u1165\\u11ab)\",e[\"\\u321e\"]=\"(\\u110b\\u1169\\u1112\\u116e)\",e[\"\\u3220\"]=\"(\\u4e00)\",e[\"\\u3221\"]=\"(\\u4e8c)\",e[\"\\u3222\"]=\"(\\u4e09)\",e[\"\\u3223\"]=\"(\\u56db)\",e[\"\\u3224\"]=\"(\\u4e94)\",e[\"\\u3225\"]=\"(\\u516d)\",e[\"\\u3226\"]=\"(\\u4e03)\",e[\"\\u3227\"]=\"(\\u516b)\",e[\"\\u3228\"]=\"(\\u4e5d)\",e[\"\\u3229\"]=\"(\\u5341)\",e[\"\\u322a\"]=\"(\\u6708)\",e[\"\\u322b\"]=\"(\\u706b)\",e[\"\\u322c\"]=\"(\\u6c34)\",e[\"\\u322d\"]=\"(\\u6728)\",e[\"\\u322e\"]=\"(\\u91d1)\",e[\"\\u322f\"]=\"(\\u571f)\",e[\"\\u3230\"]=\"(\\u65e5)\",e[\"\\u3231\"]=\"(\\u682a)\",e[\"\\u3232\"]=\"(\\u6709)\",e[\"\\u3233\"]=\"(\\u793e)\",e[\"\\u3234\"]=\"(\\u540d)\",e[\"\\u3235\"]=\"(\\u7279)\",e[\"\\u3236\"]=\"(\\u8ca1)\",e[\"\\u3237\"]=\"(\\u795d)\",e[\"\\u3238\"]=\"(\\u52b4)\",e[\"\\u3239\"]=\"(\\u4ee3)\",e[\"\\u323a\"]=\"(\\u547c)\",e[\"\\u323b\"]=\"(\\u5b66)\",e[\"\\u323c\"]=\"(\\u76e3)\",e[\"\\u323d\"]=\"(\\u4f01)\",e[\"\\u323e\"]=\"(\\u8cc7)\",e[\"\\u323f\"]=\"(\\u5354)\",e[\"\\u3240\"]=\"(\\u796d)\",e[\"\\u3241\"]=\"(\\u4f11)\",e[\"\\u3242\"]=\"(\\u81ea)\",e[\"\\u3243\"]=\"(\\u81f3)\",e[\"\\u32c0\"]=\"1\\u6708\",e[\"\\u32c1\"]=\"2\\u6708\",e[\"\\u32c2\"]=\"3\\u6708\",e[\"\\u32c3\"]=\"4\\u6708\",e[\"\\u32c4\"]=\"5\\u6708\",e[\"\\u32c5\"]=\"6\\u6708\",e[\"\\u32c6\"]=\"7\\u6708\",e[\"\\u32c7\"]=\"8\\u6708\",e[\"\\u32c8\"]=\"9\\u6708\",e[\"\\u32c9\"]=\"10\\u6708\",e[\"\\u32ca\"]=\"11\\u6708\",e[\"\\u32cb\"]=\"12\\u6708\",e[\"\\u3358\"]=\"0\\u70b9\",e[\"\\u3359\"]=\"1\\u70b9\",e[\"\\u335a\"]=\"2\\u70b9\",e[\"\\u335b\"]=\"3\\u70b9\",e[\"\\u335c\"]=\"4\\u70b9\",e[\"\\u335d\"]=\"5\\u70b9\",e[\"\\u335e\"]=\"6\\u70b9\",e[\"\\u335f\"]=\"7\\u70b9\",e[\"\\u3360\"]=\"8\\u70b9\",e[\"\\u3361\"]=\"9\\u70b9\",e[\"\\u3362\"]=\"10\\u70b9\",e[\"\\u3363\"]=\"11\\u70b9\",e[\"\\u3364\"]=\"12\\u70b9\",e[\"\\u3365\"]=\"13\\u70b9\",e[\"\\u3366\"]=\"14\\u70b9\",e[\"\\u3367\"]=\"15\\u70b9\",e[\"\\u3368\"]=\"16\\u70b9\",e[\"\\u3369\"]=\"17\\u70b9\",e[\"\\u336a\"]=\"18\\u70b9\",e[\"\\u336b\"]=\"19\\u70b9\",e[\"\\u336c\"]=\"20\\u70b9\",e[\"\\u336d\"]=\"21\\u70b9\",e[\"\\u336e\"]=\"22\\u70b9\",e[\"\\u336f\"]=\"23\\u70b9\",e[\"\\u3370\"]=\"24\\u70b9\",e[\"\\u33e0\"]=\"1\\u65e5\",e[\"\\u33e1\"]=\"2\\u65e5\",e[\"\\u33e2\"]=\"3\\u65e5\",e[\"\\u33e3\"]=\"4\\u65e5\",e[\"\\u33e4\"]=\"5\\u65e5\",e[\"\\u33e5\"]=\"6\\u65e5\",e[\"\\u33e6\"]=\"7\\u65e5\",e[\"\\u33e7\"]=\"8\\u65e5\",e[\"\\u33e8\"]=\"9\\u65e5\",e[\"\\u33e9\"]=\"10\\u65e5\",e[\"\\u33ea\"]=\"11\\u65e5\",e[\"\\u33eb\"]=\"12\\u65e5\",e[\"\\u33ec\"]=\"13\\u65e5\",e[\"\\u33ed\"]=\"14\\u65e5\",e[\"\\u33ee\"]=\"15\\u65e5\",e[\"\\u33ef\"]=\"16\\u65e5\",e[\"\\u33f0\"]=\"17\\u65e5\",e[\"\\u33f1\"]=\"18\\u65e5\",e[\"\\u33f2\"]=\"19\\u65e5\",e[\"\\u33f3\"]=\"20\\u65e5\",e[\"\\u33f4\"]=\"21\\u65e5\",e[\"\\u33f5\"]=\"22\\u65e5\",e[\"\\u33f6\"]=\"23\\u65e5\",e[\"\\u33f7\"]=\"24\\u65e5\",e[\"\\u33f8\"]=\"25\\u65e5\",e[\"\\u33f9\"]=\"26\\u65e5\",e[\"\\u33fa\"]=\"27\\u65e5\",e[\"\\u33fb\"]=\"28\\u65e5\",e[\"\\u33fc\"]=\"29\\u65e5\",e[\"\\u33fd\"]=\"30\\u65e5\",e[\"\\u33fe\"]=\"31\\u65e5\",e[\"\\ufb00\"]=\"ff\",e[\"\\ufb01\"]=\"fi\",e[\"\\ufb02\"]=\"fl\",e[\"\\ufb03\"]=\"ffi\",e[\"\\ufb04\"]=\"ffl\",e[\"\\ufb05\"]=\"\\u017ft\",e[\"\\ufb06\"]=\"st\",e[\"\\ufb13\"]=\"\\u0574\\u0576\",e[\"\\ufb14\"]=\"\\u0574\\u0565\",e[\"\\ufb15\"]=\"\\u0574\\u056b\",e[\"\\ufb16\"]=\"\\u057e\\u0576\",e[\"\\ufb17\"]=\"\\u0574\\u056d\",e[\"\\ufb4f\"]=\"\\u05d0\\u05dc\",e[\"\\ufb50\"]=\"\\u0671\",e[\"\\ufb51\"]=\"\\u0671\",e[\"\\ufb52\"]=\"\\u067b\",e[\"\\ufb53\"]=\"\\u067b\",e[\"\\ufb54\"]=\"\\u067b\",e[\"\\ufb55\"]=\"\\u067b\",e[\"\\ufb56\"]=\"\\u067e\",e[\"\\ufb57\"]=\"\\u067e\",e[\"\\ufb58\"]=\"\\u067e\",e[\"\\ufb59\"]=\"\\u067e\",e[\"\\ufb5a\"]=\"\\u0680\",e[\"\\ufb5b\"]=\"\\u0680\",e[\"\\ufb5c\"]=\"\\u0680\",e[\"\\ufb5d\"]=\"\\u0680\",e[\"\\ufb5e\"]=\"\\u067a\",e[\"\\ufb5f\"]=\"\\u067a\",e[\"\\ufb60\"]=\"\\u067a\",e[\"\\ufb61\"]=\"\\u067a\",e[\"\\ufb62\"]=\"\\u067f\",e[\"\\ufb63\"]=\"\\u067f\",e[\"\\ufb64\"]=\"\\u067f\",e[\"\\ufb65\"]=\"\\u067f\",e[\"\\ufb66\"]=\"\\u0679\",e[\"\\ufb67\"]=\"\\u0679\",e[\"\\ufb68\"]=\"\\u0679\",e[\"\\ufb69\"]=\"\\u0679\",e[\"\\ufb6a\"]=\"\\u06a4\",e[\"\\ufb6b\"]=\"\\u06a4\",e[\"\\ufb6c\"]=\"\\u06a4\",e[\"\\ufb6d\"]=\"\\u06a4\",e[\"\\ufb6e\"]=\"\\u06a6\",e[\"\\ufb6f\"]=\"\\u06a6\",e[\"\\ufb70\"]=\"\\u06a6\",e[\"\\ufb71\"]=\"\\u06a6\",e[\"\\ufb72\"]=\"\\u0684\",e[\"\\ufb73\"]=\"\\u0684\",e[\"\\ufb74\"]=\"\\u0684\",e[\"\\ufb75\"]=\"\\u0684\",e[\"\\ufb76\"]=\"\\u0683\",e[\"\\ufb77\"]=\"\\u0683\",e[\"\\ufb78\"]=\"\\u0683\",e[\"\\ufb79\"]=\"\\u0683\",e[\"\\ufb7a\"]=\"\\u0686\",e[\"\\ufb7b\"]=\"\\u0686\",e[\"\\ufb7c\"]=\"\\u0686\",e[\"\\ufb7d\"]=\"\\u0686\",e[\"\\ufb7e\"]=\"\\u0687\",e[\"\\ufb7f\"]=\"\\u0687\",e[\"\\ufb80\"]=\"\\u0687\",e[\"\\ufb81\"]=\"\\u0687\",e[\"\\ufb82\"]=\"\\u068d\",e[\"\\ufb83\"]=\"\\u068d\",e[\"\\ufb84\"]=\"\\u068c\",e[\"\\ufb85\"]=\"\\u068c\",e[\"\\ufb86\"]=\"\\u068e\",e[\"\\ufb87\"]=\"\\u068e\",e[\"\\ufb88\"]=\"\\u0688\",e[\"\\ufb89\"]=\"\\u0688\",e[\"\\ufb8a\"]=\"\\u0698\",e[\"\\ufb8b\"]=\"\\u0698\",e[\"\\ufb8c\"]=\"\\u0691\",e[\"\\ufb8d\"]=\"\\u0691\",e[\"\\ufb8e\"]=\"\\u06a9\",e[\"\\ufb8f\"]=\"\\u06a9\",e[\"\\ufb90\"]=\"\\u06a9\",e[\"\\ufb91\"]=\"\\u06a9\",e[\"\\ufb92\"]=\"\\u06af\",e[\"\\ufb93\"]=\"\\u06af\",e[\"\\ufb94\"]=\"\\u06af\",e[\"\\ufb95\"]=\"\\u06af\",e[\"\\ufb96\"]=\"\\u06b3\",e[\"\\ufb97\"]=\"\\u06b3\",e[\"\\ufb98\"]=\"\\u06b3\",e[\"\\ufb99\"]=\"\\u06b3\",e[\"\\ufb9a\"]=\"\\u06b1\",e[\"\\ufb9b\"]=\"\\u06b1\",e[\"\\ufb9c\"]=\"\\u06b1\",e[\"\\ufb9d\"]=\"\\u06b1\",e[\"\\ufb9e\"]=\"\\u06ba\",e[\"\\ufb9f\"]=\"\\u06ba\",e[\"\\ufba0\"]=\"\\u06bb\",e[\"\\ufba1\"]=\"\\u06bb\",e[\"\\ufba2\"]=\"\\u06bb\",e[\"\\ufba3\"]=\"\\u06bb\",e[\"\\ufba4\"]=\"\\u06c0\",e[\"\\ufba5\"]=\"\\u06c0\",e[\"\\ufba6\"]=\"\\u06c1\",e[\"\\ufba7\"]=\"\\u06c1\",e[\"\\ufba8\"]=\"\\u06c1\",e[\"\\ufba9\"]=\"\\u06c1\",e[\"\\ufbaa\"]=\"\\u06be\",e[\"\\ufbab\"]=\"\\u06be\",e[\"\\ufbac\"]=\"\\u06be\",e[\"\\ufbad\"]=\"\\u06be\",e[\"\\ufbae\"]=\"\\u06d2\",e[\"\\ufbaf\"]=\"\\u06d2\",e[\"\\ufbb0\"]=\"\\u06d3\",e[\"\\ufbb1\"]=\"\\u06d3\",e[\"\\ufbd3\"]=\"\\u06ad\",e[\"\\ufbd4\"]=\"\\u06ad\",e[\"\\ufbd5\"]=\"\\u06ad\",e[\"\\ufbd6\"]=\"\\u06ad\",e[\"\\ufbd7\"]=\"\\u06c7\",e[\"\\ufbd8\"]=\"\\u06c7\",e[\"\\ufbd9\"]=\"\\u06c6\",e[\"\\ufbda\"]=\"\\u06c6\",e[\"\\ufbdb\"]=\"\\u06c8\",e[\"\\ufbdc\"]=\"\\u06c8\",e[\"\\ufbdd\"]=\"\\u0677\",e[\"\\ufbde\"]=\"\\u06cb\",e[\"\\ufbdf\"]=\"\\u06cb\",e[\"\\ufbe0\"]=\"\\u06c5\",e[\"\\ufbe1\"]=\"\\u06c5\",e[\"\\ufbe2\"]=\"\\u06c9\",e[\"\\ufbe3\"]=\"\\u06c9\",e[\"\\ufbe4\"]=\"\\u06d0\",e[\"\\ufbe5\"]=\"\\u06d0\",e[\"\\ufbe6\"]=\"\\u06d0\",e[\"\\ufbe7\"]=\"\\u06d0\",e[\"\\ufbe8\"]=\"\\u0649\",e[\"\\ufbe9\"]=\"\\u0649\",e[\"\\ufbea\"]=\"\\u0626\\u0627\",e[\"\\ufbeb\"]=\"\\u0626\\u0627\",e[\"\\ufbec\"]=\"\\u0626\\u06d5\",e[\"\\ufbed\"]=\"\\u0626\\u06d5\",e[\"\\ufbee\"]=\"\\u0626\\u0648\",e[\"\\ufbef\"]=\"\\u0626\\u0648\",e[\"\\ufbf0\"]=\"\\u0626\\u06c7\",e[\"\\ufbf1\"]=\"\\u0626\\u06c7\",e[\"\\ufbf2\"]=\"\\u0626\\u06c6\",e[\"\\ufbf3\"]=\"\\u0626\\u06c6\",e[\"\\ufbf4\"]=\"\\u0626\\u06c8\",e[\"\\ufbf5\"]=\"\\u0626\\u06c8\",e[\"\\ufbf6\"]=\"\\u0626\\u06d0\";e[\"\\ufbf7\"]=\"\\u0626\\u06d0\",e[\"\\ufbf8\"]=\"\\u0626\\u06d0\",e[\"\\ufbf9\"]=\"\\u0626\\u0649\",e[\"\\ufbfa\"]=\"\\u0626\\u0649\",e[\"\\ufbfb\"]=\"\\u0626\\u0649\",e[\"\\ufbfc\"]=\"\\u06cc\",e[\"\\ufbfd\"]=\"\\u06cc\",e[\"\\ufbfe\"]=\"\\u06cc\",e[\"\\ufbff\"]=\"\\u06cc\",e[\"\\ufc00\"]=\"\\u0626\\u062c\",e[\"\\ufc01\"]=\"\\u0626\\u062d\",e[\"\\ufc02\"]=\"\\u0626\\u0645\",e[\"\\ufc03\"]=\"\\u0626\\u0649\",e[\"\\ufc04\"]=\"\\u0626\\u064a\",e[\"\\ufc05\"]=\"\\u0628\\u062c\",e[\"\\ufc06\"]=\"\\u0628\\u062d\",e[\"\\ufc07\"]=\"\\u0628\\u062e\",e[\"\\ufc08\"]=\"\\u0628\\u0645\",e[\"\\ufc09\"]=\"\\u0628\\u0649\",e[\"\\ufc0a\"]=\"\\u0628\\u064a\",e[\"\\ufc0b\"]=\"\\u062a\\u062c\",e[\"\\ufc0c\"]=\"\\u062a\\u062d\",e[\"\\ufc0d\"]=\"\\u062a\\u062e\",e[\"\\ufc0e\"]=\"\\u062a\\u0645\",e[\"\\ufc0f\"]=\"\\u062a\\u0649\",e[\"\\ufc10\"]=\"\\u062a\\u064a\",e[\"\\ufc11\"]=\"\\u062b\\u062c\",e[\"\\ufc12\"]=\"\\u062b\\u0645\",e[\"\\ufc13\"]=\"\\u062b\\u0649\",e[\"\\ufc14\"]=\"\\u062b\\u064a\",e[\"\\ufc15\"]=\"\\u062c\\u062d\",e[\"\\ufc16\"]=\"\\u062c\\u0645\",e[\"\\ufc17\"]=\"\\u062d\\u062c\",e[\"\\ufc18\"]=\"\\u062d\\u0645\",e[\"\\ufc19\"]=\"\\u062e\\u062c\",e[\"\\ufc1a\"]=\"\\u062e\\u062d\",e[\"\\ufc1b\"]=\"\\u062e\\u0645\",e[\"\\ufc1c\"]=\"\\u0633\\u062c\",e[\"\\ufc1d\"]=\"\\u0633\\u062d\",e[\"\\ufc1e\"]=\"\\u0633\\u062e\",e[\"\\ufc1f\"]=\"\\u0633\\u0645\",e[\"\\ufc20\"]=\"\\u0635\\u062d\",e[\"\\ufc21\"]=\"\\u0635\\u0645\",e[\"\\ufc22\"]=\"\\u0636\\u062c\",e[\"\\ufc23\"]=\"\\u0636\\u062d\",e[\"\\ufc24\"]=\"\\u0636\\u062e\",e[\"\\ufc25\"]=\"\\u0636\\u0645\",e[\"\\ufc26\"]=\"\\u0637\\u062d\",e[\"\\ufc27\"]=\"\\u0637\\u0645\",e[\"\\ufc28\"]=\"\\u0638\\u0645\",e[\"\\ufc29\"]=\"\\u0639\\u062c\",e[\"\\ufc2a\"]=\"\\u0639\\u0645\",e[\"\\ufc2b\"]=\"\\u063a\\u062c\",e[\"\\ufc2c\"]=\"\\u063a\\u0645\",e[\"\\ufc2d\"]=\"\\u0641\\u062c\",e[\"\\ufc2e\"]=\"\\u0641\\u062d\",e[\"\\ufc2f\"]=\"\\u0641\\u062e\",e[\"\\ufc30\"]=\"\\u0641\\u0645\",e[\"\\ufc31\"]=\"\\u0641\\u0649\",e[\"\\ufc32\"]=\"\\u0641\\u064a\",e[\"\\ufc33\"]=\"\\u0642\\u062d\",e[\"\\ufc34\"]=\"\\u0642\\u0645\",e[\"\\ufc35\"]=\"\\u0642\\u0649\",e[\"\\ufc36\"]=\"\\u0642\\u064a\",e[\"\\ufc37\"]=\"\\u0643\\u0627\",e[\"\\ufc38\"]=\"\\u0643\\u062c\",e[\"\\ufc39\"]=\"\\u0643\\u062d\",e[\"\\ufc3a\"]=\"\\u0643\\u062e\",e[\"\\ufc3b\"]=\"\\u0643\\u0644\",e[\"\\ufc3c\"]=\"\\u0643\\u0645\",e[\"\\ufc3d\"]=\"\\u0643\\u0649\",e[\"\\ufc3e\"]=\"\\u0643\\u064a\",e[\"\\ufc3f\"]=\"\\u0644\\u062c\",e[\"\\ufc40\"]=\"\\u0644\\u062d\",e[\"\\ufc41\"]=\"\\u0644\\u062e\",e[\"\\ufc42\"]=\"\\u0644\\u0645\",e[\"\\ufc43\"]=\"\\u0644\\u0649\",e[\"\\ufc44\"]=\"\\u0644\\u064a\",e[\"\\ufc45\"]=\"\\u0645\\u062c\",e[\"\\ufc46\"]=\"\\u0645\\u062d\",e[\"\\ufc47\"]=\"\\u0645\\u062e\",e[\"\\ufc48\"]=\"\\u0645\\u0645\",e[\"\\ufc49\"]=\"\\u0645\\u0649\",e[\"\\ufc4a\"]=\"\\u0645\\u064a\",e[\"\\ufc4b\"]=\"\\u0646\\u062c\",e[\"\\ufc4c\"]=\"\\u0646\\u062d\",e[\"\\ufc4d\"]=\"\\u0646\\u062e\",e[\"\\ufc4e\"]=\"\\u0646\\u0645\",e[\"\\ufc4f\"]=\"\\u0646\\u0649\",e[\"\\ufc50\"]=\"\\u0646\\u064a\",e[\"\\ufc51\"]=\"\\u0647\\u062c\",e[\"\\ufc52\"]=\"\\u0647\\u0645\",e[\"\\ufc53\"]=\"\\u0647\\u0649\",e[\"\\ufc54\"]=\"\\u0647\\u064a\",e[\"\\ufc55\"]=\"\\u064a\\u062c\",e[\"\\ufc56\"]=\"\\u064a\\u062d\",e[\"\\ufc57\"]=\"\\u064a\\u062e\",e[\"\\ufc58\"]=\"\\u064a\\u0645\",e[\"\\ufc59\"]=\"\\u064a\\u0649\",e[\"\\ufc5a\"]=\"\\u064a\\u064a\",e[\"\\ufc5b\"]=\"\\u0630\\u0670\",e[\"\\ufc5c\"]=\"\\u0631\\u0670\",e[\"\\ufc5d\"]=\"\\u0649\\u0670\",e[\"\\ufc5e\"]=\" \\u064c\\u0651\",e[\"\\ufc5f\"]=\" \\u064d\\u0651\",e[\"\\ufc60\"]=\" \\u064e\\u0651\",e[\"\\ufc61\"]=\" \\u064f\\u0651\",e[\"\\ufc62\"]=\" \\u0650\\u0651\",e[\"\\ufc63\"]=\" \\u0651\\u0670\",e[\"\\ufc64\"]=\"\\u0626\\u0631\",e[\"\\ufc65\"]=\"\\u0626\\u0632\",e[\"\\ufc66\"]=\"\\u0626\\u0645\",e[\"\\ufc67\"]=\"\\u0626\\u0646\",e[\"\\ufc68\"]=\"\\u0626\\u0649\",e[\"\\ufc69\"]=\"\\u0626\\u064a\",e[\"\\ufc6a\"]=\"\\u0628\\u0631\",e[\"\\ufc6b\"]=\"\\u0628\\u0632\",e[\"\\ufc6c\"]=\"\\u0628\\u0645\",e[\"\\ufc6d\"]=\"\\u0628\\u0646\",e[\"\\ufc6e\"]=\"\\u0628\\u0649\",e[\"\\ufc6f\"]=\"\\u0628\\u064a\",e[\"\\ufc70\"]=\"\\u062a\\u0631\",e[\"\\ufc71\"]=\"\\u062a\\u0632\",e[\"\\ufc72\"]=\"\\u062a\\u0645\",e[\"\\ufc73\"]=\"\\u062a\\u0646\",e[\"\\ufc74\"]=\"\\u062a\\u0649\",e[\"\\ufc75\"]=\"\\u062a\\u064a\",e[\"\\ufc76\"]=\"\\u062b\\u0631\",e[\"\\ufc77\"]=\"\\u062b\\u0632\",e[\"\\ufc78\"]=\"\\u062b\\u0645\",e[\"\\ufc79\"]=\"\\u062b\\u0646\",e[\"\\ufc7a\"]=\"\\u062b\\u0649\",e[\"\\ufc7b\"]=\"\\u062b\\u064a\",e[\"\\ufc7c\"]=\"\\u0641\\u0649\",e[\"\\ufc7d\"]=\"\\u0641\\u064a\",e[\"\\ufc7e\"]=\"\\u0642\\u0649\",e[\"\\ufc7f\"]=\"\\u0642\\u064a\",e[\"\\ufc80\"]=\"\\u0643\\u0627\",e[\"\\ufc81\"]=\"\\u0643\\u0644\",e[\"\\ufc82\"]=\"\\u0643\\u0645\",e[\"\\ufc83\"]=\"\\u0643\\u0649\",e[\"\\ufc84\"]=\"\\u0643\\u064a\",e[\"\\ufc85\"]=\"\\u0644\\u0645\",e[\"\\ufc86\"]=\"\\u0644\\u0649\",e[\"\\ufc87\"]=\"\\u0644\\u064a\",e[\"\\ufc88\"]=\"\\u0645\\u0627\",e[\"\\ufc89\"]=\"\\u0645\\u0645\",e[\"\\ufc8a\"]=\"\\u0646\\u0631\",e[\"\\ufc8b\"]=\"\\u0646\\u0632\",e[\"\\ufc8c\"]=\"\\u0646\\u0645\",e[\"\\ufc8d\"]=\"\\u0646\\u0646\",e[\"\\ufc8e\"]=\"\\u0646\\u0649\",e[\"\\ufc8f\"]=\"\\u0646\\u064a\",e[\"\\ufc90\"]=\"\\u0649\\u0670\",e[\"\\ufc91\"]=\"\\u064a\\u0631\",e[\"\\ufc92\"]=\"\\u064a\\u0632\",e[\"\\ufc93\"]=\"\\u064a\\u0645\",e[\"\\ufc94\"]=\"\\u064a\\u0646\",e[\"\\ufc95\"]=\"\\u064a\\u0649\",e[\"\\ufc96\"]=\"\\u064a\\u064a\",e[\"\\ufc97\"]=\"\\u0626\\u062c\",e[\"\\ufc98\"]=\"\\u0626\\u062d\",e[\"\\ufc99\"]=\"\\u0626\\u062e\",e[\"\\ufc9a\"]=\"\\u0626\\u0645\",e[\"\\ufc9b\"]=\"\\u0626\\u0647\",e[\"\\ufc9c\"]=\"\\u0628\\u062c\",e[\"\\ufc9d\"]=\"\\u0628\\u062d\",e[\"\\ufc9e\"]=\"\\u0628\\u062e\",e[\"\\ufc9f\"]=\"\\u0628\\u0645\",e[\"\\ufca0\"]=\"\\u0628\\u0647\",e[\"\\ufca1\"]=\"\\u062a\\u062c\",e[\"\\ufca2\"]=\"\\u062a\\u062d\",e[\"\\ufca3\"]=\"\\u062a\\u062e\",e[\"\\ufca4\"]=\"\\u062a\\u0645\",e[\"\\ufca5\"]=\"\\u062a\\u0647\",e[\"\\ufca6\"]=\"\\u062b\\u0645\",e[\"\\ufca7\"]=\"\\u062c\\u062d\",e[\"\\ufca8\"]=\"\\u062c\\u0645\",e[\"\\ufca9\"]=\"\\u062d\\u062c\",e[\"\\ufcaa\"]=\"\\u062d\\u0645\",e[\"\\ufcab\"]=\"\\u062e\\u062c\",e[\"\\ufcac\"]=\"\\u062e\\u0645\",e[\"\\ufcad\"]=\"\\u0633\\u062c\",e[\"\\ufcae\"]=\"\\u0633\\u062d\",e[\"\\ufcaf\"]=\"\\u0633\\u062e\",e[\"\\ufcb0\"]=\"\\u0633\\u0645\",e[\"\\ufcb1\"]=\"\\u0635\\u062d\",e[\"\\ufcb2\"]=\"\\u0635\\u062e\",e[\"\\ufcb3\"]=\"\\u0635\\u0645\",e[\"\\ufcb4\"]=\"\\u0636\\u062c\",e[\"\\ufcb5\"]=\"\\u0636\\u062d\",e[\"\\ufcb6\"]=\"\\u0636\\u062e\",e[\"\\ufcb7\"]=\"\\u0636\\u0645\",e[\"\\ufcb8\"]=\"\\u0637\\u062d\",e[\"\\ufcb9\"]=\"\\u0638\\u0645\",e[\"\\ufcba\"]=\"\\u0639\\u062c\",e[\"\\ufcbb\"]=\"\\u0639\\u0645\",e[\"\\ufcbc\"]=\"\\u063a\\u062c\",e[\"\\ufcbd\"]=\"\\u063a\\u0645\",e[\"\\ufcbe\"]=\"\\u0641\\u062c\",e[\"\\ufcbf\"]=\"\\u0641\\u062d\",e[\"\\ufcc0\"]=\"\\u0641\\u062e\",e[\"\\ufcc1\"]=\"\\u0641\\u0645\",e[\"\\ufcc2\"]=\"\\u0642\\u062d\",e[\"\\ufcc3\"]=\"\\u0642\\u0645\",e[\"\\ufcc4\"]=\"\\u0643\\u062c\",e[\"\\ufcc5\"]=\"\\u0643\\u062d\",e[\"\\ufcc6\"]=\"\\u0643\\u062e\",e[\"\\ufcc7\"]=\"\\u0643\\u0644\",e[\"\\ufcc8\"]=\"\\u0643\\u0645\",e[\"\\ufcc9\"]=\"\\u0644\\u062c\",e[\"\\ufcca\"]=\"\\u0644\\u062d\",e[\"\\ufccb\"]=\"\\u0644\\u062e\",e[\"\\ufccc\"]=\"\\u0644\\u0645\",e[\"\\ufccd\"]=\"\\u0644\\u0647\",e[\"\\ufcce\"]=\"\\u0645\\u062c\",e[\"\\ufccf\"]=\"\\u0645\\u062d\",e[\"\\ufcd0\"]=\"\\u0645\\u062e\",e[\"\\ufcd1\"]=\"\\u0645\\u0645\",e[\"\\ufcd2\"]=\"\\u0646\\u062c\",e[\"\\ufcd3\"]=\"\\u0646\\u062d\",e[\"\\ufcd4\"]=\"\\u0646\\u062e\",e[\"\\ufcd5\"]=\"\\u0646\\u0645\",e[\"\\ufcd6\"]=\"\\u0646\\u0647\",e[\"\\ufcd7\"]=\"\\u0647\\u062c\",e[\"\\ufcd8\"]=\"\\u0647\\u0645\",e[\"\\ufcd9\"]=\"\\u0647\\u0670\",e[\"\\ufcda\"]=\"\\u064a\\u062c\",e[\"\\ufcdb\"]=\"\\u064a\\u062d\",e[\"\\ufcdc\"]=\"\\u064a\\u062e\",e[\"\\ufcdd\"]=\"\\u064a\\u0645\",e[\"\\ufcde\"]=\"\\u064a\\u0647\",e[\"\\ufcdf\"]=\"\\u0626\\u0645\",e[\"\\ufce0\"]=\"\\u0626\\u0647\",e[\"\\ufce1\"]=\"\\u0628\\u0645\",e[\"\\ufce2\"]=\"\\u0628\\u0647\",e[\"\\ufce3\"]=\"\\u062a\\u0645\",e[\"\\ufce4\"]=\"\\u062a\\u0647\",e[\"\\ufce5\"]=\"\\u062b\\u0645\",e[\"\\ufce6\"]=\"\\u062b\\u0647\",e[\"\\ufce7\"]=\"\\u0633\\u0645\",e[\"\\ufce8\"]=\"\\u0633\\u0647\",e[\"\\ufce9\"]=\"\\u0634\\u0645\",e[\"\\ufcea\"]=\"\\u0634\\u0647\",e[\"\\ufceb\"]=\"\\u0643\\u0644\",e[\"\\ufcec\"]=\"\\u0643\\u0645\",e[\"\\ufced\"]=\"\\u0644\\u0645\",e[\"\\ufcee\"]=\"\\u0646\\u0645\",e[\"\\ufcef\"]=\"\\u0646\\u0647\",e[\"\\ufcf0\"]=\"\\u064a\\u0645\",e[\"\\ufcf1\"]=\"\\u064a\\u0647\",e[\"\\ufcf2\"]=\"\\u0640\\u064e\\u0651\",e[\"\\ufcf3\"]=\"\\u0640\\u064f\\u0651\",e[\"\\ufcf4\"]=\"\\u0640\\u0650\\u0651\",e[\"\\ufcf5\"]=\"\\u0637\\u0649\",e[\"\\ufcf6\"]=\"\\u0637\\u064a\",e[\"\\ufcf7\"]=\"\\u0639\\u0649\",e[\"\\ufcf8\"]=\"\\u0639\\u064a\",e[\"\\ufcf9\"]=\"\\u063a\\u0649\",e[\"\\ufcfa\"]=\"\\u063a\\u064a\",e[\"\\ufcfb\"]=\"\\u0633\\u0649\",e[\"\\ufcfc\"]=\"\\u0633\\u064a\",e[\"\\ufcfd\"]=\"\\u0634\\u0649\",e[\"\\ufcfe\"]=\"\\u0634\\u064a\",e[\"\\ufcff\"]=\"\\u062d\\u0649\",e[\"\\ufd00\"]=\"\\u062d\\u064a\",e[\"\\ufd01\"]=\"\\u062c\\u0649\",e[\"\\ufd02\"]=\"\\u062c\\u064a\",e[\"\\ufd03\"]=\"\\u062e\\u0649\",e[\"\\ufd04\"]=\"\\u062e\\u064a\",e[\"\\ufd05\"]=\"\\u0635\\u0649\",e[\"\\ufd06\"]=\"\\u0635\\u064a\",e[\"\\ufd07\"]=\"\\u0636\\u0649\",e[\"\\ufd08\"]=\"\\u0636\\u064a\",e[\"\\ufd09\"]=\"\\u0634\\u062c\",e[\"\\ufd0a\"]=\"\\u0634\\u062d\",e[\"\\ufd0b\"]=\"\\u0634\\u062e\",e[\"\\ufd0c\"]=\"\\u0634\\u0645\",e[\"\\ufd0d\"]=\"\\u0634\\u0631\",e[\"\\ufd0e\"]=\"\\u0633\\u0631\",e[\"\\ufd0f\"]=\"\\u0635\\u0631\",e[\"\\ufd10\"]=\"\\u0636\\u0631\",e[\"\\ufd11\"]=\"\\u0637\\u0649\",e[\"\\ufd12\"]=\"\\u0637\\u064a\",e[\"\\ufd13\"]=\"\\u0639\\u0649\",e[\"\\ufd14\"]=\"\\u0639\\u064a\",e[\"\\ufd15\"]=\"\\u063a\\u0649\",e[\"\\ufd16\"]=\"\\u063a\\u064a\",e[\"\\ufd17\"]=\"\\u0633\\u0649\",e[\"\\ufd18\"]=\"\\u0633\\u064a\",e[\"\\ufd19\"]=\"\\u0634\\u0649\",e[\"\\ufd1a\"]=\"\\u0634\\u064a\",e[\"\\ufd1b\"]=\"\\u062d\\u0649\",e[\"\\ufd1c\"]=\"\\u062d\\u064a\",e[\"\\ufd1d\"]=\"\\u062c\\u0649\",e[\"\\ufd1e\"]=\"\\u062c\\u064a\",e[\"\\ufd1f\"]=\"\\u062e\\u0649\",e[\"\\ufd20\"]=\"\\u062e\\u064a\",e[\"\\ufd21\"]=\"\\u0635\\u0649\",e[\"\\ufd22\"]=\"\\u0635\\u064a\",e[\"\\ufd23\"]=\"\\u0636\\u0649\",e[\"\\ufd24\"]=\"\\u0636\\u064a\",e[\"\\ufd25\"]=\"\\u0634\\u062c\",e[\"\\ufd26\"]=\"\\u0634\\u062d\",e[\"\\ufd27\"]=\"\\u0634\\u062e\",e[\"\\ufd28\"]=\"\\u0634\\u0645\",e[\"\\ufd29\"]=\"\\u0634\\u0631\",e[\"\\ufd2a\"]=\"\\u0633\\u0631\",e[\"\\ufd2b\"]=\"\\u0635\\u0631\",e[\"\\ufd2c\"]=\"\\u0636\\u0631\",e[\"\\ufd2d\"]=\"\\u0634\\u062c\",e[\"\\ufd2e\"]=\"\\u0634\\u062d\",e[\"\\ufd2f\"]=\"\\u0634\\u062e\",e[\"\\ufd30\"]=\"\\u0634\\u0645\",e[\"\\ufd31\"]=\"\\u0633\\u0647\",e[\"\\ufd32\"]=\"\\u0634\\u0647\",e[\"\\ufd33\"]=\"\\u0637\\u0645\",e[\"\\ufd34\"]=\"\\u0633\\u062c\",e[\"\\ufd35\"]=\"\\u0633\\u062d\",e[\"\\ufd36\"]=\"\\u0633\\u062e\",e[\"\\ufd37\"]=\"\\u0634\\u062c\",e[\"\\ufd38\"]=\"\\u0634\\u062d\",e[\"\\ufd39\"]=\"\\u0634\\u062e\",e[\"\\ufd3a\"]=\"\\u0637\\u0645\",e[\"\\ufd3b\"]=\"\\u0638\\u0645\",e[\"\\ufd3c\"]=\"\\u0627\\u064b\",e[\"\\ufd3d\"]=\"\\u0627\\u064b\",e[\"\\ufd50\"]=\"\\u062a\\u062c\\u0645\",e[\"\\ufd51\"]=\"\\u062a\\u062d\\u062c\",e[\"\\ufd52\"]=\"\\u062a\\u062d\\u062c\",e[\"\\ufd53\"]=\"\\u062a\\u062d\\u0645\",e[\"\\ufd54\"]=\"\\u062a\\u062e\\u0645\",e[\"\\ufd55\"]=\"\\u062a\\u0645\\u062c\",e[\"\\ufd56\"]=\"\\u062a\\u0645\\u062d\",e[\"\\ufd57\"]=\"\\u062a\\u0645\\u062e\",e[\"\\ufd58\"]=\"\\u062c\\u0645\\u062d\",e[\"\\ufd59\"]=\"\\u062c\\u0645\\u062d\",e[\"\\ufd5a\"]=\"\\u062d\\u0645\\u064a\",e[\"\\ufd5b\"]=\"\\u062d\\u0645\\u0649\",e[\"\\ufd5c\"]=\"\\u0633\\u062d\\u062c\",e[\"\\ufd5d\"]=\"\\u0633\\u062c\\u062d\",e[\"\\ufd5e\"]=\"\\u0633\\u062c\\u0649\",e[\"\\ufd5f\"]=\"\\u0633\\u0645\\u062d\",e[\"\\ufd60\"]=\"\\u0633\\u0645\\u062d\",e[\"\\ufd61\"]=\"\\u0633\\u0645\\u062c\",e[\"\\ufd62\"]=\"\\u0633\\u0645\\u0645\",e[\"\\ufd63\"]=\"\\u0633\\u0645\\u0645\",e[\"\\ufd64\"]=\"\\u0635\\u062d\\u062d\",e[\"\\ufd65\"]=\"\\u0635\\u062d\\u062d\",e[\"\\ufd66\"]=\"\\u0635\\u0645\\u0645\",e[\"\\ufd67\"]=\"\\u0634\\u062d\\u0645\",e[\"\\ufd68\"]=\"\\u0634\\u062d\\u0645\",e[\"\\ufd69\"]=\"\\u0634\\u062c\\u064a\",e[\"\\ufd6a\"]=\"\\u0634\\u0645\\u062e\",e[\"\\ufd6b\"]=\"\\u0634\\u0645\\u062e\",e[\"\\ufd6c\"]=\"\\u0634\\u0645\\u0645\",e[\"\\ufd6d\"]=\"\\u0634\\u0645\\u0645\",e[\"\\ufd6e\"]=\"\\u0636\\u062d\\u0649\",e[\"\\ufd6f\"]=\"\\u0636\\u062e\\u0645\",e[\"\\ufd70\"]=\"\\u0636\\u062e\\u0645\",e[\"\\ufd71\"]=\"\\u0637\\u0645\\u062d\",e[\"\\ufd72\"]=\"\\u0637\\u0645\\u062d\",e[\"\\ufd73\"]=\"\\u0637\\u0645\\u0645\",e[\"\\ufd74\"]=\"\\u0637\\u0645\\u064a\",e[\"\\ufd75\"]=\"\\u0639\\u062c\\u0645\",e[\"\\ufd76\"]=\"\\u0639\\u0645\\u0645\",e[\"\\ufd77\"]=\"\\u0639\\u0645\\u0645\",e[\"\\ufd78\"]=\"\\u0639\\u0645\\u0649\",e[\"\\ufd79\"]=\"\\u063a\\u0645\\u0645\",e[\"\\ufd7a\"]=\"\\u063a\\u0645\\u064a\",e[\"\\ufd7b\"]=\"\\u063a\\u0645\\u0649\",e[\"\\ufd7c\"]=\"\\u0641\\u062e\\u0645\",e[\"\\ufd7d\"]=\"\\u0641\\u062e\\u0645\",e[\"\\ufd7e\"]=\"\\u0642\\u0645\\u062d\",e[\"\\ufd7f\"]=\"\\u0642\\u0645\\u0645\",e[\"\\ufd80\"]=\"\\u0644\\u062d\\u0645\",e[\"\\ufd81\"]=\"\\u0644\\u062d\\u064a\",e[\"\\ufd82\"]=\"\\u0644\\u062d\\u0649\",e[\"\\ufd83\"]=\"\\u0644\\u062c\\u062c\",e[\"\\ufd84\"]=\"\\u0644\\u062c\\u062c\",e[\"\\ufd85\"]=\"\\u0644\\u062e\\u0645\",e[\"\\ufd86\"]=\"\\u0644\\u062e\\u0645\",e[\"\\ufd87\"]=\"\\u0644\\u0645\\u062d\",e[\"\\ufd88\"]=\"\\u0644\\u0645\\u062d\",e[\"\\ufd89\"]=\"\\u0645\\u062d\\u062c\",e[\"\\ufd8a\"]=\"\\u0645\\u062d\\u0645\",e[\"\\ufd8b\"]=\"\\u0645\\u062d\\u064a\",e[\"\\ufd8c\"]=\"\\u0645\\u062c\\u062d\",e[\"\\ufd8d\"]=\"\\u0645\\u062c\\u0645\",e[\"\\ufd8e\"]=\"\\u0645\\u062e\\u062c\",e[\"\\ufd8f\"]=\"\\u0645\\u062e\\u0645\",e[\"\\ufd92\"]=\"\\u0645\\u062c\\u062e\",e[\"\\ufd93\"]=\"\\u0647\\u0645\\u062c\",e[\"\\ufd94\"]=\"\\u0647\\u0645\\u0645\",e[\"\\ufd95\"]=\"\\u0646\\u062d\\u0645\",e[\"\\ufd96\"]=\"\\u0646\\u062d\\u0649\",e[\"\\ufd97\"]=\"\\u0646\\u062c\\u0645\",e[\"\\ufd98\"]=\"\\u0646\\u062c\\u0645\",e[\"\\ufd99\"]=\"\\u0646\\u062c\\u0649\",e[\"\\ufd9a\"]=\"\\u0646\\u0645\\u064a\",e[\"\\ufd9b\"]=\"\\u0646\\u0645\\u0649\",e[\"\\ufd9c\"]=\"\\u064a\\u0645\\u0645\",e[\"\\ufd9d\"]=\"\\u064a\\u0645\\u0645\",e[\"\\ufd9e\"]=\"\\u0628\\u062e\\u064a\",e[\"\\ufd9f\"]=\"\\u062a\\u062c\\u064a\",e[\"\\ufda0\"]=\"\\u062a\\u062c\\u0649\",e[\"\\ufda1\"]=\"\\u062a\\u062e\\u064a\",e[\"\\ufda2\"]=\"\\u062a\\u062e\\u0649\",e[\"\\ufda3\"]=\"\\u062a\\u0645\\u064a\",e[\"\\ufda4\"]=\"\\u062a\\u0645\\u0649\",e[\"\\ufda5\"]=\"\\u062c\\u0645\\u064a\",e[\"\\ufda6\"]=\"\\u062c\\u062d\\u0649\",e[\"\\ufda7\"]=\"\\u062c\\u0645\\u0649\",e[\"\\ufda8\"]=\"\\u0633\\u062e\\u0649\",e[\"\\ufda9\"]=\"\\u0635\\u062d\\u064a\",e[\"\\ufdaa\"]=\"\\u0634\\u062d\\u064a\",e[\"\\ufdab\"]=\"\\u0636\\u062d\\u064a\",e[\"\\ufdac\"]=\"\\u0644\\u062c\\u064a\",e[\"\\ufdad\"]=\"\\u0644\\u0645\\u064a\",e[\"\\ufdae\"]=\"\\u064a\\u062d\\u064a\",e[\"\\ufdaf\"]=\"\\u064a\\u062c\\u064a\",e[\"\\ufdb0\"]=\"\\u064a\\u0645\\u064a\",e[\"\\ufdb1\"]=\"\\u0645\\u0645\\u064a\",e[\"\\ufdb2\"]=\"\\u0642\\u0645\\u064a\",e[\"\\ufdb3\"]=\"\\u0646\\u062d\\u064a\",e[\"\\ufdb4\"]=\"\\u0642\\u0645\\u062d\",e[\"\\ufdb5\"]=\"\\u0644\\u062d\\u0645\",e[\"\\ufdb6\"]=\"\\u0639\\u0645\\u064a\",e[\"\\ufdb7\"]=\"\\u0643\\u0645\\u064a\",e[\"\\ufdb8\"]=\"\\u0646\\u062c\\u062d\",e[\"\\ufdb9\"]=\"\\u0645\\u062e\\u064a\",e[\"\\ufdba\"]=\"\\u0644\\u062c\\u0645\",e[\"\\ufdbb\"]=\"\\u0643\\u0645\\u0645\",e[\"\\ufdbc\"]=\"\\u0644\\u062c\\u0645\",e[\"\\ufdbd\"]=\"\\u0646\\u062c\\u062d\",e[\"\\ufdbe\"]=\"\\u062c\\u062d\\u064a\",e[\"\\ufdbf\"]=\"\\u062d\\u062c\\u064a\",e[\"\\ufdc0\"]=\"\\u0645\\u062c\\u064a\",e[\"\\ufdc1\"]=\"\\u0641\\u0645\\u064a\",e[\"\\ufdc2\"]=\"\\u0628\\u062d\\u064a\",e[\"\\ufdc3\"]=\"\\u0643\\u0645\\u0645\",e[\"\\ufdc4\"]=\"\\u0639\\u062c\\u0645\",e[\"\\ufdc5\"]=\"\\u0635\\u0645\\u0645\",e[\"\\ufdc6\"]=\"\\u0633\\u062e\\u064a\",e[\"\\ufdc7\"]=\"\\u0646\\u062c\\u064a\",e[\"\\ufe49\"]=\"\\u203e\",e[\"\\ufe4a\"]=\"\\u203e\",e[\"\\ufe4b\"]=\"\\u203e\",e[\"\\ufe4c\"]=\"\\u203e\",e[\"\\ufe4d\"]=\"_\",e[\"\\ufe4e\"]=\"_\",e[\"\\ufe4f\"]=\"_\",e[\"\\ufe80\"]=\"\\u0621\",e[\"\\ufe81\"]=\"\\u0622\",e[\"\\ufe82\"]=\"\\u0622\",e[\"\\ufe83\"]=\"\\u0623\",e[\"\\ufe84\"]=\"\\u0623\",e[\"\\ufe85\"]=\"\\u0624\",e[\"\\ufe86\"]=\"\\u0624\",e[\"\\ufe87\"]=\"\\u0625\",e[\"\\ufe88\"]=\"\\u0625\",e[\"\\ufe89\"]=\"\\u0626\",e[\"\\ufe8a\"]=\"\\u0626\",e[\"\\ufe8b\"]=\"\\u0626\",e[\"\\ufe8c\"]=\"\\u0626\",e[\"\\ufe8d\"]=\"\\u0627\",e[\"\\ufe8e\"]=\"\\u0627\",e[\"\\ufe8f\"]=\"\\u0628\",e[\"\\ufe90\"]=\"\\u0628\",e[\"\\ufe91\"]=\"\\u0628\",e[\"\\ufe92\"]=\"\\u0628\",e[\"\\ufe93\"]=\"\\u0629\",e[\"\\ufe94\"]=\"\\u0629\",e[\"\\ufe95\"]=\"\\u062a\",e[\"\\ufe96\"]=\"\\u062a\",e[\"\\ufe97\"]=\"\\u062a\",e[\"\\ufe98\"]=\"\\u062a\",e[\"\\ufe99\"]=\"\\u062b\",e[\"\\ufe9a\"]=\"\\u062b\",e[\"\\ufe9b\"]=\"\\u062b\",e[\"\\ufe9c\"]=\"\\u062b\",e[\"\\ufe9d\"]=\"\\u062c\",e[\"\\ufe9e\"]=\"\\u062c\",e[\"\\ufe9f\"]=\"\\u062c\",e[\"\\ufea0\"]=\"\\u062c\",e[\"\\ufea1\"]=\"\\u062d\",e[\"\\ufea2\"]=\"\\u062d\",e[\"\\ufea3\"]=\"\\u062d\",e[\"\\ufea4\"]=\"\\u062d\",e[\"\\ufea5\"]=\"\\u062e\",e[\"\\ufea6\"]=\"\\u062e\",e[\"\\ufea7\"]=\"\\u062e\",e[\"\\ufea8\"]=\"\\u062e\",e[\"\\ufea9\"]=\"\\u062f\",e[\"\\ufeaa\"]=\"\\u062f\",e[\"\\ufeab\"]=\"\\u0630\",e[\"\\ufeac\"]=\"\\u0630\",e[\"\\ufead\"]=\"\\u0631\",e[\"\\ufeae\"]=\"\\u0631\",e[\"\\ufeaf\"]=\"\\u0632\",e[\"\\ufeb0\"]=\"\\u0632\",e[\"\\ufeb1\"]=\"\\u0633\",e[\"\\ufeb2\"]=\"\\u0633\",e[\"\\ufeb3\"]=\"\\u0633\",e[\"\\ufeb4\"]=\"\\u0633\",e[\"\\ufeb5\"]=\"\\u0634\",e[\"\\ufeb6\"]=\"\\u0634\",e[\"\\ufeb7\"]=\"\\u0634\",e[\"\\ufeb8\"]=\"\\u0634\",e[\"\\ufeb9\"]=\"\\u0635\",e[\"\\ufeba\"]=\"\\u0635\",e[\"\\ufebb\"]=\"\\u0635\",e[\"\\ufebc\"]=\"\\u0635\",e[\"\\ufebd\"]=\"\\u0636\",e[\"\\ufebe\"]=\"\\u0636\",e[\"\\ufebf\"]=\"\\u0636\",e[\"\\ufec0\"]=\"\\u0636\",e[\"\\ufec1\"]=\"\\u0637\",e[\"\\ufec2\"]=\"\\u0637\",e[\"\\ufec3\"]=\"\\u0637\",e[\"\\ufec4\"]=\"\\u0637\",e[\"\\ufec5\"]=\"\\u0638\",e[\"\\ufec6\"]=\"\\u0638\",e[\"\\ufec7\"]=\"\\u0638\",e[\"\\ufec8\"]=\"\\u0638\",e[\"\\ufec9\"]=\"\\u0639\",e[\"\\ufeca\"]=\"\\u0639\",e[\"\\ufecb\"]=\"\\u0639\",e[\"\\ufecc\"]=\"\\u0639\",e[\"\\ufecd\"]=\"\\u063a\",e[\"\\ufece\"]=\"\\u063a\",e[\"\\ufecf\"]=\"\\u063a\",e[\"\\ufed0\"]=\"\\u063a\",e[\"\\ufed1\"]=\"\\u0641\",e[\"\\ufed2\"]=\"\\u0641\",e[\"\\ufed3\"]=\"\\u0641\",e[\"\\ufed4\"]=\"\\u0641\",e[\"\\ufed5\"]=\"\\u0642\",e[\"\\ufed6\"]=\"\\u0642\",e[\"\\ufed7\"]=\"\\u0642\",e[\"\\ufed8\"]=\"\\u0642\",e[\"\\ufed9\"]=\"\\u0643\",e[\"\\ufeda\"]=\"\\u0643\",e[\"\\ufedb\"]=\"\\u0643\",e[\"\\ufedc\"]=\"\\u0643\",e[\"\\ufedd\"]=\"\\u0644\",e[\"\\ufede\"]=\"\\u0644\",e[\"\\ufedf\"]=\"\\u0644\",e[\"\\ufee0\"]=\"\\u0644\",e[\"\\ufee1\"]=\"\\u0645\",e[\"\\ufee2\"]=\"\\u0645\",e[\"\\ufee3\"]=\"\\u0645\",e[\"\\ufee4\"]=\"\\u0645\",e[\"\\ufee5\"]=\"\\u0646\",e[\"\\ufee6\"]=\"\\u0646\",e[\"\\ufee7\"]=\"\\u0646\",e[\"\\ufee8\"]=\"\\u0646\",e[\"\\ufee9\"]=\"\\u0647\",e[\"\\ufeea\"]=\"\\u0647\",e[\"\\ufeeb\"]=\"\\u0647\",e[\"\\ufeec\"]=\"\\u0647\",e[\"\\ufeed\"]=\"\\u0648\",e[\"\\ufeee\"]=\"\\u0648\",e[\"\\ufeef\"]=\"\\u0649\",e[\"\\ufef0\"]=\"\\u0649\",e[\"\\ufef1\"]=\"\\u064a\",e[\"\\ufef2\"]=\"\\u064a\",e[\"\\ufef3\"]=\"\\u064a\",e[\"\\ufef4\"]=\"\\u064a\",e[\"\\ufef5\"]=\"\\u0644\\u0622\",e[\"\\ufef6\"]=\"\\u0644\\u0622\",e[\"\\ufef7\"]=\"\\u0644\\u0623\",e[\"\\ufef8\"]=\"\\u0644\\u0623\",e[\"\\ufef9\"]=\"\\u0644\\u0625\",e[\"\\ufefa\"]=\"\\u0644\\u0625\",e[\"\\ufefb\"]=\"\\u0644\\u0627\",e[\"\\ufefc\"]=\"\\u0644\\u0627\"}));t.mapSpecialUnicodeValues=function(e){return e>=65520&&e<=65535?0:e>=62976&&e<=63743?n()[e]||e:173===e?45:e},t.reverseIfRtl=function(e){var t=e.length;if(t<=1||!function(e){var t=i[13];return e>=t.begin&&e<t.end||e>=(t=i[11]).begin&&e<t.end}(e.charCodeAt(0)))return e;for(var a=\"\",r=t-1;r>=0;r--)a+=e[r];return a},t.getUnicodeRangeFor=function(e){for(var t=0,a=i.length;t<a;t++){var r=i[t];if(e>=r.begin&&e<r.end)return t}return-1},t.getNormalizedUnicodes=o,t.getUnicodeForGlyph=function(e,t){var a=t[e];if(void 0!==a)return a;if(!e)return-1;if(\"u\"===e[0]){var r,n=e.length;if(7===n&&\"n\"===e[1]&&\"i\"===e[2])r=e.substring(3);else{if(!(n>=5&&n<=7))return-1;r=e.substring(1)}if(r===r.toUpperCase()&&(a=parseInt(r,16))>=0)return a}return-1}},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.FontRendererFactory=void 0;var r=a(2),n=a(31),i=a(34),o=a(33),s=a(12),c=function(){function e(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function t(e,t){return e[t]<<8|e[t+1]}function a(e){var t=e.length,a=32768;return t<1240?a=107:t<33900&&(a=1131),a}function c(a,n,i){var o,s,c,l=1===t(a,n+2)?e(a,n+8):e(a,n+16),u=t(a,n+l);if(4===u){t(a,n+l+2);var h=t(a,n+l+6)>>1;for(s=n+l+14,o=[],c=0;c<h;c++,s+=2)o[c]={end:t(a,s)};for(s+=2,c=0;c<h;c++,s+=2)o[c].start=t(a,s);for(c=0;c<h;c++,s+=2)o[c].idDelta=t(a,s);for(c=0;c<h;c++,s+=2){var f=t(a,s);if(0!==f){o[c].ids=[];for(var d=0,g=o[c].end-o[c].start+1;d<g;d++)o[c].ids[d]=t(a,s+f),f+=2}}return o}if(12===u){e(a,n+l+4);var p=e(a,n+l+12);for(s=n+l+16,o=[],c=0;c<p;c++)o.push({start:e(a,s),end:e(a,s+4),idDelta:e(a,s+8)-e(a,s)}),s+=12;return o}throw new r.FormatError(\"unsupported cmap: \".concat(u))}function l(e,t,a,r){var i=new n.CFFParser(new s.Stream(e,t,a-t),{},r).parse();return{glyphs:i.charStrings.objects,subrs:i.topDict.privateDict&&i.topDict.privateDict.subrsIndex&&i.topDict.privateDict.subrsIndex.objects,gsubrs:i.globalSubrIndex&&i.globalSubrIndex.objects,isCFFCIDFont:i.isCIDFont,fdSelect:i.fdSelect,fdArray:i.fdArray}}function u(e,t){for(var a=t.codePointAt(0),r=0,n=0,i=e.length-1;n<i;){var o=n+i+1>>1;a<e[o].start?i=o-1:n=o}return e[n].start<=a&&a<=e[n].end&&(r=e[n].idDelta+(e[n].ids?e[n].ids[a-e[n].start]:a)&65535),{charCode:a,glyphId:r}}function h(e,t,a){function r(e,a){t.push({cmd:\"moveTo\",args:[e,a]})}function n(e,a){t.push({cmd:\"lineTo\",args:[e,a]})}function i(e,a,r,n){t.push({cmd:\"quadraticCurveTo\",args:[e,a,r,n]})}var o,s=0,c=(e[s]<<24|e[s+1]<<16)>>16,l=0,u=0;if(s+=10,c<0)do{o=e[s]<<8|e[s+1];var f,d,g=e[s+2]<<8|e[s+3];s+=4,1&o?(f=(e[s]<<24|e[s+1]<<16)>>16,d=(e[s+2]<<24|e[s+3]<<16)>>16,s+=4):(f=e[s++],d=e[s++]),2&o?(l=f,u=d):(l=0,u=0);var p=1,m=1,v=0,b=0;8&o?(p=m=(e[s]<<24|e[s+1]<<16)/1073741824,s+=2):64&o?(p=(e[s]<<24|e[s+1]<<16)/1073741824,m=(e[s+2]<<24|e[s+3]<<16)/1073741824,s+=4):128&o&&(p=(e[s]<<24|e[s+1]<<16)/1073741824,v=(e[s+2]<<24|e[s+3]<<16)/1073741824,b=(e[s+4]<<24|e[s+5]<<16)/1073741824,m=(e[s+6]<<24|e[s+7]<<16)/1073741824,s+=8);var y=a.glyphs[g];y&&(t.push({cmd:\"save\"}),t.push({cmd:\"transform\",args:[p,v,b,m,l,u]}),h(y,t,a),t.push({cmd:\"restore\"}))}while(32&o);else{var k,w,C=[];for(k=0;k<c;k++)C.push(e[s]<<8|e[s+1]),s+=2;s+=2+(e[s]<<8|e[s+1]);for(var S=C[C.length-1]+1,x=[];x.length<S;){var A=1;for(8&(o=e[s++])&&(A+=e[s++]);A-- >0;)x.push({flags:o})}for(k=0;k<S;k++){switch(18&x[k].flags){case 0:l+=(e[s]<<24|e[s+1]<<16)>>16,s+=2;break;case 2:l-=e[s++];break;case 18:l+=e[s++]}x[k].x=l}for(k=0;k<S;k++){switch(36&x[k].flags){case 0:u+=(e[s]<<24|e[s+1]<<16)>>16,s+=2;break;case 4:u-=e[s++];break;case 36:u+=e[s++]}x[k].y=u}var I=0;for(s=0;s<c;s++){var F=C[s],T=x.slice(I,F+1);if(1&T[0].flags)T.push(T[0]);else if(1&T[T.length-1].flags)T.unshift(T[T.length-1]);else{var O={flags:1,x:(T[0].x+T[T.length-1].x)/2,y:(T[0].y+T[T.length-1].y)/2};T.unshift(O),T.push(O)}for(r(T[0].x,T[0].y),k=1,w=T.length;k<w;k++)1&T[k].flags?n(T[k].x,T[k].y):1&T[k+1].flags?(i(T[k].x,T[k].y,T[k+1].x,T[k+1].y),k++):i(T[k].x,T[k].y,(T[k].x+T[k+1].x)/2,(T[k].y+T[k+1].y)/2);I=F+1}}}function f(e,t,n,i){function s(e,a){t.push({cmd:\"moveTo\",args:[e,a]})}function c(e,a){t.push({cmd:\"lineTo\",args:[e,a]})}function l(e,a,r,n,i,o){t.push({cmd:\"bezierCurveTo\",args:[e,a,r,n,i,o]})}var h=[],d=0,g=0,p=0;!function e(m){for(var v=0;v<m.length;){var b,y,k,w,C,S,x,A,I=!1,F=m[v++];switch(F){case 1:case 3:p+=h.length>>1,I=!0;break;case 4:g+=h.pop(),s(d,g),I=!0;break;case 5:for(;h.length>0;)d+=h.shift(),g+=h.shift(),c(d,g);break;case 6:for(;h.length>0&&(c(d+=h.shift(),g),0!==h.length);)g+=h.shift(),c(d,g);break;case 7:for(;h.length>0&&(g+=h.shift(),c(d,g),0!==h.length);)c(d+=h.shift(),g);break;case 8:for(;h.length>0;)b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g);break;case 10:if(x=h.pop(),A=null,n.isCFFCIDFont){var T=n.fdSelect.getFDIndex(i);if(T>=0&&T<n.fdArray.length){var O=n.fdArray[T],E=void 0;O.privateDict&&O.privateDict.subrsIndex&&(E=O.privateDict.subrsIndex.objects),E&&(A=E[x+=a(E)])}else(0,r.warn)(\"Invalid fd index for glyph index.\")}else A=n.subrs[x+n.subrsBias];A&&e(A);break;case 11:return;case 12:switch(F=m[v++]){case 34:y=(b=d+h.shift())+h.shift(),C=g+h.shift(),d=y+h.shift(),l(b,g,y,C,d,C),y=(b=d+h.shift())+h.shift(),d=y+h.shift(),l(b,C,y,g,d,g);break;case 35:b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g),b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g),h.pop();break;case 36:l(b=d+h.shift(),C=g+h.shift(),y=b+h.shift(),S=C+h.shift(),d=y+h.shift(),S),l(b=d+h.shift(),S,y=b+h.shift(),S+h.shift(),d=y+h.shift(),g);break;case 37:var P=d,_=g;b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g),b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y,g=w,Math.abs(d-P)>Math.abs(g-_)?d+=h.shift():g+=h.shift(),l(b,k,y,w,d,g);break;default:throw new r.FormatError(\"unknown operator: 12 \".concat(F))}break;case 14:if(h.length>=4){var B=h.pop(),M=h.pop();g=h.pop(),d=h.pop(),t.push({cmd:\"save\"}),t.push({cmd:\"translate\",args:[d,g]});var D=u(n.cmap,String.fromCharCode(n.glyphNameMap[o.StandardEncoding[B]]));f(n.glyphs[D.glyphId],t,n,D.glyphId),t.push({cmd:\"restore\"}),D=u(n.cmap,String.fromCharCode(n.glyphNameMap[o.StandardEncoding[M]])),f(n.glyphs[D.glyphId],t,n,D.glyphId)}return;case 18:p+=h.length>>1,I=!0;break;case 19:case 20:v+=(p+=h.length>>1)+7>>3,I=!0;break;case 21:g+=h.pop(),s(d+=h.pop(),g),I=!0;break;case 22:s(d+=h.pop(),g),I=!0;break;case 23:p+=h.length>>1,I=!0;break;case 24:for(;h.length>2;)b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g);d+=h.shift(),g+=h.shift(),c(d,g);break;case 25:for(;h.length>6;)d+=h.shift(),g+=h.shift(),c(d,g);b=d+h.shift(),k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+h.shift(),l(b,k,y,w,d,g);break;case 26:for(h.length%2&&(d+=h.shift());h.length>0;)b=d,k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y,g=w+h.shift(),l(b,k,y,w,d,g);break;case 27:for(h.length%2&&(g+=h.shift());h.length>0;)l(b=d+h.shift(),k=g,y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w);break;case 28:h.push((m[v]<<24|m[v+1]<<16)>>16),v+=2;break;case 29:x=h.pop()+n.gsubrsBias,(A=n.gsubrs[x])&&e(A);break;case 30:for(;h.length>0&&(b=d,k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+(1===h.length?h.shift():0),l(b,k,y,w,d,g),0!==h.length);)b=d+h.shift(),k=g,y=b+h.shift(),w=k+h.shift(),g=w+h.shift(),l(b,k,y,w,d=y+(1===h.length?h.shift():0),g);break;case 31:for(;h.length>0&&(b=d+h.shift(),k=g,y=b+h.shift(),w=k+h.shift(),g=w+h.shift(),l(b,k,y,w,d=y+(1===h.length?h.shift():0),g),0!==h.length);)b=d,k=g+h.shift(),y=b+h.shift(),w=k+h.shift(),d=y+h.shift(),g=w+(1===h.length?h.shift():0),l(b,k,y,w,d,g);break;default:if(F<32)throw new r.FormatError(\"unknown operator: \".concat(F));F<247?h.push(F-139):F<251?h.push(256*(F-247)+m[v++]+108):F<255?h.push(256*-(F-251)-m[v++]-108):(h.push((m[v]<<24|m[v+1]<<16|m[v+2]<<8|m[v+3])/65536),v+=4)}I&&(h.length=0)}}(e)}var d=[],g=function(){function e(t){_classCallCheck(this,e),this.constructor===e&&(0,r.unreachable)(\"Cannot initialize CompiledFont.\"),this.fontMatrix=t,this.compiledGlyphs=Object.create(null),this.compiledCharCodeToGlyphId=Object.create(null)}return _createClass(e,[{key:\"getPathJs\",value:function(e){var t=u(this.cmap,e),a=this.compiledGlyphs[t.glyphId];return a||(a=this.compileGlyph(this.glyphs[t.glyphId],t.glyphId),this.compiledGlyphs[t.glyphId]=a),void 0===this.compiledCharCodeToGlyphId[t.charCode]&&(this.compiledCharCodeToGlyphId[t.charCode]=t.glyphId),a}},{key:\"compileGlyph\",value:function(e,t){if(!e||0===e.length||14===e[0])return d;var a=this.fontMatrix;if(this.isCFFCIDFont){var n=this.fdSelect.getFDIndex(t);if(n>=0&&n<this.fdArray.length)a=this.fdArray[n].getByName(\"FontMatrix\")||r.FONT_IDENTITY_MATRIX;else(0,r.warn)(\"Invalid fd index for glyph index.\")}var i=[];return i.push({cmd:\"save\"}),i.push({cmd:\"transform\",args:a.slice()}),i.push({cmd:\"scale\",args:[\"size\",\"-size\"]}),this.compileGlyphImpl(e,i,t),i.push({cmd:\"restore\"}),i}},{key:\"compileGlyphImpl\",value:function(){(0,r.unreachable)(\"Children classes should implement this.\")}},{key:\"hasBuiltPath\",value:function(e){var t=u(this.cmap,e);return void 0!==this.compiledGlyphs[t.glyphId]&&void 0!==this.compiledCharCodeToGlyphId[t.charCode]}}]),e}(),p=function(e){_inherits(a,e);var t=_createSuper(a);function a(e,r,n){var i;return _classCallCheck(this,a),(i=t.call(this,n||[488e-6,0,0,488e-6,0,0])).glyphs=e,i.cmap=r,i}return _createClass(a,[{key:\"compileGlyphImpl\",value:function(e,t){h(e,t,this)}}]),a}(g),m=function(e){_inherits(r,e);var t=_createSuper(r);function r(e,n,o,s){var c;return _classCallCheck(this,r),(c=t.call(this,o||[.001,0,0,.001,0,0])).glyphs=e.glyphs,c.gsubrs=e.gsubrs||[],c.subrs=e.subrs||[],c.cmap=n,c.glyphNameMap=s||(0,i.getGlyphsUnicode)(),c.gsubrsBias=a(c.gsubrs),c.subrsBias=a(c.subrs),c.isCFFCIDFont=e.isCFFCIDFont,c.fdSelect=e.fdSelect,c.fdArray=e.fdArray,c}return _createClass(r,[{key:\"compileGlyphImpl\",value:function(e,t,a){f(e,t,this,a)}}]),r}(g);return{create:function(a,n){for(var i,o,s,u,h,f,d=new Uint8Array(a.data),g=t(d,4),v=0,b=12;v<g;v++,b+=16){var y=(0,r.bytesToString)(d.subarray(b,b+4)),k=e(d,b+8),w=e(d,b+12);switch(y){case\"cmap\":i=c(d,k);break;case\"glyf\":o=d.subarray(k,k+w);break;case\"loca\":s=d.subarray(k,k+w);break;case\"head\":f=t(d,k+18),h=t(d,k+50);break;case\"CFF \":u=l(d,k,k+w,n)}}if(o){var C=f?[1/f,0,0,1/f,0,0]:a.fontMatrix;return new p(function(e,t,a){var r,n;a?(r=4,n=function(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}):(r=2,n=function(e,t){return e[t]<<9|e[t+1]<<1});for(var i=[],o=n(t,0),s=r;s<t.length;s+=r){var c=n(t,s);i.push(e.subarray(o,c)),o=c}return i}(o,s,h),i,C)}return new m(u,i,a.fontMatrix,a.glyphNameMap)}}}();t.FontRendererFactory=c},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Type1Parser=void 0;var r=a(33),n=a(8),i=a(12),o=a(2),s=function(){var e=[4],t=[5],a=[6],r=[7],n=[8],i=[12,35],s=[14],c=[21],l=[22],u=[30],h=[31];function f(){this.width=0,this.lsb=0,this.flexing=!1,this.output=[],this.stack=[]}return f.prototype={convert:function(f,d,g){for(var p,m,v,b=f.length,y=!1,k=0;k<b;k++){var w=f[k];if(w<32){switch(12===w&&(w=(w<<8)+f[++k]),w){case 1:case 3:this.stack=[];break;case 4:if(this.flexing){if(this.stack.length<1){y=!0;break}var C=this.stack.pop();this.stack.push(0,C);break}y=this.executeCommand(1,e);break;case 5:y=this.executeCommand(2,t);break;case 6:y=this.executeCommand(1,a);break;case 7:y=this.executeCommand(1,r);break;case 8:y=this.executeCommand(6,n);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){y=!0;break}if(!d[v=this.stack.pop()]){y=!0;break}y=this.convert(d[v],d,g);break;case 11:return y;case 13:if(this.stack.length<2){y=!0;break}p=this.stack.pop(),m=this.stack.pop(),this.lsb=m,this.width=p,this.stack.push(p,m),y=this.executeCommand(2,l);break;case 14:this.output.push(s[0]);break;case 21:if(this.flexing)break;y=this.executeCommand(2,c);break;case 22:if(this.flexing){this.stack.push(0);break}y=this.executeCommand(1,l);break;case 30:y=this.executeCommand(4,u);break;case 31:y=this.executeCommand(4,h);break;case 3072:case 3073:case 3074:this.stack=[];break;case 3078:if(g){var S=this.stack[this.stack.length-5];this.seac=this.stack.splice(-4,4),this.seac[0]+=this.lsb-S,y=this.executeCommand(0,s)}else y=this.executeCommand(4,s);break;case 3079:if(this.stack.length<4){y=!0;break}this.stack.pop(),p=this.stack.pop();var x=this.stack.pop();m=this.stack.pop(),this.lsb=m,this.width=p,this.stack.push(p,m,x),y=this.executeCommand(3,c);break;case 3084:if(this.stack.length<2){y=!0;break}var A=this.stack.pop(),I=this.stack.pop();this.stack.push(I/A);break;case 3088:if(this.stack.length<2){y=!0;break}v=this.stack.pop();var F=this.stack.pop();if(0===v&&3===F){var T=this.stack.splice(this.stack.length-17,17);this.stack.push(T[2]+T[0],T[3]+T[1],T[4],T[5],T[6],T[7],T[8],T[9],T[10],T[11],T[12],T[13],T[14]),y=this.executeCommand(13,i,!0),this.flexing=!1,this.stack.push(T[15],T[16])}else 1===v&&0===F&&(this.flexing=!0);break;case 3089:break;case 3105:this.stack=[];break;default:(0,o.warn)('Unknown type 1 charstring command of \"'+w+'\"')}if(y)break}else w<=246?w-=139:w=w<=250?256*(w-247)+f[++k]+108:w<=254?-256*(w-251)-f[++k]-108:(255&f[++k])<<24|(255&f[++k])<<16|(255&f[++k])<<8|(255&f[++k])<<0,this.stack.push(w)}return y},executeCommand:function(e,t,a){var r=this.stack.length;if(e>r)return!0;for(var n=r-e,i=n;i<r;i++){var o=this.stack[i];Number.isInteger(o)?this.output.push(28,o>>8&255,255&o):(o=65536*o|0,this.output.push(255,o>>24&255,o>>16&255,o>>8&255,255&o))}return this.output.push.apply(this.output,t),a?this.stack.splice(n,e):this.stack.length=0,!1}},f}(),c=function(){function e(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function t(e,t,a){if(a>=e.length)return new Uint8Array(0);var r,n,i=0|t;for(r=0;r<a;r++)i=52845*(e[r]+i)+22719&65535;var o=e.length-a,s=new Uint8Array(o);for(r=a,n=0;n<o;r++,n++){var c=e[r];s[n]=c^i>>8,i=52845*(c+i)+22719&65535}return s}function a(e){return 47===e||91===e||93===e||123===e||125===e||40===e||41===e}function o(a,r,o){if(r){var s=a.getBytes(),c=!((e(s[0])||(0,n.isWhiteSpace)(s[0]))&&e(s[1])&&e(s[2])&&e(s[3])&&e(s[4])&&e(s[5])&&e(s[6])&&e(s[7]));a=new i.Stream(c?t(s,55665,4):function(t,a,r){var n,i,o=0|a,s=t.length,c=new Uint8Array(s>>>1);for(n=0,i=0;n<s;n++){var l=t[n];if(e(l)){var u;for(n++;n<s&&!e(u=t[n]);)n++;if(n<s){var h=parseInt(String.fromCharCode(l,u),16);c[i++]=h^o>>8,o=52845*(h+o)+22719&65535}}}return c.slice(r,i)}(s,55665,4))}this.seacAnalysisEnabled=!!o,this.stream=a,this.nextChar()}return o.prototype={readNumberArray:function(){this.getToken();for(var e=[];;){var t=this.getToken();if(null===t||\"]\"===t||\"}\"===t)break;e.push(parseFloat(t||0))}return e},readNumber:function(){var e=this.getToken();return parseFloat(e||0)},readInt:function(){var e=this.getToken();return 0|parseInt(e||0,10)},readBoolean:function(){return\"true\"===this.getToken()?1:0},nextChar:function(){return this.currentChar=this.stream.getByte()},getToken:function(){for(var e=!1,t=this.currentChar;;){if(-1===t)return null;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,n.isWhiteSpace)(t))break;t=this.nextChar()}if(a(t))return this.nextChar(),String.fromCharCode(t);var r=\"\";do{r+=String.fromCharCode(t),t=this.nextChar()}while(t>=0&&!(0,n.isWhiteSpace)(t)&&!a(t));return r},readCharStrings:function(e,a){return-1===a?e:t(e,4330,a)},extractFontProgram:function(e){var t=this.stream,a=[],r=[],n=Object.create(null);n.lenIV=4;for(var i,o,c,l,u,h={subrs:[],charstrings:[],properties:{privateData:n}};null!==(i=this.getToken());)if(\"/\"===i)switch(i=this.getToken()){case\"CharStrings\":for(this.getToken(),this.getToken(),this.getToken(),this.getToken();null!==(i=this.getToken())&&\"end\"!==i;)if(\"/\"===i){var f=this.getToken();o=this.readInt(),this.getToken(),c=o>0?t.getBytes(o):new Uint8Array(0),l=h.properties.privateData.lenIV,u=this.readCharStrings(c,l),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),r.push({glyph:f,encoded:u})}break;case\"Subrs\":for(this.readInt(),this.getToken();\"dup\"===this.getToken();){var d=this.readInt();o=this.readInt(),this.getToken(),c=o>0?t.getBytes(o):new Uint8Array(0),l=h.properties.privateData.lenIV,u=this.readCharStrings(c,l),this.nextChar(),\"noaccess\"===(i=this.getToken())&&this.getToken(),a[d]=u}break;case\"BlueValues\":case\"OtherBlues\":case\"FamilyBlues\":case\"FamilyOtherBlues\":var g=this.readNumberArray();g.length>0&&g.length,0;break;case\"StemSnapH\":case\"StemSnapV\":h.properties.privateData[i]=this.readNumberArray();break;case\"StdHW\":case\"StdVW\":h.properties.privateData[i]=this.readNumberArray()[0];break;case\"BlueShift\":case\"lenIV\":case\"BlueFuzz\":case\"BlueScale\":case\"LanguageGroup\":case\"ExpansionFactor\":h.properties.privateData[i]=this.readNumber();break;case\"ForceBold\":h.properties.privateData[i]=this.readBoolean()}for(var p=0;p<r.length;p++){f=r[p].glyph,u=r[p].encoded;var m=new s,v=m.convert(u,a,this.seacAnalysisEnabled),b=m.output;v&&(b=[14]);var y={glyphName:f,charstring:b,width:m.width,lsb:m.lsb,seac:m.seac};if(\".notdef\"===f?h.charstrings.unshift(y):h.charstrings.push(y),e.builtInEncoding){var k=e.builtInEncoding.indexOf(f);k>-1&&void 0===e.widths[k]&&k>=e.firstChar&&k<=e.lastChar&&(e.widths[k]=m.width)}}return h},extractFontHeader:function(e){for(var t;null!==(t=this.getToken());)if(\"/\"===t)switch(t=this.getToken()){case\"FontMatrix\":var a=this.readNumberArray();e.fontMatrix=a;break;case\"Encoding\":var n,i=this.getToken();if(/^\\d+$/.test(i)){n=[];var o=0|parseInt(i,10);this.getToken();for(var s=0;s<o;s++){for(t=this.getToken();\"dup\"!==t&&\"def\"!==t;)if(null===(t=this.getToken()))return;if(\"def\"===t)break;var c=this.readInt();this.getToken();var l=this.getToken();n[c]=l,this.getToken()}}else n=(0,r.getEncoding)(i);e.builtInEncoding=n;break;case\"FontBBox\":var u=this.readNumberArray();e.ascent=Math.max(u[3],u[1]),e.descent=Math.min(u[1],u[3]),e.ascentScaled=!0}}},o}();t.Type1Parser=c},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getTilingPatternIR=function(e,t,a){var n=t.getArray(\"Matrix\"),i=r.Util.normalizeRect(t.getArray(\"BBox\")),o=t.get(\"XStep\"),s=t.get(\"YStep\"),c=t.get(\"PaintType\"),l=t.get(\"TilingType\");if(i[2]-i[0]===0||i[3]-i[1]===0)throw new r.FormatError(\"Invalid getTilingPatternIR /BBox array: [\".concat(i,\"].\"));return[\"TilingPattern\",a,e,n,i,o,s,c,l]},t.Pattern=void 0;var r=a(2),n=a(23),i=a(5),o=a(8),s=2,c=3,l=4,u=5,h=6,f=7,d=function(){function e(){(0,r.unreachable)(\"should not call Pattern constructor\")}return e.prototype={getPattern:function(e){(0,r.unreachable)(\"Should not call Pattern.getStyle: \".concat(e))}},e.parseShading=function(e,t,a,n,d,p,m){var v=(0,i.isStream)(e)?e.dict:e,b=v.get(\"ShadingType\");try{switch(b){case s:case c:return new g.RadialAxial(v,t,a,n,p,m);case l:case u:case h:case f:return new g.Mesh(e,t,a,n,p,m);default:throw new r.FormatError(\"Unsupported ShadingType: \"+b)}}catch(y){if(y instanceof o.MissingDataException)throw y;return d.send(\"UnsupportedFeature\",{featureId:r.UNSUPPORTED_FEATURES.shadingPattern}),(0,r.warn)(y),new g.Dummy}},e}();t.Pattern=d;var g={};g.SMALL_NUMBER=1e-6,g.RadialAxial=function(){function e(e,t,a,i,o,s){this.matrix=t,this.coordsArr=e.getArray(\"Coords\"),this.shadingType=e.get(\"ShadingType\"),this.type=\"Pattern\";var l=n.ColorSpace.parse({cs:e.getRaw(\"ColorSpace\")||e.getRaw(\"CS\"),xref:a,resources:i,pdfFunctionFactory:o,localColorSpaceCache:s});this.cs=l;var u=e.getArray(\"BBox\");Array.isArray(u)&&4===u.length?this.bbox=r.Util.normalizeRect(u):this.bbox=null;var h=0,f=1;if(e.has(\"Domain\")){var d=e.getArray(\"Domain\");h=d[0],f=d[1]}var p=!1,m=!1;if(e.has(\"Extend\")){var v=e.getArray(\"Extend\");p=v[0],m=v[1]}if(this.shadingType===c&&(!p||!m)){var b=this.coordsArr[0],y=this.coordsArr[1],k=this.coordsArr[2],w=this.coordsArr[3],C=this.coordsArr[4],S=this.coordsArr[5],x=Math.sqrt((b-w)*(b-w)+(y-C)*(y-C));k<=S+x&&S<=k+x&&(0,r.warn)(\"Unsupported radial gradient.\")}this.extendStart=p,this.extendEnd=m;var A=e.getRaw(\"Function\"),I=o.createFromArray(A),F=(f-h)/10,T=this.colorStops=[];if(h>=f||F<=0)(0,r.info)(\"Bad shading domain.\");else{for(var O,E=new Float32Array(l.numComps),P=new Float32Array(1),_=0;_<=10;_++){P[0]=h+_*F,I(P,0,E,0),O=l.getRgb(E,0);var B=r.Util.makeCssRgb(O[0],O[1],O[2]);T.push([_/10,B])}var M=\"transparent\";e.has(\"Background\")&&(O=l.getRgb(e.get(\"Background\"),0),M=r.Util.makeCssRgb(O[0],O[1],O[2])),p||(T.unshift([0,M]),T[1][0]+=g.SMALL_NUMBER),m||(T[T.length-1][0]-=g.SMALL_NUMBER,T.push([1,M])),this.colorStops=T}}return e.prototype={getIR:function(){var e,t,a,n,i,o=this.coordsArr,l=this.shadingType;l===s?(t=[o[0],o[1]],a=[o[2],o[3]],n=null,i=null,e=\"axial\"):l===c?(t=[o[0],o[1]],a=[o[3],o[4]],n=o[2],i=o[5],e=\"radial\"):(0,r.unreachable)(\"getPattern type unknown: \".concat(l));var u=this.matrix;if(u&&(t=r.Util.applyTransform(t,u),a=r.Util.applyTransform(a,u),l===c)){var h=r.Util.singularValueDecompose2dScale(u);n*=h[0],i*=h[1]}return[\"RadialAxial\",e,this.bbox,this.colorStops,t,a,n,i]}},e}(),g.Mesh=function(){function e(e,t){this.stream=e,this.context=t,this.buffer=0,this.bufferLength=0;var a=t.numComps;this.tmpCompsBuf=new Float32Array(a);var r=t.colorSpace.numComps;this.tmpCsCompsBuf=t.colorFn?new Float32Array(r):this.tmpCompsBuf}e.prototype={get hasData(){if(this.stream.end)return this.stream.pos<this.stream.end;if(this.bufferLength>0)return!0;var e=this.stream.getByte();return!(e<0)&&(this.buffer=e,this.bufferLength=8,!0)},readBits:function(e){var t=this.buffer,a=this.bufferLength;if(32===e){if(0===a)return(this.stream.getByte()<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte())>>>0;t=t<<24|this.stream.getByte()<<16|this.stream.getByte()<<8|this.stream.getByte();var r=this.stream.getByte();return this.buffer=r&(1<<a)-1,(t<<8-a|(255&r)>>a)>>>0}if(8===e&&0===a)return this.stream.getByte();for(;a<e;)t=t<<8|this.stream.getByte(),a+=8;return a-=e,this.bufferLength=a,this.buffer=t&(1<<a)-1,t>>a},align:function(){this.buffer=0,this.bufferLength=0},readFlag:function(){return this.readBits(this.context.bitsPerFlag)},readCoordinate:function(){var e=this.context.bitsPerCoordinate,t=this.readBits(e),a=this.readBits(e),r=this.context.decode,n=e<32?1/((1<<e)-1):2.3283064365386963e-10;return[t*n*(r[1]-r[0])+r[0],a*n*(r[3]-r[2])+r[2]]},readComponents:function(){for(var e=this.context.numComps,t=this.context.bitsPerComponent,a=t<32?1/((1<<t)-1):2.3283064365386963e-10,r=this.context.decode,n=this.tmpCompsBuf,i=0,o=4;i<e;i++,o+=2){var s=this.readBits(t);n[i]=s*a*(r[o+1]-r[o])+r[o]}var c=this.tmpCsCompsBuf;return this.context.colorFn&&this.context.colorFn(n,0,c,0),this.context.colorSpace.getRgb(c,0)}};var t=function(){var e=[];return function(t){return e[t]||(e[t]=function(e){for(var t=[],a=0;a<=e;a++){var r=a/e,n=1-r;t.push(new Float32Array([n*n*n,3*r*n*n,3*r*r*n,r*r*r]))}return t}(t)),e[t]}}();function a(e,a){var n=e.figures[a];(0,r.assert)(\"patch\"===n.type,\"Unexpected patch mesh figure\");var i=e.coords,o=e.colors,s=n.coords,c=n.colors,l=Math.min(i[s[0]][0],i[s[3]][0],i[s[12]][0],i[s[15]][0]),u=Math.min(i[s[0]][1],i[s[3]][1],i[s[12]][1],i[s[15]][1]),h=Math.max(i[s[0]][0],i[s[3]][0],i[s[12]][0],i[s[15]][0]),f=Math.max(i[s[0]][1],i[s[3]][1],i[s[12]][1],i[s[15]][1]),d=Math.ceil(20*(h-l)/(e.bounds[2]-e.bounds[0]));d=Math.max(3,Math.min(20,d));var g=Math.ceil(20*(f-u)/(e.bounds[3]-e.bounds[1]));g=Math.max(3,Math.min(20,g));for(var p=d+1,m=new Int32Array((g+1)*p),v=new Int32Array((g+1)*p),b=0,y=new Uint8Array(3),k=new Uint8Array(3),w=o[c[0]],C=o[c[1]],S=o[c[2]],x=o[c[3]],A=t(g),I=t(d),F=0;F<=g;F++){y[0]=(w[0]*(g-F)+S[0]*F)/g|0,y[1]=(w[1]*(g-F)+S[1]*F)/g|0,y[2]=(w[2]*(g-F)+S[2]*F)/g|0,k[0]=(C[0]*(g-F)+x[0]*F)/g|0,k[1]=(C[1]*(g-F)+x[1]*F)/g|0,k[2]=(C[2]*(g-F)+x[2]*F)/g|0;for(var T=0;T<=d;T++,b++)if(0!==F&&F!==g||0!==T&&T!==d){for(var O=0,E=0,P=0,_=0;_<=3;_++)for(var B=0;B<=3;B++,P++){var M=A[F][_]*I[T][B];O+=i[s[P]][0]*M,E+=i[s[P]][1]*M}m[b]=i.length,i.push([O,E]),v[b]=o.length;var D=new Uint8Array(3);D[0]=(y[0]*(d-T)+k[0]*T)/d|0,D[1]=(y[1]*(d-T)+k[1]*T)/d|0,D[2]=(y[2]*(d-T)+k[2]*T)/d|0,o.push(D)}}m[0]=s[0],v[0]=c[0],m[d]=s[3],v[d]=c[1],m[p*g]=s[12],v[p*g]=c[2],m[p*g+d]=s[15],v[p*g+d]=c[3],e.figures[a]={type:\"lattice\",coords:m,colors:v,verticesPerRow:p}}function o(e){for(var t=e.coords[0][0],a=e.coords[0][1],r=t,n=a,i=1,o=e.coords.length;i<o;i++){var s=e.coords[i][0],c=e.coords[i][1];t=t>s?s:t,a=a>c?c:a,r=r<s?s:r,n=n<c?c:n}e.bounds=[t,a,r,n]}function s(t,s,c,d,g,p){if(!(0,i.isStream)(t))throw new r.FormatError(\"Mesh data is not a stream\");var m=t.dict;this.matrix=s,this.shadingType=m.get(\"ShadingType\"),this.type=\"Pattern\";var v=m.getArray(\"BBox\");Array.isArray(v)&&4===v.length?this.bbox=r.Util.normalizeRect(v):this.bbox=null;var b=n.ColorSpace.parse({cs:m.getRaw(\"ColorSpace\")||m.getRaw(\"CS\"),xref:c,resources:d,pdfFunctionFactory:g,localColorSpaceCache:p});this.cs=b,this.background=m.has(\"Background\")?b.getRgb(m.get(\"Background\"),0):null;var y=m.getRaw(\"Function\"),k=y?g.createFromArray(y):null;this.coords=[],this.colors=[],this.figures=[];var w=new e(t,{bitsPerCoordinate:m.get(\"BitsPerCoordinate\"),bitsPerComponent:m.get(\"BitsPerComponent\"),bitsPerFlag:m.get(\"BitsPerFlag\"),decode:m.getArray(\"Decode\"),colorFn:k,colorSpace:b,numComps:k?1:b.numComps}),C=!1;switch(this.shadingType){case l:!function(e,t){for(var a=e.coords,n=e.colors,i=[],o=[],s=0;t.hasData;){var c=t.readFlag(),l=t.readCoordinate(),u=t.readComponents();if(0===s){if(!(0<=c&&c<=2))throw new r.FormatError(\"Unknown type4 flag\");switch(c){case 0:s=3;break;case 1:o.push(o[o.length-2],o[o.length-1]),s=1;break;case 2:o.push(o[o.length-3],o[o.length-1]),s=1}i.push(c)}o.push(a.length),a.push(l),n.push(u),s--,t.align()}e.figures.push({type:\"triangles\",coords:new Int32Array(o),colors:new Int32Array(o)})}(this,w);break;case u:var S=0|m.get(\"VerticesPerRow\");if(S<2)throw new r.FormatError(\"Invalid VerticesPerRow\");!function(e,t,a){for(var r=e.coords,n=e.colors,i=[];t.hasData;){var o=t.readCoordinate(),s=t.readComponents();i.push(r.length),r.push(o),n.push(s)}e.figures.push({type:\"lattice\",coords:new Int32Array(i),colors:new Int32Array(i),verticesPerRow:a})}(this,w,S);break;case h:!function(e,t){for(var a=e.coords,n=e.colors,i=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new r.FormatError(\"Unknown type6 flag\");var u=a.length;for(s=0,c=0!==l?8:12;s<c;s++)a.push(t.readCoordinate());var h,f,d,g,p=n.length;for(s=0,c=0!==l?2:4;s<c;s++)n.push(t.readComponents());switch(l){case 0:i[12]=u+3,i[13]=u+4,i[14]=u+5,i[15]=u+6,i[8]=u+2,i[11]=u+7,i[4]=u+1,i[7]=u+8,i[0]=u,i[1]=u+11,i[2]=u+10,i[3]=u+9,o[2]=p+1,o[3]=p+2,o[0]=p,o[1]=p+3;break;case 1:h=i[12],f=i[13],d=i[14],g=i[15],i[12]=g,i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=d,i[11]=u+3,i[4]=f,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=p,o[0]=h,o[1]=p+1;break;case 2:h=i[15],f=i[11],i[12]=i[3],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[7],i[11]=u+3,i[4]=f,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[3],o[2]=o[1],o[3]=p,o[0]=h,o[1]=p+1;break;case 3:i[12]=i[0],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[1],i[11]=u+3,i[4]=i[2],i[7]=u+4,i[0]=i[3],i[1]=u+7,i[2]=u+6,i[3]=u+5,o[2]=o[0],o[3]=p,o[0]=o[1],o[1]=p+1}i[5]=a.length,a.push([(-4*a[i[0]][0]-a[i[15]][0]+6*(a[i[4]][0]+a[i[1]][0])-2*(a[i[12]][0]+a[i[3]][0])+3*(a[i[13]][0]+a[i[7]][0]))/9,(-4*a[i[0]][1]-a[i[15]][1]+6*(a[i[4]][1]+a[i[1]][1])-2*(a[i[12]][1]+a[i[3]][1])+3*(a[i[13]][1]+a[i[7]][1]))/9]),i[6]=a.length,a.push([(-4*a[i[3]][0]-a[i[12]][0]+6*(a[i[2]][0]+a[i[7]][0])-2*(a[i[0]][0]+a[i[15]][0])+3*(a[i[4]][0]+a[i[14]][0]))/9,(-4*a[i[3]][1]-a[i[12]][1]+6*(a[i[2]][1]+a[i[7]][1])-2*(a[i[0]][1]+a[i[15]][1])+3*(a[i[4]][1]+a[i[14]][1]))/9]),i[9]=a.length,a.push([(-4*a[i[12]][0]-a[i[3]][0]+6*(a[i[8]][0]+a[i[13]][0])-2*(a[i[0]][0]+a[i[15]][0])+3*(a[i[11]][0]+a[i[1]][0]))/9,(-4*a[i[12]][1]-a[i[3]][1]+6*(a[i[8]][1]+a[i[13]][1])-2*(a[i[0]][1]+a[i[15]][1])+3*(a[i[11]][1]+a[i[1]][1]))/9]),i[10]=a.length,a.push([(-4*a[i[15]][0]-a[i[0]][0]+6*(a[i[11]][0]+a[i[14]][0])-2*(a[i[12]][0]+a[i[3]][0])+3*(a[i[2]][0]+a[i[8]][0]))/9,(-4*a[i[15]][1]-a[i[0]][1]+6*(a[i[11]][1]+a[i[14]][1])-2*(a[i[12]][1]+a[i[3]][1])+3*(a[i[2]][1]+a[i[8]][1]))/9]),e.figures.push({type:\"patch\",coords:new Int32Array(i),colors:new Int32Array(o)})}}(this,w),C=!0;break;case f:!function(e,t){for(var a=e.coords,n=e.colors,i=new Int32Array(16),o=new Int32Array(4);t.hasData;){var s,c,l=t.readFlag();if(!(0<=l&&l<=3))throw new r.FormatError(\"Unknown type7 flag\");var u=a.length;for(s=0,c=0!==l?12:16;s<c;s++)a.push(t.readCoordinate());var h,f,d,g,p=n.length;for(s=0,c=0!==l?2:4;s<c;s++)n.push(t.readComponents());switch(l){case 0:i[12]=u+3,i[13]=u+4,i[14]=u+5,i[15]=u+6,i[8]=u+2,i[9]=u+13,i[10]=u+14,i[11]=u+7,i[4]=u+1,i[5]=u+12,i[6]=u+15,i[7]=u+8,i[0]=u,i[1]=u+11,i[2]=u+10,i[3]=u+9,o[2]=p+1,o[3]=p+2,o[0]=p,o[1]=p+3;break;case 1:h=i[12],f=i[13],d=i[14],g=i[15],i[12]=g,i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=d,i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=f,i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[2],f=o[3],o[2]=f,o[3]=p,o[0]=h,o[1]=p+1;break;case 2:h=i[15],f=i[11],i[12]=i[3],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[7],i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=f,i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=h,i[1]=u+7,i[2]=u+6,i[3]=u+5,h=o[3],o[2]=o[1],o[3]=p,o[0]=h,o[1]=p+1;break;case 3:i[12]=i[0],i[13]=u+0,i[14]=u+1,i[15]=u+2,i[8]=i[1],i[9]=u+9,i[10]=u+10,i[11]=u+3,i[4]=i[2],i[5]=u+8,i[6]=u+11,i[7]=u+4,i[0]=i[3],i[1]=u+7,i[2]=u+6,i[3]=u+5,o[2]=o[0],o[3]=p,o[0]=o[1],o[1]=p+1}e.figures.push({type:\"patch\",coords:new Int32Array(i),colors:new Int32Array(o)})}}(this,w),C=!0;break;default:(0,r.unreachable)(\"Unsupported mesh type.\")}if(C){o(this);for(var x=0,A=this.figures.length;x<A;x++)a(this,x)}o(this),function(e){var t,a,r,n,i=e.coords,o=new Float32Array(2*i.length);for(t=0,r=0,a=i.length;t<a;t++){var s=i[t];o[r++]=s[0],o[r++]=s[1]}e.coords=o;var c=e.colors,l=new Uint8Array(3*c.length);for(t=0,r=0,a=c.length;t<a;t++){var u=c[t];l[r++]=u[0],l[r++]=u[1],l[r++]=u[2]}e.colors=l;var h=e.figures;for(t=0,a=h.length;t<a;t++){var f=h[t],d=f.coords,g=f.colors;for(r=0,n=d.length;r<n;r++)d[r]*=2,g[r]*=3}}(this)}return s.prototype={getIR:function(){return[\"Mesh\",this.shadingType,this.coords,this.colors,this.figures,this.bounds,this.matrix,this.bbox,this.background]}},s}(),g.Dummy=function(){function e(){this.type=\"Pattern\"}return e.prototype={getIR:function(){return[\"Dummy\"]}},e}()},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPDFFunction=function(e){var t;if(\"object\"!==typeof e)return!1;if((0,r.isDict)(e))t=e;else{if(!(0,r.isStream)(e))return!1;t=e.dict}return t.has(\"FunctionType\")},t.PostScriptCompiler=t.PostScriptEvaluator=t.PDFFunctionFactory=void 0;var r=a(5),n=a(2),i=a(41),o=a(24),s=function(){function e(t){var a=t.xref,r=t.isEvalSupported,n=void 0===r||r;_classCallCheck(this,e),this.xref=a,this.isEvalSupported=!1!==n,this._localFunctionCache=null}return _createClass(e,[{key:\"create\",value:function(e){var t=this.getCached(e);if(t)return t;var a=l.parse({xref:this.xref,isEvalSupported:this.isEvalSupported,fn:e instanceof r.Ref?this.xref.fetch(e):e});return this._cache(e,a),a}},{key:\"createFromArray\",value:function(e){var t=this.getCached(e);if(t)return t;var a=l.parseArray({xref:this.xref,isEvalSupported:this.isEvalSupported,fnObj:e instanceof r.Ref?this.xref.fetch(e):e});return this._cache(e,a),a}},{key:\"getCached\",value:function(e){var t;if(e instanceof r.Ref?t=e:e instanceof r.Dict?t=e.objId:(0,r.isStream)(e)&&(t=e.dict&&e.dict.objId),t){this._localFunctionCache||(this._localFunctionCache=new o.LocalFunctionCache);var a=this._localFunctionCache.getByRef(t);if(a)return a}return null}},{key:\"_cache\",value:function(e,t){if(!t)throw new Error('PDFFunctionFactory._cache - expected \"parsedFunction\" argument.');var a;e instanceof r.Ref?a=e:e instanceof r.Dict?a=e.objId:(0,r.isStream)(e)&&(a=e.dict&&e.dict.objId),a&&(this._localFunctionCache||(this._localFunctionCache=new o.LocalFunctionCache),this._localFunctionCache.set(null,a,t))}}]),e}();function c(e){if(!Array.isArray(e))return null;for(var t=e.length,a=0;a<t;a++)if(\"number\"!==typeof e[a]){for(var r=new Array(t),n=0;n<t;n++)r[n]=+e[n];return r}return e}t.PDFFunctionFactory=s;var l={getSampleArray:function(e,t,a,r){var n,i,o=1;for(n=0,i=e.length;n<i;n++)o*=e[n];o*=t;var s=new Array(o),c=0,l=0,u=1/(Math.pow(2,a)-1),h=r.getBytes((o*a+7)/8),f=0;for(n=0;n<o;n++){for(;c<a;)l<<=8,l|=h[f++],c+=8;c-=a,s[n]=(l>>c)*u,l&=(1<<c)-1}return s},getIR:function(e){var t=e.xref,a=e.isEvalSupported,r=e.fn,i=r.dict;i||(i=r);var o=[this.constructSampled,null,this.constructInterpolated,this.constructStiched,this.constructPostScript][i.get(\"FunctionType\")];if(!o)throw new n.FormatError(\"Unknown type of function\");return o.call(this,{xref:t,isEvalSupported:a,fn:r,dict:i})},fromIR:function(e){var t=e.xref,a=e.isEvalSupported,r=e.IR;switch(r[0]){case 0:return this.constructSampledFromIR({xref:t,isEvalSupported:a,IR:r});case 2:return this.constructInterpolatedFromIR({xref:t,isEvalSupported:a,IR:r});case 3:return this.constructStichedFromIR({xref:t,isEvalSupported:a,IR:r});default:return this.constructPostScriptFromIR({xref:t,isEvalSupported:a,IR:r})}},parse:function(e){var t=e.xref,a=e.isEvalSupported,r=e.fn,n=this.getIR({xref:t,isEvalSupported:a,fn:r});return this.fromIR({xref:t,isEvalSupported:a,IR:n})},parseArray:function(e){var t=e.xref,a=e.isEvalSupported,r=e.fnObj;if(!Array.isArray(r))return this.parse({xref:t,isEvalSupported:a,fn:r});for(var n=[],i=0,o=r.length;i<o;i++)n.push(this.parse({xref:t,isEvalSupported:a,fn:t.fetchIfRef(r[i])}));return function(e,t,a,r){for(var i=0,o=n.length;i<o;i++)n[i](e,t,a,r+i)}},constructSampled:function(e){e.xref,e.isEvalSupported;var t=e.fn,a=e.dict;function r(e){for(var t=e.length,a=[],r=0,n=0;n<t;n+=2)a[r]=[e[n],e[n+1]],++r;return a}var i=c(a.getArray(\"Domain\")),o=c(a.getArray(\"Range\"));if(!i||!o)throw new n.FormatError(\"No domain or range\");var s=i.length/2,l=o.length/2;i=r(i),o=r(o);var u=c(a.getArray(\"Size\")),h=a.get(\"BitsPerSample\"),f=a.get(\"Order\")||1;1!==f&&(0,n.info)(\"No support for cubic spline interpolation: \"+f);var d=c(a.getArray(\"Encode\"));if(d)d=r(d);else{d=[];for(var g=0;g<s;++g)d.push([0,u[g]-1])}var p=c(a.getArray(\"Decode\"));return[0,s,i,d,p=p?r(p):o,this.getSampleArray(u,l,h,t),u,l,Math.pow(2,h)-1,o]},constructSampledFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR;function a(e,t,a,r,n){return r+(n-r)/(a-t)*(e-t)}return function(e,r,n,i){var o,s,c=t[1],l=t[2],u=t[3],h=t[4],f=t[5],d=t[6],g=t[7],p=t[9],m=1<<c,v=new Float64Array(m),b=new Uint32Array(m);for(s=0;s<m;s++)v[s]=1;var y=g,k=1;for(o=0;o<c;++o){var w=l[o][0],C=l[o][1],S=a(Math.min(Math.max(e[r+o],w),C),w,C,u[o][0],u[o][1]),x=d[o],A=(S=Math.min(Math.max(S,0),x-1))<x-1?Math.floor(S):S-1,I=A+1-S,F=S-A,T=A*y,O=T+y;for(s=0;s<m;s++)s&k?(v[s]*=F,b[s]+=O):(v[s]*=I,b[s]+=T);y*=x,k<<=1}for(s=0;s<g;++s){var E=0;for(o=0;o<m;o++)E+=f[b[o]+s]*v[o];E=a(E,0,1,h[s][0],h[s][1]),n[i+s]=Math.min(Math.max(E,p[s][0]),p[s][1])}}},constructInterpolated:function(e){e.xref,e.isEvalSupported,e.fn;for(var t=e.dict,a=c(t.getArray(\"C0\"))||[0],r=c(t.getArray(\"C1\"))||[1],n=t.get(\"N\"),i=a.length,o=[],s=0;s<i;++s)o.push(r[s]-a[s]);return[2,a,o,n]},constructInterpolatedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,a=t[1],r=t[2],n=t[3],i=r.length;return function(e,t,o,s){for(var c=1===n?e[t]:Math.pow(e[t],n),l=0;l<i;++l)o[s+l]=a[l]+c*r[l]}},constructStiched:function(e){var t=e.xref,a=e.isEvalSupported,r=(e.fn,e.dict),i=c(r.getArray(\"Domain\"));if(!i)throw new n.FormatError(\"No domain\");if(1!==i.length/2)throw new n.FormatError(\"Bad domain for stiched function\");for(var o=r.get(\"Functions\"),s=[],l=0,u=o.length;l<u;++l)s.push(this.parse({xref:t,isEvalSupported:a,fn:t.fetchIfRef(o[l])}));return[3,i,c(r.getArray(\"Bounds\")),c(r.getArray(\"Encode\")),s]},constructStichedFromIR:function(e){e.xref,e.isEvalSupported;var t=e.IR,a=t[1],r=t[2],n=t[3],i=t[4],o=new Float32Array(1);return function(e,t,s,c){for(var l=function(e,t,a){return e>a?e=a:e<t&&(e=t),e}(e[t],a[0],a[1]),u=0,h=r.length;u<h&&!(l<r[u]);++u);var f=a[0];u>0&&(f=r[u-1]);var d=a[1];u<r.length&&(d=r[u]);var g=n[2*u],p=n[2*u+1];o[0]=f===d?g:g+(l-f)*(p-g)/(d-f),i[u](o,0,s,c)}},constructPostScript:function(e){e.xref,e.isEvalSupported;var t=e.fn,a=e.dict,r=c(a.getArray(\"Domain\")),o=c(a.getArray(\"Range\"));if(!r)throw new n.FormatError(\"No domain.\");if(!o)throw new n.FormatError(\"No range.\");var s=new i.PostScriptLexer(t);return[4,r,o,new i.PostScriptParser(s).parse()]},constructPostScriptFromIR:function(e){e.xref;var t=e.isEvalSupported,a=e.IR,r=a[1],i=a[2],o=a[3];if(t&&n.IsEvalSupportedCached.value){var s=(new f).compile(o,r,i);if(s)return new Function(\"src\",\"srcOffset\",\"dest\",\"destOffset\",s)}(0,n.info)(\"Unable to compile PS function\");var c=i.length>>1,l=r.length>>1,u=new h(o),d=Object.create(null),g=8192,p=new Float32Array(l);return function(e,t,a,r){var n,o,s=\"\",h=p;for(n=0;n<l;n++)o=e[t+n],h[n]=o,s+=o+\"_\";var f=d[s];if(void 0===f){var m=new Float32Array(c),v=u.execute(h),b=v.length-c;for(n=0;n<c;n++){o=v[b+n];var y=i[2*n];(o<y||o>(y=i[2*n+1]))&&(o=y),m[n]=o}g>0&&(g--,d[s]=m),a.set(m,r)}else a.set(f,r)}}};var u=function(){function e(e){this.stack=e?Array.prototype.slice.call(e,0):[]}return e.prototype={push:function(e){if(this.stack.length>=100)throw new Error(\"PostScript function stack overflow.\");this.stack.push(e)},pop:function(){if(this.stack.length<=0)throw new Error(\"PostScript function stack underflow.\");return this.stack.pop()},copy:function(e){if(this.stack.length+e>=100)throw new Error(\"PostScript function stack overflow.\");for(var t=this.stack,a=t.length-e,r=e-1;r>=0;r--,a++)t.push(t[a])},index:function(e){this.push(this.stack[this.stack.length-e-1])},roll:function(e,t){var a,r,n,i=this.stack,o=i.length-e,s=i.length-1,c=o+(t-Math.floor(t/e)*e);for(a=o,r=s;a<r;a++,r--)n=i[a],i[a]=i[r],i[r]=n;for(a=o,r=c-1;a<r;a++,r--)n=i[a],i[a]=i[r],i[r]=n;for(a=c,r=s;a<r;a++,r--)n=i[a],i[a]=i[r],i[r]=n}},e}(),h=function(){function e(e){this.operators=e}return e.prototype={execute:function(e){for(var t,a,r,i=new u(e),o=0,s=this.operators,c=s.length;o<c;)if(\"number\"!==typeof(t=s[o++]))switch(t){case\"jz\":r=i.pop(),(a=i.pop())||(o=r);break;case\"j\":o=a=i.pop();break;case\"abs\":a=i.pop(),i.push(Math.abs(a));break;case\"add\":r=i.pop(),a=i.pop(),i.push(a+r);break;case\"and\":r=i.pop(),a=i.pop(),(0,n.isBool)(a)&&(0,n.isBool)(r)?i.push(a&&r):i.push(a&r);break;case\"atan\":a=i.pop(),i.push(Math.atan(a));break;case\"bitshift\":r=i.pop(),(a=i.pop())>0?i.push(a<<r):i.push(a>>r);break;case\"ceiling\":a=i.pop(),i.push(Math.ceil(a));break;case\"copy\":a=i.pop(),i.copy(a);break;case\"cos\":a=i.pop(),i.push(Math.cos(a));break;case\"cvi\":a=0|i.pop(),i.push(a);break;case\"cvr\":break;case\"div\":r=i.pop(),a=i.pop(),i.push(a/r);break;case\"dup\":i.copy(1);break;case\"eq\":r=i.pop(),a=i.pop(),i.push(a===r);break;case\"exch\":i.roll(2,1);break;case\"exp\":r=i.pop(),a=i.pop(),i.push(Math.pow(a,r));break;case\"false\":i.push(!1);break;case\"floor\":a=i.pop(),i.push(Math.floor(a));break;case\"ge\":r=i.pop(),a=i.pop(),i.push(a>=r);break;case\"gt\":r=i.pop(),a=i.pop(),i.push(a>r);break;case\"idiv\":r=i.pop(),a=i.pop(),i.push(a/r|0);break;case\"index\":a=i.pop(),i.index(a);break;case\"le\":r=i.pop(),a=i.pop(),i.push(a<=r);break;case\"ln\":a=i.pop(),i.push(Math.log(a));break;case\"log\":a=i.pop(),i.push(Math.log(a)/Math.LN10);break;case\"lt\":r=i.pop(),a=i.pop(),i.push(a<r);break;case\"mod\":r=i.pop(),a=i.pop(),i.push(a%r);break;case\"mul\":r=i.pop(),a=i.pop(),i.push(a*r);break;case\"ne\":r=i.pop(),a=i.pop(),i.push(a!==r);break;case\"neg\":a=i.pop(),i.push(-a);break;case\"not\":a=i.pop(),(0,n.isBool)(a)?i.push(!a):i.push(~a);break;case\"or\":r=i.pop(),a=i.pop(),(0,n.isBool)(a)&&(0,n.isBool)(r)?i.push(a||r):i.push(a|r);break;case\"pop\":i.pop();break;case\"roll\":r=i.pop(),a=i.pop(),i.roll(a,r);break;case\"round\":a=i.pop(),i.push(Math.round(a));break;case\"sin\":a=i.pop(),i.push(Math.sin(a));break;case\"sqrt\":a=i.pop(),i.push(Math.sqrt(a));break;case\"sub\":r=i.pop(),a=i.pop(),i.push(a-r);break;case\"true\":i.push(!0);break;case\"truncate\":a=(a=i.pop())<0?Math.ceil(a):Math.floor(a),i.push(a);break;case\"xor\":r=i.pop(),a=i.pop(),(0,n.isBool)(a)&&(0,n.isBool)(r)?i.push(a!==r):i.push(a^r);break;default:throw new n.FormatError(\"Unknown operator \".concat(t))}else i.push(t);return i.stack}},e}();t.PostScriptEvaluator=h;var f=function(){function e(e){this.type=e}function t(t,a,r){e.call(this,\"args\"),this.index=t,this.min=a,this.max=r}function a(t){e.call(this,\"literal\"),this.number=t,this.min=t,this.max=t}function r(t,a,r,n,i){e.call(this,\"binary\"),this.op=t,this.arg1=a,this.arg2=r,this.min=n,this.max=i}function i(t,a){e.call(this,\"max\"),this.arg=t,this.min=t.min,this.max=a}function o(t,a,r){e.call(this,\"var\"),this.index=t,this.min=a,this.max=r}function s(t,a){e.call(this,\"definition\"),this.variable=t,this.arg=a}function c(){this.parts=[]}function l(e,t){return\"literal\"===t.type&&0===t.number?e:\"literal\"===e.type&&0===e.number?t:\"literal\"===t.type&&\"literal\"===e.type?new a(e.number+t.number):new r(\"+\",e,t,e.min+t.min,e.max+t.max)}function u(e,t){if(\"literal\"===t.type){if(0===t.number)return new a(0);if(1===t.number)return e;if(\"literal\"===e.type)return new a(e.number*t.number)}if(\"literal\"===e.type){if(0===e.number)return new a(0);if(1===e.number)return t}return new r(\"*\",e,t,Math.min(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max),Math.max(e.min*t.min,e.min*t.max,e.max*t.min,e.max*t.max))}function h(e,t){if(\"literal\"===t.type){if(0===t.number)return e;if(\"literal\"===e.type)return new a(e.number-t.number)}return\"binary\"===t.type&&\"-\"===t.op&&\"literal\"===e.type&&1===e.number&&\"literal\"===t.arg1.type&&1===t.arg1.number?t.arg2:new r(\"-\",e,t,e.min-t.max,e.max-t.min)}function f(e,t){return e.min>=t?new a(t):e.max<=t?e:new i(e,t)}function d(){}return e.prototype.visit=function(e){(0,n.unreachable)(\"abstract method\")},t.prototype=Object.create(e.prototype),t.prototype.visit=function(e){e.visitArgument(this)},a.prototype=Object.create(e.prototype),a.prototype.visit=function(e){e.visitLiteral(this)},r.prototype=Object.create(e.prototype),r.prototype.visit=function(e){e.visitBinaryOperation(this)},i.prototype=Object.create(e.prototype),i.prototype.visit=function(e){e.visitMin(this)},o.prototype=Object.create(e.prototype),o.prototype.visit=function(e){e.visitVariable(this)},s.prototype=Object.create(e.prototype),s.prototype.visit=function(e){e.visitVariableDefinition(this)},c.prototype={visitArgument:function(e){this.parts.push(\"Math.max(\",e.min,\", Math.min(\",e.max,\", src[srcOffset + \",e.index,\"]))\")},visitVariable:function(e){this.parts.push(\"v\",e.index)},visitLiteral:function(e){this.parts.push(e.number)},visitBinaryOperation:function(e){this.parts.push(\"(\"),e.arg1.visit(this),this.parts.push(\" \",e.op,\" \"),e.arg2.visit(this),this.parts.push(\")\")},visitVariableDefinition:function(e){this.parts.push(\"var \"),e.variable.visit(this),this.parts.push(\" = \"),e.arg.visit(this),this.parts.push(\";\")},visitMin:function(e){this.parts.push(\"Math.min(\"),e.arg.visit(this),this.parts.push(\", \",e.max,\")\")},toString:function(){return this.parts.join(\"\")}},d.prototype={compile:function(e,r,n){for(var i,d,g,p,m,v,b,y,k=[],w=[],C=r.length>>1,S=n.length>>1,x=0,A=0;A<C;A++)k.push(new t(A,r[2*A],r[2*A+1]));for(var I=0,F=e.length;I<F;I++)if(\"number\"!==typeof(y=e[I]))switch(y){case\"add\":if(k.length<2)return null;p=k.pop(),g=k.pop(),k.push(l(g,p));break;case\"cvr\":if(k.length<1)return null;break;case\"mul\":if(k.length<2)return null;p=k.pop(),g=k.pop(),k.push(u(g,p));break;case\"sub\":if(k.length<2)return null;p=k.pop(),g=k.pop(),k.push(h(g,p));break;case\"exch\":if(k.length<2)return null;m=k.pop(),v=k.pop(),k.push(m,v);break;case\"pop\":if(k.length<1)return null;k.pop();break;case\"index\":if(k.length<1)return null;if(\"literal\"!==(g=k.pop()).type)return null;if((i=g.number)<0||!Number.isInteger(i)||k.length<i)return null;if(\"literal\"===(m=k[k.length-i-1]).type||\"var\"===m.type){k.push(m);break}b=new o(x++,m.min,m.max),k[k.length-i-1]=b,k.push(b),w.push(new s(b,m));break;case\"dup\":if(k.length<1)return null;if(\"number\"===typeof e[I+1]&&\"gt\"===e[I+2]&&e[I+3]===I+7&&\"jz\"===e[I+4]&&\"pop\"===e[I+5]&&e[I+6]===e[I+1]){g=k.pop(),k.push(f(g,e[I+1])),I+=6;break}if(\"literal\"===(m=k[k.length-1]).type||\"var\"===m.type){k.push(m);break}b=new o(x++,m.min,m.max),k[k.length-1]=b,k.push(b),w.push(new s(b,m));break;case\"roll\":if(k.length<2)return null;if(p=k.pop(),g=k.pop(),\"literal\"!==p.type||\"literal\"!==g.type)return null;if(d=p.number,(i=g.number)<=0||!Number.isInteger(i)||!Number.isInteger(d)||k.length<i)return null;if(0===(d=(d%i+i)%i))break;Array.prototype.push.apply(k,k.splice(k.length-i,i-d));break;default:return null}else k.push(new a(y));if(k.length!==S)return null;var T=[];return w.forEach((function(e){var t=new c;e.visit(t),T.push(t.toString())})),k.forEach((function(e,t){var a=new c;e.visit(a);var r=n[2*t],i=n[2*t+1],o=[a.toString()];r>e.min&&(o.unshift(\"Math.max(\",r,\", \"),o.push(\")\")),i<e.max&&(o.unshift(\"Math.min(\",i,\", \"),o.push(\")\")),o.unshift(\"dest[destOffset + \",t,\"] = \"),o.push(\";\"),T.push(o.join(\"\"))})),T.join(\"\\n\")}},d}();t.PostScriptCompiler=f},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PostScriptParser=t.PostScriptLexer=void 0;var r=a(2),n=a(5),i=a(8),o=function(){function e(t){_classCallCheck(this,e),this.lexer=t,this.operators=[],this.token=null,this.prev=null}return _createClass(e,[{key:\"nextToken\",value:function(){this.prev=this.token,this.token=this.lexer.getToken()}},{key:\"accept\",value:function(e){return this.token.type===e&&(this.nextToken(),!0)}},{key:\"expect\",value:function(e){if(this.accept(e))return!0;throw new r.FormatError(\"Unexpected symbol: found \".concat(this.token.type,\" expected \").concat(e,\".\"))}},{key:\"parse\",value:function(){return this.nextToken(),this.expect(s.LBRACE),this.parseBlock(),this.expect(s.RBRACE),this.operators}},{key:\"parseBlock\",value:function(){for(;;)if(this.accept(s.NUMBER))this.operators.push(this.prev.value);else if(this.accept(s.OPERATOR))this.operators.push(this.prev.value);else{if(!this.accept(s.LBRACE))return;this.parseCondition()}}},{key:\"parseCondition\",value:function(){var e=this.operators.length;if(this.operators.push(null,null),this.parseBlock(),this.expect(s.RBRACE),this.accept(s.IF))this.operators[e]=this.operators.length,this.operators[e+1]=\"jz\";else{if(!this.accept(s.LBRACE))throw new r.FormatError(\"PS Function: error parsing conditional.\");var t=this.operators.length;this.operators.push(null,null);var a=this.operators.length;this.parseBlock(),this.expect(s.RBRACE),this.expect(s.IFELSE),this.operators[t]=this.operators.length,this.operators[t+1]=\"j\",this.operators[e]=a,this.operators[e+1]=\"jz\"}}}]),e}();t.PostScriptParser=o;var s={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5},c=function(){var e=Object.create(null);return function(){function t(e,a){_classCallCheck(this,t),this.type=e,this.value=a}return _createClass(t,null,[{key:\"getOperator\",value:function(a){var r=e[a];return r||(e[a]=new t(s.OPERATOR,a))}},{key:\"LBRACE\",get:function(){return(0,r.shadow)(this,\"LBRACE\",new t(s.LBRACE,\"{\"))}},{key:\"RBRACE\",get:function(){return(0,r.shadow)(this,\"RBRACE\",new t(s.RBRACE,\"}\"))}},{key:\"IF\",get:function(){return(0,r.shadow)(this,\"IF\",new t(s.IF,\"IF\"))}},{key:\"IFELSE\",get:function(){return(0,r.shadow)(this,\"IFELSE\",new t(s.IFELSE,\"IFELSE\"))}}]),t}()}(),l=function(){function e(t){_classCallCheck(this,e),this.stream=t,this.nextChar(),this.strBuf=[]}return _createClass(e,[{key:\"nextChar\",value:function(){return this.currentChar=this.stream.getByte()}},{key:\"getToken\",value:function(){for(var e=!1,t=this.currentChar;;){if(t<0)return n.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(!(0,i.isWhiteSpace)(t))break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new c(s.NUMBER,this.getNumber());case 123:return this.nextChar(),c.LBRACE;case 125:return this.nextChar(),c.RBRACE}var a=this.strBuf;for(a.length=0,a[0]=String.fromCharCode(t);(t=this.nextChar())>=0&&(t>=65&&t<=90||t>=97&&t<=122);)a.push(String.fromCharCode(t));var r=a.join(\"\");switch(r.toLowerCase()){case\"if\":return c.IF;case\"ifelse\":return c.IFELSE;default:return c.getOperator(r)}}},{key:\"getNumber\",value:function(){var e=this.currentChar,t=this.strBuf;for(t.length=0,t[0]=String.fromCharCode(e);(e=this.nextChar())>=0&&(e>=48&&e<=57||45===e||46===e);)t.push(String.fromCharCode(e));var a=parseFloat(t.join(\"\"));if(isNaN(a))throw new r.FormatError(\"Invalid floating point number: \".concat(a));return a}}]),e}();t.PostScriptLexer=l},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.bidi=function(e,t,a){var g=!0,p=e.length;if(0===p||a)return h(e,g,a);f.length=p,d.length=p;var m,v,b=0;for(m=0;m<p;++m){f[m]=e.charAt(m);var y=e.charCodeAt(m),k=\"L\";y<=255?k=n[y]:1424<=y&&y<=1524?k=\"R\":1536<=y&&y<=1791?(k=i[255&y])||(0,r.warn)(\"Bidi: invalid Unicode character \"+y.toString(16)):1792<=y&&y<=2220&&(k=\"AL\"),\"R\"!==k&&\"AL\"!==k&&\"AN\"!==k||b++,d[m]=k}if(0===b)return h(e,g=!0);-1===t&&(b/p<.3?(g=!0,t=0):(g=!1,t=1));var w=[];for(m=0;m<p;++m)w[m]=t;var C,S=o(t)?\"R\":\"L\",x=S,A=x,I=x;for(m=0;m<p;++m)\"NSM\"===d[m]?d[m]=I:I=d[m];for(I=x,m=0;m<p;++m)\"EN\"===(C=d[m])?d[m]=\"AL\"===I?\"AN\":\"EN\":\"R\"!==C&&\"L\"!==C&&\"AL\"!==C||(I=C);for(m=0;m<p;++m)\"AL\"===(C=d[m])&&(d[m]=\"R\");for(m=1;m<p-1;++m)\"ES\"===d[m]&&\"EN\"===d[m-1]&&\"EN\"===d[m+1]&&(d[m]=\"EN\"),\"CS\"!==d[m]||\"EN\"!==d[m-1]&&\"AN\"!==d[m-1]||d[m+1]!==d[m-1]||(d[m]=d[m-1]);for(m=0;m<p;++m)if(\"EN\"===d[m]){var F;for(F=m-1;F>=0&&\"ET\"===d[F];--F)d[F]=\"EN\";for(F=m+1;F<p&&\"ET\"===d[F];++F)d[F]=\"EN\"}for(m=0;m<p;++m)\"WS\"!==(C=d[m])&&\"ES\"!==C&&\"ET\"!==C&&\"CS\"!==C||(d[m]=\"ON\");for(I=x,m=0;m<p;++m)\"EN\"===(C=d[m])?d[m]=\"L\"===I?\"L\":\"EN\":\"R\"!==C&&\"L\"!==C||(I=C);for(m=0;m<p;++m)if(\"ON\"===d[m]){var T=c(d,m+1,\"ON\"),O=x;m>0&&(O=d[m-1]);var E=A;T+1<p&&(E=d[T+1]),\"L\"!==O&&(O=\"R\"),\"L\"!==E&&(E=\"R\"),O===E&&l(d,m,T,O),m=T-1}for(m=0;m<p;++m)\"ON\"===d[m]&&(d[m]=S);for(m=0;m<p;++m)C=d[m],s(w[m])?\"R\"===C?w[m]+=1:\"AN\"!==C&&\"EN\"!==C||(w[m]+=2):\"L\"!==C&&\"AN\"!==C&&\"EN\"!==C||(w[m]+=1);var P,_=-1,B=99;for(m=0,v=w.length;m<v;++m)P=w[m],_<P&&(_=P),B>P&&o(P)&&(B=P);for(P=_;P>=B;--P){var M=-1;for(m=0,v=w.length;m<v;++m)w[m]<P?M>=0&&(u(f,M,m),M=-1):M<0&&(M=m);M>=0&&u(f,M,w.length)}for(m=0,v=f.length;m<v;++m){var D=f[m];\"<\"!==D&&\">\"!==D||(f[m]=\"\")}return h(f.join(\"\"),g)};var r=a(2),n=[\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"S\",\"B\",\"S\",\"WS\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"B\",\"B\",\"S\",\"WS\",\"ON\",\"ON\",\"ET\",\"ET\",\"ET\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ES\",\"CS\",\"ES\",\"CS\",\"CS\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"CS\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"B\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"BN\",\"CS\",\"ON\",\"ET\",\"ET\",\"ET\",\"ET\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"ON\",\"ON\",\"BN\",\"ON\",\"ON\",\"ET\",\"ET\",\"EN\",\"EN\",\"ON\",\"L\",\"ON\",\"ON\",\"ON\",\"EN\",\"L\",\"ON\",\"ON\",\"ON\",\"ON\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"ON\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\",\"L\"],i=[\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ON\",\"ON\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"ON\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\"];function o(e){return 0!==(1&e)}function s(e){return 0===(1&e)}function c(e,t,a){for(var r=t,n=e.length;r<n;++r)if(e[r]!==a)return r;return r}function l(e,t,a,r){for(var n=t;n<a;++n)e[n]=r}function u(e,t,a){for(var r=t,n=a-1;r<n;++r,--n){var i=e[r];e[r]=e[n],e[n]=i}}function h(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=\"ltr\";return a?r=\"ttb\":t||(r=\"rtl\"),{str:e,dir:r}}var f=[],d=[]},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMetrics=void 0;var r=a(8),n=(0,r.getLookupTableFactory)((function(e){e.Courier=600,e[\"Courier-Bold\"]=600,e[\"Courier-BoldOblique\"]=600,e[\"Courier-Oblique\"]=600,e.Helvetica=(0,r.getLookupTableFactory)((function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556})),e[\"Helvetica-Bold\"]=(0,r.getLookupTableFactory)((function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556})),e[\"Helvetica-BoldOblique\"]=(0,r.getLookupTableFactory)((function(e){e.space=278,e.exclam=333,e.quotedbl=474,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=722,e.quoteright=278,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=333,e.semicolon=333,e.less=584,e.equal=584,e.greater=584,e.question=611,e.at=975,e.A=722,e.B=722,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=556,e.K=722,e.L=611,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=584,e.underscore=556,e.quoteleft=278,e.a=556,e.b=611,e.c=556,e.d=611,e.e=556,e.f=333,e.g=611,e.h=611,e.i=278,e.j=278,e.k=556,e.l=278,e.m=889,e.n=611,e.o=611,e.p=611,e.q=611,e.r=389,e.s=556,e.t=333,e.u=611,e.v=556,e.w=778,e.x=556,e.y=556,e.z=500,e.braceleft=389,e.bar=280,e.braceright=389,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=238,e.quotedblleft=500,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=611,e.fl=611,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=556,e.bullet=350,e.quotesinglbase=278,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=611,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=278,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=611,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=722,e.aacute=556,e.Ucircumflex=722,e.yacute=556,e.scommaaccent=556,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=611,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=556,e.aring=556,e.Ncommaaccent=722,e.lacute=278,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=556,e.scedilla=556,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=611,e.acircumflex=556,e.Amacron=722,e.rcaron=389,e.ccedilla=556,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=743,e.Umacron=722,e.uring=611,e.threesuperior=333,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=584,e.uacute=611,e.Tcaron=611,e.partialdiff=494,e.ydieresis=556,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=556,e.nacute=611,e.umacron=611,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=280,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=611,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=389,e.eogonek=556,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=556,e.zacute=500,e.iogonek=278,e.Oacute=778,e.oacute=611,e.amacron=556,e.sacute=556,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=611,e.twosuperior=333,e.Odieresis=778,e.mu=611,e.igrave=278,e.ohungarumlaut=611,e.Eogonek=667,e.dcroat=611,e.threequarters=834,e.Scedilla=667,e.lcaron=400,e.Kcommaaccent=722,e.Lacute=611,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=611,e.onehalf=834,e.lessequal=549,e.ocircumflex=611,e.ntilde=611,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=611,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=611,e.Ccaron=722,e.ugrave=611,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=611,e.Rcommaaccent=722,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=556,e.minus=584,e.Icircumflex=278,e.ncaron=611,e.tcommaaccent=333,e.logicalnot=584,e.odieresis=611,e.udieresis=611,e.notequal=549,e.gcommaaccent=611,e.eth=611,e.zcaron=500,e.ncommaaccent=611,e.onesuperior=333,e.imacron=278,e.Euro=556})),e[\"Helvetica-Oblique\"]=(0,r.getLookupTableFactory)((function(e){e.space=278,e.exclam=278,e.quotedbl=355,e.numbersign=556,e.dollar=556,e.percent=889,e.ampersand=667,e.quoteright=222,e.parenleft=333,e.parenright=333,e.asterisk=389,e.plus=584,e.comma=278,e.hyphen=333,e.period=278,e.slash=278,e.zero=556,e.one=556,e.two=556,e.three=556,e.four=556,e.five=556,e.six=556,e.seven=556,e.eight=556,e.nine=556,e.colon=278,e.semicolon=278,e.less=584,e.equal=584,e.greater=584,e.question=556,e.at=1015,e.A=667,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=722,e.I=278,e.J=500,e.K=667,e.L=556,e.M=833,e.N=722,e.O=778,e.P=667,e.Q=778,e.R=722,e.S=667,e.T=611,e.U=722,e.V=667,e.W=944,e.X=667,e.Y=667,e.Z=611,e.bracketleft=278,e.backslash=278,e.bracketright=278,e.asciicircum=469,e.underscore=556,e.quoteleft=222,e.a=556,e.b=556,e.c=500,e.d=556,e.e=556,e.f=278,e.g=556,e.h=556,e.i=222,e.j=222,e.k=500,e.l=222,e.m=833,e.n=556,e.o=556,e.p=556,e.q=556,e.r=333,e.s=500,e.t=278,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=500,e.braceleft=334,e.bar=260,e.braceright=334,e.asciitilde=584,e.exclamdown=333,e.cent=556,e.sterling=556,e.fraction=167,e.yen=556,e.florin=556,e.section=556,e.currency=556,e.quotesingle=191,e.quotedblleft=333,e.guillemotleft=556,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=556,e.dagger=556,e.daggerdbl=556,e.periodcentered=278,e.paragraph=537,e.bullet=350,e.quotesinglbase=222,e.quotedblbase=333,e.quotedblright=333,e.guillemotright=556,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=611,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=370,e.Lslash=556,e.Oslash=778,e.OE=1e3,e.ordmasculine=365,e.ae=889,e.dotlessi=278,e.lslash=222,e.oslash=611,e.oe=944,e.germandbls=611,e.Idieresis=278,e.eacute=556,e.abreve=556,e.uhungarumlaut=556,e.ecaron=556,e.Ydieresis=667,e.divide=584,e.Yacute=667,e.Acircumflex=667,e.aacute=556,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=500,e.ecircumflex=556,e.Uring=722,e.Udieresis=722,e.aogonek=556,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=737,e.Emacron=667,e.ccaron=500,e.aring=556,e.Ncommaaccent=722,e.lacute=222,e.agrave=556,e.Tcommaaccent=611,e.Cacute=722,e.atilde=556,e.Edotaccent=667,e.scaron=500,e.scedilla=500,e.iacute=278,e.lozenge=471,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=556,e.Amacron=667,e.rcaron=333,e.ccedilla=500,e.Zdotaccent=611,e.Thorn=667,e.Omacron=778,e.Racute=722,e.Sacute=667,e.dcaron=643,e.Umacron=722,e.uring=556,e.threesuperior=333,e.Ograve=778,e.Agrave=667,e.Abreve=667,e.multiply=584,e.uacute=556,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=556,e.edieresis=556,e.cacute=500,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=278,e.plusminus=584,e.brokenbar=260,e.registered=737,e.Gbreve=778,e.Idotaccent=278,e.summation=600,e.Egrave=667,e.racute=333,e.omacron=556,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=222,e.tcaron=317,e.eogonek=556,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=556,e.zacute=500,e.iogonek=222,e.Oacute=778,e.oacute=556,e.amacron=556,e.sacute=500,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=333,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=556,e.Eogonek=667,e.dcroat=556,e.threequarters=834,e.Scedilla=667,e.lcaron=299,e.Kcommaaccent=667,e.Lacute=556,e.trademark=1e3,e.edotaccent=556,e.Igrave=278,e.Imacron=278,e.Lcaron=556,e.onehalf=834,e.lessequal=549,e.ocircumflex=556,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=556,e.gbreve=556,e.onequarter=834,e.Scaron=667,e.Scommaaccent=667,e.Ohungarumlaut=778,e.degree=400,e.ograve=556,e.Ccaron=722,e.ugrave=556,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=556,e.Rcommaaccent=722,e.Lcommaaccent=556,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=778,e.zdotaccent=500,e.Ecaron=667,e.Iogonek=278,e.kcommaaccent=500,e.minus=584,e.Icircumflex=278,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=584,e.odieresis=556,e.udieresis=556,e.notequal=549,e.gcommaaccent=556,e.eth=556,e.zcaron=500,e.ncommaaccent=556,e.onesuperior=333,e.imacron=278,e.Euro=556})),e.Symbol=(0,r.getLookupTableFactory)((function(e){e.space=250,e.exclam=333,e.universal=713,e.numbersign=500,e.existential=549,e.percent=833,e.ampersand=778,e.suchthat=439,e.parenleft=333,e.parenright=333,e.asteriskmath=500,e.plus=549,e.comma=250,e.minus=549,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=549,e.equal=549,e.greater=549,e.question=444,e.congruent=549,e.Alpha=722,e.Beta=667,e.Chi=722,e.Delta=612,e.Epsilon=611,e.Phi=763,e.Gamma=603,e.Eta=722,e.Iota=333,e.theta1=631,e.Kappa=722,e.Lambda=686,e.Mu=889,e.Nu=722,e.Omicron=722,e.Pi=768,e.Theta=741,e.Rho=556,e.Sigma=592,e.Tau=611,e.Upsilon=690,e.sigma1=439,e.Omega=768,e.Xi=645,e.Psi=795,e.Zeta=611,e.bracketleft=333,e.therefore=863,e.bracketright=333,e.perpendicular=658,e.underscore=500,e.radicalex=500,e.alpha=631,e.beta=549,e.chi=549,e.delta=494,e.epsilon=439,e.phi=521,e.gamma=411,e.eta=603,e.iota=329,e.phi1=603,e.kappa=549,e.lambda=549,e.mu=576,e.nu=521,e.omicron=549,e.pi=549,e.theta=521,e.rho=549,e.sigma=603,e.tau=439,e.upsilon=576,e.omega1=713,e.omega=686,e.xi=493,e.psi=686,e.zeta=494,e.braceleft=480,e.bar=200,e.braceright=480,e.similar=549,e.Euro=750,e.Upsilon1=620,e.minute=247,e.lessequal=549,e.fraction=167,e.infinity=713,e.florin=500,e.club=753,e.diamond=753,e.heart=753,e.spade=753,e.arrowboth=1042,e.arrowleft=987,e.arrowup=603,e.arrowright=987,e.arrowdown=603,e.degree=400,e.plusminus=549,e.second=411,e.greaterequal=549,e.multiply=549,e.proportional=713,e.partialdiff=494,e.bullet=460,e.divide=549,e.notequal=549,e.equivalence=549,e.approxequal=549,e.ellipsis=1e3,e.arrowvertex=603,e.arrowhorizex=1e3,e.carriagereturn=658,e.aleph=823,e.Ifraktur=686,e.Rfraktur=795,e.weierstrass=987,e.circlemultiply=768,e.circleplus=768,e.emptyset=823,e.intersection=768,e.union=768,e.propersuperset=713,e.reflexsuperset=713,e.notsubset=713,e.propersubset=713,e.reflexsubset=713,e.element=713,e.notelement=713,e.angle=768,e.gradient=713,e.registerserif=790,e.copyrightserif=790,e.trademarkserif=890,e.product=823,e.radical=549,e.dotmath=250,e.logicalnot=713,e.logicaland=603,e.logicalor=603,e.arrowdblboth=1042,e.arrowdblleft=987,e.arrowdblup=603,e.arrowdblright=987,e.arrowdbldown=603,e.lozenge=494,e.angleleft=329,e.registersans=790,e.copyrightsans=790,e.trademarksans=786,e.summation=713,e.parenlefttp=384,e.parenleftex=384,e.parenleftbt=384,e.bracketlefttp=384,e.bracketleftex=384,e.bracketleftbt=384,e.bracelefttp=494,e.braceleftmid=494,e.braceleftbt=494,e.braceex=494,e.angleright=329,e.integral=274,e.integraltp=686,e.integralex=686,e.integralbt=686,e.parenrighttp=384,e.parenrightex=384,e.parenrightbt=384,e.bracketrighttp=384,e.bracketrightex=384,e.bracketrightbt=384,e.bracerighttp=494,e.bracerightmid=494,e.bracerightbt=494,e.apple=790})),e[\"Times-Roman\"]=(0,r.getLookupTableFactory)((function(e){e.space=250,e.exclam=333,e.quotedbl=408,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=564,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=278,e.semicolon=278,e.less=564,e.equal=564,e.greater=564,e.question=444,e.at=921,e.A=722,e.B=667,e.C=667,e.D=722,e.E=611,e.F=556,e.G=722,e.H=722,e.I=333,e.J=389,e.K=722,e.L=611,e.M=889,e.N=722,e.O=722,e.P=556,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=722,e.W=944,e.X=722,e.Y=722,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=469,e.underscore=500,e.quoteleft=333,e.a=444,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=500,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=500,e.o=500,e.p=500,e.q=500,e.r=333,e.s=389,e.t=278,e.u=500,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=480,e.bar=200,e.braceright=480,e.asciitilde=541,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=180,e.quotedblleft=444,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=453,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=444,e.quotedblright=444,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=444,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=889,e.ordfeminine=276,e.Lslash=611,e.Oslash=722,e.OE=889,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=444,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=722,e.divide=564,e.Yacute=722,e.Acircumflex=722,e.aacute=444,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=444,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=444,e.Ncommaaccent=722,e.lacute=278,e.agrave=444,e.Tcommaaccent=611,e.Cacute=667,e.atilde=444,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=444,e.Amacron=722,e.rcaron=333,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=556,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=588,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=722,e.Abreve=722,e.multiply=564,e.uacute=500,e.Tcaron=611,e.partialdiff=476,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=444,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=722,e.Iacute=333,e.plusminus=564,e.brokenbar=200,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=333,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=326,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=444,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=344,e.Kcommaaccent=722,e.Lacute=611,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=333,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=722,e.zdotaccent=444,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=500,e.minus=564,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=564,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500})),e[\"Times-Bold\"]=(0,r.getLookupTableFactory)((function(e){e.space=250,e.exclam=333,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=1e3,e.ampersand=833,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=930,e.A=722,e.B=667,e.C=722,e.D=722,e.E=667,e.F=611,e.G=778,e.H=778,e.I=389,e.J=500,e.K=778,e.L=667,e.M=944,e.N=722,e.O=778,e.P=611,e.Q=778,e.R=722,e.S=556,e.T=667,e.U=722,e.V=722,e.W=1e3,e.X=722,e.Y=722,e.Z=667,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=581,e.underscore=500,e.quoteleft=333,e.a=500,e.b=556,e.c=444,e.d=556,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=333,e.k=556,e.l=278,e.m=833,e.n=556,e.o=500,e.p=556,e.q=556,e.r=444,e.s=389,e.t=333,e.u=556,e.v=500,e.w=722,e.x=500,e.y=500,e.z=444,e.braceleft=394,e.bar=220,e.braceright=394,e.asciitilde=520,e.exclamdown=333,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=540,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=1e3,e.ordfeminine=300,e.Lslash=667,e.Oslash=778,e.OE=1e3,e.ordmasculine=330,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=556,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=722,e.divide=570,e.Yacute=722,e.Acircumflex=722,e.aacute=500,e.Ucircumflex=722,e.yacute=500,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=667,e.Cacute=722,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=722,e.Gcommaaccent=778,e.ucircumflex=556,e.acircumflex=500,e.Amacron=722,e.rcaron=444,e.ccedilla=444,e.Zdotaccent=667,e.Thorn=611,e.Omacron=778,e.Racute=722,e.Sacute=556,e.dcaron=672,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=778,e.Agrave=722,e.Abreve=722,e.multiply=570,e.uacute=556,e.Tcaron=667,e.partialdiff=494,e.ydieresis=500,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=778,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=444,e.omacron=500,e.Zacute=667,e.Zcaron=667,e.greaterequal=549,e.Eth=722,e.Ccedilla=722,e.lcommaaccent=278,e.tcaron=416,e.eogonek=444,e.Uogonek=722,e.Aacute=722,e.Adieresis=722,e.egrave=444,e.zacute=444,e.iogonek=278,e.Oacute=778,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=778,e.Ugrave=722,e.Delta=612,e.thorn=556,e.twosuperior=300,e.Odieresis=778,e.mu=556,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=556,e.threequarters=750,e.Scedilla=556,e.lcaron=394,e.Kcommaaccent=778,e.Lacute=667,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=667,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=778,e.degree=400,e.ograve=500,e.Ccaron=722,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=444,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=722,e.Lcommaaccent=667,e.Atilde=722,e.Aogonek=722,e.Aring=722,e.Otilde=778,e.zdotaccent=444,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=556,e.minus=570,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=333,e.logicalnot=570,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=444,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500})),e[\"Times-BoldItalic\"]=(0,r.getLookupTableFactory)((function(e){e.space=250,e.exclam=389,e.quotedbl=555,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=570,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=570,e.equal=570,e.greater=570,e.question=500,e.at=832,e.A=667,e.B=667,e.C=667,e.D=722,e.E=667,e.F=667,e.G=722,e.H=778,e.I=389,e.J=500,e.K=667,e.L=611,e.M=889,e.N=722,e.O=722,e.P=611,e.Q=722,e.R=667,e.S=556,e.T=611,e.U=722,e.V=667,e.W=889,e.X=667,e.Y=611,e.Z=611,e.bracketleft=333,e.backslash=278,e.bracketright=333,e.asciicircum=570,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=333,e.g=500,e.h=556,e.i=278,e.j=278,e.k=500,e.l=278,e.m=778,e.n=556,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=556,e.v=444,e.w=667,e.x=500,e.y=444,e.z=389,e.braceleft=348,e.bar=220,e.braceright=348,e.asciitilde=570,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=278,e.quotedblleft=500,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=556,e.fl=556,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=500,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=500,e.quotedblright=500,e.guillemotright=500,e.ellipsis=1e3,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=1e3,e.AE=944,e.ordfeminine=266,e.Lslash=611,e.Oslash=722,e.OE=944,e.ordmasculine=300,e.ae=722,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=722,e.germandbls=500,e.Idieresis=389,e.eacute=444,e.abreve=500,e.uhungarumlaut=556,e.ecaron=444,e.Ydieresis=611,e.divide=570,e.Yacute=611,e.Acircumflex=667,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=556,e.Edieresis=667,e.Dcroat=722,e.commaaccent=250,e.copyright=747,e.Emacron=667,e.ccaron=444,e.aring=500,e.Ncommaaccent=722,e.lacute=278,e.agrave=500,e.Tcommaaccent=611,e.Cacute=667,e.atilde=500,e.Edotaccent=667,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=494,e.Rcaron=667,e.Gcommaaccent=722,e.ucircumflex=556,e.acircumflex=500,e.Amacron=667,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=611,e.Thorn=611,e.Omacron=722,e.Racute=667,e.Sacute=556,e.dcaron=608,e.Umacron=722,e.uring=556,e.threesuperior=300,e.Ograve=722,e.Agrave=667,e.Abreve=667,e.multiply=570,e.uacute=556,e.Tcaron=611,e.partialdiff=494,e.ydieresis=444,e.Nacute=722,e.icircumflex=278,e.Ecircumflex=667,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=556,e.umacron=556,e.Ncaron=722,e.Iacute=389,e.plusminus=570,e.brokenbar=220,e.registered=747,e.Gbreve=722,e.Idotaccent=389,e.summation=600,e.Egrave=667,e.racute=389,e.omacron=500,e.Zacute=611,e.Zcaron=611,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=366,e.eogonek=444,e.Uogonek=722,e.Aacute=667,e.Adieresis=667,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=576,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=667,e.dcroat=500,e.threequarters=750,e.Scedilla=556,e.lcaron=382,e.Kcommaaccent=667,e.Lacute=611,e.trademark=1e3,e.edotaccent=444,e.Igrave=389,e.Imacron=389,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=556,e.Uhungarumlaut=722,e.Eacute=667,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=556,e.Scommaaccent=556,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=556,e.radical=549,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=722,e.otilde=500,e.Rcommaaccent=667,e.Lcommaaccent=611,e.Atilde=667,e.Aogonek=667,e.Aring=667,e.Otilde=722,e.zdotaccent=389,e.Ecaron=667,e.Iogonek=389,e.kcommaaccent=500,e.minus=606,e.Icircumflex=389,e.ncaron=556,e.tcommaaccent=278,e.logicalnot=606,e.odieresis=500,e.udieresis=556,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=556,e.onesuperior=300,e.imacron=278,e.Euro=500})),e[\"Times-Italic\"]=(0,r.getLookupTableFactory)((function(e){e.space=250,e.exclam=333,e.quotedbl=420,e.numbersign=500,e.dollar=500,e.percent=833,e.ampersand=778,e.quoteright=333,e.parenleft=333,e.parenright=333,e.asterisk=500,e.plus=675,e.comma=250,e.hyphen=333,e.period=250,e.slash=278,e.zero=500,e.one=500,e.two=500,e.three=500,e.four=500,e.five=500,e.six=500,e.seven=500,e.eight=500,e.nine=500,e.colon=333,e.semicolon=333,e.less=675,e.equal=675,e.greater=675,e.question=500,e.at=920,e.A=611,e.B=611,e.C=667,e.D=722,e.E=611,e.F=611,e.G=722,e.H=722,e.I=333,e.J=444,e.K=667,e.L=556,e.M=833,e.N=667,e.O=722,e.P=611,e.Q=722,e.R=611,e.S=500,e.T=556,e.U=722,e.V=611,e.W=833,e.X=611,e.Y=556,e.Z=556,e.bracketleft=389,e.backslash=278,e.bracketright=389,e.asciicircum=422,e.underscore=500,e.quoteleft=333,e.a=500,e.b=500,e.c=444,e.d=500,e.e=444,e.f=278,e.g=500,e.h=500,e.i=278,e.j=278,e.k=444,e.l=278,e.m=722,e.n=500,e.o=500,e.p=500,e.q=500,e.r=389,e.s=389,e.t=278,e.u=500,e.v=444,e.w=667,e.x=444,e.y=444,e.z=389,e.braceleft=400,e.bar=275,e.braceright=400,e.asciitilde=541,e.exclamdown=389,e.cent=500,e.sterling=500,e.fraction=167,e.yen=500,e.florin=500,e.section=500,e.currency=500,e.quotesingle=214,e.quotedblleft=556,e.guillemotleft=500,e.guilsinglleft=333,e.guilsinglright=333,e.fi=500,e.fl=500,e.endash=500,e.dagger=500,e.daggerdbl=500,e.periodcentered=250,e.paragraph=523,e.bullet=350,e.quotesinglbase=333,e.quotedblbase=556,e.quotedblright=556,e.guillemotright=500,e.ellipsis=889,e.perthousand=1e3,e.questiondown=500,e.grave=333,e.acute=333,e.circumflex=333,e.tilde=333,e.macron=333,e.breve=333,e.dotaccent=333,e.dieresis=333,e.ring=333,e.cedilla=333,e.hungarumlaut=333,e.ogonek=333,e.caron=333,e.emdash=889,e.AE=889,e.ordfeminine=276,e.Lslash=556,e.Oslash=722,e.OE=944,e.ordmasculine=310,e.ae=667,e.dotlessi=278,e.lslash=278,e.oslash=500,e.oe=667,e.germandbls=500,e.Idieresis=333,e.eacute=444,e.abreve=500,e.uhungarumlaut=500,e.ecaron=444,e.Ydieresis=556,e.divide=675,e.Yacute=556,e.Acircumflex=611,e.aacute=500,e.Ucircumflex=722,e.yacute=444,e.scommaaccent=389,e.ecircumflex=444,e.Uring=722,e.Udieresis=722,e.aogonek=500,e.Uacute=722,e.uogonek=500,e.Edieresis=611,e.Dcroat=722,e.commaaccent=250,e.copyright=760,e.Emacron=611,e.ccaron=444,e.aring=500,e.Ncommaaccent=667,e.lacute=278,e.agrave=500,e.Tcommaaccent=556,e.Cacute=667,e.atilde=500,e.Edotaccent=611,e.scaron=389,e.scedilla=389,e.iacute=278,e.lozenge=471,e.Rcaron=611,e.Gcommaaccent=722,e.ucircumflex=500,e.acircumflex=500,e.Amacron=611,e.rcaron=389,e.ccedilla=444,e.Zdotaccent=556,e.Thorn=611,e.Omacron=722,e.Racute=611,e.Sacute=500,e.dcaron=544,e.Umacron=722,e.uring=500,e.threesuperior=300,e.Ograve=722,e.Agrave=611,e.Abreve=611,e.multiply=675,e.uacute=500,e.Tcaron=556,e.partialdiff=476,e.ydieresis=444,e.Nacute=667,e.icircumflex=278,e.Ecircumflex=611,e.adieresis=500,e.edieresis=444,e.cacute=444,e.nacute=500,e.umacron=500,e.Ncaron=667,e.Iacute=333,e.plusminus=675,e.brokenbar=275,e.registered=760,e.Gbreve=722,e.Idotaccent=333,e.summation=600,e.Egrave=611,e.racute=389,e.omacron=500,e.Zacute=556,e.Zcaron=556,e.greaterequal=549,e.Eth=722,e.Ccedilla=667,e.lcommaaccent=278,e.tcaron=300,e.eogonek=444,e.Uogonek=722,e.Aacute=611,e.Adieresis=611,e.egrave=444,e.zacute=389,e.iogonek=278,e.Oacute=722,e.oacute=500,e.amacron=500,e.sacute=389,e.idieresis=278,e.Ocircumflex=722,e.Ugrave=722,e.Delta=612,e.thorn=500,e.twosuperior=300,e.Odieresis=722,e.mu=500,e.igrave=278,e.ohungarumlaut=500,e.Eogonek=611,e.dcroat=500,e.threequarters=750,e.Scedilla=500,e.lcaron=300,e.Kcommaaccent=667,e.Lacute=556,e.trademark=980,e.edotaccent=444,e.Igrave=333,e.Imacron=333,e.Lcaron=611,e.onehalf=750,e.lessequal=549,e.ocircumflex=500,e.ntilde=500,e.Uhungarumlaut=722,e.Eacute=611,e.emacron=444,e.gbreve=500,e.onequarter=750,e.Scaron=500,e.Scommaaccent=500,e.Ohungarumlaut=722,e.degree=400,e.ograve=500,e.Ccaron=667,e.ugrave=500,e.radical=453,e.Dcaron=722,e.rcommaaccent=389,e.Ntilde=667,e.otilde=500,e.Rcommaaccent=611,e.Lcommaaccent=556,e.Atilde=611,e.Aogonek=611,e.Aring=611,e.Otilde=722,e.zdotaccent=389,e.Ecaron=611,e.Iogonek=333,e.kcommaaccent=444,e.minus=675,e.Icircumflex=333,e.ncaron=500,e.tcommaaccent=278,e.logicalnot=675,e.odieresis=500,e.udieresis=500,e.notequal=549,e.gcommaaccent=500,e.eth=500,e.zcaron=389,e.ncommaaccent=500,e.onesuperior=300,e.imacron=278,e.Euro=500})),e.ZapfDingbats=(0,r.getLookupTableFactory)((function(e){e.space=278,e.a1=974,e.a2=961,e.a202=974,e.a3=980,e.a4=719,e.a5=789,e.a119=790,e.a118=791,e.a117=690,e.a11=960,e.a12=939,e.a13=549,e.a14=855,e.a15=911,e.a16=933,e.a105=911,e.a17=945,e.a18=974,e.a19=755,e.a20=846,e.a21=762,e.a22=761,e.a23=571,e.a24=677,e.a25=763,e.a26=760,e.a27=759,e.a28=754,e.a6=494,e.a7=552,e.a8=537,e.a9=577,e.a10=692,e.a29=786,e.a30=788,e.a31=788,e.a32=790,e.a33=793,e.a34=794,e.a35=816,e.a36=823,e.a37=789,e.a38=841,e.a39=823,e.a40=833,e.a41=816,e.a42=831,e.a43=923,e.a44=744,e.a45=723,e.a46=749,e.a47=790,e.a48=792,e.a49=695,e.a50=776,e.a51=768,e.a52=792,e.a53=759,e.a54=707,e.a55=708,e.a56=682,e.a57=701,e.a58=826,e.a59=815,e.a60=789,e.a61=789,e.a62=707,e.a63=687,e.a64=696,e.a65=689,e.a66=786,e.a67=787,e.a68=713,e.a69=791,e.a70=785,e.a71=791,e.a72=873,e.a73=761,e.a74=762,e.a203=762,e.a75=759,e.a204=759,e.a76=892,e.a77=892,e.a78=788,e.a79=784,e.a81=438,e.a82=138,e.a83=277,e.a84=415,e.a97=392,e.a98=392,e.a99=668,e.a100=668,e.a89=390,e.a90=390,e.a93=317,e.a94=317,e.a91=276,e.a92=276,e.a205=509,e.a85=509,e.a206=410,e.a86=410,e.a87=234,e.a88=234,e.a95=334,e.a96=334,e.a101=732,e.a102=544,e.a103=544,e.a104=910,e.a106=667,e.a107=760,e.a108=760,e.a112=776,e.a111=595,e.a110=694,e.a109=626,e.a120=788,e.a121=788,e.a122=788,e.a123=788,e.a124=788,e.a125=788,e.a126=788,e.a127=788,e.a128=788,e.a129=788,e.a130=788,e.a131=788,e.a132=788,e.a133=788,e.a134=788,e.a135=788,e.a136=788,e.a137=788,e.a138=788,e.a139=788,e.a140=788,e.a141=788,e.a142=788,e.a143=788,e.a144=788,e.a145=788,e.a146=788,e.a147=788,e.a148=788,e.a149=788,e.a150=788,e.a151=788,e.a152=788,e.a153=788,e.a154=788,e.a155=788,e.a156=788,e.a157=788,e.a158=788,e.a159=788,e.a160=894,e.a161=838,e.a163=1016,e.a164=458,e.a196=748,e.a165=924,e.a192=748,e.a166=918,e.a167=927,e.a168=928,e.a169=928,e.a170=834,e.a171=873,e.a172=828,e.a173=924,e.a162=924,e.a174=917,e.a175=930,e.a176=931,e.a177=463,e.a178=883,e.a179=836,e.a193=836,e.a180=867,e.a199=867,e.a181=696,e.a200=696,e.a182=874,e.a201=874,e.a183=760,e.a184=946,e.a197=771,e.a185=865,e.a194=771,e.a198=888,e.a186=967,e.a195=888,e.a187=831,e.a188=873,e.a189=927,e.a190=970,e.a191=918}))}));t.getMetrics=n},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MurmurHash3_64=void 0;var r=a(2),n=3285377520,i=4294901760,o=65535,s=function(){function e(t){_classCallCheck(this,e),this.h1=t?4294967295&t:n,this.h2=t?4294967295&t:n}return _createClass(e,[{key:\"update\",value:function(e){var t,a;if((0,r.isString)(e)){t=new Uint8Array(2*e.length),a=0;for(var n=0,s=e.length;n<s;n++){var c=e.charCodeAt(n);c<=255?t[a++]=c:(t[a++]=c>>>8,t[a++]=255&c)}}else{if(!(0,r.isArrayBuffer)(e))throw new Error(\"Wrong data format in MurmurHash3_64_update. Input must be a string or array.\");a=(t=e).byteLength}for(var l=a>>2,u=a-4*l,h=new Uint32Array(t.buffer,0,l),f=0,d=0,g=this.h1,p=this.h2,m=3432918353,v=461845907,b=11601,y=13715,k=0;k<l;k++)1&k?g=5*(g=(g^=f=(f=(f=(f=h[k])*m&i|f*b&o)<<15|f>>>17)*v&i|f*y&o)<<13|g>>>19)+3864292196:p=5*(p=(p^=d=(d=(d=(d=h[k])*m&i|d*b&o)<<15|d>>>17)*v&i|d*y&o)<<13|p>>>19)+3864292196;switch(f=0,u){case 3:f^=t[4*l+2]<<16;case 2:f^=t[4*l+1]<<8;case 1:f=(f=(f=(f^=t[4*l])*m&i|f*b&o)<<15|f>>>17)*v&i|f*y&o,1&l?g^=f:p^=f}this.h1=g,this.h2=p}},{key:\"hexdigest\",value:function(){var e=this.h1,t=this.h2;e=3981806797*(e^=t>>>1)&i|36045*e&o,e=444984403*(e^=(t=4283543511*t&i|(2950163797*(t<<16|e>>>16)&i)>>>16)>>>1)&i|60499*e&o;var a=((e^=(t=3301882366*t&i|(3120437893*(t<<16|e>>>16)&i)>>>16)>>>1)>>>0).toString(16),r=(t>>>0).toString(16);return a.padStart(8,\"0\")+r.padStart(8,\"0\")}}]),e}();t.MurmurHash3_64=s},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFImage=void 0;var r=a(2),n=a(5),i=a(23),o=a(12),s=a(18),c=a(21);function l(e,t,a,r){return(e=t+e*a)<0?e=0:e>r&&(e=r),e}function u(e,t,a,r,n,i){var o,s=n*i;o=t<=8?new Uint8Array(s):t<=16?new Uint16Array(s):new Uint32Array(s);var c,l,u,h,f=a/n,d=r/i,g=0,p=new Uint16Array(n),m=a;for(c=0;c<n;c++)p[c]=Math.floor(c*f);for(c=0;c<i;c++)for(u=Math.floor(c*d)*m,l=0;l<n;l++)h=u+p[l],o[g++]=e[h];return o}var h=function(){function e(t){var a=t.xref,o=t.res,s=t.image,l=t.isInline,u=void 0!==l&&l,h=t.smask,f=void 0===h?null:h,d=t.mask,g=void 0===d?null:d,p=t.isMask,m=void 0!==p&&p,v=t.pdfFunctionFactory,b=t.localColorSpaceCache;_classCallCheck(this,e),this.image=s;var y=s.dict,k=y.get(\"Filter\");if((0,n.isName)(k))switch(k.name){case\"JPXDecode\":var w=new c.JpxImage;w.parseImageProperties(s.stream),s.stream.reset(),s.width=w.width,s.height=w.height,s.bitsPerComponent=w.bitsPerComponent,s.numComps=w.componentsCount;break;case\"JBIG2Decode\":s.bitsPerComponent=1,s.numComps=1}var C=y.get(\"Width\",\"W\"),S=y.get(\"Height\",\"H\");if(Number.isInteger(s.width)&&s.width>0&&Number.isInteger(s.height)&&s.height>0&&(s.width!==C||s.height!==S)&&((0,r.warn)(\"PDFImage - using the Width/Height of the image data, rather than the image dictionary.\"),C=s.width,S=s.height),C<1||S<1)throw new r.FormatError(\"Invalid image width: \".concat(C,\" or height: \").concat(S));this.width=C,this.height=S,this.interpolate=y.get(\"Interpolate\",\"I\")||!1,this.imageMask=y.get(\"ImageMask\",\"IM\")||!1,this.matte=y.get(\"Matte\")||!1;var x=s.bitsPerComponent;if(!x&&!(x=y.get(\"BitsPerComponent\",\"BPC\"))){if(!this.imageMask)throw new r.FormatError(\"Bits per component missing in image: \".concat(this.imageMask));x=1}if(this.bpc=x,!this.imageMask){var A=y.getRaw(\"ColorSpace\")||y.getRaw(\"CS\");if(!A)switch((0,r.info)(\"JPX images (which do not require color spaces)\"),s.numComps){case 1:A=n.Name.get(\"DeviceGray\");break;case 3:A=n.Name.get(\"DeviceRGB\");break;case 4:A=n.Name.get(\"DeviceCMYK\");break;default:throw new Error(\"JPX images with \".concat(s.numComps,\" \")+\"color components not supported.\")}this.colorSpace=i.ColorSpace.parse({cs:A,xref:a,resources:u?o:null,pdfFunctionFactory:v,localColorSpaceCache:b}),this.numComps=this.colorSpace.numComps}if(this.decode=y.getArray(\"Decode\",\"D\"),this.needsDecode=!1,this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode,x)||m&&!i.ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=!0;var I=(1<<x)-1;this.decodeCoefficients=[],this.decodeAddends=[];for(var F=this.colorSpace&&\"Indexed\"===this.colorSpace.name,T=0,O=0;T<this.decode.length;T+=2,++O){var E=this.decode[T],P=this.decode[T+1];this.decodeCoefficients[O]=F?(P-E)/I:P-E,this.decodeAddends[O]=F?E:I*E}}if(f)this.smask=new e({xref:a,res:o,image:f,isInline:u,pdfFunctionFactory:v,localColorSpaceCache:b});else if(g){if((0,n.isStream)(g))g.dict.get(\"ImageMask\",\"IM\")?this.mask=new e({xref:a,res:o,image:g,isInline:u,isMask:!0,pdfFunctionFactory:v,localColorSpaceCache:b}):(0,r.warn)(\"Ignoring /Mask in image without /ImageMask.\");else this.mask=g}}return _createClass(e,[{key:\"drawWidth\",get:function(){return Math.max(this.width,this.smask&&this.smask.width||0,this.mask&&this.mask.width||0)}},{key:\"drawHeight\",get:function(){return Math.max(this.height,this.smask&&this.smask.height||0,this.mask&&this.mask.height||0)}},{key:\"decodeBuffer\",value:function(e){var t,a,r=this.bpc,n=this.numComps,i=this.decodeAddends,o=this.decodeCoefficients,s=(1<<r)-1;if(1!==r){var c=0;for(t=0,a=this.width*this.height;t<a;t++)for(var u=0;u<n;u++)e[c]=l(e[c],i[u],o[u],s),c++}else for(t=0,a=e.length;t<a;t++)e[t]=+!e[t]}},{key:\"getComponents\",value:function(e){var t=this.bpc;if(8===t)return e;var a,r=this.width,n=this.height,i=this.numComps,o=r*n*i,s=0;a=t<=8?new Uint8Array(o):t<=16?new Uint16Array(o):new Uint32Array(o);var c,l,u=r*i,h=(1<<t)-1,f=0;if(1===t)for(var d,g,p,m=0;m<n;m++){for(g=f+(-8&u),p=f+u;f<g;)l=e[s++],a[f]=l>>7&1,a[f+1]=l>>6&1,a[f+2]=l>>5&1,a[f+3]=l>>4&1,a[f+4]=l>>3&1,a[f+5]=l>>2&1,a[f+6]=l>>1&1,a[f+7]=1&l,f+=8;if(f<p)for(l=e[s++],d=128;f<p;)a[f++]=+!!(l&d),d>>=1}else{var v=0;for(l=0,f=0,c=o;f<c;++f){for(f%u===0&&(l=0,v=0);v<t;)l=l<<8|e[s++],v+=8;var b=v-t,y=l>>b;y<0?y=0:y>h&&(y=h),a[f]=y,l&=(1<<b)-1,v=b}}return a}},{key:\"fillOpacity\",value:function(t,a,n,i,o){var s,c,l,h,f,d,g=this.smask,p=this.mask;if(g)c=g.width,l=g.height,s=new Uint8ClampedArray(c*l),g.fillGrayBuffer(s),c===a&&l===n||(s=u(s,g.bpc,c,l,a,n));else if(p)if(p instanceof e){for(c=p.width,l=p.height,s=new Uint8ClampedArray(c*l),p.numComps=1,p.fillGrayBuffer(s),h=0,f=c*l;h<f;++h)s[h]=255-s[h];c===a&&l===n||(s=u(s,p.bpc,c,l,a,n))}else{if(!Array.isArray(p))throw new r.FormatError(\"Unknown mask format.\");s=new Uint8ClampedArray(a*n);var m=this.numComps;for(h=0,f=a*n;h<f;++h){var v=0,b=h*m;for(d=0;d<m;++d){var y=o[b+d],k=2*d;if(y<p[k]||y>p[k+1]){v=255;break}}s[h]=v}}if(s)for(h=0,d=3,f=a*i;h<f;++h,d+=4)t[d]=s[h];else for(h=0,d=3,f=a*i;h<f;++h,d+=4)t[d]=255}},{key:\"undoPreblend\",value:function(e,t,a){var r=this.smask&&this.smask.matte;if(r)for(var n=this.colorSpace.getRgb(r,0),i=n[0],o=n[1],s=n[2],c=t*a*4,l=0;l<c;l+=4){var u=e[l+3];if(0!==u){var h=255/u;e[l]=(e[l]-i)*h+i,e[l+1]=(e[l+1]-o)*h+o,e[l+2]=(e[l+2]-s)*h+s}else e[l]=255,e[l+1]=255,e[l+2]=255}}},{key:\"createImageData\",value:function(){var e,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],a=this.drawWidth,n=this.drawHeight,i={width:a,height:n,kind:0,data:null},c=this.numComps,l=this.width,u=this.height,h=this.bpc,f=l*c*h+7>>3;if(!t){var d;if(\"DeviceGray\"===this.colorSpace.name&&1===h?d=r.ImageKind.GRAYSCALE_1BPP:\"DeviceRGB\"!==this.colorSpace.name||8!==h||this.needsDecode||(d=r.ImageKind.RGB_24BPP),d&&!this.smask&&!this.mask&&a===l&&n===u){if(i.kind=d,e=this.getImageBytes(u*f),this.image instanceof o.DecodeStream)i.data=e;else{var g=new Uint8ClampedArray(e.length);g.set(e),i.data=g}if(this.needsDecode){(0,r.assert)(d===r.ImageKind.GRAYSCALE_1BPP,\"PDFImage.createImageData: The image must be grayscale.\");for(var p=i.data,m=0,v=p.length;m<v;m++)p[m]^=255}return i}if(this.image instanceof s.JpegStream&&!this.smask&&!this.mask){var b=u*f;switch(this.colorSpace.name){case\"DeviceGray\":b*=3;case\"DeviceRGB\":case\"DeviceCMYK\":return i.kind=r.ImageKind.RGB_24BPP,i.data=this.getImageBytes(b,a,n,!0),i}}}var y,k,w=0|(e=this.getImageBytes(u*f)).length/f*n/u,C=this.getComponents(e);return t||this.smask||this.mask?(i.kind=r.ImageKind.RGBA_32BPP,i.data=new Uint8ClampedArray(a*n*4),y=1,k=!0,this.fillOpacity(i.data,a,n,w,C)):(i.kind=r.ImageKind.RGB_24BPP,i.data=new Uint8ClampedArray(a*n*3),y=0,k=!1),this.needsDecode&&this.decodeBuffer(C),this.colorSpace.fillRgb(i.data,l,u,a,n,w,h,C,y),k&&this.undoPreblend(i.data,a,w),i}},{key:\"fillGrayBuffer\",value:function(e){var t=this.numComps;if(1!==t)throw new r.FormatError(\"Reading gray scale from a color image: \".concat(t));var a,n,i=this.width,o=this.height,s=this.bpc,c=i*t*s+7>>3,l=this.getImageBytes(o*c),u=this.getComponents(l);if(1!==s){this.needsDecode&&this.decodeBuffer(u),n=i*o;var h=255/((1<<s)-1);for(a=0;a<n;++a)e[a]=h*u[a]}else if(n=i*o,this.needsDecode)for(a=0;a<n;++a)e[a]=u[a]-1&255;else for(a=0;a<n;++a)e[a]=255&-u[a]}},{key:\"getImageBytes\",value:function(e,t,a){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return this.image.reset(),this.image.drawWidth=t||this.width,this.image.drawHeight=a||this.height,this.image.forceRGB=!!r,this.image.getBytes(e,!0)}}],[{key:\"buildImage\",value:function(){var t=_asyncToGenerator(_regeneratorRuntime.mark((function t(a){var i,o,s,c,l,u,h,f,d,g,p,m;return _regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return i=a.xref,o=a.res,s=a.image,c=a.isInline,l=void 0!==c&&c,u=a.pdfFunctionFactory,h=a.localColorSpaceCache,f=s,d=null,g=null,p=s.dict.get(\"SMask\"),m=s.dict.get(\"Mask\"),p?d=p:m&&((0,n.isStream)(m)||Array.isArray(m)?g=m:(0,r.warn)(\"Unsupported mask format.\")),t.abrupt(\"return\",new e({xref:i,res:o,image:f,isInline:l,smask:d,mask:g,pdfFunctionFactory:u,localColorSpaceCache:h}));case 8:case\"end\":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()},{key:\"createMask\",value:function(e){var t,a,r=e.imgArray,n=e.width,i=e.height,o=e.imageIsFromDecodeStream,s=e.inverseDecode,c=(n+7>>3)*i,l=r.byteLength;if(!o||s&&!(c===l))if(s)for((t=new Uint8ClampedArray(c)).set(r),a=l;a<c;a++)t[a]=255;else(t=new Uint8ClampedArray(l)).set(r);else t=r;if(s)for(a=0;a<l;a++)t[a]^=255;return{data:t,width:n,height:i}}}]),e}();t.PDFImage=h},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.MessageHandler=void 0;var r=a(2),n=1,i=2,o=1,s=2,c=3,l=4,u=5,h=6,f=7,d=8;function g(e){if(\"object\"!==typeof e||null===e)return e;switch(e.name){case\"AbortException\":return new r.AbortException(e.message);case\"MissingPDFException\":return new r.MissingPDFException(e.message);case\"UnexpectedResponseException\":return new r.UnexpectedResponseException(e.message,e.status);case\"UnknownErrorException\":return new r.UnknownErrorException(e.message,e.details);default:return new r.UnknownErrorException(e.message,e.toString())}}var p=function(){function e(t,a,r){var o=this;_classCallCheck(this,e),this.sourceName=t,this.targetName=a,this.comObj=r,this.callbackId=1,this.streamId=1,this.postMessageTransfers=!0,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=function(e){var t=e.data;if(t.targetName===o.sourceName)if(t.stream)o._processStreamMessage(t);else if(t.callback){var a=t.callbackId,s=o.callbackCapabilities[a];if(!s)throw new Error(\"Cannot resolve callback \".concat(a));if(delete o.callbackCapabilities[a],t.callback===n)s.resolve(t.data);else{if(t.callback!==i)throw new Error(\"Unexpected callback case\");s.reject(g(t.reason))}}else{var c=o.actionHandler[t.action];if(!c)throw new Error(\"Unknown action from worker: \".concat(t.action));if(t.callbackId){var l=o.sourceName,u=t.sourceName;new Promise((function(e){e(c(t.data))})).then((function(e){r.postMessage({sourceName:l,targetName:u,callback:n,callbackId:t.callbackId,data:e})}),(function(e){r.postMessage({sourceName:l,targetName:u,callback:i,callbackId:t.callbackId,reason:g(e)})}))}else t.streamId?o._createStreamSink(t):c(t.data)}},r.addEventListener(\"message\",this._onComObjOnMessage)}return _createClass(e,[{key:\"on\",value:function(e,t){var a=this.actionHandler;if(a[e])throw new Error('There is already an actionName called \"'.concat(e,'\"'));a[e]=t}},{key:\"send\",value:function(e,t,a){this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,data:t},a)}},{key:\"sendWithPromise\",value:function(e,t,a){var n=this.callbackId++,i=(0,r.createPromiseCapability)();this.callbackCapabilities[n]=i;try{this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,callbackId:n,data:t},a)}catch(o){i.reject(o)}return i.promise}},{key:\"sendWithStream\",value:function(e,t,a,n){var i=this,s=this.streamId++,c=this.sourceName,l=this.targetName,u=this.comObj;return new ReadableStream({start:function(a){var o=(0,r.createPromiseCapability)();return i.streamControllers[s]={controller:a,startCall:o,pullCall:null,cancelCall:null,isClosed:!1},i._postMessage({sourceName:c,targetName:l,action:e,streamId:s,data:t,desiredSize:a.desiredSize},n),o.promise},pull:function(e){var t=(0,r.createPromiseCapability)();return i.streamControllers[s].pullCall=t,u.postMessage({sourceName:c,targetName:l,stream:h,streamId:s,desiredSize:e.desiredSize}),t.promise},cancel:function(e){(0,r.assert)(e instanceof Error,\"cancel must have a valid reason\");var t=(0,r.createPromiseCapability)();return i.streamControllers[s].cancelCall=t,i.streamControllers[s].isClosed=!0,u.postMessage({sourceName:c,targetName:l,stream:o,streamId:s,reason:g(e)}),t.promise}},a)}},{key:\"_createStreamSink\",value:function(e){var t=this,a=this.actionHandler[e.action],n=e.streamId,i=this.sourceName,o=e.sourceName,s=this.comObj,h={enqueue:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,s=arguments.length>2?arguments[2]:void 0;if(!this.isCancelled){var c=this.desiredSize;this.desiredSize-=a,c>0&&this.desiredSize<=0&&(this.sinkCapability=(0,r.createPromiseCapability)(),this.ready=this.sinkCapability.promise),t._postMessage({sourceName:i,targetName:o,stream:l,streamId:n,chunk:e},s)}},close:function(){this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:i,targetName:o,stream:c,streamId:n}),delete t.streamSinks[n])},error:function(e){(0,r.assert)(e instanceof Error,\"error must have a valid reason\"),this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:i,targetName:o,stream:u,streamId:n,reason:g(e)}))},sinkCapability:(0,r.createPromiseCapability)(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:e.desiredSize,ready:null};h.sinkCapability.resolve(),h.ready=h.sinkCapability.promise,this.streamSinks[n]=h,new Promise((function(t){t(a(e.data,h))})).then((function(){s.postMessage({sourceName:i,targetName:o,stream:d,streamId:n,success:!0})}),(function(e){s.postMessage({sourceName:i,targetName:o,stream:d,streamId:n,reason:g(e)})}))}},{key:\"_processStreamMessage\",value:function(e){var t=e.streamId,a=this.sourceName,n=e.sourceName,i=this.comObj;switch(e.stream){case d:e.success?this.streamControllers[t].startCall.resolve():this.streamControllers[t].startCall.reject(g(e.reason));break;case f:e.success?this.streamControllers[t].pullCall.resolve():this.streamControllers[t].pullCall.reject(g(e.reason));break;case h:if(!this.streamSinks[t]){i.postMessage({sourceName:a,targetName:n,stream:f,streamId:t,success:!0});break}this.streamSinks[t].desiredSize<=0&&e.desiredSize>0&&this.streamSinks[t].sinkCapability.resolve(),this.streamSinks[t].desiredSize=e.desiredSize;var p=this.streamSinks[e.streamId].onPull;new Promise((function(e){e(p&&p())})).then((function(){i.postMessage({sourceName:a,targetName:n,stream:f,streamId:t,success:!0})}),(function(e){i.postMessage({sourceName:a,targetName:n,stream:f,streamId:t,reason:g(e)})}));break;case l:if((0,r.assert)(this.streamControllers[t],\"enqueue should have stream controller\"),this.streamControllers[t].isClosed)break;this.streamControllers[t].controller.enqueue(e.chunk);break;case c:if((0,r.assert)(this.streamControllers[t],\"close should have stream controller\"),this.streamControllers[t].isClosed)break;this.streamControllers[t].isClosed=!0,this.streamControllers[t].controller.close(),this._deleteStreamController(t);break;case u:(0,r.assert)(this.streamControllers[t],\"error should have stream controller\"),this.streamControllers[t].controller.error(g(e.reason)),this._deleteStreamController(t);break;case s:e.success?this.streamControllers[t].cancelCall.resolve():this.streamControllers[t].cancelCall.reject(g(e.reason)),this._deleteStreamController(t);break;case o:if(!this.streamSinks[t])break;var m=this.streamSinks[e.streamId].onCancel;new Promise((function(t){t(m&&m(g(e.reason)))})).then((function(){i.postMessage({sourceName:a,targetName:n,stream:s,streamId:t,success:!0})}),(function(e){i.postMessage({sourceName:a,targetName:n,stream:s,streamId:t,reason:g(e)})})),this.streamSinks[t].sinkCapability.reject(g(e.reason)),this.streamSinks[t].isCancelled=!0,delete this.streamSinks[t];break;default:throw new Error(\"Unexpected stream case\")}}},{key:\"_deleteStreamController\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(t){return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.allSettled([this.streamControllers[t].startCall,this.streamControllers[t].pullCall,this.streamControllers[t].cancelCall].map((function(e){return e&&e.promise})));case 2:delete this.streamControllers[t];case 3:case\"end\":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:\"_postMessage\",value:function(e,t){t&&this.postMessageTransfers?this.comObj.postMessage(e,t):this.comObj.postMessage(e)}},{key:\"destroy\",value:function(){this.comObj.removeEventListener(\"message\",this._onComObjOnMessage)}}]),e}();t.MessageHandler=p},function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.PDFWorkerStream=void 0;var r=a(2),n=function(){function e(t){_classCallCheck(this,e),this._msgHandler=t,this._contentLength=null,this._fullRequestReader=null,this._rangeRequestReaders=[]}return _createClass(e,[{key:\"getFullReader\",value:function(){return(0,r.assert)(!this._fullRequestReader,\"PDFWorkerStream.getFullReader can only be called once.\"),this._fullRequestReader=new i(this._msgHandler),this._fullRequestReader}},{key:\"getRangeReader\",value:function(e,t){var a=new o(e,t,this._msgHandler);return this._rangeRequestReaders.push(a),a}},{key:\"cancelAllRequests\",value:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach((function(t){t.cancel(e)}))}}]),e}();t.PDFWorkerStream=n;var i=function(){function e(t){var a=this;_classCallCheck(this,e),this._msgHandler=t,this.onProgress=null,this._contentLength=null,this._isRangeSupported=!1,this._isStreamingSupported=!1;var r=this._msgHandler.sendWithStream(\"GetReader\");this._reader=r.getReader(),this._headersReady=this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then((function(e){a._isStreamingSupported=e.isStreamingSupported,a._isRangeSupported=e.isRangeSupported,a._contentLength=e.contentLength}))}return _createClass(e,[{key:\"headersReady\",get:function(){return this._headersReady}},{key:\"contentLength\",get:function(){return this._contentLength}},{key:\"isStreamingSupported\",get:function(){return this._isStreamingSupported}},{key:\"isRangeSupported\",get:function(){return this._isRangeSupported}},{key:\"read\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(){var t,a;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._reader.read();case 2:if(t=e.sent,a=t.value,!t.done){e.next=7;break}return e.abrupt(\"return\",{value:void 0,done:!0});case 7:return e.abrupt(\"return\",{value:a.buffer,done:!1});case 8:case\"end\":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:\"cancel\",value:function(e){this._reader.cancel(e)}}]),e}(),o=function(){function e(t,a,r){_classCallCheck(this,e),this._msgHandler=r,this.onProgress=null;var n=this._msgHandler.sendWithStream(\"GetRangeReader\",{begin:t,end:a});this._reader=n.getReader()}return _createClass(e,[{key:\"isStreamingSupported\",get:function(){return!1}},{key:\"read\",value:function(){var e=_asyncToGenerator(_regeneratorRuntime.mark((function e(){var t,a;return _regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._reader.read();case 2:if(t=e.sent,a=t.value,!t.done){e.next=7;break}return e.abrupt(\"return\",{value:void 0,done:!0});case 7:return e.abrupt(\"return\",{value:a.buffer,done:!1});case 8:case\"end\":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:\"cancel\",value:function(e){this._reader.cancel(e)}}]),e}()}])}));","name":"3f3e86c466d5a4a1a520a86667ffda62.js","input":"var _possibleConstructorReturn = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _toConsumableArray = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _assertThisInitialized = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _regeneratorRuntime = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toArray = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _slicedToArray = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Obed/PycharmProjects/akmarv_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf.worker\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf.worker\"] = factory();else root[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __w_pdfjs_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __w_pdfjs_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __w_pdfjs_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __w_pdfjs_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __w_pdfjs_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __w_pdfjs_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"WorkerMessageHandler\", {\n        enumerable: true,\n        get: function get() {\n          return _worker.WorkerMessageHandler;\n        }\n      });\n\n      var _worker = __w_pdfjs_require__(1);\n\n      var pdfjsVersion = '2.6.347';\n      var pdfjsBuild = '3be9c65f';\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WorkerMessageHandler = exports.WorkerTask = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _pdf_manager = __w_pdfjs_require__(6);\n\n      var _writer = __w_pdfjs_require__(27);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var _message_handler = __w_pdfjs_require__(46);\n\n      var _worker_stream = __w_pdfjs_require__(47);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var WorkerTask = /*#__PURE__*/function () {\n        function WorkerTask(name) {\n          _classCallCheck(this, WorkerTask);\n\n          this.name = name;\n          this.terminated = false;\n          this._capability = (0, _util.createPromiseCapability)();\n        }\n\n        _createClass(WorkerTask, [{\n          key: \"finished\",\n          get: function get() {\n            return this._capability.promise;\n          }\n        }, {\n          key: \"finish\",\n          value: function finish() {\n            this._capability.resolve();\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate() {\n            this.terminated = true;\n          }\n        }, {\n          key: \"ensureNotTerminated\",\n          value: function ensureNotTerminated() {\n            if (this.terminated) {\n              throw new Error(\"Worker task was terminated\");\n            }\n          }\n        }]);\n\n        return WorkerTask;\n      }();\n\n      exports.WorkerTask = WorkerTask;\n\n      var WorkerMessageHandler = /*#__PURE__*/function () {\n        function WorkerMessageHandler() {\n          _classCallCheck(this, WorkerMessageHandler);\n        }\n\n        _createClass(WorkerMessageHandler, null, [{\n          key: \"setup\",\n          value: function setup(handler, port) {\n            var testMessageProcessed = false;\n            handler.on(\"test\", function wphSetupTest(data) {\n              if (testMessageProcessed) {\n                return;\n              }\n\n              testMessageProcessed = true;\n\n              if (!(data instanceof Uint8Array)) {\n                handler.send(\"test\", null);\n                return;\n              }\n\n              var supportTransfers = data[0] === 255;\n              handler.postMessageTransfers = supportTransfers;\n              handler.send(\"test\", {\n                supportTransfers: supportTransfers\n              });\n            });\n            handler.on(\"configure\", function wphConfigure(data) {\n              (0, _util.setVerbosityLevel)(data.verbosity);\n            });\n            handler.on(\"GetDocRequest\", function wphSetupDoc(data) {\n              return WorkerMessageHandler.createDocumentHandler(data, port);\n            });\n          }\n        }, {\n          key: \"createDocumentHandler\",\n          value: function createDocumentHandler(docParams, port) {\n            var pdfManager;\n            var terminated = false;\n            var cancelXHRs = null;\n            var WorkerTasks = [];\n            var verbosity = (0, _util.getVerbosityLevel)();\n            var apiVersion = docParams.apiVersion;\n            var workerVersion = '2.6.347';\n\n            if (apiVersion !== workerVersion) {\n              throw new Error(\"The API version \\\"\".concat(apiVersion, \"\\\" does not match \") + \"the Worker version \\\"\".concat(workerVersion, \"\\\".\"));\n            }\n\n            var enumerableProperties = [];\n\n            for (var property in []) {\n              enumerableProperties.push(property);\n            }\n\n            if (enumerableProperties.length) {\n              throw new Error(\"The `Array.prototype` contains unexpected enumerable properties: \" + enumerableProperties.join(\", \") + \"; thus breaking e.g. `for...in` iteration of `Array`s.\");\n            }\n\n            if (typeof ReadableStream === \"undefined\" || typeof Promise.allSettled === \"undefined\") {\n              throw new Error(\"The browser/environment lacks native support for critical \" + \"functionality used by the PDF.js library (e.g. \" + \"`ReadableStream` and/or `Promise.allSettled`); \" + \"please use an ES5-compatible build instead.\");\n            }\n\n            var docId = docParams.docId;\n            var docBaseUrl = docParams.docBaseUrl;\n            var workerHandlerName = docParams.docId + \"_worker\";\n            var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\n            handler.postMessageTransfers = docParams.postMessageTransfers;\n\n            function ensureNotTerminated() {\n              if (terminated) {\n                throw new Error(\"Worker was terminated\");\n              }\n            }\n\n            function startWorkerTask(task) {\n              WorkerTasks.push(task);\n            }\n\n            function finishWorkerTask(task) {\n              task.finish();\n              var i = WorkerTasks.indexOf(task);\n              WorkerTasks.splice(i, 1);\n            }\n\n            function loadDocument(_x) {\n              return _loadDocument.apply(this, arguments);\n            }\n\n            function _loadDocument() {\n              _loadDocument = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(recoveryMode) {\n                var _yield$Promise$all, _yield$Promise$all2, numPages, fingerprint;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return pdfManager.ensureDoc(\"checkHeader\");\n\n                      case 2:\n                        _context.next = 4;\n                        return pdfManager.ensureDoc(\"parseStartXRef\");\n\n                      case 4:\n                        _context.next = 6;\n                        return pdfManager.ensureDoc(\"parse\", [recoveryMode]);\n\n                      case 6:\n                        if (recoveryMode) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        _context.next = 9;\n                        return pdfManager.ensureDoc(\"checkFirstPage\");\n\n                      case 9:\n                        _context.next = 11;\n                        return Promise.all([pdfManager.ensureDoc(\"numPages\"), pdfManager.ensureDoc(\"fingerprint\")]);\n\n                      case 11:\n                        _yield$Promise$all = _context.sent;\n                        _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                        numPages = _yield$Promise$all2[0];\n                        fingerprint = _yield$Promise$all2[1];\n                        return _context.abrupt(\"return\", {\n                          numPages: numPages,\n                          fingerprint: fingerprint\n                        });\n\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _loadDocument.apply(this, arguments);\n            }\n\n            function getPdfManager(data, evaluatorOptions) {\n              var pdfManagerCapability = (0, _util.createPromiseCapability)();\n              var newPdfManager;\n              var source = data.source;\n\n              if (source.data) {\n                try {\n                  newPdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n                  pdfManagerCapability.resolve(newPdfManager);\n                } catch (ex) {\n                  pdfManagerCapability.reject(ex);\n                }\n\n                return pdfManagerCapability.promise;\n              }\n\n              var pdfStream,\n                  cachedChunks = [];\n\n              try {\n                pdfStream = new _worker_stream.PDFWorkerStream(handler);\n              } catch (ex) {\n                pdfManagerCapability.reject(ex);\n                return pdfManagerCapability.promise;\n              }\n\n              var fullRequest = pdfStream.getFullReader();\n              fullRequest.headersReady.then(function () {\n                if (!fullRequest.isRangeSupported) {\n                  return;\n                }\n\n                var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n                newPdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n                  msgHandler: handler,\n                  password: source.password,\n                  length: fullRequest.contentLength,\n                  disableAutoFetch: disableAutoFetch,\n                  rangeChunkSize: source.rangeChunkSize\n                }, evaluatorOptions, docBaseUrl);\n\n                for (var i = 0; i < cachedChunks.length; i++) {\n                  newPdfManager.sendProgressiveData(cachedChunks[i]);\n                }\n\n                cachedChunks = [];\n                pdfManagerCapability.resolve(newPdfManager);\n                cancelXHRs = null;\n              }).catch(function (reason) {\n                pdfManagerCapability.reject(reason);\n                cancelXHRs = null;\n              });\n              var loaded = 0;\n\n              var flushChunks = function flushChunks() {\n                var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n\n                if (source.length && pdfFile.length !== source.length) {\n                  (0, _util.warn)(\"reported HTTP length is different from actual\");\n                }\n\n                try {\n                  newPdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n                  pdfManagerCapability.resolve(newPdfManager);\n                } catch (ex) {\n                  pdfManagerCapability.reject(ex);\n                }\n\n                cachedChunks = [];\n              };\n\n              var readPromise = new Promise(function (resolve, reject) {\n                var readChunk = function readChunk(_ref) {\n                  var value = _ref.value,\n                      done = _ref.done;\n\n                  try {\n                    ensureNotTerminated();\n\n                    if (done) {\n                      if (!newPdfManager) {\n                        flushChunks();\n                      }\n\n                      cancelXHRs = null;\n                      return;\n                    }\n\n                    loaded += (0, _util.arrayByteLength)(value);\n\n                    if (!fullRequest.isStreamingSupported) {\n                      handler.send(\"DocProgress\", {\n                        loaded: loaded,\n                        total: Math.max(loaded, fullRequest.contentLength || 0)\n                      });\n                    }\n\n                    if (newPdfManager) {\n                      newPdfManager.sendProgressiveData(value);\n                    } else {\n                      cachedChunks.push(value);\n                    }\n\n                    fullRequest.read().then(readChunk, reject);\n                  } catch (e) {\n                    reject(e);\n                  }\n                };\n\n                fullRequest.read().then(readChunk, reject);\n              });\n              readPromise.catch(function (e) {\n                pdfManagerCapability.reject(e);\n                cancelXHRs = null;\n              });\n\n              cancelXHRs = function cancelXHRs(reason) {\n                pdfStream.cancelAllRequests(reason);\n              };\n\n              return pdfManagerCapability.promise;\n            }\n\n            function setupDoc(data) {\n              function onSuccess(doc) {\n                ensureNotTerminated();\n                handler.send(\"GetDoc\", {\n                  pdfInfo: doc\n                });\n              }\n\n              function onFailure(ex) {\n                ensureNotTerminated();\n\n                if (ex instanceof _util.PasswordException) {\n                  var task = new WorkerTask(\"PasswordException: response \".concat(ex.code));\n                  startWorkerTask(task);\n                  handler.sendWithPromise(\"PasswordRequest\", ex).then(function (_ref2) {\n                    var password = _ref2.password;\n                    finishWorkerTask(task);\n                    pdfManager.updatePassword(password);\n                    pdfManagerReady();\n                  }).catch(function () {\n                    finishWorkerTask(task);\n                    handler.send(\"DocException\", ex);\n                  });\n                } else if (ex instanceof _util.InvalidPDFException || ex instanceof _util.MissingPDFException || ex instanceof _util.UnexpectedResponseException || ex instanceof _util.UnknownErrorException) {\n                  handler.send(\"DocException\", ex);\n                } else {\n                  handler.send(\"DocException\", new _util.UnknownErrorException(ex.message, ex.toString()));\n                }\n              }\n\n              function pdfManagerReady() {\n                ensureNotTerminated();\n                loadDocument(false).then(onSuccess, function (reason) {\n                  ensureNotTerminated();\n\n                  if (!(reason instanceof _core_utils.XRefParseException)) {\n                    onFailure(reason);\n                    return;\n                  }\n\n                  pdfManager.requestLoadedStream();\n                  pdfManager.onLoadedStream().then(function () {\n                    ensureNotTerminated();\n                    loadDocument(true).then(onSuccess, onFailure);\n                  });\n                });\n              }\n\n              ensureNotTerminated();\n              var evaluatorOptions = {\n                maxImageSize: data.maxImageSize,\n                disableFontFace: data.disableFontFace,\n                ignoreErrors: data.ignoreErrors,\n                isEvalSupported: data.isEvalSupported,\n                fontExtraProperties: data.fontExtraProperties\n              };\n              getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n                if (terminated) {\n                  newPdfManager.terminate(new _util.AbortException(\"Worker was terminated.\"));\n                  throw new Error(\"Worker was terminated\");\n                }\n\n                pdfManager = newPdfManager;\n                pdfManager.onLoadedStream().then(function (stream) {\n                  handler.send(\"DataLoaded\", {\n                    length: stream.bytes.byteLength\n                  });\n                });\n              }).then(pdfManagerReady, onFailure);\n            }\n\n            handler.on(\"GetPage\", function wphSetupGetPage(data) {\n              return pdfManager.getPage(data.pageIndex).then(function (page) {\n                return Promise.all([pdfManager.ensure(page, \"rotate\"), pdfManager.ensure(page, \"ref\"), pdfManager.ensure(page, \"userUnit\"), pdfManager.ensure(page, \"view\")]).then(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 4),\n                      rotate = _ref4[0],\n                      ref = _ref4[1],\n                      userUnit = _ref4[2],\n                      view = _ref4[3];\n\n                  return {\n                    rotate: rotate,\n                    ref: ref,\n                    userUnit: userUnit,\n                    view: view\n                  };\n                });\n              });\n            });\n            handler.on(\"GetPageIndex\", function wphSetupGetPageIndex(_ref5) {\n              var ref = _ref5.ref;\n\n              var pageRef = _primitives.Ref.get(ref.num, ref.gen);\n\n              return pdfManager.ensureCatalog(\"getPageIndex\", [pageRef]);\n            });\n            handler.on(\"GetDestinations\", function wphSetupGetDestinations(data) {\n              return pdfManager.ensureCatalog(\"destinations\");\n            });\n            handler.on(\"GetDestination\", function wphSetupGetDestination(data) {\n              return pdfManager.ensureCatalog(\"getDestination\", [data.id]);\n            });\n            handler.on(\"GetPageLabels\", function wphSetupGetPageLabels(data) {\n              return pdfManager.ensureCatalog(\"pageLabels\");\n            });\n            handler.on(\"GetPageLayout\", function wphSetupGetPageLayout(data) {\n              return pdfManager.ensureCatalog(\"pageLayout\");\n            });\n            handler.on(\"GetPageMode\", function wphSetupGetPageMode(data) {\n              return pdfManager.ensureCatalog(\"pageMode\");\n            });\n            handler.on(\"GetViewerPreferences\", function (data) {\n              return pdfManager.ensureCatalog(\"viewerPreferences\");\n            });\n            handler.on(\"GetOpenAction\", function (data) {\n              return pdfManager.ensureCatalog(\"openAction\");\n            });\n            handler.on(\"GetAttachments\", function wphSetupGetAttachments(data) {\n              return pdfManager.ensureCatalog(\"attachments\");\n            });\n            handler.on(\"GetJavaScript\", function wphSetupGetJavaScript(data) {\n              return pdfManager.ensureCatalog(\"javaScript\");\n            });\n            handler.on(\"GetOutline\", function wphSetupGetOutline(data) {\n              return pdfManager.ensureCatalog(\"documentOutline\");\n            });\n            handler.on(\"GetOptionalContentConfig\", function (data) {\n              return pdfManager.ensureCatalog(\"optionalContentConfig\");\n            });\n            handler.on(\"GetPermissions\", function (data) {\n              return pdfManager.ensureCatalog(\"permissions\");\n            });\n            handler.on(\"GetMetadata\", function wphSetupGetMetadata(data) {\n              return Promise.all([pdfManager.ensureDoc(\"documentInfo\"), pdfManager.ensureCatalog(\"metadata\")]);\n            });\n            handler.on(\"GetData\", function wphSetupGetData(data) {\n              pdfManager.requestLoadedStream();\n              return pdfManager.onLoadedStream().then(function (stream) {\n                return stream.bytes;\n              });\n            });\n            handler.on(\"GetStats\", function wphSetupGetStats(data) {\n              return pdfManager.ensureXRef(\"stats\");\n            });\n            handler.on(\"GetAnnotations\", function (_ref6) {\n              var pageIndex = _ref6.pageIndex,\n                  intent = _ref6.intent;\n              return pdfManager.getPage(pageIndex).then(function (page) {\n                return page.getAnnotationsData(intent);\n              });\n            });\n            handler.on(\"SaveDocument\", function (_ref7) {\n              var numPages = _ref7.numPages,\n                  annotationStorage = _ref7.annotationStorage,\n                  filename = _ref7.filename;\n              pdfManager.requestLoadedStream();\n              var promises = [pdfManager.onLoadedStream()];\n              var document = pdfManager.pdfDocument;\n\n              var _loop = function _loop(pageIndex) {\n                promises.push(pdfManager.getPage(pageIndex).then(function (page) {\n                  var task = new WorkerTask(\"Save: page \".concat(pageIndex));\n                  return page.save(handler, task, annotationStorage);\n                }));\n              };\n\n              for (var pageIndex = 0; pageIndex < numPages; pageIndex++) {\n                _loop(pageIndex);\n              }\n\n              return Promise.all(promises).then(function (_ref8) {\n                var _ref9 = _toArray(_ref8),\n                    stream = _ref9[0],\n                    refs = _ref9.slice(1);\n\n                var newRefs = [];\n\n                var _iterator = _createForOfIteratorHelper(refs),\n                    _step;\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var ref = _step.value;\n                    newRefs = ref.filter(function (x) {\n                      return x !== null;\n                    }).reduce(function (a, b) {\n                      return a.concat(b);\n                    }, newRefs);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (newRefs.length === 0) {\n                  return stream.bytes;\n                }\n\n                var xref = document.xref;\n                var newXrefInfo = Object.create(null);\n\n                if (xref.trailer) {\n                  var _info = Object.create(null);\n\n                  var xrefInfo = xref.trailer.get(\"Info\") || null;\n\n                  if (xrefInfo) {\n                    xrefInfo.forEach(function (key, value) {\n                      if ((0, _util.isString)(key) && (0, _util.isString)(value)) {\n                        _info[key] = (0, _util.stringToPDFString)(value);\n                      }\n                    });\n                  }\n\n                  newXrefInfo = {\n                    rootRef: xref.trailer.getRaw(\"Root\") || null,\n                    encrypt: xref.trailer.getRaw(\"Encrypt\") || null,\n                    newRef: xref.getNewRef(),\n                    infoRef: xref.trailer.getRaw(\"Info\") || null,\n                    info: _info,\n                    fileIds: xref.trailer.getRaw(\"ID\") || null,\n                    startXRef: document.startXRef,\n                    filename: filename\n                  };\n                }\n\n                xref.resetNewRef();\n                return (0, _writer.incrementalUpdate)(stream.bytes, newXrefInfo, newRefs);\n              });\n            });\n            handler.on(\"GetOperatorList\", function wphSetupRenderPage(data, sink) {\n              var pageIndex = data.pageIndex;\n              pdfManager.getPage(pageIndex).then(function (page) {\n                var task = new WorkerTask(\"GetOperatorList: page \".concat(pageIndex));\n                startWorkerTask(task);\n                var start = verbosity >= _util.VerbosityLevel.INFOS ? Date.now() : 0;\n                page.getOperatorList({\n                  handler: handler,\n                  sink: sink,\n                  task: task,\n                  intent: data.intent,\n                  renderInteractiveForms: data.renderInteractiveForms,\n                  annotationStorage: data.annotationStorage\n                }).then(function (operatorListInfo) {\n                  finishWorkerTask(task);\n\n                  if (start) {\n                    (0, _util.info)(\"page=\".concat(pageIndex + 1, \" - getOperatorList: time=\") + \"\".concat(Date.now() - start, \"ms, len=\").concat(operatorListInfo.length));\n                  }\n\n                  sink.close();\n                }, function (reason) {\n                  finishWorkerTask(task);\n\n                  if (task.terminated) {\n                    return;\n                  }\n\n                  handler.send(\"UnsupportedFeature\", {\n                    featureId: _util.UNSUPPORTED_FEATURES.errorOperatorList\n                  });\n                  sink.error(reason);\n                });\n              });\n            }, this);\n            handler.on(\"GetTextContent\", function wphExtractText(data, sink) {\n              var pageIndex = data.pageIndex;\n\n              sink.onPull = function (desiredSize) {};\n\n              sink.onCancel = function (reason) {};\n\n              pdfManager.getPage(pageIndex).then(function (page) {\n                var task = new WorkerTask(\"GetTextContent: page \" + pageIndex);\n                startWorkerTask(task);\n                var start = verbosity >= _util.VerbosityLevel.INFOS ? Date.now() : 0;\n                page.extractTextContent({\n                  handler: handler,\n                  task: task,\n                  sink: sink,\n                  normalizeWhitespace: data.normalizeWhitespace,\n                  combineTextItems: data.combineTextItems\n                }).then(function () {\n                  finishWorkerTask(task);\n\n                  if (start) {\n                    (0, _util.info)(\"page=\".concat(pageIndex + 1, \" - getTextContent: time=\") + \"\".concat(Date.now() - start, \"ms\"));\n                  }\n\n                  sink.close();\n                }, function (reason) {\n                  finishWorkerTask(task);\n\n                  if (task.terminated) {\n                    return;\n                  }\n\n                  sink.error(reason);\n                });\n              });\n            });\n            handler.on(\"FontFallback\", function (data) {\n              return pdfManager.fontFallback(data.id, handler);\n            });\n            handler.on(\"Cleanup\", function wphCleanup(data) {\n              return pdfManager.cleanup(true);\n            });\n            handler.on(\"Terminate\", function wphTerminate(data) {\n              terminated = true;\n              var waitOn = [];\n\n              if (pdfManager) {\n                pdfManager.terminate(new _util.AbortException(\"Worker was terminated.\"));\n                var cleanupPromise = pdfManager.cleanup();\n                waitOn.push(cleanupPromise);\n                pdfManager = null;\n              } else {\n                (0, _primitives.clearPrimitiveCaches)();\n              }\n\n              if (cancelXHRs) {\n                cancelXHRs(new _util.AbortException(\"Worker was terminated.\"));\n              }\n\n              WorkerTasks.forEach(function (task) {\n                waitOn.push(task.finished);\n                task.terminate();\n              });\n              return Promise.all(waitOn).then(function () {\n                handler.destroy();\n                handler = null;\n              });\n            });\n            handler.on(\"Ready\", function wphReady(data) {\n              setupDoc(docParams);\n              docParams = null;\n            });\n            return workerHandlerName;\n          }\n        }, {\n          key: \"initializeFromPort\",\n          value: function initializeFromPort(port) {\n            var handler = new _message_handler.MessageHandler(\"worker\", \"main\", port);\n            WorkerMessageHandler.setup(handler, port);\n            handler.send(\"ready\", null);\n          }\n        }]);\n\n        return WorkerMessageHandler;\n      }();\n\n      exports.WorkerMessageHandler = WorkerMessageHandler;\n\n      function isMessagePort(maybePort) {\n        return typeof maybePort.postMessage === \"function\" && \"onmessage\" in maybePort;\n      }\n\n      if (typeof window === \"undefined\" && !_is_node.isNodeJS && typeof self !== \"undefined\" && isMessagePort(self)) {\n        WorkerMessageHandler.initializeFromPort(self);\n      }\n      /***/\n\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.escapeString = escapeString;\n      exports.getModificationDate = getModificationDate;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n      __w_pdfjs_require__(3);\n\n      var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      var PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      var TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      var ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      var AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      var AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      var AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      var AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      var AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      var AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      var AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      var AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      var StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      var FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      var VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      var CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      var OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      var UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontGetPath: \"errorFontGetPath\",\n        errorMarkedContent: \"errorMarkedContent\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      var PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      var verbosity = VerbosityLevel.WARNINGS;\n\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(\"Info: \".concat(msg));\n        }\n      }\n\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(\"Warning: \".concat(msg));\n        }\n      }\n\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n\n      function isSameOrigin(baseUrl, otherUrl) {\n        var base;\n\n        try {\n          base = new URL(baseUrl);\n\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n\n        var other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n\n        try {\n          var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n\n        return null;\n      }\n\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n\n      var BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n\n      exports.BaseException = BaseException;\n\n      var PasswordException = /*#__PURE__*/function (_BaseException) {\n        _inherits(PasswordException, _BaseException);\n\n        var _super = _createSuper(PasswordException);\n\n        function PasswordException(msg, code) {\n          var _this;\n\n          _classCallCheck(this, PasswordException);\n\n          _this = _super.call(this, msg);\n          _this.code = code;\n          return _this;\n        }\n\n        return PasswordException;\n      }(BaseException);\n\n      exports.PasswordException = PasswordException;\n\n      var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n        _inherits(UnknownErrorException, _BaseException2);\n\n        var _super2 = _createSuper(UnknownErrorException);\n\n        function UnknownErrorException(msg, details) {\n          var _this2;\n\n          _classCallCheck(this, UnknownErrorException);\n\n          _this2 = _super2.call(this, msg);\n          _this2.details = details;\n          return _this2;\n        }\n\n        return UnknownErrorException;\n      }(BaseException);\n\n      exports.UnknownErrorException = UnknownErrorException;\n\n      var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n        _inherits(InvalidPDFException, _BaseException3);\n\n        var _super3 = _createSuper(InvalidPDFException);\n\n        function InvalidPDFException() {\n          _classCallCheck(this, InvalidPDFException);\n\n          return _super3.apply(this, arguments);\n        }\n\n        return InvalidPDFException;\n      }(BaseException);\n\n      exports.InvalidPDFException = InvalidPDFException;\n\n      var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n        _inherits(MissingPDFException, _BaseException4);\n\n        var _super4 = _createSuper(MissingPDFException);\n\n        function MissingPDFException() {\n          _classCallCheck(this, MissingPDFException);\n\n          return _super4.apply(this, arguments);\n        }\n\n        return MissingPDFException;\n      }(BaseException);\n\n      exports.MissingPDFException = MissingPDFException;\n\n      var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n        _inherits(UnexpectedResponseException, _BaseException5);\n\n        var _super5 = _createSuper(UnexpectedResponseException);\n\n        function UnexpectedResponseException(msg, status) {\n          var _this3;\n\n          _classCallCheck(this, UnexpectedResponseException);\n\n          _this3 = _super5.call(this, msg);\n          _this3.status = status;\n          return _this3;\n        }\n\n        return UnexpectedResponseException;\n      }(BaseException);\n\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n\n      var FormatError = /*#__PURE__*/function (_BaseException6) {\n        _inherits(FormatError, _BaseException6);\n\n        var _super6 = _createSuper(FormatError);\n\n        function FormatError() {\n          _classCallCheck(this, FormatError);\n\n          return _super6.apply(this, arguments);\n        }\n\n        return FormatError;\n      }(BaseException);\n\n      exports.FormatError = FormatError;\n\n      var AbortException = /*#__PURE__*/function (_BaseException7) {\n        _inherits(AbortException, _BaseException7);\n\n        var _super7 = _createSuper(AbortException);\n\n        function AbortException() {\n          _classCallCheck(this, AbortException);\n\n          return _super7.apply(this, arguments);\n        }\n\n        return AbortException;\n      }(BaseException);\n\n      exports.AbortException = AbortException;\n      var NullCharactersRegExp = /\\x00/g;\n\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n\n      function bytesToString(bytes) {\n        assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        var length = bytes.length;\n        var MAX_ARGUMENT_COUNT = 8192;\n\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n\n        var strBuf = [];\n\n        for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          var chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        var length = str.length;\n        var bytes = new Uint8Array(length);\n\n        for (var i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n\n        return bytes;\n      }\n\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n\n        assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n        return arr.byteLength;\n      }\n\n      function arraysToBytes(arr) {\n        var length = arr.length;\n\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n\n        var resultLength = 0;\n\n        for (var i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n\n        var pos = 0;\n        var data = new Uint8Array(resultLength);\n\n        for (var _i = 0; _i < length; _i++) {\n          var item = arr[_i];\n\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n\n          var itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n\n        return data;\n      }\n\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n\n      function isLittleEndian() {\n        var buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n\n      var IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      var IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      var rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\n      var Util = /*#__PURE__*/function () {\n        function Util() {\n          _classCallCheck(this, Util);\n        }\n\n        _createClass(Util, null, [{\n          key: \"makeCssRgb\",\n          value: function makeCssRgb(r, g, b) {\n            rgbBuf[1] = r;\n            rgbBuf[3] = g;\n            rgbBuf[5] = b;\n            return rgbBuf.join(\"\");\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n        }, {\n          key: \"applyTransform\",\n          value: function applyTransform(p, m) {\n            var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n        }, {\n          key: \"applyInverseTransform\",\n          value: function applyInverseTransform(p, m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n        }, {\n          key: \"getAxialAlignedBoundingBox\",\n          value: function getAxialAlignedBoundingBox(r, m) {\n            var p1 = Util.applyTransform(r, m);\n            var p2 = Util.applyTransform(r.slice(2, 4), m);\n            var p3 = Util.applyTransform([r[0], r[3]], m);\n            var p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n        }, {\n          key: \"inverseTransform\",\n          value: function inverseTransform(m) {\n            var d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n        }, {\n          key: \"apply3dTransform\",\n          value: function apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n        }, {\n          key: \"singularValueDecompose2dScale\",\n          value: function singularValueDecompose2dScale(m) {\n            var transpose = [m[0], m[2], m[1], m[3]];\n            var a = m[0] * transpose[0] + m[1] * transpose[2];\n            var b = m[0] * transpose[1] + m[1] * transpose[3];\n            var c = m[2] * transpose[0] + m[3] * transpose[2];\n            var d = m[2] * transpose[1] + m[3] * transpose[3];\n            var first = (a + d) / 2;\n            var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n            var sx = first + second || 1;\n            var sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n        }, {\n          key: \"normalizeRect\",\n          value: function normalizeRect(rect) {\n            var r = rect.slice(0);\n\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n\n            return r;\n          }\n        }, {\n          key: \"intersect\",\n          value: function intersect(rect1, rect2) {\n            function compare(a, b) {\n              return a - b;\n            }\n\n            var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n            var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n            var result = [];\n            rect1 = Util.normalizeRect(rect1);\n            rect2 = Util.normalizeRect(rect2);\n\n            if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n              result[0] = orderedX[1];\n              result[2] = orderedX[2];\n            } else {\n              return null;\n            }\n\n            if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n              result[1] = orderedY[1];\n              result[3] = orderedY[2];\n            } else {\n              return null;\n            }\n\n            return result;\n          }\n        }]);\n\n        return Util;\n      }();\n\n      exports.Util = Util;\n      var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n      function stringToPDFString(str) {\n        var length = str.length,\n            strBuf = [];\n\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (var i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (var _i2 = 2; _i2 < length; _i2 += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n          }\n        } else {\n          for (var _i3 = 0; _i3 < length; ++_i3) {\n            var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n          }\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function escapeString(str) {\n        return str.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n      }\n\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n\n      function getModificationDate() {\n        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date(Date.now());\n        var buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), (date.getUTCDate() + 1).toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n        return buffer.join(\"\");\n      }\n\n      function createPromiseCapability() {\n        var capability = Object.create(null);\n        var isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get: function get() {\n            return isSettled;\n          }\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      var createObjectURL = function createObjectURLClosure() {\n        var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (!forceDataSchema && URL.createObjectURL) {\n            var blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n                d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        };\n      }();\n\n      exports.createObjectURL = createObjectURL;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      ;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      var isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n      exports.isNodeJS = isNodeJS;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.clearPrimitiveCaches = clearPrimitiveCaches;\n      exports.isEOF = isEOF;\n      exports.isCmd = isCmd;\n      exports.isDict = isDict;\n      exports.isName = isName;\n      exports.isRef = isRef;\n      exports.isRefsEqual = isRefsEqual;\n      exports.isStream = isStream;\n      exports.RefSetCache = exports.RefSet = exports.Ref = exports.Name = exports.Dict = exports.Cmd = exports.EOF = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var EOF = {};\n      exports.EOF = EOF;\n\n      var Name = function NameClosure() {\n        var nameCache = Object.create(null);\n\n        function Name(name) {\n          this.name = name;\n        }\n\n        Name.prototype = {};\n\n        Name.get = function Name_get(name) {\n          var nameValue = nameCache[name];\n          return nameValue ? nameValue : nameCache[name] = new Name(name);\n        };\n\n        Name._clearCache = function () {\n          nameCache = Object.create(null);\n        };\n\n        return Name;\n      }();\n\n      exports.Name = Name;\n\n      var Cmd = function CmdClosure() {\n        var cmdCache = Object.create(null);\n\n        function Cmd(cmd) {\n          this.cmd = cmd;\n        }\n\n        Cmd.prototype = {};\n\n        Cmd.get = function Cmd_get(cmd) {\n          var cmdValue = cmdCache[cmd];\n          return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n        };\n\n        Cmd._clearCache = function () {\n          cmdCache = Object.create(null);\n        };\n\n        return Cmd;\n      }();\n\n      exports.Cmd = Cmd;\n\n      var Dict = function DictClosure() {\n        var nonSerializable = function nonSerializableClosure() {\n          return nonSerializable;\n        };\n\n        function Dict(xref) {\n          this._map = Object.create(null);\n          this.xref = xref;\n          this.objId = null;\n          this.suppressEncryption = false;\n          this.__nonSerializable__ = nonSerializable;\n        }\n\n        Dict.prototype = {\n          assignXref: function Dict_assignXref(newXref) {\n            this.xref = newXref;\n          },\n\n          get size() {\n            return Object.keys(this._map).length;\n          },\n\n          get: function get(key1, key2, key3) {\n            var value = this._map[key1];\n\n            if (value === undefined && key2 !== undefined) {\n              value = this._map[key2];\n\n              if (value === undefined && key3 !== undefined) {\n                value = this._map[key3];\n              }\n            }\n\n            if (value instanceof Ref && this.xref) {\n              return this.xref.fetch(value, this.suppressEncryption);\n            }\n\n            return value;\n          },\n          getAsync: function getAsync(key1, key2, key3) {\n            var _this4 = this;\n\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n              var value;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      value = _this4._map[key1];\n\n                      if (value === undefined && key2 !== undefined) {\n                        value = _this4._map[key2];\n\n                        if (value === undefined && key3 !== undefined) {\n                          value = _this4._map[key3];\n                        }\n                      }\n\n                      if (!(value instanceof Ref && _this4.xref)) {\n                        _context2.next = 4;\n                        break;\n                      }\n\n                      return _context2.abrupt(\"return\", _this4.xref.fetchAsync(value, _this4.suppressEncryption));\n\n                    case 4:\n                      return _context2.abrupt(\"return\", value);\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }))();\n          },\n          getArray: function getArray(key1, key2, key3) {\n            var value = this.get(key1, key2, key3);\n\n            if (!Array.isArray(value) || !this.xref) {\n              return value;\n            }\n\n            value = value.slice();\n\n            for (var i = 0, ii = value.length; i < ii; i++) {\n              if (!(value[i] instanceof Ref)) {\n                continue;\n              }\n\n              value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n            }\n\n            return value;\n          },\n          getRaw: function Dict_getRaw(key) {\n            return this._map[key];\n          },\n          getKeys: function Dict_getKeys() {\n            return Object.keys(this._map);\n          },\n          getRawValues: function Dict_getRawValues() {\n            return Object.values(this._map);\n          },\n          set: function Dict_set(key, value) {\n            this._map[key] = value;\n          },\n          has: function Dict_has(key) {\n            return this._map[key] !== undefined;\n          },\n          forEach: function Dict_forEach(callback) {\n            for (var key in this._map) {\n              callback(key, this.get(key));\n            }\n          }\n        };\n        Dict.empty = new Dict(null);\n\n        Dict.merge = function (_ref10) {\n          var xref = _ref10.xref,\n              dictArray = _ref10.dictArray,\n              _ref10$mergeSubDicts = _ref10.mergeSubDicts,\n              mergeSubDicts = _ref10$mergeSubDicts === void 0 ? false : _ref10$mergeSubDicts;\n          var mergedDict = new Dict(xref);\n\n          if (!mergeSubDicts) {\n            var _iterator2 = _createForOfIteratorHelper(dictArray),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var dict = _step2.value;\n\n                if (!(dict instanceof Dict)) {\n                  continue;\n                }\n\n                for (var _i4 = 0, _Object$entries = Object.entries(dict._map); _i4 < _Object$entries.length; _i4++) {\n                  var _Object$entries$_i = _slicedToArray(_Object$entries[_i4], 2),\n                      key = _Object$entries$_i[0],\n                      value = _Object$entries$_i[1];\n\n                  if (mergedDict._map[key] === undefined) {\n                    mergedDict._map[key] = value;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            return mergedDict.size > 0 ? mergedDict : Dict.empty;\n          }\n\n          var properties = new Map();\n\n          var _iterator3 = _createForOfIteratorHelper(dictArray),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _dict = _step3.value;\n\n              if (!(_dict instanceof Dict)) {\n                continue;\n              }\n\n              for (var _i5 = 0, _Object$entries2 = Object.entries(_dict._map); _i5 < _Object$entries2.length; _i5++) {\n                var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i5], 2),\n                    _key = _Object$entries2$_i[0],\n                    _value = _Object$entries2$_i[1];\n\n                var property = properties.get(_key);\n\n                if (property === undefined) {\n                  property = [];\n                  properties.set(_key, property);\n                }\n\n                property.push(_value);\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          var _iterator4 = _createForOfIteratorHelper(properties),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _step4$value = _slicedToArray(_step4.value, 2),\n                  name = _step4$value[0],\n                  values = _step4$value[1];\n\n              if (values.length === 1 || !(values[0] instanceof Dict)) {\n                mergedDict._map[name] = values[0];\n                continue;\n              }\n\n              var subDict = new Dict(xref);\n\n              var _iterator5 = _createForOfIteratorHelper(values),\n                  _step5;\n\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var _dict2 = _step5.value;\n\n                  if (!(_dict2 instanceof Dict)) {\n                    continue;\n                  }\n\n                  for (var _i6 = 0, _Object$entries3 = Object.entries(_dict2._map); _i6 < _Object$entries3.length; _i6++) {\n                    var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i6], 2),\n                        _key2 = _Object$entries3$_i[0],\n                        _value2 = _Object$entries3$_i[1];\n\n                    if (subDict._map[_key2] === undefined) {\n                      subDict._map[_key2] = _value2;\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n\n              if (subDict.size > 0) {\n                mergedDict._map[name] = subDict;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          properties.clear();\n          return mergedDict.size > 0 ? mergedDict : Dict.empty;\n        };\n\n        return Dict;\n      }();\n\n      exports.Dict = Dict;\n\n      var Ref = function RefClosure() {\n        var refCache = Object.create(null);\n\n        function Ref(num, gen) {\n          this.num = num;\n          this.gen = gen;\n        }\n\n        Ref.prototype = {\n          toString: function Ref_toString() {\n            if (this.gen === 0) {\n              return \"\".concat(this.num, \"R\");\n            }\n\n            return \"\".concat(this.num, \"R\").concat(this.gen);\n          }\n        };\n\n        Ref.get = function (num, gen) {\n          var key = gen === 0 ? \"\".concat(num, \"R\") : \"\".concat(num, \"R\").concat(gen);\n          var refValue = refCache[key];\n          return refValue ? refValue : refCache[key] = new Ref(num, gen);\n        };\n\n        Ref._clearCache = function () {\n          refCache = Object.create(null);\n        };\n\n        return Ref;\n      }();\n\n      exports.Ref = Ref;\n\n      var RefSet = /*#__PURE__*/function () {\n        function RefSet() {\n          _classCallCheck(this, RefSet);\n\n          this._set = new Set();\n        }\n\n        _createClass(RefSet, [{\n          key: \"has\",\n          value: function has(ref) {\n            return this._set.has(ref.toString());\n          }\n        }, {\n          key: \"put\",\n          value: function put(ref) {\n            this._set.add(ref.toString());\n          }\n        }, {\n          key: \"remove\",\n          value: function remove(ref) {\n            this._set.delete(ref.toString());\n          }\n        }]);\n\n        return RefSet;\n      }();\n\n      exports.RefSet = RefSet;\n\n      var RefSetCache = /*#__PURE__*/function () {\n        function RefSetCache() {\n          _classCallCheck(this, RefSetCache);\n\n          this._map = new Map();\n        }\n\n        _createClass(RefSetCache, [{\n          key: \"size\",\n          get: function get() {\n            return this._map.size;\n          }\n        }, {\n          key: \"get\",\n          value: function get(ref) {\n            return this._map.get(ref.toString());\n          }\n        }, {\n          key: \"has\",\n          value: function has(ref) {\n            return this._map.has(ref.toString());\n          }\n        }, {\n          key: \"put\",\n          value: function put(ref, obj) {\n            this._map.set(ref.toString(), obj);\n          }\n        }, {\n          key: \"putAlias\",\n          value: function putAlias(ref, aliasRef) {\n            this._map.set(ref.toString(), this.get(aliasRef));\n          }\n        }, {\n          key: \"forEach\",\n          value: function forEach(callback) {\n            var _iterator6 = _createForOfIteratorHelper(this._map.values()),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var value = _step6.value;\n                callback(value);\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            this._map.clear();\n          }\n        }]);\n\n        return RefSetCache;\n      }();\n\n      exports.RefSetCache = RefSetCache;\n\n      function isEOF(v) {\n        return v === EOF;\n      }\n\n      function isName(v, name) {\n        return v instanceof Name && (name === undefined || v.name === name);\n      }\n\n      function isCmd(v, cmd) {\n        return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n      }\n\n      function isDict(v, type) {\n        return v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type));\n      }\n\n      function isRef(v) {\n        return v instanceof Ref;\n      }\n\n      function isRefsEqual(v1, v2) {\n        return v1.num === v2.num && v1.gen === v2.gen;\n      }\n\n      function isStream(v) {\n        return typeof v === \"object\" && v !== null && v.getBytes !== undefined;\n      }\n\n      function clearPrimitiveCaches() {\n        Cmd._clearCache();\n\n        Name._clearCache();\n\n        Ref._clearCache();\n      }\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.NetworkPdfManager = exports.LocalPdfManager = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _chunked_stream = __w_pdfjs_require__(7);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _document = __w_pdfjs_require__(9);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var BasePdfManager = /*#__PURE__*/function () {\n        function BasePdfManager() {\n          _classCallCheck(this, BasePdfManager);\n\n          if (this.constructor === BasePdfManager) {\n            (0, _util.unreachable)(\"Cannot initialize BasePdfManager.\");\n          }\n        }\n\n        _createClass(BasePdfManager, [{\n          key: \"docId\",\n          get: function get() {\n            return this._docId;\n          }\n        }, {\n          key: \"password\",\n          get: function get() {\n            return this._password;\n          }\n        }, {\n          key: \"docBaseUrl\",\n          get: function get() {\n            var docBaseUrl = null;\n\n            if (this._docBaseUrl) {\n              var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n\n              if (absoluteUrl) {\n                docBaseUrl = absoluteUrl.href;\n              } else {\n                (0, _util.warn)(\"Invalid absolute docBaseUrl: \\\"\".concat(this._docBaseUrl, \"\\\".\"));\n              }\n            }\n\n            return (0, _util.shadow)(this, \"docBaseUrl\", docBaseUrl);\n          }\n        }, {\n          key: \"onLoadedStream\",\n          value: function onLoadedStream() {\n            (0, _util.unreachable)(\"Abstract method `onLoadedStream` called\");\n          }\n        }, {\n          key: \"ensureDoc\",\n          value: function ensureDoc(prop, args) {\n            return this.ensure(this.pdfDocument, prop, args);\n          }\n        }, {\n          key: \"ensureXRef\",\n          value: function ensureXRef(prop, args) {\n            return this.ensure(this.pdfDocument.xref, prop, args);\n          }\n        }, {\n          key: \"ensureCatalog\",\n          value: function ensureCatalog(prop, args) {\n            return this.ensure(this.pdfDocument.catalog, prop, args);\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageIndex) {\n            return this.pdfDocument.getPage(pageIndex);\n          }\n        }, {\n          key: \"fontFallback\",\n          value: function fontFallback(id, handler) {\n            return this.pdfDocument.fontFallback(id, handler);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var manuallyTriggered = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this.pdfDocument.cleanup(manuallyTriggered);\n          }\n        }, {\n          key: \"ensure\",\n          value: function () {\n            var _ensure = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(obj, prop, args) {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      (0, _util.unreachable)(\"Abstract method `ensure` called\");\n\n                    case 1:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            function ensure(_x2, _x3, _x4) {\n              return _ensure.apply(this, arguments);\n            }\n\n            return ensure;\n          }()\n        }, {\n          key: \"requestRange\",\n          value: function requestRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method `requestRange` called\");\n          }\n        }, {\n          key: \"requestLoadedStream\",\n          value: function requestLoadedStream() {\n            (0, _util.unreachable)(\"Abstract method `requestLoadedStream` called\");\n          }\n        }, {\n          key: \"sendProgressiveData\",\n          value: function sendProgressiveData(chunk) {\n            (0, _util.unreachable)(\"Abstract method `sendProgressiveData` called\");\n          }\n        }, {\n          key: \"updatePassword\",\n          value: function updatePassword(password) {\n            this._password = password;\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate(reason) {\n            (0, _util.unreachable)(\"Abstract method `terminate` called\");\n          }\n        }]);\n\n        return BasePdfManager;\n      }();\n\n      var LocalPdfManager = /*#__PURE__*/function (_BasePdfManager) {\n        _inherits(LocalPdfManager, _BasePdfManager);\n\n        var _super8 = _createSuper(LocalPdfManager);\n\n        function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n          var _this5;\n\n          _classCallCheck(this, LocalPdfManager);\n\n          _this5 = _super8.call(this);\n          _this5._docId = docId;\n          _this5._password = password;\n          _this5._docBaseUrl = docBaseUrl;\n          _this5.evaluatorOptions = evaluatorOptions;\n          var stream = new _stream.Stream(data);\n          _this5.pdfDocument = new _document.PDFDocument(_assertThisInitialized(_this5), stream);\n          _this5._loadedStreamPromise = Promise.resolve(stream);\n          return _this5;\n        }\n\n        _createClass(LocalPdfManager, [{\n          key: \"ensure\",\n          value: function () {\n            var _ensure2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(obj, prop, args) {\n              var value;\n              return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      value = obj[prop];\n\n                      if (!(typeof value === \"function\")) {\n                        _context4.next = 3;\n                        break;\n                      }\n\n                      return _context4.abrupt(\"return\", value.apply(obj, args));\n\n                    case 3:\n                      return _context4.abrupt(\"return\", value);\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            }));\n\n            function ensure(_x5, _x6, _x7) {\n              return _ensure2.apply(this, arguments);\n            }\n\n            return ensure;\n          }()\n        }, {\n          key: \"requestRange\",\n          value: function requestRange(begin, end) {\n            return Promise.resolve();\n          }\n        }, {\n          key: \"requestLoadedStream\",\n          value: function requestLoadedStream() {}\n        }, {\n          key: \"onLoadedStream\",\n          value: function onLoadedStream() {\n            return this._loadedStreamPromise;\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate(reason) {}\n        }]);\n\n        return LocalPdfManager;\n      }(BasePdfManager);\n\n      exports.LocalPdfManager = LocalPdfManager;\n\n      var NetworkPdfManager = /*#__PURE__*/function (_BasePdfManager2) {\n        _inherits(NetworkPdfManager, _BasePdfManager2);\n\n        var _super9 = _createSuper(NetworkPdfManager);\n\n        function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n          var _this6;\n\n          _classCallCheck(this, NetworkPdfManager);\n\n          _this6 = _super9.call(this);\n          _this6._docId = docId;\n          _this6._password = args.password;\n          _this6._docBaseUrl = docBaseUrl;\n          _this6.msgHandler = args.msgHandler;\n          _this6.evaluatorOptions = evaluatorOptions;\n          _this6.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, {\n            msgHandler: args.msgHandler,\n            length: args.length,\n            disableAutoFetch: args.disableAutoFetch,\n            rangeChunkSize: args.rangeChunkSize\n          });\n          _this6.pdfDocument = new _document.PDFDocument(_assertThisInitialized(_this6), _this6.streamManager.getStream());\n          return _this6;\n        }\n\n        _createClass(NetworkPdfManager, [{\n          key: \"ensure\",\n          value: function () {\n            var _ensure3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(obj, prop, args) {\n              var value;\n              return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.prev = 0;\n                      value = obj[prop];\n\n                      if (!(typeof value === \"function\")) {\n                        _context5.next = 4;\n                        break;\n                      }\n\n                      return _context5.abrupt(\"return\", value.apply(obj, args));\n\n                    case 4:\n                      return _context5.abrupt(\"return\", value);\n\n                    case 7:\n                      _context5.prev = 7;\n                      _context5.t0 = _context5[\"catch\"](0);\n\n                      if (_context5.t0 instanceof _core_utils.MissingDataException) {\n                        _context5.next = 11;\n                        break;\n                      }\n\n                      throw _context5.t0;\n\n                    case 11:\n                      _context5.next = 13;\n                      return this.requestRange(_context5.t0.begin, _context5.t0.end);\n\n                    case 13:\n                      return _context5.abrupt(\"return\", this.ensure(obj, prop, args));\n\n                    case 14:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _callee5, this, [[0, 7]]);\n            }));\n\n            function ensure(_x8, _x9, _x10) {\n              return _ensure3.apply(this, arguments);\n            }\n\n            return ensure;\n          }()\n        }, {\n          key: \"requestRange\",\n          value: function requestRange(begin, end) {\n            return this.streamManager.requestRange(begin, end);\n          }\n        }, {\n          key: \"requestLoadedStream\",\n          value: function requestLoadedStream() {\n            this.streamManager.requestAllChunks();\n          }\n        }, {\n          key: \"sendProgressiveData\",\n          value: function sendProgressiveData(chunk) {\n            this.streamManager.onReceiveData({\n              chunk: chunk\n            });\n          }\n        }, {\n          key: \"onLoadedStream\",\n          value: function onLoadedStream() {\n            return this.streamManager.onLoadedStream();\n          }\n        }, {\n          key: \"terminate\",\n          value: function terminate(reason) {\n            this.streamManager.abort(reason);\n          }\n        }]);\n\n        return NetworkPdfManager;\n      }(BasePdfManager);\n\n      exports.NetworkPdfManager = NetworkPdfManager;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ChunkedStreamManager = exports.ChunkedStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var ChunkedStream = /*#__PURE__*/function () {\n        function ChunkedStream(length, chunkSize, manager) {\n          _classCallCheck(this, ChunkedStream);\n\n          this.bytes = new Uint8Array(length);\n          this.start = 0;\n          this.pos = 0;\n          this.end = length;\n          this.chunkSize = chunkSize;\n          this._loadedChunks = new Set();\n          this.numChunks = Math.ceil(length / chunkSize);\n          this.manager = manager;\n          this.progressiveDataLength = 0;\n          this.lastSuccessfulEnsureByteChunk = -1;\n        }\n\n        _createClass(ChunkedStream, [{\n          key: \"getMissingChunks\",\n          value: function getMissingChunks() {\n            var chunks = [];\n\n            for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n              if (!this._loadedChunks.has(chunk)) {\n                chunks.push(chunk);\n              }\n            }\n\n            return chunks;\n          }\n        }, {\n          key: \"getBaseStreams\",\n          value: function getBaseStreams() {\n            return [this];\n          }\n        }, {\n          key: \"numChunksLoaded\",\n          get: function get() {\n            return this._loadedChunks.size;\n          }\n        }, {\n          key: \"allChunksLoaded\",\n          value: function allChunksLoaded() {\n            return this.numChunksLoaded === this.numChunks;\n          }\n        }, {\n          key: \"onReceiveData\",\n          value: function onReceiveData(begin, chunk) {\n            var chunkSize = this.chunkSize;\n\n            if (begin % chunkSize !== 0) {\n              throw new Error(\"Bad begin offset: \".concat(begin));\n            }\n\n            var end = begin + chunk.byteLength;\n\n            if (end % chunkSize !== 0 && end !== this.bytes.length) {\n              throw new Error(\"Bad end offset: \".concat(end));\n            }\n\n            this.bytes.set(new Uint8Array(chunk), begin);\n            var beginChunk = Math.floor(begin / chunkSize);\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\n            for (var curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n              this._loadedChunks.add(curChunk);\n            }\n          }\n        }, {\n          key: \"onReceiveProgressiveData\",\n          value: function onReceiveProgressiveData(data) {\n            var position = this.progressiveDataLength;\n            var beginChunk = Math.floor(position / this.chunkSize);\n            this.bytes.set(new Uint8Array(data), position);\n            position += data.byteLength;\n            this.progressiveDataLength = position;\n            var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\n            for (var curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n              this._loadedChunks.add(curChunk);\n            }\n          }\n        }, {\n          key: \"ensureByte\",\n          value: function ensureByte(pos) {\n            if (pos < this.progressiveDataLength) {\n              return;\n            }\n\n            var chunk = Math.floor(pos / this.chunkSize);\n\n            if (chunk === this.lastSuccessfulEnsureByteChunk) {\n              return;\n            }\n\n            if (!this._loadedChunks.has(chunk)) {\n              throw new _core_utils.MissingDataException(pos, pos + 1);\n            }\n\n            this.lastSuccessfulEnsureByteChunk = chunk;\n          }\n        }, {\n          key: \"ensureRange\",\n          value: function ensureRange(begin, end) {\n            if (begin >= end) {\n              return;\n            }\n\n            if (end <= this.progressiveDataLength) {\n              return;\n            }\n\n            var chunkSize = this.chunkSize;\n            var beginChunk = Math.floor(begin / chunkSize);\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n              if (!this._loadedChunks.has(chunk)) {\n                throw new _core_utils.MissingDataException(begin, end);\n              }\n            }\n          }\n        }, {\n          key: \"nextEmptyChunk\",\n          value: function nextEmptyChunk(beginChunk) {\n            var numChunks = this.numChunks;\n\n            for (var i = 0; i < numChunks; ++i) {\n              var chunk = (beginChunk + i) % numChunks;\n\n              if (!this._loadedChunks.has(chunk)) {\n                return chunk;\n              }\n            }\n\n            return null;\n          }\n        }, {\n          key: \"hasChunk\",\n          value: function hasChunk(chunk) {\n            return this._loadedChunks.has(chunk);\n          }\n        }, {\n          key: \"length\",\n          get: function get() {\n            return this.end - this.start;\n          }\n        }, {\n          key: \"isEmpty\",\n          get: function get() {\n            return this.length === 0;\n          }\n        }, {\n          key: \"getByte\",\n          value: function getByte() {\n            var pos = this.pos;\n\n            if (pos >= this.end) {\n              return -1;\n            }\n\n            if (pos >= this.progressiveDataLength) {\n              this.ensureByte(pos);\n            }\n\n            return this.bytes[this.pos++];\n          }\n        }, {\n          key: \"getUint16\",\n          value: function getUint16() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n\n            if (b0 === -1 || b1 === -1) {\n              return -1;\n            }\n\n            return (b0 << 8) + b1;\n          }\n        }, {\n          key: \"getInt32\",\n          value: function getInt32() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n            var b2 = this.getByte();\n            var b3 = this.getByte();\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n          }\n        }, {\n          key: \"getBytes\",\n          value: function getBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var bytes = this.bytes;\n            var pos = this.pos;\n            var strEnd = this.end;\n\n            if (!length) {\n              if (strEnd > this.progressiveDataLength) {\n                this.ensureRange(pos, strEnd);\n              }\n\n              var _subarray = bytes.subarray(pos, strEnd);\n\n              return forceClamped ? new Uint8ClampedArray(_subarray) : _subarray;\n            }\n\n            var end = pos + length;\n\n            if (end > strEnd) {\n              end = strEnd;\n            }\n\n            if (end > this.progressiveDataLength) {\n              this.ensureRange(pos, end);\n            }\n\n            this.pos = end;\n            var subarray = bytes.subarray(pos, end);\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n          }\n        }, {\n          key: \"peekByte\",\n          value: function peekByte() {\n            var peekedByte = this.getByte();\n\n            if (peekedByte !== -1) {\n              this.pos--;\n            }\n\n            return peekedByte;\n          }\n        }, {\n          key: \"peekBytes\",\n          value: function peekBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var bytes = this.getBytes(length, forceClamped);\n            this.pos -= bytes.length;\n            return bytes;\n          }\n        }, {\n          key: \"getByteRange\",\n          value: function getByteRange(begin, end) {\n            if (begin < 0) {\n              begin = 0;\n            }\n\n            if (end > this.end) {\n              end = this.end;\n            }\n\n            if (end > this.progressiveDataLength) {\n              this.ensureRange(begin, end);\n            }\n\n            return this.bytes.subarray(begin, end);\n          }\n        }, {\n          key: \"skip\",\n          value: function skip(n) {\n            if (!n) {\n              n = 1;\n            }\n\n            this.pos += n;\n          }\n        }, {\n          key: \"reset\",\n          value: function reset() {\n            this.pos = this.start;\n          }\n        }, {\n          key: \"moveStart\",\n          value: function moveStart() {\n            this.start = this.pos;\n          }\n        }, {\n          key: \"makeSubStream\",\n          value: function makeSubStream(start, length, dict) {\n            if (length) {\n              if (start + length > this.progressiveDataLength) {\n                this.ensureRange(start, start + length);\n              }\n            } else {\n              if (start >= this.progressiveDataLength) {\n                this.ensureByte(start);\n              }\n            }\n\n            function ChunkedStreamSubstream() {}\n\n            ChunkedStreamSubstream.prototype = Object.create(this);\n\n            ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n              var chunkSize = this.chunkSize;\n              var beginChunk = Math.floor(this.start / chunkSize);\n              var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n              var missingChunks = [];\n\n              for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n                if (!this._loadedChunks.has(chunk)) {\n                  missingChunks.push(chunk);\n                }\n              }\n\n              return missingChunks;\n            };\n\n            ChunkedStreamSubstream.prototype.allChunksLoaded = function () {\n              if (this.numChunksLoaded === this.numChunks) {\n                return true;\n              }\n\n              return this.getMissingChunks().length === 0;\n            };\n\n            var subStream = new ChunkedStreamSubstream();\n            subStream.pos = subStream.start = start;\n            subStream.end = start + length || this.end;\n            subStream.dict = dict;\n            return subStream;\n          }\n        }]);\n\n        return ChunkedStream;\n      }();\n\n      exports.ChunkedStream = ChunkedStream;\n\n      var ChunkedStreamManager = /*#__PURE__*/function () {\n        function ChunkedStreamManager(pdfNetworkStream, args) {\n          _classCallCheck(this, ChunkedStreamManager);\n\n          this.length = args.length;\n          this.chunkSize = args.rangeChunkSize;\n          this.stream = new ChunkedStream(this.length, this.chunkSize, this);\n          this.pdfNetworkStream = pdfNetworkStream;\n          this.disableAutoFetch = args.disableAutoFetch;\n          this.msgHandler = args.msgHandler;\n          this.currRequestId = 0;\n          this._chunksNeededByRequest = new Map();\n          this._requestsByChunk = new Map();\n          this._promisesByRequest = new Map();\n          this.progressiveDataLength = 0;\n          this.aborted = false;\n          this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n        }\n\n        _createClass(ChunkedStreamManager, [{\n          key: \"onLoadedStream\",\n          value: function onLoadedStream() {\n            return this._loadedStreamCapability.promise;\n          }\n        }, {\n          key: \"sendRequest\",\n          value: function sendRequest(begin, end) {\n            var _this7 = this;\n\n            var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\n            if (!rangeReader.isStreamingSupported) {\n              rangeReader.onProgress = this.onProgress.bind(this);\n            }\n\n            var chunks = [],\n                loaded = 0;\n            var promise = new Promise(function (resolve, reject) {\n              var readChunk = function readChunk(chunk) {\n                try {\n                  if (!chunk.done) {\n                    var data = chunk.value;\n                    chunks.push(data);\n                    loaded += (0, _util.arrayByteLength)(data);\n\n                    if (rangeReader.isStreamingSupported) {\n                      _this7.onProgress({\n                        loaded: loaded\n                      });\n                    }\n\n                    rangeReader.read().then(readChunk, reject);\n                    return;\n                  }\n\n                  var chunkData = (0, _util.arraysToBytes)(chunks);\n                  chunks = null;\n                  resolve(chunkData);\n                } catch (e) {\n                  reject(e);\n                }\n              };\n\n              rangeReader.read().then(readChunk, reject);\n            });\n            promise.then(function (data) {\n              if (_this7.aborted) {\n                return;\n              }\n\n              _this7.onReceiveData({\n                chunk: data,\n                begin: begin\n              });\n            });\n          }\n        }, {\n          key: \"requestAllChunks\",\n          value: function requestAllChunks() {\n            var missingChunks = this.stream.getMissingChunks();\n\n            this._requestChunks(missingChunks);\n\n            return this._loadedStreamCapability.promise;\n          }\n        }, {\n          key: \"_requestChunks\",\n          value: function _requestChunks(chunks) {\n            var _this8 = this;\n\n            var requestId = this.currRequestId++;\n            var chunksNeeded = new Set();\n\n            this._chunksNeededByRequest.set(requestId, chunksNeeded);\n\n            var _iterator7 = _createForOfIteratorHelper(chunks),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var chunk = _step7.value;\n\n                if (!this.stream.hasChunk(chunk)) {\n                  chunksNeeded.add(chunk);\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n\n            if (chunksNeeded.size === 0) {\n              return Promise.resolve();\n            }\n\n            var capability = (0, _util.createPromiseCapability)();\n\n            this._promisesByRequest.set(requestId, capability);\n\n            var chunksToRequest = [];\n\n            var _iterator8 = _createForOfIteratorHelper(chunksNeeded),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _chunk = _step8.value;\n\n                var requestIds = this._requestsByChunk.get(_chunk);\n\n                if (!requestIds) {\n                  requestIds = [];\n\n                  this._requestsByChunk.set(_chunk, requestIds);\n\n                  chunksToRequest.push(_chunk);\n                }\n\n                requestIds.push(requestId);\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n\n            if (chunksToRequest.length > 0) {\n              var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\n              var _iterator9 = _createForOfIteratorHelper(groupedChunksToRequest),\n                  _step9;\n\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var groupedChunk = _step9.value;\n                  var begin = groupedChunk.beginChunk * this.chunkSize;\n                  var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n                  this.sendRequest(begin, end);\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }\n\n            return capability.promise.catch(function (reason) {\n              if (_this8.aborted) {\n                return;\n              }\n\n              throw reason;\n            });\n          }\n        }, {\n          key: \"getStream\",\n          value: function getStream() {\n            return this.stream;\n          }\n        }, {\n          key: \"requestRange\",\n          value: function requestRange(begin, end) {\n            end = Math.min(end, this.length);\n            var beginChunk = this.getBeginChunk(begin);\n            var endChunk = this.getEndChunk(end);\n            var chunks = [];\n\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n              chunks.push(chunk);\n            }\n\n            return this._requestChunks(chunks);\n          }\n        }, {\n          key: \"requestRanges\",\n          value: function requestRanges() {\n            var ranges = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var chunksToRequest = [];\n\n            var _iterator10 = _createForOfIteratorHelper(ranges),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var range = _step10.value;\n                var beginChunk = this.getBeginChunk(range.begin);\n                var endChunk = this.getEndChunk(range.end);\n\n                for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n                  if (!chunksToRequest.includes(chunk)) {\n                    chunksToRequest.push(chunk);\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            chunksToRequest.sort(function (a, b) {\n              return a - b;\n            });\n            return this._requestChunks(chunksToRequest);\n          }\n        }, {\n          key: \"groupChunks\",\n          value: function groupChunks(chunks) {\n            var groupedChunks = [];\n            var beginChunk = -1;\n            var prevChunk = -1;\n\n            for (var i = 0, ii = chunks.length; i < ii; ++i) {\n              var chunk = chunks[i];\n\n              if (beginChunk < 0) {\n                beginChunk = chunk;\n              }\n\n              if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n                groupedChunks.push({\n                  beginChunk: beginChunk,\n                  endChunk: prevChunk + 1\n                });\n                beginChunk = chunk;\n              }\n\n              if (i + 1 === chunks.length) {\n                groupedChunks.push({\n                  beginChunk: beginChunk,\n                  endChunk: chunk + 1\n                });\n              }\n\n              prevChunk = chunk;\n            }\n\n            return groupedChunks;\n          }\n        }, {\n          key: \"onProgress\",\n          value: function onProgress(args) {\n            this.msgHandler.send(\"DocProgress\", {\n              loaded: this.stream.numChunksLoaded * this.chunkSize + args.loaded,\n              total: this.length\n            });\n          }\n        }, {\n          key: \"onReceiveData\",\n          value: function onReceiveData(args) {\n            var chunk = args.chunk;\n            var isProgressive = args.begin === undefined;\n            var begin = isProgressive ? this.progressiveDataLength : args.begin;\n            var end = begin + chunk.byteLength;\n            var beginChunk = Math.floor(begin / this.chunkSize);\n            var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\n            if (isProgressive) {\n              this.stream.onReceiveProgressiveData(chunk);\n              this.progressiveDataLength = end;\n            } else {\n              this.stream.onReceiveData(begin, chunk);\n            }\n\n            if (this.stream.allChunksLoaded()) {\n              this._loadedStreamCapability.resolve(this.stream);\n            }\n\n            var loadedRequests = [];\n\n            for (var curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n              var requestIds = this._requestsByChunk.get(curChunk);\n\n              if (!requestIds) {\n                continue;\n              }\n\n              this._requestsByChunk.delete(curChunk);\n\n              var _iterator11 = _createForOfIteratorHelper(requestIds),\n                  _step11;\n\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var requestId = _step11.value;\n\n                  var chunksNeeded = this._chunksNeededByRequest.get(requestId);\n\n                  if (chunksNeeded.has(curChunk)) {\n                    chunksNeeded.delete(curChunk);\n                  }\n\n                  if (chunksNeeded.size > 0) {\n                    continue;\n                  }\n\n                  loadedRequests.push(requestId);\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n            }\n\n            if (!this.disableAutoFetch && this._requestsByChunk.size === 0) {\n              var nextEmptyChunk;\n\n              if (this.stream.numChunksLoaded === 1) {\n                var lastChunk = this.stream.numChunks - 1;\n\n                if (!this.stream.hasChunk(lastChunk)) {\n                  nextEmptyChunk = lastChunk;\n                }\n              } else {\n                nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n              }\n\n              if (Number.isInteger(nextEmptyChunk)) {\n                this._requestChunks([nextEmptyChunk]);\n              }\n            }\n\n            for (var _i7 = 0, _loadedRequests = loadedRequests; _i7 < _loadedRequests.length; _i7++) {\n              var _requestId = _loadedRequests[_i7];\n\n              var capability = this._promisesByRequest.get(_requestId);\n\n              this._promisesByRequest.delete(_requestId);\n\n              capability.resolve();\n            }\n\n            this.msgHandler.send(\"DocProgress\", {\n              loaded: this.stream.numChunksLoaded * this.chunkSize,\n              total: this.length\n            });\n          }\n        }, {\n          key: \"onError\",\n          value: function onError(err) {\n            this._loadedStreamCapability.reject(err);\n          }\n        }, {\n          key: \"getBeginChunk\",\n          value: function getBeginChunk(begin) {\n            return Math.floor(begin / this.chunkSize);\n          }\n        }, {\n          key: \"getEndChunk\",\n          value: function getEndChunk(end) {\n            return Math.floor((end - 1) / this.chunkSize) + 1;\n          }\n        }, {\n          key: \"abort\",\n          value: function abort(reason) {\n            this.aborted = true;\n\n            if (this.pdfNetworkStream) {\n              this.pdfNetworkStream.cancelAllRequests(reason);\n            }\n\n            var _iterator12 = _createForOfIteratorHelper(this._promisesByRequest.values()),\n                _step12;\n\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var capability = _step12.value;\n                capability.reject(reason);\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n          }\n        }]);\n\n        return ChunkedStreamManager;\n      }();\n\n      exports.ChunkedStreamManager = ChunkedStreamManager;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getLookupTableFactory = getLookupTableFactory;\n      exports.getInheritableProperty = getInheritableProperty;\n      exports.toRomanNumerals = toRomanNumerals;\n      exports.log2 = log2;\n      exports.readInt8 = readInt8;\n      exports.readUint16 = readUint16;\n      exports.readUint32 = readUint32;\n      exports.isWhiteSpace = isWhiteSpace;\n      exports.XRefParseException = exports.XRefEntryException = exports.MissingDataException = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      function getLookupTableFactory(initializer) {\n        var lookup;\n        return function () {\n          if (initializer) {\n            lookup = Object.create(null);\n            initializer(lookup);\n            initializer = null;\n          }\n\n          return lookup;\n        };\n      }\n\n      var MissingDataException = /*#__PURE__*/function (_util$BaseException) {\n        _inherits(MissingDataException, _util$BaseException);\n\n        var _super10 = _createSuper(MissingDataException);\n\n        function MissingDataException(begin, end) {\n          var _this9;\n\n          _classCallCheck(this, MissingDataException);\n\n          _this9 = _super10.call(this, \"Missing data [\".concat(begin, \", \").concat(end, \")\"));\n          _this9.begin = begin;\n          _this9.end = end;\n          return _this9;\n        }\n\n        return MissingDataException;\n      }(_util.BaseException);\n\n      exports.MissingDataException = MissingDataException;\n\n      var XRefEntryException = /*#__PURE__*/function (_util$BaseException2) {\n        _inherits(XRefEntryException, _util$BaseException2);\n\n        var _super11 = _createSuper(XRefEntryException);\n\n        function XRefEntryException() {\n          _classCallCheck(this, XRefEntryException);\n\n          return _super11.apply(this, arguments);\n        }\n\n        return XRefEntryException;\n      }(_util.BaseException);\n\n      exports.XRefEntryException = XRefEntryException;\n\n      var XRefParseException = /*#__PURE__*/function (_util$BaseException3) {\n        _inherits(XRefParseException, _util$BaseException3);\n\n        var _super12 = _createSuper(XRefParseException);\n\n        function XRefParseException() {\n          _classCallCheck(this, XRefParseException);\n\n          return _super12.apply(this, arguments);\n        }\n\n        return XRefParseException;\n      }(_util.BaseException);\n\n      exports.XRefParseException = XRefParseException;\n\n      function getInheritableProperty(_ref11) {\n        var dict = _ref11.dict,\n            key = _ref11.key,\n            _ref11$getArray = _ref11.getArray,\n            getArray = _ref11$getArray === void 0 ? false : _ref11$getArray,\n            _ref11$stopWhenFound = _ref11.stopWhenFound,\n            stopWhenFound = _ref11$stopWhenFound === void 0 ? true : _ref11$stopWhenFound;\n        var LOOP_LIMIT = 100;\n        var loopCount = 0;\n        var values;\n\n        while (dict) {\n          var value = getArray ? dict.getArray(key) : dict.get(key);\n\n          if (value !== undefined) {\n            if (stopWhenFound) {\n              return value;\n            }\n\n            if (!values) {\n              values = [];\n            }\n\n            values.push(value);\n          }\n\n          if (++loopCount > LOOP_LIMIT) {\n            (0, _util.warn)(\"getInheritableProperty: maximum loop count exceeded for \\\"\".concat(key, \"\\\"\"));\n            break;\n          }\n\n          dict = dict.get(\"Parent\");\n        }\n\n        return values;\n      }\n\n      var ROMAN_NUMBER_MAP = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\", \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\", \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\n\n      function toRomanNumerals(number) {\n        var lowerCase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        (0, _util.assert)(Number.isInteger(number) && number > 0, \"The number should be a positive integer.\");\n        var romanBuf = [];\n        var pos;\n\n        while (number >= 1000) {\n          number -= 1000;\n          romanBuf.push(\"M\");\n        }\n\n        pos = number / 100 | 0;\n        number %= 100;\n        romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n        pos = number / 10 | 0;\n        number %= 10;\n        romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n        romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n        var romanStr = romanBuf.join(\"\");\n        return lowerCase ? romanStr.toLowerCase() : romanStr;\n      }\n\n      function log2(x) {\n        if (x <= 0) {\n          return 0;\n        }\n\n        return Math.ceil(Math.log2(x));\n      }\n\n      function readInt8(data, offset) {\n        return data[offset] << 24 >> 24;\n      }\n\n      function readUint16(data, offset) {\n        return data[offset] << 8 | data[offset + 1];\n      }\n\n      function readUint32(data, offset) {\n        return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n      }\n\n      function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n      }\n      /***/\n\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDocument = exports.Page = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _obj = __w_pdfjs_require__(10);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _annotation = __w_pdfjs_require__(25);\n\n      var _crypto = __w_pdfjs_require__(22);\n\n      var _parser = __w_pdfjs_require__(11);\n\n      var _operator_list = __w_pdfjs_require__(26);\n\n      var _evaluator = __w_pdfjs_require__(28);\n\n      var DEFAULT_USER_UNIT = 1.0;\n      var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n\n      function isAnnotationRenderable(annotation, intent) {\n        return intent === \"display\" && annotation.viewable || intent === \"print\" && annotation.printable;\n      }\n\n      var Page = /*#__PURE__*/function () {\n        function Page(_ref12) {\n          var pdfManager = _ref12.pdfManager,\n              xref = _ref12.xref,\n              pageIndex = _ref12.pageIndex,\n              pageDict = _ref12.pageDict,\n              ref = _ref12.ref,\n              globalIdFactory = _ref12.globalIdFactory,\n              fontCache = _ref12.fontCache,\n              builtInCMapCache = _ref12.builtInCMapCache,\n              globalImageCache = _ref12.globalImageCache;\n\n          _classCallCheck(this, Page);\n\n          this.pdfManager = pdfManager;\n          this.pageIndex = pageIndex;\n          this.pageDict = pageDict;\n          this.xref = xref;\n          this.ref = ref;\n          this.fontCache = fontCache;\n          this.builtInCMapCache = builtInCMapCache;\n          this.globalImageCache = globalImageCache;\n          this.evaluatorOptions = pdfManager.evaluatorOptions;\n          this.resourcesPromise = null;\n          var idCounters = {\n            obj: 0\n          };\n\n          this._localIdFactory = /*#__PURE__*/function (_globalIdFactory) {\n            _inherits(_class, _globalIdFactory);\n\n            var _super13 = _createSuper(_class);\n\n            function _class() {\n              _classCallCheck(this, _class);\n\n              return _super13.apply(this, arguments);\n            }\n\n            _createClass(_class, null, [{\n              key: \"createObjId\",\n              value: function createObjId() {\n                return \"p\".concat(pageIndex, \"_\").concat(++idCounters.obj);\n              }\n            }]);\n\n            return _class;\n          }(globalIdFactory);\n        }\n\n        _createClass(Page, [{\n          key: \"_getInheritableProperty\",\n          value: function _getInheritableProperty(key) {\n            var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var value = (0, _core_utils.getInheritableProperty)({\n              dict: this.pageDict,\n              key: key,\n              getArray: getArray,\n              stopWhenFound: false\n            });\n\n            if (!Array.isArray(value)) {\n              return value;\n            }\n\n            if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n              return value[0];\n            }\n\n            return _primitives.Dict.merge({\n              xref: this.xref,\n              dictArray: value\n            });\n          }\n        }, {\n          key: \"content\",\n          get: function get() {\n            return this.pageDict.get(\"Contents\");\n          }\n        }, {\n          key: \"resources\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"resources\", this._getInheritableProperty(\"Resources\") || _primitives.Dict.empty);\n          }\n        }, {\n          key: \"_getBoundingBox\",\n          value: function _getBoundingBox(name) {\n            var box = this._getInheritableProperty(name, true);\n\n            if (Array.isArray(box) && box.length === 4) {\n              if (box[2] - box[0] !== 0 && box[3] - box[1] !== 0) {\n                return box;\n              }\n\n              (0, _util.warn)(\"Empty /\".concat(name, \" entry.\"));\n            }\n\n            return null;\n          }\n        }, {\n          key: \"mediaBox\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"mediaBox\", this._getBoundingBox(\"MediaBox\") || LETTER_SIZE_MEDIABOX);\n          }\n        }, {\n          key: \"cropBox\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"cropBox\", this._getBoundingBox(\"CropBox\") || this.mediaBox);\n          }\n        }, {\n          key: \"userUnit\",\n          get: function get() {\n            var obj = this.pageDict.get(\"UserUnit\");\n\n            if (!(0, _util.isNum)(obj) || obj <= 0) {\n              obj = DEFAULT_USER_UNIT;\n            }\n\n            return (0, _util.shadow)(this, \"userUnit\", obj);\n          }\n        }, {\n          key: \"view\",\n          get: function get() {\n            var cropBox = this.cropBox,\n                mediaBox = this.mediaBox;\n            var view;\n\n            if (cropBox === mediaBox || (0, _util.isArrayEqual)(cropBox, mediaBox)) {\n              view = mediaBox;\n            } else {\n              var box = _util.Util.intersect(cropBox, mediaBox);\n\n              if (box && box[2] - box[0] !== 0 && box[3] - box[1] !== 0) {\n                view = box;\n              } else {\n                (0, _util.warn)(\"Empty /CropBox and /MediaBox intersection.\");\n              }\n            }\n\n            return (0, _util.shadow)(this, \"view\", view || mediaBox);\n          }\n        }, {\n          key: \"rotate\",\n          get: function get() {\n            var rotate = this._getInheritableProperty(\"Rotate\") || 0;\n\n            if (rotate % 90 !== 0) {\n              rotate = 0;\n            } else if (rotate >= 360) {\n              rotate = rotate % 360;\n            } else if (rotate < 0) {\n              rotate = (rotate % 360 + 360) % 360;\n            }\n\n            return (0, _util.shadow)(this, \"rotate\", rotate);\n          }\n        }, {\n          key: \"getContentStream\",\n          value: function getContentStream() {\n            var content = this.content;\n            var stream;\n\n            if (Array.isArray(content)) {\n              var xref = this.xref;\n              var streams = [];\n\n              var _iterator13 = _createForOfIteratorHelper(content),\n                  _step13;\n\n              try {\n                for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                  var subStream = _step13.value;\n                  streams.push(xref.fetchIfRef(subStream));\n                }\n              } catch (err) {\n                _iterator13.e(err);\n              } finally {\n                _iterator13.f();\n              }\n\n              stream = new _stream.StreamsSequenceStream(streams);\n            } else if ((0, _primitives.isStream)(content)) {\n              stream = content;\n            } else {\n              stream = new _stream.NullStream();\n            }\n\n            return stream;\n          }\n        }, {\n          key: \"save\",\n          value: function save(handler, task, annotationStorage) {\n            var partialEvaluator = new _evaluator.PartialEvaluator({\n              xref: this.xref,\n              handler: handler,\n              pageIndex: this.pageIndex,\n              idFactory: this._localIdFactory,\n              fontCache: this.fontCache,\n              builtInCMapCache: this.builtInCMapCache,\n              globalImageCache: this.globalImageCache,\n              options: this.evaluatorOptions\n            });\n            return this._parsedAnnotations.then(function (annotations) {\n              var newRefsPromises = [];\n\n              var _iterator14 = _createForOfIteratorHelper(annotations),\n                  _step14;\n\n              try {\n                for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                  var annotation = _step14.value;\n\n                  if (!isAnnotationRenderable(annotation, \"print\")) {\n                    continue;\n                  }\n\n                  newRefsPromises.push(annotation.save(partialEvaluator, task, annotationStorage).catch(function (reason) {\n                    (0, _util.warn)(\"save - ignoring annotation data during \" + \"\\\"\".concat(task.name, \"\\\" task: \\\"\").concat(reason, \"\\\".\"));\n                    return null;\n                  }));\n                }\n              } catch (err) {\n                _iterator14.e(err);\n              } finally {\n                _iterator14.f();\n              }\n\n              return Promise.all(newRefsPromises);\n            });\n          }\n        }, {\n          key: \"loadResources\",\n          value: function loadResources(keys) {\n            var _this10 = this;\n\n            if (!this.resourcesPromise) {\n              this.resourcesPromise = this.pdfManager.ensure(this, \"resources\");\n            }\n\n            return this.resourcesPromise.then(function () {\n              var objectLoader = new _obj.ObjectLoader(_this10.resources, keys, _this10.xref);\n              return objectLoader.load();\n            });\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList(_ref13) {\n            var _this11 = this;\n\n            var handler = _ref13.handler,\n                sink = _ref13.sink,\n                task = _ref13.task,\n                intent = _ref13.intent,\n                renderInteractiveForms = _ref13.renderInteractiveForms,\n                annotationStorage = _ref13.annotationStorage;\n            var contentStreamPromise = this.pdfManager.ensure(this, \"getContentStream\");\n            var resourcesPromise = this.loadResources([\"ExtGState\", \"ColorSpace\", \"Pattern\", \"Shading\", \"XObject\", \"Font\"]);\n            var partialEvaluator = new _evaluator.PartialEvaluator({\n              xref: this.xref,\n              handler: handler,\n              pageIndex: this.pageIndex,\n              idFactory: this._localIdFactory,\n              fontCache: this.fontCache,\n              builtInCMapCache: this.builtInCMapCache,\n              globalImageCache: this.globalImageCache,\n              options: this.evaluatorOptions\n            });\n            var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n            var pageListPromise = dataPromises.then(function (_ref14) {\n              var _ref15 = _slicedToArray(_ref14, 1),\n                  contentStream = _ref15[0];\n\n              var opList = new _operator_list.OperatorList(intent, sink);\n              handler.send(\"StartRenderPage\", {\n                transparency: partialEvaluator.hasBlendModes(_this11.resources),\n                pageIndex: _this11.pageIndex,\n                intent: intent\n              });\n              return partialEvaluator.getOperatorList({\n                stream: contentStream,\n                task: task,\n                resources: _this11.resources,\n                operatorList: opList\n              }).then(function () {\n                return opList;\n              });\n            });\n            return Promise.all([pageListPromise, this._parsedAnnotations]).then(function (_ref16) {\n              var _ref17 = _slicedToArray(_ref16, 2),\n                  pageOpList = _ref17[0],\n                  annotations = _ref17[1];\n\n              if (annotations.length === 0) {\n                pageOpList.flush(true);\n                return {\n                  length: pageOpList.totalLength\n                };\n              }\n\n              var opListPromises = [];\n\n              var _iterator15 = _createForOfIteratorHelper(annotations),\n                  _step15;\n\n              try {\n                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                  var annotation = _step15.value;\n\n                  if (isAnnotationRenderable(annotation, intent)) {\n                    opListPromises.push(annotation.getOperatorList(partialEvaluator, task, renderInteractiveForms, annotationStorage).catch(function (reason) {\n                      (0, _util.warn)(\"getOperatorList - ignoring annotation data during \" + \"\\\"\".concat(task.name, \"\\\" task: \\\"\").concat(reason, \"\\\".\"));\n                      return null;\n                    }));\n                  }\n                }\n              } catch (err) {\n                _iterator15.e(err);\n              } finally {\n                _iterator15.f();\n              }\n\n              return Promise.all(opListPromises).then(function (opLists) {\n                pageOpList.addOp(_util.OPS.beginAnnotations, []);\n\n                var _iterator16 = _createForOfIteratorHelper(opLists),\n                    _step16;\n\n                try {\n                  for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                    var opList = _step16.value;\n                    pageOpList.addOpList(opList);\n                  }\n                } catch (err) {\n                  _iterator16.e(err);\n                } finally {\n                  _iterator16.f();\n                }\n\n                pageOpList.addOp(_util.OPS.endAnnotations, []);\n                pageOpList.flush(true);\n                return {\n                  length: pageOpList.totalLength\n                };\n              });\n            });\n          }\n        }, {\n          key: \"extractTextContent\",\n          value: function extractTextContent(_ref18) {\n            var _this12 = this;\n\n            var handler = _ref18.handler,\n                task = _ref18.task,\n                normalizeWhitespace = _ref18.normalizeWhitespace,\n                sink = _ref18.sink,\n                combineTextItems = _ref18.combineTextItems;\n            var contentStreamPromise = this.pdfManager.ensure(this, \"getContentStream\");\n            var resourcesPromise = this.loadResources([\"ExtGState\", \"XObject\", \"Font\"]);\n            var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n            return dataPromises.then(function (_ref19) {\n              var _ref20 = _slicedToArray(_ref19, 1),\n                  contentStream = _ref20[0];\n\n              var partialEvaluator = new _evaluator.PartialEvaluator({\n                xref: _this12.xref,\n                handler: handler,\n                pageIndex: _this12.pageIndex,\n                idFactory: _this12._localIdFactory,\n                fontCache: _this12.fontCache,\n                builtInCMapCache: _this12.builtInCMapCache,\n                globalImageCache: _this12.globalImageCache,\n                options: _this12.evaluatorOptions\n              });\n              return partialEvaluator.getTextContent({\n                stream: contentStream,\n                task: task,\n                resources: _this12.resources,\n                normalizeWhitespace: normalizeWhitespace,\n                combineTextItems: combineTextItems,\n                sink: sink\n              });\n            });\n          }\n        }, {\n          key: \"getAnnotationsData\",\n          value: function getAnnotationsData(intent) {\n            return this._parsedAnnotations.then(function (annotations) {\n              var annotationsData = [];\n\n              for (var i = 0, ii = annotations.length; i < ii; i++) {\n                if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n                  annotationsData.push(annotations[i].data);\n                }\n              }\n\n              return annotationsData;\n            });\n          }\n        }, {\n          key: \"annotations\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"annotations\", this._getInheritableProperty(\"Annots\") || []);\n          }\n        }, {\n          key: \"_parsedAnnotations\",\n          get: function get() {\n            var _this13 = this;\n\n            var parsedAnnotations = this.pdfManager.ensure(this, \"annotations\").then(function () {\n              var annotationPromises = [];\n\n              var _iterator17 = _createForOfIteratorHelper(_this13.annotations),\n                  _step17;\n\n              try {\n                for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                  var annotationRef = _step17.value;\n                  annotationPromises.push(_annotation.AnnotationFactory.create(_this13.xref, annotationRef, _this13.pdfManager, _this13._localIdFactory).catch(function (reason) {\n                    (0, _util.warn)(\"_parsedAnnotations: \\\"\".concat(reason, \"\\\".\"));\n                    return null;\n                  }));\n                }\n              } catch (err) {\n                _iterator17.e(err);\n              } finally {\n                _iterator17.f();\n              }\n\n              return Promise.all(annotationPromises).then(function (annotations) {\n                return annotations.filter(function (annotation) {\n                  return !!annotation;\n                });\n              });\n            });\n            return (0, _util.shadow)(this, \"_parsedAnnotations\", parsedAnnotations);\n          }\n        }]);\n\n        return Page;\n      }();\n\n      exports.Page = Page;\n      var PDF_HEADER_SIGNATURE = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n      var STARTXREF_SIGNATURE = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n      var ENDOBJ_SIGNATURE = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n      var FINGERPRINT_FIRST_BYTES = 1024;\n      var EMPTY_FINGERPRINT = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n      var PDF_HEADER_VERSION_REGEXP = /^[1-9]\\.[0-9]$/;\n\n      function find(stream, signature) {\n        var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1024;\n        var backwards = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n\n        if (scanLength <= 0) {\n          return false;\n        }\n\n        if (backwards) {\n          var signatureEnd = signatureLength - 1;\n          var pos = scanBytes.length - 1;\n\n          while (pos >= signatureEnd) {\n            var j = 0;\n\n            while (j < signatureLength && scanBytes[pos - j] === signature[signatureEnd - j]) {\n              j++;\n            }\n\n            if (j >= signatureLength) {\n              stream.pos += pos - signatureEnd;\n              return true;\n            }\n\n            pos--;\n          }\n        } else {\n          var _pos = 0;\n\n          while (_pos <= scanLength) {\n            var _j = 0;\n\n            while (_j < signatureLength && scanBytes[_pos + _j] === signature[_j]) {\n              _j++;\n            }\n\n            if (_j >= signatureLength) {\n              stream.pos += _pos;\n              return true;\n            }\n\n            _pos++;\n          }\n        }\n\n        return false;\n      }\n\n      var PDFDocument = /*#__PURE__*/function () {\n        function PDFDocument(pdfManager, arg) {\n          _classCallCheck(this, PDFDocument);\n\n          var stream;\n\n          if ((0, _primitives.isStream)(arg)) {\n            stream = arg;\n          } else if ((0, _util.isArrayBuffer)(arg)) {\n            stream = new _stream.Stream(arg);\n          } else {\n            throw new Error(\"PDFDocument: Unknown argument type\");\n          }\n\n          if (stream.length <= 0) {\n            throw new _util.InvalidPDFException(\"The PDF file is empty, i.e. its size is zero bytes.\");\n          }\n\n          this.pdfManager = pdfManager;\n          this.stream = stream;\n          this.xref = new _obj.XRef(stream, pdfManager);\n          this._pagePromises = [];\n          this._version = null;\n          var idCounters = {\n            font: 0\n          };\n\n          this._globalIdFactory = /*#__PURE__*/function () {\n            function _class2() {\n              _classCallCheck(this, _class2);\n            }\n\n            _createClass(_class2, null, [{\n              key: \"getDocId\",\n              value: function getDocId() {\n                return \"g_\".concat(pdfManager.docId);\n              }\n            }, {\n              key: \"createFontId\",\n              value: function createFontId() {\n                return \"f\".concat(++idCounters.font);\n              }\n            }, {\n              key: \"createObjId\",\n              value: function createObjId() {\n                (0, _util.unreachable)(\"Abstract method `createObjId` called.\");\n              }\n            }]);\n\n            return _class2;\n          }();\n        }\n\n        _createClass(PDFDocument, [{\n          key: \"parse\",\n          value: function parse(recoveryMode) {\n            this.xref.parse(recoveryMode);\n            this.catalog = new _obj.Catalog(this.pdfManager, this.xref);\n\n            if (this.catalog.version) {\n              this._version = this.catalog.version;\n            }\n          }\n        }, {\n          key: \"linearization\",\n          get: function get() {\n            var linearization = null;\n\n            try {\n              linearization = _parser.Linearization.create(this.stream);\n            } catch (err) {\n              if (err instanceof _core_utils.MissingDataException) {\n                throw err;\n              }\n\n              (0, _util.info)(err);\n            }\n\n            return (0, _util.shadow)(this, \"linearization\", linearization);\n          }\n        }, {\n          key: \"startXRef\",\n          get: function get() {\n            var stream = this.stream;\n            var startXRef = 0;\n\n            if (this.linearization) {\n              stream.reset();\n\n              if (find(stream, ENDOBJ_SIGNATURE)) {\n                startXRef = stream.pos + 6 - stream.start;\n              }\n            } else {\n              var step = 1024;\n              var startXRefLength = STARTXREF_SIGNATURE.length;\n              var found = false,\n                  pos = stream.end;\n\n              while (!found && pos > 0) {\n                pos -= step - startXRefLength;\n\n                if (pos < 0) {\n                  pos = 0;\n                }\n\n                stream.pos = pos;\n                found = find(stream, STARTXREF_SIGNATURE, step, true);\n              }\n\n              if (found) {\n                stream.skip(9);\n                var ch;\n\n                do {\n                  ch = stream.getByte();\n                } while ((0, _core_utils.isWhiteSpace)(ch));\n\n                var str = \"\";\n\n                while (ch >= 0x20 && ch <= 0x39) {\n                  str += String.fromCharCode(ch);\n                  ch = stream.getByte();\n                }\n\n                startXRef = parseInt(str, 10);\n\n                if (isNaN(startXRef)) {\n                  startXRef = 0;\n                }\n              }\n            }\n\n            return (0, _util.shadow)(this, \"startXRef\", startXRef);\n          }\n        }, {\n          key: \"checkHeader\",\n          value: function checkHeader() {\n            var stream = this.stream;\n            stream.reset();\n\n            if (!find(stream, PDF_HEADER_SIGNATURE)) {\n              return;\n            }\n\n            stream.moveStart();\n            var MAX_PDF_VERSION_LENGTH = 12;\n            var version = \"\",\n                ch;\n\n            while ((ch = stream.getByte()) > 0x20) {\n              if (version.length >= MAX_PDF_VERSION_LENGTH) {\n                break;\n              }\n\n              version += String.fromCharCode(ch);\n            }\n\n            if (!this._version) {\n              this._version = version.substring(5);\n            }\n          }\n        }, {\n          key: \"parseStartXRef\",\n          value: function parseStartXRef() {\n            this.xref.setStartXRef(this.startXRef);\n          }\n        }, {\n          key: \"numPages\",\n          get: function get() {\n            var linearization = this.linearization;\n            var num = linearization ? linearization.numPages : this.catalog.numPages;\n            return (0, _util.shadow)(this, \"numPages\", num);\n          }\n        }, {\n          key: \"_hasOnlyDocumentSignatures\",\n          value: function _hasOnlyDocumentSignatures(fields) {\n            var _this14 = this;\n\n            var recursionDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var RECURSION_LIMIT = 10;\n            return fields.every(function (field) {\n              field = _this14.xref.fetchIfRef(field);\n\n              if (field.has(\"Kids\")) {\n                if (++recursionDepth > RECURSION_LIMIT) {\n                  (0, _util.warn)(\"_hasOnlyDocumentSignatures: maximum recursion depth reached\");\n                  return false;\n                }\n\n                return _this14._hasOnlyDocumentSignatures(field.get(\"Kids\"), recursionDepth);\n              }\n\n              var isSignature = (0, _primitives.isName)(field.get(\"FT\"), \"Sig\");\n              var rectangle = field.get(\"Rect\");\n              var isInvisible = Array.isArray(rectangle) && rectangle.every(function (value) {\n                return value === 0;\n              });\n              return isSignature && isInvisible;\n            });\n          }\n        }, {\n          key: \"formInfo\",\n          get: function get() {\n            var formInfo = {\n              hasAcroForm: false,\n              hasXfa: false\n            };\n            var acroForm = this.catalog.acroForm;\n\n            if (!acroForm) {\n              return (0, _util.shadow)(this, \"formInfo\", formInfo);\n            }\n\n            try {\n              var xfa = acroForm.get(\"XFA\");\n              var hasXfa = Array.isArray(xfa) && xfa.length > 0 || (0, _primitives.isStream)(xfa) && !xfa.isEmpty;\n              formInfo.hasXfa = hasXfa;\n              var fields = acroForm.get(\"Fields\");\n              var hasFields = Array.isArray(fields) && fields.length > 0;\n              var sigFlags = acroForm.get(\"SigFlags\");\n\n              var hasOnlyDocumentSignatures = !!(sigFlags & 0x1) && this._hasOnlyDocumentSignatures(fields);\n\n              formInfo.hasAcroForm = hasFields && !hasOnlyDocumentSignatures;\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.info)(\"Cannot fetch form information.\");\n            }\n\n            return (0, _util.shadow)(this, \"formInfo\", formInfo);\n          }\n        }, {\n          key: \"documentInfo\",\n          get: function get() {\n            var DocumentInfoValidators = {\n              Title: _util.isString,\n              Author: _util.isString,\n              Subject: _util.isString,\n              Keywords: _util.isString,\n              Creator: _util.isString,\n              Producer: _util.isString,\n              CreationDate: _util.isString,\n              ModDate: _util.isString,\n              Trapped: _primitives.isName\n            };\n            var version = this._version;\n\n            if (typeof version !== \"string\" || !PDF_HEADER_VERSION_REGEXP.test(version)) {\n              (0, _util.warn)(\"Invalid PDF header version number: \".concat(version));\n              version = null;\n            }\n\n            var docInfo = {\n              PDFFormatVersion: version,\n              IsLinearized: !!this.linearization,\n              IsAcroFormPresent: this.formInfo.hasAcroForm,\n              IsXFAPresent: this.formInfo.hasXfa,\n              IsCollectionPresent: !!this.catalog.collection\n            };\n            var infoDict;\n\n            try {\n              infoDict = this.xref.trailer.get(\"Info\");\n            } catch (err) {\n              if (err instanceof _core_utils.MissingDataException) {\n                throw err;\n              }\n\n              (0, _util.info)(\"The document information dictionary is invalid.\");\n            }\n\n            if ((0, _primitives.isDict)(infoDict)) {\n              var _iterator18 = _createForOfIteratorHelper(infoDict.getKeys()),\n                  _step18;\n\n              try {\n                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                  var key = _step18.value;\n                  var value = infoDict.get(key);\n\n                  if (DocumentInfoValidators[key]) {\n                    if (DocumentInfoValidators[key](value)) {\n                      docInfo[key] = typeof value !== \"string\" ? value : (0, _util.stringToPDFString)(value);\n                    } else {\n                      (0, _util.info)(\"Bad value in document info for \\\"\".concat(key, \"\\\".\"));\n                    }\n                  } else if (typeof key === \"string\") {\n                    var customValue = void 0;\n\n                    if ((0, _util.isString)(value)) {\n                      customValue = (0, _util.stringToPDFString)(value);\n                    } else if ((0, _primitives.isName)(value) || (0, _util.isNum)(value) || (0, _util.isBool)(value)) {\n                      customValue = value;\n                    } else {\n                      (0, _util.info)(\"Unsupported value in document info for (custom) \\\"\".concat(key, \"\\\".\"));\n                      continue;\n                    }\n\n                    if (!docInfo.Custom) {\n                      docInfo.Custom = Object.create(null);\n                    }\n\n                    docInfo.Custom[key] = customValue;\n                  }\n                }\n              } catch (err) {\n                _iterator18.e(err);\n              } finally {\n                _iterator18.f();\n              }\n            }\n\n            return (0, _util.shadow)(this, \"documentInfo\", docInfo);\n          }\n        }, {\n          key: \"fingerprint\",\n          get: function get() {\n            var hash;\n            var idArray = this.xref.trailer.get(\"ID\");\n\n            if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n              hash = (0, _util.stringToBytes)(idArray[0]);\n            } else {\n              hash = (0, _crypto.calculateMD5)(this.stream.getByteRange(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n            }\n\n            var fingerprintBuf = [];\n\n            for (var i = 0, ii = hash.length; i < ii; i++) {\n              var hex = hash[i].toString(16);\n              fingerprintBuf.push(hex.padStart(2, \"0\"));\n            }\n\n            return (0, _util.shadow)(this, \"fingerprint\", fingerprintBuf.join(\"\"));\n          }\n        }, {\n          key: \"_getLinearizationPage\",\n          value: function _getLinearizationPage(pageIndex) {\n            var catalog = this.catalog,\n                linearization = this.linearization;\n\n            var ref = _primitives.Ref.get(linearization.objectNumberFirst, 0);\n\n            return this.xref.fetchAsync(ref).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, \"Page\") || (0, _primitives.isDict)(obj) && !obj.has(\"Type\") && obj.has(\"Contents\")) {\n                if (ref && !catalog.pageKidsCountCache.has(ref)) {\n                  catalog.pageKidsCountCache.put(ref, 1);\n                }\n\n                return [obj, ref];\n              }\n\n              throw new _util.FormatError(\"The Linearization dictionary doesn't point \" + \"to a valid Page dictionary.\");\n            }).catch(function (reason) {\n              (0, _util.info)(reason);\n              return catalog.getPageDict(pageIndex);\n            });\n          }\n        }, {\n          key: \"getPage\",\n          value: function getPage(pageIndex) {\n            var _this15 = this;\n\n            if (this._pagePromises[pageIndex] !== undefined) {\n              return this._pagePromises[pageIndex];\n            }\n\n            var catalog = this.catalog,\n                linearization = this.linearization;\n            var promise = linearization && linearization.pageFirst === pageIndex ? this._getLinearizationPage(pageIndex) : catalog.getPageDict(pageIndex);\n            return this._pagePromises[pageIndex] = promise.then(function (_ref21) {\n              var _ref22 = _slicedToArray(_ref21, 2),\n                  pageDict = _ref22[0],\n                  ref = _ref22[1];\n\n              return new Page({\n                pdfManager: _this15.pdfManager,\n                xref: _this15.xref,\n                pageIndex: pageIndex,\n                pageDict: pageDict,\n                ref: ref,\n                globalIdFactory: _this15._globalIdFactory,\n                fontCache: catalog.fontCache,\n                builtInCMapCache: catalog.builtInCMapCache,\n                globalImageCache: catalog.globalImageCache\n              });\n            });\n          }\n        }, {\n          key: \"checkFirstPage\",\n          value: function checkFirstPage() {\n            var _this16 = this;\n\n            return this.getPage(0).catch( /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(reason) {\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(reason instanceof _core_utils.XRefEntryException)) {\n                          _context6.next = 5;\n                          break;\n                        }\n\n                        _this16._pagePromises.length = 0;\n                        _context6.next = 4;\n                        return _this16.cleanup();\n\n                      case 4:\n                        throw new _core_utils.XRefParseException();\n\n                      case 5:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x11) {\n                return _ref23.apply(this, arguments);\n              };\n            }());\n          }\n        }, {\n          key: \"fontFallback\",\n          value: function fontFallback(id, handler) {\n            return this.catalog.fontFallback(id, handler);\n          }\n        }, {\n          key: \"cleanup\",\n          value: function () {\n            var _cleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n              var manuallyTriggered,\n                  _args7 = arguments;\n              return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      manuallyTriggered = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : false;\n                      return _context7.abrupt(\"return\", this.catalog ? this.catalog.cleanup(manuallyTriggered) : (0, _primitives.clearPrimitiveCaches)());\n\n                    case 2:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7, this);\n            }));\n\n            function cleanup() {\n              return _cleanup.apply(this, arguments);\n            }\n\n            return cleanup;\n          }()\n        }]);\n\n        return PDFDocument;\n      }();\n\n      exports.PDFDocument = PDFDocument;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _parser = __w_pdfjs_require__(11);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _crypto = __w_pdfjs_require__(22);\n\n      var _colorspace = __w_pdfjs_require__(23);\n\n      var _image_utils = __w_pdfjs_require__(24);\n\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get(\"D\") : dest;\n      }\n\n      var Catalog = /*#__PURE__*/function () {\n        function Catalog(pdfManager, xref) {\n          _classCallCheck(this, Catalog);\n\n          this.pdfManager = pdfManager;\n          this.xref = xref;\n          this._catDict = xref.getCatalogObj();\n\n          if (!(0, _primitives.isDict)(this._catDict)) {\n            throw new _util.FormatError(\"Catalog object is not a dictionary.\");\n          }\n\n          this.fontCache = new _primitives.RefSetCache();\n          this.builtInCMapCache = new Map();\n          this.globalImageCache = new _image_utils.GlobalImageCache();\n          this.pageKidsCountCache = new _primitives.RefSetCache();\n        }\n\n        _createClass(Catalog, [{\n          key: \"version\",\n          get: function get() {\n            var version = this._catDict.get(\"Version\");\n\n            if (!(0, _primitives.isName)(version)) {\n              return (0, _util.shadow)(this, \"version\", null);\n            }\n\n            return (0, _util.shadow)(this, \"version\", version.name);\n          }\n        }, {\n          key: \"collection\",\n          get: function get() {\n            var collection = null;\n\n            try {\n              var obj = this._catDict.get(\"Collection\");\n\n              if ((0, _primitives.isDict)(obj) && obj.size > 0) {\n                collection = obj;\n              }\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.info)(\"Cannot fetch Collection entry; assuming no collection is present.\");\n            }\n\n            return (0, _util.shadow)(this, \"collection\", collection);\n          }\n        }, {\n          key: \"acroForm\",\n          get: function get() {\n            var acroForm = null;\n\n            try {\n              var obj = this._catDict.get(\"AcroForm\");\n\n              if ((0, _primitives.isDict)(obj) && obj.size > 0) {\n                acroForm = obj;\n              }\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.info)(\"Cannot fetch AcroForm entry; assuming no forms are present.\");\n            }\n\n            return (0, _util.shadow)(this, \"acroForm\", acroForm);\n          }\n        }, {\n          key: \"metadata\",\n          get: function get() {\n            var streamRef = this._catDict.getRaw(\"Metadata\");\n\n            if (!(0, _primitives.isRef)(streamRef)) {\n              return (0, _util.shadow)(this, \"metadata\", null);\n            }\n\n            var suppressEncryption = !(this.xref.encrypt && this.xref.encrypt.encryptMetadata);\n            var stream = this.xref.fetch(streamRef, suppressEncryption);\n            var metadata;\n\n            if (stream && (0, _primitives.isDict)(stream.dict)) {\n              var type = stream.dict.get(\"Type\");\n              var subtype = stream.dict.get(\"Subtype\");\n\n              if ((0, _primitives.isName)(type, \"Metadata\") && (0, _primitives.isName)(subtype, \"XML\")) {\n                try {\n                  metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n                } catch (e) {\n                  if (e instanceof _core_utils.MissingDataException) {\n                    throw e;\n                  }\n\n                  (0, _util.info)(\"Skipping invalid metadata.\");\n                }\n              }\n            }\n\n            return (0, _util.shadow)(this, \"metadata\", metadata);\n          }\n        }, {\n          key: \"toplevelPagesDict\",\n          get: function get() {\n            var pagesObj = this._catDict.get(\"Pages\");\n\n            if (!(0, _primitives.isDict)(pagesObj)) {\n              throw new _util.FormatError(\"Invalid top-level pages dictionary.\");\n            }\n\n            return (0, _util.shadow)(this, \"toplevelPagesDict\", pagesObj);\n          }\n        }, {\n          key: \"documentOutline\",\n          get: function get() {\n            var obj = null;\n\n            try {\n              obj = this._readDocumentOutline();\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Unable to read document outline.\");\n            }\n\n            return (0, _util.shadow)(this, \"documentOutline\", obj);\n          }\n        }, {\n          key: \"_readDocumentOutline\",\n          value: function _readDocumentOutline() {\n            var obj = this._catDict.get(\"Outlines\");\n\n            if (!(0, _primitives.isDict)(obj)) {\n              return null;\n            }\n\n            obj = obj.getRaw(\"First\");\n\n            if (!(0, _primitives.isRef)(obj)) {\n              return null;\n            }\n\n            var root = {\n              items: []\n            };\n            var queue = [{\n              obj: obj,\n              parent: root\n            }];\n            var processed = new _primitives.RefSet();\n            processed.put(obj);\n            var xref = this.xref,\n                blackColor = new Uint8ClampedArray(3);\n\n            while (queue.length > 0) {\n              var i = queue.shift();\n              var outlineDict = xref.fetchIfRef(i.obj);\n\n              if (outlineDict === null) {\n                continue;\n              }\n\n              if (!outlineDict.has(\"Title\")) {\n                throw new _util.FormatError(\"Invalid outline item encountered.\");\n              }\n\n              var data = {\n                url: null,\n                dest: null\n              };\n              Catalog.parseDestDictionary({\n                destDict: outlineDict,\n                resultObj: data,\n                docBaseUrl: this.pdfManager.docBaseUrl\n              });\n              var title = outlineDict.get(\"Title\");\n              var flags = outlineDict.get(\"F\") || 0;\n              var color = outlineDict.getArray(\"C\");\n              var count = outlineDict.get(\"Count\");\n              var rgbColor = blackColor;\n\n              if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n                rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n              }\n\n              var outlineItem = {\n                dest: data.dest,\n                url: data.url,\n                unsafeUrl: data.unsafeUrl,\n                newWindow: data.newWindow,\n                title: (0, _util.stringToPDFString)(title),\n                color: rgbColor,\n                count: Number.isInteger(count) ? count : undefined,\n                bold: !!(flags & 2),\n                italic: !!(flags & 1),\n                items: []\n              };\n              i.parent.items.push(outlineItem);\n              obj = outlineDict.getRaw(\"First\");\n\n              if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n                queue.push({\n                  obj: obj,\n                  parent: outlineItem\n                });\n                processed.put(obj);\n              }\n\n              obj = outlineDict.getRaw(\"Next\");\n\n              if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n                queue.push({\n                  obj: obj,\n                  parent: i.parent\n                });\n                processed.put(obj);\n              }\n            }\n\n            return root.items.length > 0 ? root.items : null;\n          }\n        }, {\n          key: \"permissions\",\n          get: function get() {\n            var permissions = null;\n\n            try {\n              permissions = this._readPermissions();\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Unable to read permissions.\");\n            }\n\n            return (0, _util.shadow)(this, \"permissions\", permissions);\n          }\n        }, {\n          key: \"_readPermissions\",\n          value: function _readPermissions() {\n            var encrypt = this.xref.trailer.get(\"Encrypt\");\n\n            if (!(0, _primitives.isDict)(encrypt)) {\n              return null;\n            }\n\n            var flags = encrypt.get(\"P\");\n\n            if (!(0, _util.isNum)(flags)) {\n              return null;\n            }\n\n            flags += Math.pow(2, 32);\n            var permissions = [];\n\n            for (var key in _util.PermissionFlag) {\n              var value = _util.PermissionFlag[key];\n\n              if (flags & value) {\n                permissions.push(value);\n              }\n            }\n\n            return permissions;\n          }\n        }, {\n          key: \"optionalContentConfig\",\n          get: function get() {\n            var config = null;\n\n            try {\n              var properties = this._catDict.get(\"OCProperties\");\n\n              if (!properties) {\n                return (0, _util.shadow)(this, \"optionalContentConfig\", null);\n              }\n\n              var defaultConfig = properties.get(\"D\");\n\n              if (!defaultConfig) {\n                return (0, _util.shadow)(this, \"optionalContentConfig\", null);\n              }\n\n              var groupsData = properties.get(\"OCGs\");\n\n              if (!Array.isArray(groupsData)) {\n                return (0, _util.shadow)(this, \"optionalContentConfig\", null);\n              }\n\n              var groups = [];\n              var groupRefs = [];\n\n              var _iterator19 = _createForOfIteratorHelper(groupsData),\n                  _step19;\n\n              try {\n                for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                  var groupRef = _step19.value;\n\n                  if (!(0, _primitives.isRef)(groupRef)) {\n                    continue;\n                  }\n\n                  groupRefs.push(groupRef);\n                  var group = this.xref.fetchIfRef(groupRef);\n                  groups.push({\n                    id: groupRef.toString(),\n                    name: (0, _util.isString)(group.get(\"Name\")) ? (0, _util.stringToPDFString)(group.get(\"Name\")) : null,\n                    intent: (0, _util.isString)(group.get(\"Intent\")) ? (0, _util.stringToPDFString)(group.get(\"Intent\")) : null\n                  });\n                }\n              } catch (err) {\n                _iterator19.e(err);\n              } finally {\n                _iterator19.f();\n              }\n\n              config = this._readOptionalContentConfig(defaultConfig, groupRefs);\n              config.groups = groups;\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Unable to read optional content config: \".concat(ex));\n            }\n\n            return (0, _util.shadow)(this, \"optionalContentConfig\", config);\n          }\n        }, {\n          key: \"_readOptionalContentConfig\",\n          value: function _readOptionalContentConfig(config, contentGroupRefs) {\n            function parseOnOff(refs) {\n              var onParsed = [];\n\n              if (Array.isArray(refs)) {\n                var _iterator20 = _createForOfIteratorHelper(refs),\n                    _step20;\n\n                try {\n                  for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                    var value = _step20.value;\n\n                    if (!(0, _primitives.isRef)(value)) {\n                      continue;\n                    }\n\n                    if (contentGroupRefs.includes(value)) {\n                      onParsed.push(value.toString());\n                    }\n                  }\n                } catch (err) {\n                  _iterator20.e(err);\n                } finally {\n                  _iterator20.f();\n                }\n              }\n\n              return onParsed;\n            }\n\n            function parseOrder(refs) {\n              var nestedLevels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n              if (!Array.isArray(refs)) {\n                return null;\n              }\n\n              var order = [];\n\n              var _iterator21 = _createForOfIteratorHelper(refs),\n                  _step21;\n\n              try {\n                for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                  var value = _step21.value;\n\n                  if ((0, _primitives.isRef)(value) && contentGroupRefs.includes(value)) {\n                    parsedOrderRefs.put(value);\n                    order.push(value.toString());\n                    continue;\n                  }\n\n                  var nestedOrder = parseNestedOrder(value, nestedLevels);\n\n                  if (nestedOrder) {\n                    order.push(nestedOrder);\n                  }\n                }\n              } catch (err) {\n                _iterator21.e(err);\n              } finally {\n                _iterator21.f();\n              }\n\n              if (nestedLevels > 0) {\n                return order;\n              }\n\n              var hiddenGroups = [];\n\n              var _iterator22 = _createForOfIteratorHelper(contentGroupRefs),\n                  _step22;\n\n              try {\n                for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                  var groupRef = _step22.value;\n\n                  if (parsedOrderRefs.has(groupRef)) {\n                    continue;\n                  }\n\n                  hiddenGroups.push(groupRef.toString());\n                }\n              } catch (err) {\n                _iterator22.e(err);\n              } finally {\n                _iterator22.f();\n              }\n\n              if (hiddenGroups.length) {\n                order.push({\n                  name: null,\n                  order: hiddenGroups\n                });\n              }\n\n              return order;\n            }\n\n            function parseNestedOrder(ref, nestedLevels) {\n              if (++nestedLevels > MAX_NESTED_LEVELS) {\n                (0, _util.warn)(\"parseNestedOrder - reached MAX_NESTED_LEVELS.\");\n                return null;\n              }\n\n              var value = xref.fetchIfRef(ref);\n\n              if (!Array.isArray(value)) {\n                return null;\n              }\n\n              var nestedName = xref.fetchIfRef(value[0]);\n\n              if (typeof nestedName !== \"string\") {\n                return null;\n              }\n\n              var nestedOrder = parseOrder(value.slice(1), nestedLevels);\n\n              if (!nestedOrder || !nestedOrder.length) {\n                return null;\n              }\n\n              return {\n                name: (0, _util.stringToPDFString)(nestedName),\n                order: nestedOrder\n              };\n            }\n\n            var xref = this.xref,\n                parsedOrderRefs = new _primitives.RefSet(),\n                MAX_NESTED_LEVELS = 10;\n            return {\n              name: (0, _util.isString)(config.get(\"Name\")) ? (0, _util.stringToPDFString)(config.get(\"Name\")) : null,\n              creator: (0, _util.isString)(config.get(\"Creator\")) ? (0, _util.stringToPDFString)(config.get(\"Creator\")) : null,\n              baseState: (0, _primitives.isName)(config.get(\"BaseState\")) ? config.get(\"BaseState\").name : null,\n              on: parseOnOff(config.get(\"ON\")),\n              off: parseOnOff(config.get(\"OFF\")),\n              order: parseOrder(config.get(\"Order\")),\n              groups: null\n            };\n          }\n        }, {\n          key: \"numPages\",\n          get: function get() {\n            var obj = this.toplevelPagesDict.get(\"Count\");\n\n            if (!Number.isInteger(obj)) {\n              throw new _util.FormatError(\"Page count in top-level pages dictionary is not an integer.\");\n            }\n\n            return (0, _util.shadow)(this, \"numPages\", obj);\n          }\n        }, {\n          key: \"destinations\",\n          get: function get() {\n            var obj = this._readDests(),\n                dests = Object.create(null);\n\n            if (obj instanceof NameTree) {\n              var names = obj.getAll();\n\n              for (var name in names) {\n                dests[name] = fetchDestination(names[name]);\n              }\n            } else if (obj instanceof _primitives.Dict) {\n              obj.forEach(function (key, value) {\n                if (value) {\n                  dests[key] = fetchDestination(value);\n                }\n              });\n            }\n\n            return (0, _util.shadow)(this, \"destinations\", dests);\n          }\n        }, {\n          key: \"getDestination\",\n          value: function getDestination(destinationId) {\n            var obj = this._readDests();\n\n            if (obj instanceof NameTree || obj instanceof _primitives.Dict) {\n              return fetchDestination(obj.get(destinationId) || null);\n            }\n\n            return null;\n          }\n        }, {\n          key: \"_readDests\",\n          value: function _readDests() {\n            var obj = this._catDict.get(\"Names\");\n\n            if (obj && obj.has(\"Dests\")) {\n              return new NameTree(obj.getRaw(\"Dests\"), this.xref);\n            } else if (this._catDict.has(\"Dests\")) {\n              return this._catDict.get(\"Dests\");\n            }\n\n            return undefined;\n          }\n        }, {\n          key: \"pageLabels\",\n          get: function get() {\n            var obj = null;\n\n            try {\n              obj = this._readPageLabels();\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Unable to read page labels.\");\n            }\n\n            return (0, _util.shadow)(this, \"pageLabels\", obj);\n          }\n        }, {\n          key: \"_readPageLabels\",\n          value: function _readPageLabels() {\n            var obj = this._catDict.getRaw(\"PageLabels\");\n\n            if (!obj) {\n              return null;\n            }\n\n            var pageLabels = new Array(this.numPages);\n            var style = null,\n                prefix = \"\";\n            var numberTree = new NumberTree(obj, this.xref);\n            var nums = numberTree.getAll();\n            var currentLabel = \"\",\n                currentIndex = 1;\n\n            for (var i = 0, ii = this.numPages; i < ii; i++) {\n              if (i in nums) {\n                var labelDict = nums[i];\n\n                if (!(0, _primitives.isDict)(labelDict)) {\n                  throw new _util.FormatError(\"PageLabel is not a dictionary.\");\n                }\n\n                if (labelDict.has(\"Type\") && !(0, _primitives.isName)(labelDict.get(\"Type\"), \"PageLabel\")) {\n                  throw new _util.FormatError(\"Invalid type in PageLabel dictionary.\");\n                }\n\n                if (labelDict.has(\"S\")) {\n                  var s = labelDict.get(\"S\");\n\n                  if (!(0, _primitives.isName)(s)) {\n                    throw new _util.FormatError(\"Invalid style in PageLabel dictionary.\");\n                  }\n\n                  style = s.name;\n                } else {\n                  style = null;\n                }\n\n                if (labelDict.has(\"P\")) {\n                  var p = labelDict.get(\"P\");\n\n                  if (!(0, _util.isString)(p)) {\n                    throw new _util.FormatError(\"Invalid prefix in PageLabel dictionary.\");\n                  }\n\n                  prefix = (0, _util.stringToPDFString)(p);\n                } else {\n                  prefix = \"\";\n                }\n\n                if (labelDict.has(\"St\")) {\n                  var st = labelDict.get(\"St\");\n\n                  if (!(Number.isInteger(st) && st >= 1)) {\n                    throw new _util.FormatError(\"Invalid start in PageLabel dictionary.\");\n                  }\n\n                  currentIndex = st;\n                } else {\n                  currentIndex = 1;\n                }\n              }\n\n              switch (style) {\n                case \"D\":\n                  currentLabel = currentIndex;\n                  break;\n\n                case \"R\":\n                case \"r\":\n                  currentLabel = (0, _core_utils.toRomanNumerals)(currentIndex, style === \"r\");\n                  break;\n\n                case \"A\":\n                case \"a\":\n                  var LIMIT = 26;\n                  var A_UPPER_CASE = 0x41,\n                      A_LOWER_CASE = 0x61;\n                  var baseCharCode = style === \"a\" ? A_LOWER_CASE : A_UPPER_CASE;\n                  var letterIndex = currentIndex - 1;\n                  var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n                  var charBuf = [];\n\n                  for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n                    charBuf.push(character);\n                  }\n\n                  currentLabel = charBuf.join(\"\");\n                  break;\n\n                default:\n                  if (style) {\n                    throw new _util.FormatError(\"Invalid style \\\"\".concat(style, \"\\\" in PageLabel dictionary.\"));\n                  }\n\n                  currentLabel = \"\";\n              }\n\n              pageLabels[i] = prefix + currentLabel;\n              currentIndex++;\n            }\n\n            return pageLabels;\n          }\n        }, {\n          key: \"pageLayout\",\n          get: function get() {\n            var obj = this._catDict.get(\"PageLayout\");\n\n            var pageLayout = \"\";\n\n            if ((0, _primitives.isName)(obj)) {\n              switch (obj.name) {\n                case \"SinglePage\":\n                case \"OneColumn\":\n                case \"TwoColumnLeft\":\n                case \"TwoColumnRight\":\n                case \"TwoPageLeft\":\n                case \"TwoPageRight\":\n                  pageLayout = obj.name;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"pageLayout\", pageLayout);\n          }\n        }, {\n          key: \"pageMode\",\n          get: function get() {\n            var obj = this._catDict.get(\"PageMode\");\n\n            var pageMode = \"UseNone\";\n\n            if ((0, _primitives.isName)(obj)) {\n              switch (obj.name) {\n                case \"UseNone\":\n                case \"UseOutlines\":\n                case \"UseThumbs\":\n                case \"FullScreen\":\n                case \"UseOC\":\n                case \"UseAttachments\":\n                  pageMode = obj.name;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"pageMode\", pageMode);\n          }\n        }, {\n          key: \"viewerPreferences\",\n          get: function get() {\n            var _this17 = this;\n\n            var ViewerPreferencesValidators = {\n              HideToolbar: _util.isBool,\n              HideMenubar: _util.isBool,\n              HideWindowUI: _util.isBool,\n              FitWindow: _util.isBool,\n              CenterWindow: _util.isBool,\n              DisplayDocTitle: _util.isBool,\n              NonFullScreenPageMode: _primitives.isName,\n              Direction: _primitives.isName,\n              ViewArea: _primitives.isName,\n              ViewClip: _primitives.isName,\n              PrintArea: _primitives.isName,\n              PrintClip: _primitives.isName,\n              PrintScaling: _primitives.isName,\n              Duplex: _primitives.isName,\n              PickTrayByPDFSize: _util.isBool,\n              PrintPageRange: Array.isArray,\n              NumCopies: Number.isInteger\n            };\n\n            var obj = this._catDict.get(\"ViewerPreferences\");\n\n            var prefs = null;\n\n            if ((0, _primitives.isDict)(obj)) {\n              for (var key in ViewerPreferencesValidators) {\n                if (!obj.has(key)) {\n                  continue;\n                }\n\n                var value = obj.get(key);\n\n                if (!ViewerPreferencesValidators[key](value)) {\n                  (0, _util.info)(\"Bad value in ViewerPreferences for \\\"\".concat(key, \"\\\".\"));\n                  continue;\n                }\n\n                var prefValue = void 0;\n\n                switch (key) {\n                  case \"NonFullScreenPageMode\":\n                    switch (value.name) {\n                      case \"UseNone\":\n                      case \"UseOutlines\":\n                      case \"UseThumbs\":\n                      case \"UseOC\":\n                        prefValue = value.name;\n                        break;\n\n                      default:\n                        prefValue = \"UseNone\";\n                    }\n\n                    break;\n\n                  case \"Direction\":\n                    switch (value.name) {\n                      case \"L2R\":\n                      case \"R2L\":\n                        prefValue = value.name;\n                        break;\n\n                      default:\n                        prefValue = \"L2R\";\n                    }\n\n                    break;\n\n                  case \"ViewArea\":\n                  case \"ViewClip\":\n                  case \"PrintArea\":\n                  case \"PrintClip\":\n                    switch (value.name) {\n                      case \"MediaBox\":\n                      case \"CropBox\":\n                      case \"BleedBox\":\n                      case \"TrimBox\":\n                      case \"ArtBox\":\n                        prefValue = value.name;\n                        break;\n\n                      default:\n                        prefValue = \"CropBox\";\n                    }\n\n                    break;\n\n                  case \"PrintScaling\":\n                    switch (value.name) {\n                      case \"None\":\n                      case \"AppDefault\":\n                        prefValue = value.name;\n                        break;\n\n                      default:\n                        prefValue = \"AppDefault\";\n                    }\n\n                    break;\n\n                  case \"Duplex\":\n                    switch (value.name) {\n                      case \"Simplex\":\n                      case \"DuplexFlipShortEdge\":\n                      case \"DuplexFlipLongEdge\":\n                        prefValue = value.name;\n                        break;\n\n                      default:\n                        prefValue = \"None\";\n                    }\n\n                    break;\n\n                  case \"PrintPageRange\":\n                    var length = value.length;\n\n                    if (length % 2 !== 0) {\n                      break;\n                    }\n\n                    var isValid = value.every(function (page, i, arr) {\n                      return Number.isInteger(page) && page > 0 && (i === 0 || page >= arr[i - 1]) && page <= _this17.numPages;\n                    });\n\n                    if (isValid) {\n                      prefValue = value;\n                    }\n\n                    break;\n\n                  case \"NumCopies\":\n                    if (value > 0) {\n                      prefValue = value;\n                    }\n\n                    break;\n\n                  default:\n                    if (typeof value !== \"boolean\") {\n                      throw new _util.FormatError(\"viewerPreferences - expected a boolean value for: \".concat(key));\n                    }\n\n                    prefValue = value;\n                }\n\n                if (prefValue !== undefined) {\n                  if (!prefs) {\n                    prefs = Object.create(null);\n                  }\n\n                  prefs[key] = prefValue;\n                } else {\n                  (0, _util.info)(\"Bad value in ViewerPreferences for \\\"\".concat(key, \"\\\".\"));\n                }\n              }\n            }\n\n            return (0, _util.shadow)(this, \"viewerPreferences\", prefs);\n          }\n        }, {\n          key: \"openAction\",\n          get: function get() {\n            var obj = this._catDict.get(\"OpenAction\");\n\n            var openAction = null;\n\n            if ((0, _primitives.isDict)(obj)) {\n              var destDict = new _primitives.Dict(this.xref);\n              destDict.set(\"A\", obj);\n              var resultObj = {\n                url: null,\n                dest: null,\n                action: null\n              };\n              Catalog.parseDestDictionary({\n                destDict: destDict,\n                resultObj: resultObj\n              });\n\n              if (Array.isArray(resultObj.dest)) {\n                if (!openAction) {\n                  openAction = Object.create(null);\n                }\n\n                openAction.dest = resultObj.dest;\n              } else if (resultObj.action) {\n                if (!openAction) {\n                  openAction = Object.create(null);\n                }\n\n                openAction.action = resultObj.action;\n              }\n            } else if (Array.isArray(obj)) {\n              if (!openAction) {\n                openAction = Object.create(null);\n              }\n\n              openAction.dest = obj;\n            }\n\n            return (0, _util.shadow)(this, \"openAction\", openAction);\n          }\n        }, {\n          key: \"attachments\",\n          get: function get() {\n            var obj = this._catDict.get(\"Names\");\n\n            var attachments = null;\n\n            if (obj && obj.has(\"EmbeddedFiles\")) {\n              var nameTree = new NameTree(obj.getRaw(\"EmbeddedFiles\"), this.xref);\n              var names = nameTree.getAll();\n\n              for (var name in names) {\n                var fs = new FileSpec(names[name], this.xref);\n\n                if (!attachments) {\n                  attachments = Object.create(null);\n                }\n\n                attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"attachments\", attachments);\n          }\n        }, {\n          key: \"javaScript\",\n          get: function get() {\n            var obj = this._catDict.get(\"Names\");\n\n            var javaScript = null;\n\n            function appendIfJavaScriptDict(jsDict) {\n              var type = jsDict.get(\"S\");\n\n              if (!(0, _primitives.isName)(type, \"JavaScript\")) {\n                return;\n              }\n\n              var js = jsDict.get(\"JS\");\n\n              if ((0, _primitives.isStream)(js)) {\n                js = (0, _util.bytesToString)(js.getBytes());\n              } else if (!(0, _util.isString)(js)) {\n                return;\n              }\n\n              if (!javaScript) {\n                javaScript = [];\n              }\n\n              javaScript.push((0, _util.stringToPDFString)(js));\n            }\n\n            if (obj && obj.has(\"JavaScript\")) {\n              var nameTree = new NameTree(obj.getRaw(\"JavaScript\"), this.xref);\n              var names = nameTree.getAll();\n\n              for (var name in names) {\n                var jsDict = names[name];\n\n                if ((0, _primitives.isDict)(jsDict)) {\n                  appendIfJavaScriptDict(jsDict);\n                }\n              }\n            }\n\n            var openAction = this._catDict.get(\"OpenAction\");\n\n            if ((0, _primitives.isDict)(openAction) && (0, _primitives.isName)(openAction.get(\"S\"), \"JavaScript\")) {\n              appendIfJavaScriptDict(openAction);\n            }\n\n            return (0, _util.shadow)(this, \"javaScript\", javaScript);\n          }\n        }, {\n          key: \"fontFallback\",\n          value: function fontFallback(id, handler) {\n            var promises = [];\n            this.fontCache.forEach(function (promise) {\n              promises.push(promise);\n            });\n            return Promise.all(promises).then(function (translatedFonts) {\n              var _iterator23 = _createForOfIteratorHelper(translatedFonts),\n                  _step23;\n\n              try {\n                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                  var translatedFont = _step23.value;\n\n                  if (translatedFont.loadedName === id) {\n                    translatedFont.fallback(handler);\n                    return;\n                  }\n                }\n              } catch (err) {\n                _iterator23.e(err);\n              } finally {\n                _iterator23.f();\n              }\n            });\n          }\n        }, {\n          key: \"cleanup\",\n          value: function cleanup() {\n            var _this18 = this;\n\n            var manuallyTriggered = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            (0, _primitives.clearPrimitiveCaches)();\n            this.globalImageCache.clear(manuallyTriggered);\n            this.pageKidsCountCache.clear();\n            var promises = [];\n            this.fontCache.forEach(function (promise) {\n              promises.push(promise);\n            });\n            return Promise.all(promises).then(function (translatedFonts) {\n              var _iterator24 = _createForOfIteratorHelper(translatedFonts),\n                  _step24;\n\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var dict = _step24.value.dict;\n                  delete dict.translated;\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n\n              _this18.fontCache.clear();\n\n              _this18.builtInCMapCache.clear();\n            });\n          }\n        }, {\n          key: \"getPageDict\",\n          value: function getPageDict(pageIndex) {\n            var capability = (0, _util.createPromiseCapability)();\n            var nodesToVisit = [this._catDict.getRaw(\"Pages\")];\n            var visitedNodes = new _primitives.RefSet();\n            var xref = this.xref,\n                pageKidsCountCache = this.pageKidsCountCache;\n            var count,\n                currentPageIndex = 0;\n\n            function next() {\n              var _loop2 = function _loop2() {\n                var currentNode = nodesToVisit.pop();\n\n                if ((0, _primitives.isRef)(currentNode)) {\n                  count = pageKidsCountCache.get(currentNode);\n\n                  if (count > 0 && currentPageIndex + count < pageIndex) {\n                    currentPageIndex += count;\n                    return \"continue\";\n                  }\n\n                  if (visitedNodes.has(currentNode)) {\n                    capability.reject(new _util.FormatError(\"Pages tree contains circular reference.\"));\n                    return {\n                      v: void 0\n                    };\n                  }\n\n                  visitedNodes.put(currentNode);\n                  xref.fetchAsync(currentNode).then(function (obj) {\n                    if ((0, _primitives.isDict)(obj, \"Page\") || (0, _primitives.isDict)(obj) && !obj.has(\"Kids\")) {\n                      if (pageIndex === currentPageIndex) {\n                        if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                          pageKidsCountCache.put(currentNode, 1);\n                        }\n\n                        capability.resolve([obj, currentNode]);\n                      } else {\n                        currentPageIndex++;\n                        next();\n                      }\n\n                      return;\n                    }\n\n                    nodesToVisit.push(obj);\n                    next();\n                  }, capability.reject);\n                  return {\n                    v: void 0\n                  };\n                }\n\n                if (!(0, _primitives.isDict)(currentNode)) {\n                  capability.reject(new _util.FormatError(\"Page dictionary kid reference points to wrong type of object.\"));\n                  return {\n                    v: void 0\n                  };\n                }\n\n                count = currentNode.get(\"Count\");\n\n                if (Number.isInteger(count) && count >= 0) {\n                  var objId = currentNode.objId;\n\n                  if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.put(objId, count);\n                  }\n\n                  if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    return \"continue\";\n                  }\n                }\n\n                var kids = currentNode.get(\"Kids\");\n\n                if (!Array.isArray(kids)) {\n                  if ((0, _primitives.isName)(currentNode.get(\"Type\"), \"Page\") || !currentNode.has(\"Type\") && currentNode.has(\"Contents\")) {\n                    if (currentPageIndex === pageIndex) {\n                      capability.resolve([currentNode, null]);\n                      return {\n                        v: void 0\n                      };\n                    }\n\n                    currentPageIndex++;\n                    return \"continue\";\n                  }\n\n                  capability.reject(new _util.FormatError(\"Page dictionary kids object is not an array.\"));\n                  return {\n                    v: void 0\n                  };\n                }\n\n                for (var last = kids.length - 1; last >= 0; last--) {\n                  nodesToVisit.push(kids[last]);\n                }\n              };\n\n              while (nodesToVisit.length) {\n                var _ret = _loop2();\n\n                if (_ret === \"continue\") continue;\n                if (typeof _ret === \"object\") return _ret.v;\n              }\n\n              capability.reject(new Error(\"Page index \".concat(pageIndex, \" not found.\")));\n            }\n\n            next();\n            return capability.promise;\n          }\n        }, {\n          key: \"getPageIndex\",\n          value: function getPageIndex(pageRef) {\n            var xref = this.xref;\n\n            function pagesBeforeRef(kidRef) {\n              var total = 0,\n                  parentRef;\n              return xref.fetchAsync(kidRef).then(function (node) {\n                if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, \"Page\") && !((0, _primitives.isDict)(node) && !node.has(\"Type\") && node.has(\"Contents\"))) {\n                  throw new _util.FormatError(\"The reference does not point to a /Page dictionary.\");\n                }\n\n                if (!node) {\n                  return null;\n                }\n\n                if (!(0, _primitives.isDict)(node)) {\n                  throw new _util.FormatError(\"Node must be a dictionary.\");\n                }\n\n                parentRef = node.getRaw(\"Parent\");\n                return node.getAsync(\"Parent\");\n              }).then(function (parent) {\n                if (!parent) {\n                  return null;\n                }\n\n                if (!(0, _primitives.isDict)(parent)) {\n                  throw new _util.FormatError(\"Parent must be a dictionary.\");\n                }\n\n                return parent.getAsync(\"Kids\");\n              }).then(function (kids) {\n                if (!kids) {\n                  return null;\n                }\n\n                var kidPromises = [];\n                var found = false;\n\n                for (var i = 0, ii = kids.length; i < ii; i++) {\n                  var kid = kids[i];\n\n                  if (!(0, _primitives.isRef)(kid)) {\n                    throw new _util.FormatError(\"Kid must be a reference.\");\n                  }\n\n                  if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n                    found = true;\n                    break;\n                  }\n\n                  kidPromises.push(xref.fetchAsync(kid).then(function (obj) {\n                    if (!(0, _primitives.isDict)(obj)) {\n                      throw new _util.FormatError(\"Kid node must be a dictionary.\");\n                    }\n\n                    if (obj.has(\"Count\")) {\n                      total += obj.get(\"Count\");\n                    } else {\n                      total++;\n                    }\n                  }));\n                }\n\n                if (!found) {\n                  throw new _util.FormatError(\"Kid reference not found in parent's kids.\");\n                }\n\n                return Promise.all(kidPromises).then(function () {\n                  return [total, parentRef];\n                });\n              });\n            }\n\n            var total = 0;\n\n            function next(ref) {\n              return pagesBeforeRef(ref).then(function (args) {\n                if (!args) {\n                  return total;\n                }\n\n                var _args8 = _slicedToArray(args, 2),\n                    count = _args8[0],\n                    parentRef = _args8[1];\n\n                total += count;\n                return next(parentRef);\n              });\n            }\n\n            return next(pageRef);\n          }\n        }], [{\n          key: \"parseDestDictionary\",\n          value: function parseDestDictionary(params) {\n            function addDefaultProtocolToUrl(url) {\n              return url.startsWith(\"www.\") ? \"http://\".concat(url) : url;\n            }\n\n            function tryConvertUrlEncoding(url) {\n              try {\n                return (0, _util.stringToUTF8String)(url);\n              } catch (e) {\n                return url;\n              }\n            }\n\n            var destDict = params.destDict;\n\n            if (!(0, _primitives.isDict)(destDict)) {\n              (0, _util.warn)(\"parseDestDictionary: `destDict` must be a dictionary.\");\n              return;\n            }\n\n            var resultObj = params.resultObj;\n\n            if (typeof resultObj !== \"object\") {\n              (0, _util.warn)(\"parseDestDictionary: `resultObj` must be an object.\");\n              return;\n            }\n\n            var docBaseUrl = params.docBaseUrl || null;\n            var action = destDict.get(\"A\"),\n                url,\n                dest;\n\n            if (!(0, _primitives.isDict)(action) && destDict.has(\"Dest\")) {\n              action = destDict.get(\"Dest\");\n            }\n\n            if ((0, _primitives.isDict)(action)) {\n              var actionType = action.get(\"S\");\n\n              if (!(0, _primitives.isName)(actionType)) {\n                (0, _util.warn)(\"parseDestDictionary: Invalid type in Action dictionary.\");\n                return;\n              }\n\n              var actionName = actionType.name;\n\n              switch (actionName) {\n                case \"URI\":\n                  url = action.get(\"URI\");\n\n                  if ((0, _primitives.isName)(url)) {\n                    url = \"/\" + url.name;\n                  } else if ((0, _util.isString)(url)) {\n                    url = addDefaultProtocolToUrl(url);\n                  }\n\n                  break;\n\n                case \"GoTo\":\n                  dest = action.get(\"D\");\n                  break;\n\n                case \"Launch\":\n                case \"GoToR\":\n                  var urlDict = action.get(\"F\");\n\n                  if ((0, _primitives.isDict)(urlDict)) {\n                    url = urlDict.get(\"F\") || null;\n                  } else if ((0, _util.isString)(urlDict)) {\n                    url = urlDict;\n                  }\n\n                  var remoteDest = action.get(\"D\");\n\n                  if (remoteDest) {\n                    if ((0, _primitives.isName)(remoteDest)) {\n                      remoteDest = remoteDest.name;\n                    }\n\n                    if ((0, _util.isString)(url)) {\n                      var baseUrl = url.split(\"#\")[0];\n\n                      if ((0, _util.isString)(remoteDest)) {\n                        url = baseUrl + \"#\" + remoteDest;\n                      } else if (Array.isArray(remoteDest)) {\n                        url = baseUrl + \"#\" + JSON.stringify(remoteDest);\n                      }\n                    }\n                  }\n\n                  var newWindow = action.get(\"NewWindow\");\n\n                  if ((0, _util.isBool)(newWindow)) {\n                    resultObj.newWindow = newWindow;\n                  }\n\n                  break;\n\n                case \"Named\":\n                  var namedAction = action.get(\"N\");\n\n                  if ((0, _primitives.isName)(namedAction)) {\n                    resultObj.action = namedAction.name;\n                  }\n\n                  break;\n\n                case \"JavaScript\":\n                  var jsAction = action.get(\"JS\");\n                  var js;\n\n                  if ((0, _primitives.isStream)(jsAction)) {\n                    js = (0, _util.bytesToString)(jsAction.getBytes());\n                  } else if ((0, _util.isString)(jsAction)) {\n                    js = jsAction;\n                  }\n\n                  if (js) {\n                    var URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\"];\n                    var regex = new RegExp(\"^\\\\s*(\" + URL_OPEN_METHODS.join(\"|\").split(\".\").join(\"\\\\.\") + \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\", \"i\");\n                    var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n\n                    if (jsUrl && jsUrl[2]) {\n                      url = jsUrl[2];\n\n                      if (jsUrl[3] === \"true\" && jsUrl[1] === \"app.launchURL\") {\n                        resultObj.newWindow = true;\n                      }\n\n                      break;\n                    }\n                  }\n\n                default:\n                  (0, _util.warn)(\"parseDestDictionary: unsupported action type \\\"\".concat(actionName, \"\\\".\"));\n                  break;\n              }\n            } else if (destDict.has(\"Dest\")) {\n              dest = destDict.get(\"Dest\");\n            }\n\n            if ((0, _util.isString)(url)) {\n              url = tryConvertUrlEncoding(url);\n              var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n\n              if (absoluteUrl) {\n                resultObj.url = absoluteUrl.href;\n              }\n\n              resultObj.unsafeUrl = url;\n            }\n\n            if (dest) {\n              if ((0, _primitives.isName)(dest)) {\n                dest = dest.name;\n              }\n\n              if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n                resultObj.dest = dest;\n              }\n            }\n          }\n        }]);\n\n        return Catalog;\n      }();\n\n      exports.Catalog = Catalog;\n\n      var XRef = function XRefClosure() {\n        function XRef(stream, pdfManager) {\n          this.stream = stream;\n          this.pdfManager = pdfManager;\n          this.entries = [];\n          this.xrefstms = Object.create(null);\n          this._cacheMap = new Map();\n          this.stats = {\n            streamTypes: Object.create(null),\n            fontTypes: Object.create(null)\n          };\n          this._newRefNum = null;\n        }\n\n        XRef.prototype = {\n          getNewRef: function XRef_getNewRef() {\n            if (this._newRefNum === null) {\n              this._newRefNum = this.entries.length;\n            }\n\n            return _primitives.Ref.get(this._newRefNum++, 0);\n          },\n          resetNewRef: function XRef_resetNewRef() {\n            this._newRefNum = null;\n          },\n          setStartXRef: function XRef_setStartXRef(startXRef) {\n            this.startXRefQueue = [startXRef];\n          },\n          parse: function XRef_parse(recoveryMode) {\n            var trailerDict;\n\n            if (!recoveryMode) {\n              trailerDict = this.readXRef();\n            } else {\n              (0, _util.warn)(\"Indexing all PDF objects\");\n              trailerDict = this.indexObjects();\n            }\n\n            trailerDict.assignXref(this);\n            this.trailer = trailerDict;\n            var encrypt;\n\n            try {\n              encrypt = trailerDict.get(\"Encrypt\");\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"XRef.parse - Invalid \\\"Encrypt\\\" reference: \\\"\".concat(ex, \"\\\".\"));\n            }\n\n            if ((0, _primitives.isDict)(encrypt)) {\n              var ids = trailerDict.get(\"ID\");\n              var fileId = ids && ids.length ? ids[0] : \"\";\n              encrypt.suppressEncryption = true;\n              this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n            }\n\n            var root;\n\n            try {\n              root = trailerDict.get(\"Root\");\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"XRef.parse - Invalid \\\"Root\\\" reference: \\\"\".concat(ex, \"\\\".\"));\n            }\n\n            if ((0, _primitives.isDict)(root) && root.has(\"Pages\")) {\n              this.root = root;\n            } else {\n              if (!recoveryMode) {\n                throw new _core_utils.XRefParseException();\n              }\n\n              throw new _util.FormatError(\"Invalid root reference\");\n            }\n          },\n          processXRefTable: function XRef_processXRefTable(parser) {\n            if (!(\"tableState\" in this)) {\n              this.tableState = {\n                entryNum: 0,\n                streamPos: parser.lexer.stream.pos,\n                parserBuf1: parser.buf1,\n                parserBuf2: parser.buf2\n              };\n            }\n\n            var obj = this.readXRefTable(parser);\n\n            if (!(0, _primitives.isCmd)(obj, \"trailer\")) {\n              throw new _util.FormatError(\"Invalid XRef table: could not find trailer dictionary\");\n            }\n\n            var dict = parser.getObj();\n\n            if (!(0, _primitives.isDict)(dict) && dict.dict) {\n              dict = dict.dict;\n            }\n\n            if (!(0, _primitives.isDict)(dict)) {\n              throw new _util.FormatError(\"Invalid XRef table: could not parse trailer dictionary\");\n            }\n\n            delete this.tableState;\n            return dict;\n          },\n          readXRefTable: function XRef_readXRefTable(parser) {\n            var stream = parser.lexer.stream;\n            var tableState = this.tableState;\n            stream.pos = tableState.streamPos;\n            parser.buf1 = tableState.parserBuf1;\n            parser.buf2 = tableState.parserBuf2;\n            var obj;\n\n            while (true) {\n              if (!(\"firstEntryNum\" in tableState) || !(\"entryCount\" in tableState)) {\n                if ((0, _primitives.isCmd)(obj = parser.getObj(), \"trailer\")) {\n                  break;\n                }\n\n                tableState.firstEntryNum = obj;\n                tableState.entryCount = parser.getObj();\n              }\n\n              var first = tableState.firstEntryNum;\n              var count = tableState.entryCount;\n\n              if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new _util.FormatError(\"Invalid XRef table: wrong types in subsection header\");\n              }\n\n              for (var i = tableState.entryNum; i < count; i++) {\n                tableState.streamPos = stream.pos;\n                tableState.entryNum = i;\n                tableState.parserBuf1 = parser.buf1;\n                tableState.parserBuf2 = parser.buf2;\n                var entry = {};\n                entry.offset = parser.getObj();\n                entry.gen = parser.getObj();\n                var type = parser.getObj();\n\n                if (type instanceof _primitives.Cmd) {\n                  switch (type.cmd) {\n                    case \"f\":\n                      entry.free = true;\n                      break;\n\n                    case \"n\":\n                      entry.uncompressed = true;\n                      break;\n                  }\n                }\n\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                  throw new _util.FormatError(\"Invalid entry in XRef subsection: \".concat(first, \", \").concat(count));\n                }\n\n                if (i === 0 && entry.free && first === 1) {\n                  first = 0;\n                }\n\n                if (!this.entries[i + first]) {\n                  this.entries[i + first] = entry;\n                }\n              }\n\n              tableState.entryNum = 0;\n              tableState.streamPos = stream.pos;\n              tableState.parserBuf1 = parser.buf1;\n              tableState.parserBuf2 = parser.buf2;\n              delete tableState.firstEntryNum;\n              delete tableState.entryCount;\n            }\n\n            if (this.entries[0] && !this.entries[0].free) {\n              throw new _util.FormatError(\"Invalid XRef table: unexpected first object\");\n            }\n\n            return obj;\n          },\n          processXRefStream: function XRef_processXRefStream(stream) {\n            if (!(\"streamState\" in this)) {\n              var streamParameters = stream.dict;\n              var byteWidths = streamParameters.get(\"W\");\n              var range = streamParameters.get(\"Index\");\n\n              if (!range) {\n                range = [0, streamParameters.get(\"Size\")];\n              }\n\n              this.streamState = {\n                entryRanges: range,\n                byteWidths: byteWidths,\n                entryNum: 0,\n                streamPos: stream.pos\n              };\n            }\n\n            this.readXRefStream(stream);\n            delete this.streamState;\n            return stream.dict;\n          },\n          readXRefStream: function XRef_readXRefStream(stream) {\n            var i, j;\n            var streamState = this.streamState;\n            stream.pos = streamState.streamPos;\n            var byteWidths = streamState.byteWidths;\n            var typeFieldWidth = byteWidths[0];\n            var offsetFieldWidth = byteWidths[1];\n            var generationFieldWidth = byteWidths[2];\n            var entryRanges = streamState.entryRanges;\n\n            while (entryRanges.length > 0) {\n              var first = entryRanges[0];\n              var n = entryRanges[1];\n\n              if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new _util.FormatError(\"Invalid XRef range fields: \".concat(first, \", \").concat(n));\n              }\n\n              if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new _util.FormatError(\"Invalid XRef entry fields length: \".concat(first, \", \").concat(n));\n              }\n\n              for (i = streamState.entryNum; i < n; ++i) {\n                streamState.entryNum = i;\n                streamState.streamPos = stream.pos;\n                var type = 0,\n                    offset = 0,\n                    generation = 0;\n\n                for (j = 0; j < typeFieldWidth; ++j) {\n                  type = type << 8 | stream.getByte();\n                }\n\n                if (typeFieldWidth === 0) {\n                  type = 1;\n                }\n\n                for (j = 0; j < offsetFieldWidth; ++j) {\n                  offset = offset << 8 | stream.getByte();\n                }\n\n                for (j = 0; j < generationFieldWidth; ++j) {\n                  generation = generation << 8 | stream.getByte();\n                }\n\n                var entry = {};\n                entry.offset = offset;\n                entry.gen = generation;\n\n                switch (type) {\n                  case 0:\n                    entry.free = true;\n                    break;\n\n                  case 1:\n                    entry.uncompressed = true;\n                    break;\n\n                  case 2:\n                    break;\n\n                  default:\n                    throw new _util.FormatError(\"Invalid XRef entry type: \".concat(type));\n                }\n\n                if (!this.entries[first + i]) {\n                  this.entries[first + i] = entry;\n                }\n              }\n\n              streamState.entryNum = 0;\n              streamState.streamPos = stream.pos;\n              entryRanges.splice(0, 2);\n            }\n          },\n          indexObjects: function XRef_indexObjects() {\n            var TAB = 0x9,\n                LF = 0xa,\n                CR = 0xd,\n                SPACE = 0x20;\n            var PERCENT = 0x25,\n                LT = 0x3c;\n\n            function readToken(data, offset) {\n              var token = \"\",\n                  ch = data[offset];\n\n              while (ch !== LF && ch !== CR && ch !== LT) {\n                if (++offset >= data.length) {\n                  break;\n                }\n\n                token += String.fromCharCode(ch);\n                ch = data[offset];\n              }\n\n              return token;\n            }\n\n            function skipUntil(data, offset, what) {\n              var length = what.length,\n                  dataLength = data.length;\n              var skipped = 0;\n\n              while (offset < dataLength) {\n                var i = 0;\n\n                while (i < length && data[offset + i] === what[i]) {\n                  ++i;\n                }\n\n                if (i >= length) {\n                  break;\n                }\n\n                offset++;\n                skipped++;\n              }\n\n              return skipped;\n            }\n\n            var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n            var endobjRegExp = /\\bendobj[\\b\\s]$/;\n            var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n            var CHECK_CONTENT_LENGTH = 25;\n            var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n            var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n            var objBytes = new Uint8Array([111, 98, 106]);\n            var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n            this.entries.length = 0;\n            var stream = this.stream;\n            stream.pos = 0;\n            var buffer = stream.getBytes();\n            var position = stream.start,\n                length = buffer.length;\n            var trailers = [],\n                xrefStms = [];\n\n            while (position < length) {\n              var ch = buffer[position];\n\n              if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n                ++position;\n                continue;\n              }\n\n              if (ch === PERCENT) {\n                do {\n                  ++position;\n\n                  if (position >= length) {\n                    break;\n                  }\n\n                  ch = buffer[position];\n                } while (ch !== LF && ch !== CR);\n\n                continue;\n              }\n\n              var token = readToken(buffer, position);\n              var m;\n\n              if (token.startsWith(\"xref\") && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += skipUntil(buffer, position, startxrefBytes);\n              } else if (m = objRegExp.exec(token)) {\n                var num = m[1] | 0,\n                    gen = m[2] | 0;\n\n                if (!this.entries[num] || this.entries[num].gen === gen) {\n                  this.entries[num] = {\n                    offset: position - stream.start,\n                    gen: gen,\n                    uncompressed: true\n                  };\n                }\n\n                var contentLength = void 0,\n                    startPos = position + token.length;\n\n                while (startPos < buffer.length) {\n                  var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n                  contentLength = endPos - position;\n                  var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n                  var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n\n                  if (endobjRegExp.test(tokenStr)) {\n                    break;\n                  } else {\n                    var objToken = nestedObjRegExp.exec(tokenStr);\n\n                    if (objToken && objToken[1]) {\n                      (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                      contentLength -= objToken[1].length;\n                      break;\n                    }\n                  }\n\n                  startPos = endPos;\n                }\n\n                var content = buffer.subarray(position, position + contentLength);\n                var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\n                if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                  xrefStms.push(position - stream.start);\n                  this.xrefstms[position - stream.start] = 1;\n                }\n\n                position += contentLength;\n              } else if (token.startsWith(\"trailer\") && (token.length === 7 || /\\s/.test(token[7]))) {\n                trailers.push(position);\n                position += skipUntil(buffer, position, startxrefBytes);\n              } else {\n                position += token.length + 1;\n              }\n            }\n\n            var i, ii;\n\n            for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n              this.startXRefQueue.push(xrefStms[i]);\n              this.readXRef(true);\n            }\n\n            var trailerDict;\n\n            for (i = 0, ii = trailers.length; i < ii; ++i) {\n              stream.pos = trailers[i];\n              var parser = new _parser.Parser({\n                lexer: new _parser.Lexer(stream),\n                xref: this,\n                allowStreams: true,\n                recoveryMode: true\n              });\n              var obj = parser.getObj();\n\n              if (!(0, _primitives.isCmd)(obj, \"trailer\")) {\n                continue;\n              }\n\n              var dict = parser.getObj();\n\n              if (!(0, _primitives.isDict)(dict)) {\n                continue;\n              }\n\n              var rootDict = void 0;\n\n              try {\n                rootDict = dict.get(\"Root\");\n              } catch (ex) {\n                if (ex instanceof _core_utils.MissingDataException) {\n                  throw ex;\n                }\n\n                continue;\n              }\n\n              if (!(0, _primitives.isDict)(rootDict) || !rootDict.has(\"Pages\")) {\n                continue;\n              }\n\n              if (dict.has(\"ID\")) {\n                return dict;\n              }\n\n              trailerDict = dict;\n            }\n\n            if (trailerDict) {\n              return trailerDict;\n            }\n\n            throw new _util.InvalidPDFException(\"Invalid PDF structure.\");\n          },\n          readXRef: function XRef_readXRef(recoveryMode) {\n            var stream = this.stream;\n            var startXRefParsedCache = Object.create(null);\n\n            try {\n              while (this.startXRefQueue.length) {\n                var startXRef = this.startXRefQueue[0];\n\n                if (startXRefParsedCache[startXRef]) {\n                  (0, _util.warn)(\"readXRef - skipping XRef table since it was already parsed.\");\n                  this.startXRefQueue.shift();\n                  continue;\n                }\n\n                startXRefParsedCache[startXRef] = true;\n                stream.pos = startXRef + stream.start;\n                var parser = new _parser.Parser({\n                  lexer: new _parser.Lexer(stream),\n                  xref: this,\n                  allowStreams: true\n                });\n                var obj = parser.getObj();\n                var dict;\n\n                if ((0, _primitives.isCmd)(obj, \"xref\")) {\n                  dict = this.processXRefTable(parser);\n\n                  if (!this.topDict) {\n                    this.topDict = dict;\n                  }\n\n                  obj = dict.get(\"XRefStm\");\n\n                  if (Number.isInteger(obj)) {\n                    var pos = obj;\n\n                    if (!(pos in this.xrefstms)) {\n                      this.xrefstms[pos] = 1;\n                      this.startXRefQueue.push(pos);\n                    }\n                  }\n                } else if (Number.isInteger(obj)) {\n                  if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), \"obj\") || !(0, _primitives.isStream)(obj = parser.getObj())) {\n                    throw new _util.FormatError(\"Invalid XRef stream\");\n                  }\n\n                  dict = this.processXRefStream(obj);\n\n                  if (!this.topDict) {\n                    this.topDict = dict;\n                  }\n\n                  if (!dict) {\n                    throw new _util.FormatError(\"Failed to read XRef stream\");\n                  }\n                } else {\n                  throw new _util.FormatError(\"Invalid XRef stream header\");\n                }\n\n                obj = dict.get(\"Prev\");\n\n                if (Number.isInteger(obj)) {\n                  this.startXRefQueue.push(obj);\n                } else if ((0, _primitives.isRef)(obj)) {\n                  this.startXRefQueue.push(obj.num);\n                }\n\n                this.startXRefQueue.shift();\n              }\n\n              return this.topDict;\n            } catch (e) {\n              if (e instanceof _core_utils.MissingDataException) {\n                throw e;\n              }\n\n              (0, _util.info)(\"(while reading XRef): \" + e);\n            }\n\n            if (recoveryMode) {\n              return undefined;\n            }\n\n            throw new _core_utils.XRefParseException();\n          },\n          getEntry: function XRef_getEntry(i) {\n            var xrefEntry = this.entries[i];\n\n            if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n              return xrefEntry;\n            }\n\n            return null;\n          },\n          fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n            if (obj instanceof _primitives.Ref) {\n              return this.fetch(obj, suppressEncryption);\n            }\n\n            return obj;\n          },\n          fetch: function XRef_fetch(ref, suppressEncryption) {\n            if (!(ref instanceof _primitives.Ref)) {\n              throw new Error(\"ref object is not a reference\");\n            }\n\n            var num = ref.num;\n\n            var cacheEntry = this._cacheMap.get(num);\n\n            if (cacheEntry !== undefined) {\n              if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n                cacheEntry.objId = ref.toString();\n              }\n\n              return cacheEntry;\n            }\n\n            var xrefEntry = this.getEntry(num);\n\n            if (xrefEntry === null) {\n              this._cacheMap.set(num, xrefEntry);\n\n              return xrefEntry;\n            }\n\n            if (xrefEntry.uncompressed) {\n              xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            } else {\n              xrefEntry = this.fetchCompressed(ref, xrefEntry, suppressEncryption);\n            }\n\n            if ((0, _primitives.isDict)(xrefEntry)) {\n              xrefEntry.objId = ref.toString();\n            } else if ((0, _primitives.isStream)(xrefEntry)) {\n              xrefEntry.dict.objId = ref.toString();\n            }\n\n            return xrefEntry;\n          },\n          fetchUncompressed: function fetchUncompressed(ref, xrefEntry) {\n            var suppressEncryption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var gen = ref.gen;\n            var num = ref.num;\n\n            if (xrefEntry.gen !== gen) {\n              throw new _core_utils.XRefEntryException(\"Inconsistent generation in XRef: \".concat(ref));\n            }\n\n            var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n            var parser = new _parser.Parser({\n              lexer: new _parser.Lexer(stream),\n              xref: this,\n              allowStreams: true\n            });\n            var obj1 = parser.getObj();\n            var obj2 = parser.getObj();\n            var obj3 = parser.getObj();\n\n            if (obj1 !== num || obj2 !== gen || !(obj3 instanceof _primitives.Cmd)) {\n              throw new _core_utils.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(ref));\n            }\n\n            if (obj3.cmd !== \"obj\") {\n              if (obj3.cmd.startsWith(\"obj\")) {\n                num = parseInt(obj3.cmd.substring(3), 10);\n\n                if (!Number.isNaN(num)) {\n                  return num;\n                }\n              }\n\n              throw new _core_utils.XRefEntryException(\"Bad (uncompressed) XRef entry: \".concat(ref));\n            }\n\n            if (this.encrypt && !suppressEncryption) {\n              xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n            } else {\n              xrefEntry = parser.getObj();\n            }\n\n            if (!(0, _primitives.isStream)(xrefEntry)) {\n              this._cacheMap.set(num, xrefEntry);\n            }\n\n            return xrefEntry;\n          },\n          fetchCompressed: function fetchCompressed(ref, xrefEntry) {\n            var suppressEncryption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var tableOffset = xrefEntry.offset;\n            var stream = this.fetch(_primitives.Ref.get(tableOffset, 0));\n\n            if (!(0, _primitives.isStream)(stream)) {\n              throw new _util.FormatError(\"bad ObjStm stream\");\n            }\n\n            var first = stream.dict.get(\"First\");\n            var n = stream.dict.get(\"N\");\n\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n              throw new _util.FormatError(\"invalid first and n parameters for ObjStm stream\");\n            }\n\n            var parser = new _parser.Parser({\n              lexer: new _parser.Lexer(stream),\n              xref: this,\n              allowStreams: true\n            });\n            var nums = new Array(n);\n\n            for (var i = 0; i < n; ++i) {\n              var num = parser.getObj();\n\n              if (!Number.isInteger(num)) {\n                throw new _util.FormatError(\"invalid object number in the ObjStm stream: \".concat(num));\n              }\n\n              var offset = parser.getObj();\n\n              if (!Number.isInteger(offset)) {\n                throw new _util.FormatError(\"invalid object offset in the ObjStm stream: \".concat(offset));\n              }\n\n              nums[i] = num;\n            }\n\n            var entries = new Array(n);\n\n            for (var _i8 = 0; _i8 < n; ++_i8) {\n              var obj = parser.getObj();\n              entries[_i8] = obj;\n\n              if (parser.buf1 instanceof _primitives.Cmd && parser.buf1.cmd === \"endobj\") {\n                parser.shift();\n              }\n\n              if ((0, _primitives.isStream)(obj)) {\n                continue;\n              }\n\n              var _num = nums[_i8],\n                  entry = this.entries[_num];\n\n              if (entry && entry.offset === tableOffset && entry.gen === _i8) {\n                this._cacheMap.set(_num, obj);\n              }\n            }\n\n            xrefEntry = entries[xrefEntry.gen];\n\n            if (xrefEntry === undefined) {\n              throw new _core_utils.XRefEntryException(\"Bad (compressed) XRef entry: \".concat(ref));\n            }\n\n            return xrefEntry;\n          },\n          fetchIfRefAsync: function fetchIfRefAsync(obj, suppressEncryption) {\n            var _this19 = this;\n\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n              return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      if (!(obj instanceof _primitives.Ref)) {\n                        _context8.next = 2;\n                        break;\n                      }\n\n                      return _context8.abrupt(\"return\", _this19.fetchAsync(obj, suppressEncryption));\n\n                    case 2:\n                      return _context8.abrupt(\"return\", obj);\n\n                    case 3:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, _callee8);\n            }))();\n          },\n          fetchAsync: function fetchAsync(ref, suppressEncryption) {\n            var _this20 = this;\n\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n              return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.prev = 0;\n                      return _context9.abrupt(\"return\", _this20.fetch(ref, suppressEncryption));\n\n                    case 4:\n                      _context9.prev = 4;\n                      _context9.t0 = _context9[\"catch\"](0);\n\n                      if (_context9.t0 instanceof _core_utils.MissingDataException) {\n                        _context9.next = 8;\n                        break;\n                      }\n\n                      throw _context9.t0;\n\n                    case 8:\n                      _context9.next = 10;\n                      return _this20.pdfManager.requestRange(_context9.t0.begin, _context9.t0.end);\n\n                    case 10:\n                      return _context9.abrupt(\"return\", _this20.fetchAsync(ref, suppressEncryption));\n\n                    case 11:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, _callee9, null, [[0, 4]]);\n            }))();\n          },\n          getCatalogObj: function XRef_getCatalogObj() {\n            return this.root;\n          }\n        };\n        return XRef;\n      }();\n\n      exports.XRef = XRef;\n\n      var NameOrNumberTree = /*#__PURE__*/function () {\n        function NameOrNumberTree(root, xref, type) {\n          _classCallCheck(this, NameOrNumberTree);\n\n          if (this.constructor === NameOrNumberTree) {\n            (0, _util.unreachable)(\"Cannot initialize NameOrNumberTree.\");\n          }\n\n          this.root = root;\n          this.xref = xref;\n          this._type = type;\n        }\n\n        _createClass(NameOrNumberTree, [{\n          key: \"getAll\",\n          value: function getAll() {\n            var dict = Object.create(null);\n\n            if (!this.root) {\n              return dict;\n            }\n\n            var xref = this.xref;\n            var processed = new _primitives.RefSet();\n            processed.put(this.root);\n            var queue = [this.root];\n\n            while (queue.length > 0) {\n              var obj = xref.fetchIfRef(queue.shift());\n\n              if (!(0, _primitives.isDict)(obj)) {\n                continue;\n              }\n\n              if (obj.has(\"Kids\")) {\n                var kids = obj.get(\"Kids\");\n\n                for (var i = 0, ii = kids.length; i < ii; i++) {\n                  var kid = kids[i];\n\n                  if (processed.has(kid)) {\n                    throw new _util.FormatError(\"Duplicate entry in \\\"\".concat(this._type, \"\\\" tree.\"));\n                  }\n\n                  queue.push(kid);\n                  processed.put(kid);\n                }\n\n                continue;\n              }\n\n              var entries = obj.get(this._type);\n\n              if (Array.isArray(entries)) {\n                for (var _i9 = 0, _ii = entries.length; _i9 < _ii; _i9 += 2) {\n                  dict[xref.fetchIfRef(entries[_i9])] = xref.fetchIfRef(entries[_i9 + 1]);\n                }\n              }\n            }\n\n            return dict;\n          }\n        }, {\n          key: \"get\",\n          value: function get(key) {\n            if (!this.root) {\n              return null;\n            }\n\n            var xref = this.xref;\n            var kidsOrEntries = xref.fetchIfRef(this.root);\n            var loopCount = 0;\n            var MAX_LEVELS = 10;\n\n            while (kidsOrEntries.has(\"Kids\")) {\n              if (++loopCount > MAX_LEVELS) {\n                (0, _util.warn)(\"Search depth limit reached for \\\"\".concat(this._type, \"\\\" tree.\"));\n                return null;\n              }\n\n              var kids = kidsOrEntries.get(\"Kids\");\n\n              if (!Array.isArray(kids)) {\n                return null;\n              }\n\n              var l = 0,\n                  r = kids.length - 1;\n\n              while (l <= r) {\n                var m = l + r >> 1;\n                var kid = xref.fetchIfRef(kids[m]);\n                var limits = kid.get(\"Limits\");\n\n                if (key < xref.fetchIfRef(limits[0])) {\n                  r = m - 1;\n                } else if (key > xref.fetchIfRef(limits[1])) {\n                  l = m + 1;\n                } else {\n                  kidsOrEntries = xref.fetchIfRef(kids[m]);\n                  break;\n                }\n              }\n\n              if (l > r) {\n                return null;\n              }\n            }\n\n            var entries = kidsOrEntries.get(this._type);\n\n            if (Array.isArray(entries)) {\n              var _l = 0,\n                  _r = entries.length - 2;\n\n              while (_l <= _r) {\n                var tmp = _l + _r >> 1,\n                    _m = tmp + (tmp & 1);\n\n                var currentKey = xref.fetchIfRef(entries[_m]);\n\n                if (key < currentKey) {\n                  _r = _m - 2;\n                } else if (key > currentKey) {\n                  _l = _m + 2;\n                } else {\n                  return xref.fetchIfRef(entries[_m + 1]);\n                }\n              }\n\n              (0, _util.info)(\"Falling back to an exhaustive search, for key \\\"\".concat(key, \"\\\", \") + \"in \\\"\".concat(this._type, \"\\\" tree.\"));\n\n              for (var _m2 = 0, mm = entries.length; _m2 < mm; _m2 += 2) {\n                var _currentKey = xref.fetchIfRef(entries[_m2]);\n\n                if (_currentKey === key) {\n                  (0, _util.warn)(\"The \\\"\".concat(key, \"\\\" key was found at an incorrect, \") + \"i.e. out-of-order, position in \\\"\".concat(this._type, \"\\\" tree.\"));\n                  return xref.fetchIfRef(entries[_m2 + 1]);\n                }\n              }\n            }\n\n            return null;\n          }\n        }]);\n\n        return NameOrNumberTree;\n      }();\n\n      var NameTree = /*#__PURE__*/function (_NameOrNumberTree) {\n        _inherits(NameTree, _NameOrNumberTree);\n\n        var _super14 = _createSuper(NameTree);\n\n        function NameTree(root, xref) {\n          _classCallCheck(this, NameTree);\n\n          return _super14.call(this, root, xref, \"Names\");\n        }\n\n        return NameTree;\n      }(NameOrNumberTree);\n\n      var NumberTree = /*#__PURE__*/function (_NameOrNumberTree2) {\n        _inherits(NumberTree, _NameOrNumberTree2);\n\n        var _super15 = _createSuper(NumberTree);\n\n        function NumberTree(root, xref) {\n          _classCallCheck(this, NumberTree);\n\n          return _super15.call(this, root, xref, \"Nums\");\n        }\n\n        return NumberTree;\n      }(NameOrNumberTree);\n\n      var FileSpec = function FileSpecClosure() {\n        function FileSpec(root, xref) {\n          if (!root || !(0, _primitives.isDict)(root)) {\n            return;\n          }\n\n          this.xref = xref;\n          this.root = root;\n\n          if (root.has(\"FS\")) {\n            this.fs = root.get(\"FS\");\n          }\n\n          this.description = root.has(\"Desc\") ? (0, _util.stringToPDFString)(root.get(\"Desc\")) : \"\";\n\n          if (root.has(\"RF\")) {\n            (0, _util.warn)(\"Related file specifications are not supported\");\n          }\n\n          this.contentAvailable = true;\n\n          if (!root.has(\"EF\")) {\n            this.contentAvailable = false;\n            (0, _util.warn)(\"Non-embedded file specifications are not supported\");\n          }\n        }\n\n        function pickPlatformItem(dict) {\n          if (dict.has(\"UF\")) {\n            return dict.get(\"UF\");\n          } else if (dict.has(\"F\")) {\n            return dict.get(\"F\");\n          } else if (dict.has(\"Unix\")) {\n            return dict.get(\"Unix\");\n          } else if (dict.has(\"Mac\")) {\n            return dict.get(\"Mac\");\n          } else if (dict.has(\"DOS\")) {\n            return dict.get(\"DOS\");\n          }\n\n          return null;\n        }\n\n        FileSpec.prototype = {\n          get filename() {\n            if (!this._filename && this.root) {\n              var filename = pickPlatformItem(this.root) || \"unnamed\";\n              this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\\\//g, \"/\").replace(/\\\\/g, \"/\");\n            }\n\n            return this._filename;\n          },\n\n          get content() {\n            if (!this.contentAvailable) {\n              return null;\n            }\n\n            if (!this.contentRef && this.root) {\n              this.contentRef = pickPlatformItem(this.root.get(\"EF\"));\n            }\n\n            var content = null;\n\n            if (this.contentRef) {\n              var xref = this.xref;\n              var fileObj = xref.fetchIfRef(this.contentRef);\n\n              if (fileObj && (0, _primitives.isStream)(fileObj)) {\n                content = fileObj.getBytes();\n              } else {\n                (0, _util.warn)(\"Embedded file specification points to non-existing/invalid \" + \"content\");\n              }\n            } else {\n              (0, _util.warn)(\"Embedded file specification does not have a content\");\n            }\n\n            return content;\n          },\n\n          get serializable() {\n            return {\n              filename: this.filename,\n              content: this.content\n            };\n          }\n\n        };\n        return FileSpec;\n      }();\n\n      exports.FileSpec = FileSpec;\n\n      var ObjectLoader = function () {\n        function mayHaveChildren(value) {\n          return value instanceof _primitives.Ref || value instanceof _primitives.Dict || Array.isArray(value) || (0, _primitives.isStream)(value);\n        }\n\n        function addChildren(node, nodesToVisit) {\n          if (node instanceof _primitives.Dict) {\n            node = node.getRawValues();\n          } else if ((0, _primitives.isStream)(node)) {\n            node = node.dict.getRawValues();\n          } else if (!Array.isArray(node)) {\n            return;\n          }\n\n          var _iterator25 = _createForOfIteratorHelper(node),\n              _step25;\n\n          try {\n            for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n              var rawValue = _step25.value;\n\n              if (mayHaveChildren(rawValue)) {\n                nodesToVisit.push(rawValue);\n              }\n            }\n          } catch (err) {\n            _iterator25.e(err);\n          } finally {\n            _iterator25.f();\n          }\n        }\n\n        function ObjectLoader(dict, keys, xref) {\n          this.dict = dict;\n          this.keys = keys;\n          this.xref = xref;\n          this.refSet = null;\n        }\n\n        ObjectLoader.prototype = {\n          load: function load() {\n            var _this21 = this;\n\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n              var keys, dict, nodesToVisit, i, ii, rawValue;\n              return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                while (1) {\n                  switch (_context10.prev = _context10.next) {\n                    case 0:\n                      if (!(!_this21.xref.stream.allChunksLoaded || _this21.xref.stream.allChunksLoaded())) {\n                        _context10.next = 2;\n                        break;\n                      }\n\n                      return _context10.abrupt(\"return\", undefined);\n\n                    case 2:\n                      keys = _this21.keys, dict = _this21.dict;\n                      _this21.refSet = new _primitives.RefSet();\n                      nodesToVisit = [];\n\n                      for (i = 0, ii = keys.length; i < ii; i++) {\n                        rawValue = dict.getRaw(keys[i]);\n\n                        if (rawValue !== undefined) {\n                          nodesToVisit.push(rawValue);\n                        }\n                      }\n\n                      return _context10.abrupt(\"return\", _this21._walk(nodesToVisit));\n\n                    case 7:\n                    case \"end\":\n                      return _context10.stop();\n                  }\n                }\n              }, _callee10);\n            }))();\n          },\n          _walk: function _walk(nodesToVisit) {\n            var _this22 = this;\n\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n              var nodesToRevisit, pendingRequests, currentNode, baseStreams, foundMissingData, i, ii, stream, _i10, _ii2, node;\n\n              return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      nodesToRevisit = [];\n                      pendingRequests = [];\n\n                    case 2:\n                      if (!nodesToVisit.length) {\n                        _context11.next = 22;\n                        break;\n                      }\n\n                      currentNode = nodesToVisit.pop();\n\n                      if (!(currentNode instanceof _primitives.Ref)) {\n                        _context11.next = 18;\n                        break;\n                      }\n\n                      if (!_this22.refSet.has(currentNode)) {\n                        _context11.next = 7;\n                        break;\n                      }\n\n                      return _context11.abrupt(\"continue\", 2);\n\n                    case 7:\n                      _context11.prev = 7;\n\n                      _this22.refSet.put(currentNode);\n\n                      currentNode = _this22.xref.fetch(currentNode);\n                      _context11.next = 18;\n                      break;\n\n                    case 12:\n                      _context11.prev = 12;\n                      _context11.t0 = _context11[\"catch\"](7);\n\n                      if (_context11.t0 instanceof _core_utils.MissingDataException) {\n                        _context11.next = 16;\n                        break;\n                      }\n\n                      throw _context11.t0;\n\n                    case 16:\n                      nodesToRevisit.push(currentNode);\n                      pendingRequests.push({\n                        begin: _context11.t0.begin,\n                        end: _context11.t0.end\n                      });\n\n                    case 18:\n                      if (currentNode && currentNode.getBaseStreams) {\n                        baseStreams = currentNode.getBaseStreams();\n                        foundMissingData = false;\n\n                        for (i = 0, ii = baseStreams.length; i < ii; i++) {\n                          stream = baseStreams[i];\n\n                          if (stream.allChunksLoaded && !stream.allChunksLoaded()) {\n                            foundMissingData = true;\n                            pendingRequests.push({\n                              begin: stream.start,\n                              end: stream.end\n                            });\n                          }\n                        }\n\n                        if (foundMissingData) {\n                          nodesToRevisit.push(currentNode);\n                        }\n                      }\n\n                      addChildren(currentNode, nodesToVisit);\n                      _context11.next = 2;\n                      break;\n\n                    case 22:\n                      if (!pendingRequests.length) {\n                        _context11.next = 27;\n                        break;\n                      }\n\n                      _context11.next = 25;\n                      return _this22.xref.stream.manager.requestRanges(pendingRequests);\n\n                    case 25:\n                      for (_i10 = 0, _ii2 = nodesToRevisit.length; _i10 < _ii2; _i10++) {\n                        node = nodesToRevisit[_i10];\n\n                        if (node instanceof _primitives.Ref) {\n                          _this22.refSet.remove(node);\n                        }\n                      }\n\n                      return _context11.abrupt(\"return\", _this22._walk(nodesToRevisit));\n\n                    case 27:\n                      _this22.refSet = null;\n                      return _context11.abrupt(\"return\", undefined);\n\n                    case 29:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, null, [[7, 12]]);\n            }))();\n          }\n        };\n        return ObjectLoader;\n      }();\n\n      exports.ObjectLoader = ObjectLoader;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Parser = exports.Linearization = exports.Lexer = void 0;\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _ccitt_stream = __w_pdfjs_require__(13);\n\n      var _jbig2_stream = __w_pdfjs_require__(15);\n\n      var _jpeg_stream = __w_pdfjs_require__(18);\n\n      var _jpx_stream = __w_pdfjs_require__(20);\n\n      var MAX_LENGTH_TO_CACHE = 1000;\n      var MAX_ADLER32_LENGTH = 5552;\n\n      function computeAdler32(bytes) {\n        var bytesLength = bytes.length;\n        var a = 1,\n            b = 0;\n\n        for (var i = 0; i < bytesLength; ++i) {\n          a += bytes[i] & 0xff;\n          b += a;\n        }\n\n        return b % 65521 << 16 | a % 65521;\n      }\n\n      var Parser = /*#__PURE__*/function () {\n        function Parser(_ref24) {\n          var lexer = _ref24.lexer,\n              xref = _ref24.xref,\n              _ref24$allowStreams = _ref24.allowStreams,\n              allowStreams = _ref24$allowStreams === void 0 ? false : _ref24$allowStreams,\n              _ref24$recoveryMode = _ref24.recoveryMode,\n              recoveryMode = _ref24$recoveryMode === void 0 ? false : _ref24$recoveryMode;\n\n          _classCallCheck(this, Parser);\n\n          this.lexer = lexer;\n          this.xref = xref;\n          this.allowStreams = allowStreams;\n          this.recoveryMode = recoveryMode;\n          this.imageCache = Object.create(null);\n          this.refill();\n        }\n\n        _createClass(Parser, [{\n          key: \"refill\",\n          value: function refill() {\n            this.buf1 = this.lexer.getObj();\n            this.buf2 = this.lexer.getObj();\n          }\n        }, {\n          key: \"shift\",\n          value: function shift() {\n            if (this.buf2 instanceof _primitives.Cmd && this.buf2.cmd === \"ID\") {\n              this.buf1 = this.buf2;\n              this.buf2 = null;\n            } else {\n              this.buf1 = this.buf2;\n              this.buf2 = this.lexer.getObj();\n            }\n          }\n        }, {\n          key: \"tryShift\",\n          value: function tryShift() {\n            try {\n              this.shift();\n              return true;\n            } catch (e) {\n              if (e instanceof _core_utils.MissingDataException) {\n                throw e;\n              }\n\n              return false;\n            }\n          }\n        }, {\n          key: \"getObj\",\n          value: function getObj() {\n            var cipherTransform = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            var buf1 = this.buf1;\n            this.shift();\n\n            if (buf1 instanceof _primitives.Cmd) {\n              switch (buf1.cmd) {\n                case \"BI\":\n                  return this.makeInlineImage(cipherTransform);\n\n                case \"[\":\n                  var array = [];\n\n                  while (!(0, _primitives.isCmd)(this.buf1, \"]\") && !(0, _primitives.isEOF)(this.buf1)) {\n                    array.push(this.getObj(cipherTransform));\n                  }\n\n                  if ((0, _primitives.isEOF)(this.buf1)) {\n                    if (!this.recoveryMode) {\n                      throw new _util.FormatError(\"End of file inside array\");\n                    }\n\n                    return array;\n                  }\n\n                  this.shift();\n                  return array;\n\n                case \"<<\":\n                  var dict = new _primitives.Dict(this.xref);\n\n                  while (!(0, _primitives.isCmd)(this.buf1, \">>\") && !(0, _primitives.isEOF)(this.buf1)) {\n                    if (!(0, _primitives.isName)(this.buf1)) {\n                      (0, _util.info)(\"Malformed dictionary: key must be a name object\");\n                      this.shift();\n                      continue;\n                    }\n\n                    var key = this.buf1.name;\n                    this.shift();\n\n                    if ((0, _primitives.isEOF)(this.buf1)) {\n                      break;\n                    }\n\n                    dict.set(key, this.getObj(cipherTransform));\n                  }\n\n                  if ((0, _primitives.isEOF)(this.buf1)) {\n                    if (!this.recoveryMode) {\n                      throw new _util.FormatError(\"End of file inside dictionary\");\n                    }\n\n                    return dict;\n                  }\n\n                  if ((0, _primitives.isCmd)(this.buf2, \"stream\")) {\n                    return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n                  }\n\n                  this.shift();\n                  return dict;\n\n                default:\n                  return buf1;\n              }\n            }\n\n            if (Number.isInteger(buf1)) {\n              if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, \"R\")) {\n                var ref = _primitives.Ref.get(buf1, this.buf1);\n\n                this.shift();\n                this.shift();\n                return ref;\n              }\n\n              return buf1;\n            }\n\n            if (typeof buf1 === \"string\") {\n              if (cipherTransform) {\n                return cipherTransform.decryptString(buf1);\n              }\n\n              return buf1;\n            }\n\n            return buf1;\n          }\n        }, {\n          key: \"findDefaultInlineStreamEnd\",\n          value: function findDefaultInlineStreamEnd(stream) {\n            var E = 0x45,\n                I = 0x49,\n                SPACE = 0x20,\n                LF = 0xa,\n                CR = 0xd,\n                NUL = 0x0;\n            var lexer = this.lexer,\n                startPos = stream.pos,\n                n = 10;\n            var state = 0,\n                ch,\n                maybeEIPos;\n\n            while ((ch = stream.getByte()) !== -1) {\n              if (state === 0) {\n                state = ch === E ? 1 : 0;\n              } else if (state === 1) {\n                state = ch === I ? 2 : 0;\n              } else {\n                (0, _util.assert)(state === 2, \"findDefaultInlineStreamEnd - invalid state.\");\n\n                if (ch === SPACE || ch === LF || ch === CR) {\n                  maybeEIPos = stream.pos;\n                  var followingBytes = stream.peekBytes(n);\n\n                  for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                    ch = followingBytes[i];\n\n                    if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                      continue;\n                    }\n\n                    if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7f)) {\n                      state = 0;\n                      break;\n                    }\n                  }\n\n                  if (state !== 2) {\n                    continue;\n                  }\n\n                  if (lexer.knownCommands) {\n                    var nextObj = lexer.peekObj();\n\n                    if (nextObj instanceof _primitives.Cmd && !lexer.knownCommands[nextObj.cmd]) {\n                      state = 0;\n                    }\n                  } else {\n                    (0, _util.warn)(\"findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.\");\n                  }\n\n                  if (state === 2) {\n                    break;\n                  }\n                } else {\n                  state = 0;\n                }\n              }\n            }\n\n            if (ch === -1) {\n              (0, _util.warn)(\"findDefaultInlineStreamEnd: \" + \"Reached the end of the stream without finding a valid EI marker\");\n\n              if (maybeEIPos) {\n                (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n                stream.skip(-(stream.pos - maybeEIPos));\n              }\n            }\n\n            var endOffset = 4;\n            stream.skip(-endOffset);\n            ch = stream.peekByte();\n            stream.skip(endOffset);\n\n            if (!(0, _core_utils.isWhiteSpace)(ch)) {\n              endOffset--;\n            }\n\n            return stream.pos - endOffset - startPos;\n          }\n        }, {\n          key: \"findDCTDecodeInlineStreamEnd\",\n          value: function findDCTDecodeInlineStreamEnd(stream) {\n            var startPos = stream.pos;\n            var foundEOI = false,\n                b,\n                markerLength;\n\n            while ((b = stream.getByte()) !== -1) {\n              if (b !== 0xff) {\n                continue;\n              }\n\n              switch (stream.getByte()) {\n                case 0x00:\n                  break;\n\n                case 0xff:\n                  stream.skip(-1);\n                  break;\n\n                case 0xd9:\n                  foundEOI = true;\n                  break;\n\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                  markerLength = stream.getUint16();\n\n                  if (markerLength > 2) {\n                    stream.skip(markerLength - 2);\n                  } else {\n                    stream.skip(-2);\n                  }\n\n                  break;\n              }\n\n              if (foundEOI) {\n                break;\n              }\n            }\n\n            var length = stream.pos - startPos;\n\n            if (b === -1) {\n              (0, _util.warn)(\"Inline DCTDecode image stream: \" + \"EOI marker not found, searching for /EI/ instead.\");\n              stream.skip(-length);\n              return this.findDefaultInlineStreamEnd(stream);\n            }\n\n            this.inlineStreamSkipEI(stream);\n            return length;\n          }\n        }, {\n          key: \"findASCII85DecodeInlineStreamEnd\",\n          value: function findASCII85DecodeInlineStreamEnd(stream) {\n            var TILDE = 0x7e,\n                GT = 0x3e;\n            var startPos = stream.pos;\n            var ch;\n\n            while ((ch = stream.getByte()) !== -1) {\n              if (ch === TILDE) {\n                var tildePos = stream.pos;\n                ch = stream.peekByte();\n\n                while ((0, _core_utils.isWhiteSpace)(ch)) {\n                  stream.skip();\n                  ch = stream.peekByte();\n                }\n\n                if (ch === GT) {\n                  stream.skip();\n                  break;\n                }\n\n                if (stream.pos > tildePos) {\n                  var maybeEI = stream.peekBytes(2);\n\n                  if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                    break;\n                  }\n                }\n              }\n            }\n\n            var length = stream.pos - startPos;\n\n            if (ch === -1) {\n              (0, _util.warn)(\"Inline ASCII85Decode image stream: \" + \"EOD marker not found, searching for /EI/ instead.\");\n              stream.skip(-length);\n              return this.findDefaultInlineStreamEnd(stream);\n            }\n\n            this.inlineStreamSkipEI(stream);\n            return length;\n          }\n        }, {\n          key: \"findASCIIHexDecodeInlineStreamEnd\",\n          value: function findASCIIHexDecodeInlineStreamEnd(stream) {\n            var GT = 0x3e;\n            var startPos = stream.pos;\n            var ch;\n\n            while ((ch = stream.getByte()) !== -1) {\n              if (ch === GT) {\n                break;\n              }\n            }\n\n            var length = stream.pos - startPos;\n\n            if (ch === -1) {\n              (0, _util.warn)(\"Inline ASCIIHexDecode image stream: \" + \"EOD marker not found, searching for /EI/ instead.\");\n              stream.skip(-length);\n              return this.findDefaultInlineStreamEnd(stream);\n            }\n\n            this.inlineStreamSkipEI(stream);\n            return length;\n          }\n        }, {\n          key: \"inlineStreamSkipEI\",\n          value: function inlineStreamSkipEI(stream) {\n            var E = 0x45,\n                I = 0x49;\n            var state = 0,\n                ch;\n\n            while ((ch = stream.getByte()) !== -1) {\n              if (state === 0) {\n                state = ch === E ? 1 : 0;\n              } else if (state === 1) {\n                state = ch === I ? 2 : 0;\n              } else if (state === 2) {\n                break;\n              }\n            }\n          }\n        }, {\n          key: \"makeInlineImage\",\n          value: function makeInlineImage(cipherTransform) {\n            var lexer = this.lexer;\n            var stream = lexer.stream;\n            var dict = new _primitives.Dict(this.xref);\n            var dictLength;\n\n            while (!(0, _primitives.isCmd)(this.buf1, \"ID\") && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                throw new _util.FormatError(\"Dictionary key must be a name object\");\n              }\n\n              var key = this.buf1.name;\n              this.shift();\n\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n\n              dict.set(key, this.getObj(cipherTransform));\n            }\n\n            if (lexer.beginInlineImagePos !== -1) {\n              dictLength = stream.pos - lexer.beginInlineImagePos;\n            }\n\n            var filter = dict.get(\"Filter\", \"F\");\n            var filterName;\n\n            if ((0, _primitives.isName)(filter)) {\n              filterName = filter.name;\n            } else if (Array.isArray(filter)) {\n              var filterZero = this.xref.fetchIfRef(filter[0]);\n\n              if ((0, _primitives.isName)(filterZero)) {\n                filterName = filterZero.name;\n              }\n            }\n\n            var startPos = stream.pos;\n            var length;\n\n            if (filterName === \"DCTDecode\" || filterName === \"DCT\") {\n              length = this.findDCTDecodeInlineStreamEnd(stream);\n            } else if (filterName === \"ASCII85Decode\" || filterName === \"A85\") {\n              length = this.findASCII85DecodeInlineStreamEnd(stream);\n            } else if (filterName === \"ASCIIHexDecode\" || filterName === \"AHx\") {\n              length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n            } else {\n              length = this.findDefaultInlineStreamEnd(stream);\n            }\n\n            var imageStream = stream.makeSubStream(startPos, length, dict);\n            var cacheKey;\n\n            if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n              var imageBytes = imageStream.getBytes();\n              imageStream.reset();\n              var initialStreamPos = stream.pos;\n              stream.pos = lexer.beginInlineImagePos;\n              var dictBytes = stream.getBytes(dictLength);\n              stream.pos = initialStreamPos;\n              cacheKey = computeAdler32(imageBytes) + \"_\" + computeAdler32(dictBytes);\n              var cacheEntry = this.imageCache[cacheKey];\n\n              if (cacheEntry !== undefined) {\n                this.buf2 = _primitives.Cmd.get(\"EI\");\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n              }\n            }\n\n            if (cipherTransform) {\n              imageStream = cipherTransform.createStream(imageStream, length);\n            }\n\n            imageStream = this.filter(imageStream, dict, length);\n            imageStream.dict = dict;\n\n            if (cacheKey !== undefined) {\n              imageStream.cacheKey = \"inline_\".concat(length, \"_\").concat(cacheKey);\n              this.imageCache[cacheKey] = imageStream;\n            }\n\n            this.buf2 = _primitives.Cmd.get(\"EI\");\n            this.shift();\n            return imageStream;\n          }\n        }, {\n          key: \"_findStreamLength\",\n          value: function _findStreamLength(startPos, signature) {\n            var stream = this.lexer.stream;\n            stream.pos = startPos;\n            var SCAN_BLOCK_LENGTH = 2048;\n            var signatureLength = signature.length;\n\n            while (stream.pos < stream.end) {\n              var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n              var scanLength = scanBytes.length - signatureLength;\n\n              if (scanLength <= 0) {\n                break;\n              }\n\n              var pos = 0;\n\n              while (pos < scanLength) {\n                var j = 0;\n\n                while (j < signatureLength && scanBytes[pos + j] === signature[j]) {\n                  j++;\n                }\n\n                if (j >= signatureLength) {\n                  stream.pos += pos;\n                  return stream.pos - startPos;\n                }\n\n                pos++;\n              }\n\n              stream.pos += scanLength;\n            }\n\n            return -1;\n          }\n        }, {\n          key: \"makeStream\",\n          value: function makeStream(dict, cipherTransform) {\n            var lexer = this.lexer;\n            var stream = lexer.stream;\n            lexer.skipToNextLine();\n            var startPos = stream.pos - 1;\n            var length = dict.get(\"Length\");\n\n            if (!Number.isInteger(length)) {\n              (0, _util.info)(\"Bad length \\\"\".concat(length, \"\\\" in stream\"));\n              length = 0;\n            }\n\n            stream.pos = startPos + length;\n            lexer.nextChar();\n\n            if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, \"endstream\")) {\n              this.shift();\n            } else {\n              var ENDSTREAM_SIGNATURE = new Uint8Array([0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D]);\n\n              var actualLength = this._findStreamLength(startPos, ENDSTREAM_SIGNATURE);\n\n              if (actualLength < 0) {\n                var MAX_TRUNCATION = 1;\n\n                for (var i = 1; i <= MAX_TRUNCATION; i++) {\n                  var end = ENDSTREAM_SIGNATURE.length - i;\n                  var TRUNCATED_SIGNATURE = ENDSTREAM_SIGNATURE.slice(0, end);\n\n                  var maybeLength = this._findStreamLength(startPos, TRUNCATED_SIGNATURE);\n\n                  if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end];\n\n                    if (!(0, _core_utils.isWhiteSpace)(lastByte)) {\n                      break;\n                    }\n\n                    (0, _util.info)(\"Found \\\"\".concat((0, _util.bytesToString)(TRUNCATED_SIGNATURE), \"\\\" when \") + \"searching for endstream command.\");\n                    actualLength = maybeLength;\n                    break;\n                  }\n                }\n\n                if (actualLength < 0) {\n                  throw new _util.FormatError(\"Missing endstream command.\");\n                }\n              }\n\n              length = actualLength;\n              lexer.nextChar();\n              this.shift();\n              this.shift();\n            }\n\n            this.shift();\n            stream = stream.makeSubStream(startPos, length, dict);\n\n            if (cipherTransform) {\n              stream = cipherTransform.createStream(stream, length);\n            }\n\n            stream = this.filter(stream, dict, length);\n            stream.dict = dict;\n            return stream;\n          }\n        }, {\n          key: \"filter\",\n          value: function filter(stream, dict, length) {\n            var filter = dict.get(\"Filter\", \"F\");\n            var params = dict.get(\"DecodeParms\", \"DP\");\n\n            if ((0, _primitives.isName)(filter)) {\n              if (Array.isArray(params)) {\n                (0, _util.warn)(\"/DecodeParms should not contain an Array, \" + \"when /Filter contains a Name.\");\n              }\n\n              return this.makeFilter(stream, filter.name, length, params);\n            }\n\n            var maybeLength = length;\n\n            if (Array.isArray(filter)) {\n              var filterArray = filter;\n              var paramsArray = params;\n\n              for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n                filter = this.xref.fetchIfRef(filterArray[i]);\n\n                if (!(0, _primitives.isName)(filter)) {\n                  throw new _util.FormatError(\"Bad filter name \\\"\".concat(filter, \"\\\"\"));\n                }\n\n                params = null;\n\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                  params = this.xref.fetchIfRef(paramsArray[i]);\n                }\n\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n              }\n            }\n\n            return stream;\n          }\n        }, {\n          key: \"makeFilter\",\n          value: function makeFilter(stream, name, maybeLength, params) {\n            if (maybeLength === 0) {\n              (0, _util.warn)(\"Empty \\\"\".concat(name, \"\\\" stream.\"));\n              return new _stream.NullStream();\n            }\n\n            try {\n              var xrefStreamStats = this.xref.stats.streamTypes;\n\n              if (name === \"FlateDecode\" || name === \"Fl\") {\n                xrefStreamStats[_util.StreamType.FLATE] = true;\n\n                if (params) {\n                  return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n                }\n\n                return new _stream.FlateStream(stream, maybeLength);\n              }\n\n              if (name === \"LZWDecode\" || name === \"LZW\") {\n                xrefStreamStats[_util.StreamType.LZW] = true;\n                var earlyChange = 1;\n\n                if (params) {\n                  if (params.has(\"EarlyChange\")) {\n                    earlyChange = params.get(\"EarlyChange\");\n                  }\n\n                  return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n                }\n\n                return new _stream.LZWStream(stream, maybeLength, earlyChange);\n              }\n\n              if (name === \"DCTDecode\" || name === \"DCT\") {\n                xrefStreamStats[_util.StreamType.DCT] = true;\n                return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n              }\n\n              if (name === \"JPXDecode\" || name === \"JPX\") {\n                xrefStreamStats[_util.StreamType.JPX] = true;\n                return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n              }\n\n              if (name === \"ASCII85Decode\" || name === \"A85\") {\n                xrefStreamStats[_util.StreamType.A85] = true;\n                return new _stream.Ascii85Stream(stream, maybeLength);\n              }\n\n              if (name === \"ASCIIHexDecode\" || name === \"AHx\") {\n                xrefStreamStats[_util.StreamType.AHX] = true;\n                return new _stream.AsciiHexStream(stream, maybeLength);\n              }\n\n              if (name === \"CCITTFaxDecode\" || name === \"CCF\") {\n                xrefStreamStats[_util.StreamType.CCF] = true;\n                return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n              }\n\n              if (name === \"RunLengthDecode\" || name === \"RL\") {\n                xrefStreamStats[_util.StreamType.RLX] = true;\n                return new _stream.RunLengthStream(stream, maybeLength);\n              }\n\n              if (name === \"JBIG2Decode\") {\n                xrefStreamStats[_util.StreamType.JBIG] = true;\n                return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n              }\n\n              (0, _util.warn)(\"Filter \\\"\".concat(name, \"\\\" is not supported.\"));\n              return stream;\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Invalid stream: \\\"\".concat(ex, \"\\\"\"));\n              return new _stream.NullStream();\n            }\n          }\n        }]);\n\n        return Parser;\n      }();\n\n      exports.Parser = Parser;\n      var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n      function toHexDigit(ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n          return ch & 0x0f;\n        }\n\n        if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n          return (ch & 0x0f) + 9;\n        }\n\n        return -1;\n      }\n\n      var Lexer = /*#__PURE__*/function () {\n        function Lexer(stream) {\n          var knownCommands = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n          _classCallCheck(this, Lexer);\n\n          this.stream = stream;\n          this.nextChar();\n          this.strBuf = [];\n          this.knownCommands = knownCommands;\n          this._hexStringNumWarn = 0;\n          this.beginInlineImagePos = -1;\n        }\n\n        _createClass(Lexer, [{\n          key: \"nextChar\",\n          value: function nextChar() {\n            return this.currentChar = this.stream.getByte();\n          }\n        }, {\n          key: \"peekChar\",\n          value: function peekChar() {\n            return this.stream.peekByte();\n          }\n        }, {\n          key: \"getNumber\",\n          value: function getNumber() {\n            var ch = this.currentChar;\n            var eNotation = false;\n            var divideBy = 0;\n            var sign = 0;\n\n            if (ch === 0x2d) {\n              sign = -1;\n              ch = this.nextChar();\n\n              if (ch === 0x2d) {\n                ch = this.nextChar();\n              }\n            } else if (ch === 0x2b) {\n              sign = 1;\n              ch = this.nextChar();\n            }\n\n            if (ch === 0x0a || ch === 0x0d) {\n              do {\n                ch = this.nextChar();\n              } while (ch === 0x0a || ch === 0x0d);\n            }\n\n            if (ch === 0x2e) {\n              divideBy = 10;\n              ch = this.nextChar();\n            }\n\n            if (ch < 0x30 || ch > 0x39) {\n              if (divideBy === 10 && sign === 0 && ((0, _core_utils.isWhiteSpace)(ch) || ch === -1)) {\n                (0, _util.warn)(\"Lexer.getNumber - treating a single decimal point as zero.\");\n                return 0;\n              }\n\n              throw new _util.FormatError(\"Invalid number: \".concat(String.fromCharCode(ch), \" (charCode \").concat(ch, \")\"));\n            }\n\n            sign = sign || 1;\n            var baseValue = ch - 0x30;\n            var powerValue = 0;\n            var powerValueSign = 1;\n\n            while ((ch = this.nextChar()) >= 0) {\n              if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n\n                if (eNotation) {\n                  powerValue = powerValue * 10 + currentDigit;\n                } else {\n                  if (divideBy !== 0) {\n                    divideBy *= 10;\n                  }\n\n                  baseValue = baseValue * 10 + currentDigit;\n                }\n              } else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                  divideBy = 1;\n                } else {\n                  break;\n                }\n              } else if (ch === 0x2d) {\n                (0, _util.warn)(\"Badly formatted number: minus sign in the middle\");\n              } else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n\n                if (ch === 0x2b || ch === 0x2d) {\n                  powerValueSign = ch === 0x2d ? -1 : 1;\n                  this.nextChar();\n                } else if (ch < 0x30 || ch > 0x39) {\n                  break;\n                }\n\n                eNotation = true;\n              } else {\n                break;\n              }\n            }\n\n            if (divideBy !== 0) {\n              baseValue /= divideBy;\n            }\n\n            if (eNotation) {\n              baseValue *= Math.pow(10, powerValueSign * powerValue);\n            }\n\n            return sign * baseValue;\n          }\n        }, {\n          key: \"getString\",\n          value: function getString() {\n            var numParen = 1;\n            var done = false;\n            var strBuf = this.strBuf;\n            strBuf.length = 0;\n            var ch = this.nextChar();\n\n            while (true) {\n              var charBuffered = false;\n\n              switch (ch | 0) {\n                case -1:\n                  (0, _util.warn)(\"Unterminated string\");\n                  done = true;\n                  break;\n\n                case 0x28:\n                  ++numParen;\n                  strBuf.push(\"(\");\n                  break;\n\n                case 0x29:\n                  if (--numParen === 0) {\n                    this.nextChar();\n                    done = true;\n                  } else {\n                    strBuf.push(\")\");\n                  }\n\n                  break;\n\n                case 0x5c:\n                  ch = this.nextChar();\n\n                  switch (ch) {\n                    case -1:\n                      (0, _util.warn)(\"Unterminated string\");\n                      done = true;\n                      break;\n\n                    case 0x6e:\n                      strBuf.push(\"\\n\");\n                      break;\n\n                    case 0x72:\n                      strBuf.push(\"\\r\");\n                      break;\n\n                    case 0x74:\n                      strBuf.push(\"\\t\");\n                      break;\n\n                    case 0x62:\n                      strBuf.push(\"\\b\");\n                      break;\n\n                    case 0x66:\n                      strBuf.push(\"\\f\");\n                      break;\n\n                    case 0x5c:\n                    case 0x28:\n                    case 0x29:\n                      strBuf.push(String.fromCharCode(ch));\n                      break;\n\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                      var x = ch & 0x0f;\n                      ch = this.nextChar();\n                      charBuffered = true;\n\n                      if (ch >= 0x30 && ch <= 0x37) {\n                        x = (x << 3) + (ch & 0x0f);\n                        ch = this.nextChar();\n\n                        if (ch >= 0x30 && ch <= 0x37) {\n                          charBuffered = false;\n                          x = (x << 3) + (ch & 0x0f);\n                        }\n                      }\n\n                      strBuf.push(String.fromCharCode(x));\n                      break;\n\n                    case 0x0d:\n                      if (this.peekChar() === 0x0a) {\n                        this.nextChar();\n                      }\n\n                      break;\n\n                    case 0x0a:\n                      break;\n\n                    default:\n                      strBuf.push(String.fromCharCode(ch));\n                      break;\n                  }\n\n                  break;\n\n                default:\n                  strBuf.push(String.fromCharCode(ch));\n                  break;\n              }\n\n              if (done) {\n                break;\n              }\n\n              if (!charBuffered) {\n                ch = this.nextChar();\n              }\n            }\n\n            return strBuf.join(\"\");\n          }\n        }, {\n          key: \"getName\",\n          value: function getName() {\n            var ch, previousCh;\n            var strBuf = this.strBuf;\n            strBuf.length = 0;\n\n            while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n              if (ch === 0x23) {\n                ch = this.nextChar();\n\n                if (specialChars[ch]) {\n                  (0, _util.warn)(\"Lexer_getName: \" + \"NUMBER SIGN (#) should be followed by a hexadecimal number.\");\n                  strBuf.push(\"#\");\n                  break;\n                }\n\n                var x = toHexDigit(ch);\n\n                if (x !== -1) {\n                  previousCh = ch;\n                  ch = this.nextChar();\n                  var x2 = toHexDigit(ch);\n\n                  if (x2 === -1) {\n                    (0, _util.warn)(\"Lexer_getName: Illegal digit (\".concat(String.fromCharCode(ch), \") \") + \"in hexadecimal number.\");\n                    strBuf.push(\"#\", String.fromCharCode(previousCh));\n\n                    if (specialChars[ch]) {\n                      break;\n                    }\n\n                    strBuf.push(String.fromCharCode(ch));\n                    continue;\n                  }\n\n                  strBuf.push(String.fromCharCode(x << 4 | x2));\n                } else {\n                  strBuf.push(\"#\", String.fromCharCode(ch));\n                }\n              } else {\n                strBuf.push(String.fromCharCode(ch));\n              }\n            }\n\n            if (strBuf.length > 127) {\n              (0, _util.warn)(\"Name token is longer than allowed by the spec: \".concat(strBuf.length));\n            }\n\n            return _primitives.Name.get(strBuf.join(\"\"));\n          }\n        }, {\n          key: \"_hexStringWarn\",\n          value: function _hexStringWarn(ch) {\n            var MAX_HEX_STRING_NUM_WARN = 5;\n\n            if (this._hexStringNumWarn++ === MAX_HEX_STRING_NUM_WARN) {\n              (0, _util.warn)(\"getHexString - ignoring additional invalid characters.\");\n              return;\n            }\n\n            if (this._hexStringNumWarn > MAX_HEX_STRING_NUM_WARN) {\n              return;\n            }\n\n            (0, _util.warn)(\"getHexString - ignoring invalid character: \".concat(ch));\n          }\n        }, {\n          key: \"getHexString\",\n          value: function getHexString() {\n            var strBuf = this.strBuf;\n            strBuf.length = 0;\n            var ch = this.currentChar;\n            var isFirstHex = true;\n            var firstDigit, secondDigit;\n            this._hexStringNumWarn = 0;\n\n            while (true) {\n              if (ch < 0) {\n                (0, _util.warn)(\"Unterminated hex string\");\n                break;\n              } else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n              } else if (specialChars[ch] === 1) {\n                ch = this.nextChar();\n                continue;\n              } else {\n                if (isFirstHex) {\n                  firstDigit = toHexDigit(ch);\n\n                  if (firstDigit === -1) {\n                    this._hexStringWarn(ch);\n\n                    ch = this.nextChar();\n                    continue;\n                  }\n                } else {\n                  secondDigit = toHexDigit(ch);\n\n                  if (secondDigit === -1) {\n                    this._hexStringWarn(ch);\n\n                    ch = this.nextChar();\n                    continue;\n                  }\n\n                  strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n                }\n\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n              }\n            }\n\n            return strBuf.join(\"\");\n          }\n        }, {\n          key: \"getObj\",\n          value: function getObj() {\n            var comment = false;\n            var ch = this.currentChar;\n\n            while (true) {\n              if (ch < 0) {\n                return _primitives.EOF;\n              }\n\n              if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                  comment = false;\n                }\n              } else if (ch === 0x25) {\n                comment = true;\n              } else if (specialChars[ch] !== 1) {\n                break;\n              }\n\n              ch = this.nextChar();\n            }\n\n            switch (ch | 0) {\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n              case 0x38:\n              case 0x39:\n              case 0x2b:\n              case 0x2d:\n              case 0x2e:\n                return this.getNumber();\n\n              case 0x28:\n                return this.getString();\n\n              case 0x2f:\n                return this.getName();\n\n              case 0x5b:\n                this.nextChar();\n                return _primitives.Cmd.get(\"[\");\n\n              case 0x5d:\n                this.nextChar();\n                return _primitives.Cmd.get(\"]\");\n\n              case 0x3c:\n                ch = this.nextChar();\n\n                if (ch === 0x3c) {\n                  this.nextChar();\n                  return _primitives.Cmd.get(\"<<\");\n                }\n\n                return this.getHexString();\n\n              case 0x3e:\n                ch = this.nextChar();\n\n                if (ch === 0x3e) {\n                  this.nextChar();\n                  return _primitives.Cmd.get(\">>\");\n                }\n\n                return _primitives.Cmd.get(\">\");\n\n              case 0x7b:\n                this.nextChar();\n                return _primitives.Cmd.get(\"{\");\n\n              case 0x7d:\n                this.nextChar();\n                return _primitives.Cmd.get(\"}\");\n\n              case 0x29:\n                this.nextChar();\n                throw new _util.FormatError(\"Illegal character: \".concat(ch));\n            }\n\n            var str = String.fromCharCode(ch);\n            var knownCommands = this.knownCommands;\n            var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\n            while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n              var possibleCommand = str + String.fromCharCode(ch);\n\n              if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n                break;\n              }\n\n              if (str.length === 128) {\n                throw new _util.FormatError(\"Command token too long: \".concat(str.length));\n              }\n\n              str = possibleCommand;\n              knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n            }\n\n            if (str === \"true\") {\n              return true;\n            }\n\n            if (str === \"false\") {\n              return false;\n            }\n\n            if (str === \"null\") {\n              return null;\n            }\n\n            if (str === \"BI\") {\n              this.beginInlineImagePos = this.stream.pos;\n            }\n\n            return _primitives.Cmd.get(str);\n          }\n        }, {\n          key: \"peekObj\",\n          value: function peekObj() {\n            var streamPos = this.stream.pos,\n                currentChar = this.currentChar,\n                beginInlineImagePos = this.beginInlineImagePos;\n            var nextObj;\n\n            try {\n              nextObj = this.getObj();\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"peekObj: \".concat(ex));\n            }\n\n            this.stream.pos = streamPos;\n            this.currentChar = currentChar;\n            this.beginInlineImagePos = beginInlineImagePos;\n            return nextObj;\n          }\n        }, {\n          key: \"skipToNextLine\",\n          value: function skipToNextLine() {\n            var ch = this.currentChar;\n\n            while (ch >= 0) {\n              if (ch === 0x0d) {\n                ch = this.nextChar();\n\n                if (ch === 0x0a) {\n                  this.nextChar();\n                }\n\n                break;\n              } else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n              }\n\n              ch = this.nextChar();\n            }\n          }\n        }]);\n\n        return Lexer;\n      }();\n\n      exports.Lexer = Lexer;\n\n      var Linearization = /*#__PURE__*/function () {\n        function Linearization() {\n          _classCallCheck(this, Linearization);\n        }\n\n        _createClass(Linearization, null, [{\n          key: \"create\",\n          value: function create(stream) {\n            function getInt(linDict, name) {\n              var allowZeroValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n              var obj = linDict.get(name);\n\n              if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n                return obj;\n              }\n\n              throw new Error(\"The \\\"\".concat(name, \"\\\" parameter in the linearization \") + \"dictionary is invalid.\");\n            }\n\n            function getHints(linDict) {\n              var hints = linDict.get(\"H\");\n              var hintsLength;\n\n              if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n                for (var index = 0; index < hintsLength; index++) {\n                  var hint = hints[index];\n\n                  if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\".concat(index, \") in the linearization dictionary is invalid.\"));\n                  }\n                }\n\n                return hints;\n              }\n\n              throw new Error(\"Hint array in the linearization dictionary is invalid.\");\n            }\n\n            var parser = new Parser({\n              lexer: new Lexer(stream),\n              xref: null\n            });\n            var obj1 = parser.getObj();\n            var obj2 = parser.getObj();\n            var obj3 = parser.getObj();\n            var linDict = parser.getObj();\n            var obj, length;\n\n            if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, \"obj\") && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get(\"Linearized\")) && obj > 0)) {\n              return null;\n            } else if ((length = getInt(linDict, \"L\")) !== stream.length) {\n              throw new Error('The \"L\" parameter in the linearization dictionary ' + \"does not equal the stream length.\");\n            }\n\n            return {\n              length: length,\n              hints: getHints(linDict),\n              objectNumberFirst: getInt(linDict, \"O\"),\n              endFirst: getInt(linDict, \"E\"),\n              numPages: getInt(linDict, \"N\"),\n              mainXRefEntriesOffset: getInt(linDict, \"T\"),\n              pageFirst: linDict.has(\"P\") ? getInt(linDict, \"P\", true) : 0\n            };\n          }\n        }]);\n\n        return Linearization;\n      }();\n\n      exports.Linearization = Linearization;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var Stream = function StreamClosure() {\n        function Stream(arrayBuffer, start, length, dict) {\n          this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n          this.start = start || 0;\n          this.pos = this.start;\n          this.end = start + length || this.bytes.length;\n          this.dict = dict;\n        }\n\n        Stream.prototype = {\n          get length() {\n            return this.end - this.start;\n          },\n\n          get isEmpty() {\n            return this.length === 0;\n          },\n\n          getByte: function Stream_getByte() {\n            if (this.pos >= this.end) {\n              return -1;\n            }\n\n            return this.bytes[this.pos++];\n          },\n          getUint16: function Stream_getUint16() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n\n            if (b0 === -1 || b1 === -1) {\n              return -1;\n            }\n\n            return (b0 << 8) + b1;\n          },\n          getInt32: function Stream_getInt32() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n            var b2 = this.getByte();\n            var b3 = this.getByte();\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n          },\n          getBytes: function getBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var bytes = this.bytes;\n            var pos = this.pos;\n            var strEnd = this.end;\n\n            if (!length) {\n              var _subarray2 = bytes.subarray(pos, strEnd);\n\n              return forceClamped ? new Uint8ClampedArray(_subarray2) : _subarray2;\n            }\n\n            var end = pos + length;\n\n            if (end > strEnd) {\n              end = strEnd;\n            }\n\n            this.pos = end;\n            var subarray = bytes.subarray(pos, end);\n            return forceClamped ? new Uint8ClampedArray(subarray) : subarray;\n          },\n          peekByte: function Stream_peekByte() {\n            var peekedByte = this.getByte();\n\n            if (peekedByte !== -1) {\n              this.pos--;\n            }\n\n            return peekedByte;\n          },\n          peekBytes: function peekBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var bytes = this.getBytes(length, forceClamped);\n            this.pos -= bytes.length;\n            return bytes;\n          },\n          getByteRange: function getByteRange(begin, end) {\n            if (begin < 0) {\n              begin = 0;\n            }\n\n            if (end > this.end) {\n              end = this.end;\n            }\n\n            return this.bytes.subarray(begin, end);\n          },\n          skip: function Stream_skip(n) {\n            if (!n) {\n              n = 1;\n            }\n\n            this.pos += n;\n          },\n          reset: function Stream_reset() {\n            this.pos = this.start;\n          },\n          moveStart: function Stream_moveStart() {\n            this.start = this.pos;\n          },\n          makeSubStream: function Stream_makeSubStream(start, length, dict) {\n            return new Stream(this.bytes.buffer, start, length, dict);\n          }\n        };\n        return Stream;\n      }();\n\n      exports.Stream = Stream;\n\n      var StringStream = function StringStreamClosure() {\n        function StringStream(str) {\n          var bytes = (0, _util.stringToBytes)(str);\n          Stream.call(this, bytes);\n        }\n\n        StringStream.prototype = Stream.prototype;\n        return StringStream;\n      }();\n\n      exports.StringStream = StringStream;\n\n      var DecodeStream = function DecodeStreamClosure() {\n        var emptyBuffer = new Uint8Array(0);\n\n        function DecodeStream(maybeMinBufferLength) {\n          this._rawMinBufferLength = maybeMinBufferLength || 0;\n          this.pos = 0;\n          this.bufferLength = 0;\n          this.eof = false;\n          this.buffer = emptyBuffer;\n          this.minBufferLength = 512;\n\n          if (maybeMinBufferLength) {\n            while (this.minBufferLength < maybeMinBufferLength) {\n              this.minBufferLength *= 2;\n            }\n          }\n        }\n\n        DecodeStream.prototype = {\n          get isEmpty() {\n            while (!this.eof && this.bufferLength === 0) {\n              this.readBlock();\n            }\n\n            return this.bufferLength === 0;\n          },\n\n          ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n            var buffer = this.buffer;\n\n            if (requested <= buffer.byteLength) {\n              return buffer;\n            }\n\n            var size = this.minBufferLength;\n\n            while (size < requested) {\n              size *= 2;\n            }\n\n            var buffer2 = new Uint8Array(size);\n            buffer2.set(buffer);\n            return this.buffer = buffer2;\n          },\n          getByte: function DecodeStream_getByte() {\n            var pos = this.pos;\n\n            while (this.bufferLength <= pos) {\n              if (this.eof) {\n                return -1;\n              }\n\n              this.readBlock();\n            }\n\n            return this.buffer[this.pos++];\n          },\n          getUint16: function DecodeStream_getUint16() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n\n            if (b0 === -1 || b1 === -1) {\n              return -1;\n            }\n\n            return (b0 << 8) + b1;\n          },\n          getInt32: function DecodeStream_getInt32() {\n            var b0 = this.getByte();\n            var b1 = this.getByte();\n            var b2 = this.getByte();\n            var b3 = this.getByte();\n            return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n          },\n          getBytes: function getBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var end,\n                pos = this.pos;\n\n            if (length) {\n              this.ensureBuffer(pos + length);\n              end = pos + length;\n\n              while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n              }\n\n              var bufEnd = this.bufferLength;\n\n              if (end > bufEnd) {\n                end = bufEnd;\n              }\n            } else {\n              while (!this.eof) {\n                this.readBlock();\n              }\n\n              end = this.bufferLength;\n            }\n\n            this.pos = end;\n            var subarray = this.buffer.subarray(pos, end);\n            return forceClamped && !(subarray instanceof Uint8ClampedArray) ? new Uint8ClampedArray(subarray) : subarray;\n          },\n          peekByte: function DecodeStream_peekByte() {\n            var peekedByte = this.getByte();\n\n            if (peekedByte !== -1) {\n              this.pos--;\n            }\n\n            return peekedByte;\n          },\n          peekBytes: function peekBytes(length) {\n            var forceClamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var bytes = this.getBytes(length, forceClamped);\n            this.pos -= bytes.length;\n            return bytes;\n          },\n          makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n            var end = start + length;\n\n            while (this.bufferLength <= end && !this.eof) {\n              this.readBlock();\n            }\n\n            return new Stream(this.buffer, start, length, dict);\n          },\n          getByteRange: function getByteRange(begin, end) {\n            (0, _util.unreachable)(\"Should not call DecodeStream.getByteRange\");\n          },\n          skip: function DecodeStream_skip(n) {\n            if (!n) {\n              n = 1;\n            }\n\n            this.pos += n;\n          },\n          reset: function DecodeStream_reset() {\n            this.pos = 0;\n          },\n          getBaseStreams: function DecodeStream_getBaseStreams() {\n            if (this.str && this.str.getBaseStreams) {\n              return this.str.getBaseStreams();\n            }\n\n            return [];\n          }\n        };\n        return DecodeStream;\n      }();\n\n      exports.DecodeStream = DecodeStream;\n\n      var StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n        function StreamsSequenceStream(streams) {\n          this.streams = streams;\n          var maybeLength = 0;\n\n          for (var i = 0, ii = streams.length; i < ii; i++) {\n            var stream = streams[i];\n\n            if (stream instanceof DecodeStream) {\n              maybeLength += stream._rawMinBufferLength;\n            } else {\n              maybeLength += stream.length;\n            }\n          }\n\n          DecodeStream.call(this, maybeLength);\n        }\n\n        StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\n        StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n          var streams = this.streams;\n\n          if (streams.length === 0) {\n            this.eof = true;\n            return;\n          }\n\n          var stream = streams.shift();\n          var chunk = stream.getBytes();\n          var bufferLength = this.bufferLength;\n          var newLength = bufferLength + chunk.length;\n          var buffer = this.ensureBuffer(newLength);\n          buffer.set(chunk, bufferLength);\n          this.bufferLength = newLength;\n        };\n\n        StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n          var baseStreams = [];\n\n          for (var i = 0, ii = this.streams.length; i < ii; i++) {\n            var stream = this.streams[i];\n\n            if (stream.getBaseStreams) {\n              baseStreams.push.apply(baseStreams, _toConsumableArray(stream.getBaseStreams()));\n            }\n          }\n\n          return baseStreams;\n        };\n\n        return StreamsSequenceStream;\n      }();\n\n      exports.StreamsSequenceStream = StreamsSequenceStream;\n\n      var FlateStream = function FlateStreamClosure() {\n        var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n        var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n        var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n        var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n        var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n\n        function FlateStream(str, maybeLength) {\n          this.str = str;\n          this.dict = str.dict;\n          var cmf = str.getByte();\n          var flg = str.getByte();\n\n          if (cmf === -1 || flg === -1) {\n            throw new _util.FormatError(\"Invalid header in flate stream: \".concat(cmf, \", \").concat(flg));\n          }\n\n          if ((cmf & 0x0f) !== 0x08) {\n            throw new _util.FormatError(\"Unknown compression method in flate stream: \".concat(cmf, \", \").concat(flg));\n          }\n\n          if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new _util.FormatError(\"Bad FCHECK in flate stream: \".concat(cmf, \", \").concat(flg));\n          }\n\n          if (flg & 0x20) {\n            throw new _util.FormatError(\"FDICT bit set in flate stream: \".concat(cmf, \", \").concat(flg));\n          }\n\n          this.codeSize = 0;\n          this.codeBuf = 0;\n          DecodeStream.call(this, maybeLength);\n        }\n\n        FlateStream.prototype = Object.create(DecodeStream.prototype);\n\n        FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n          var str = this.str;\n          var codeSize = this.codeSize;\n          var codeBuf = this.codeBuf;\n          var b;\n\n          while (codeSize < bits) {\n            if ((b = str.getByte()) === -1) {\n              throw new _util.FormatError(\"Bad encoding in flate stream\");\n            }\n\n            codeBuf |= b << codeSize;\n            codeSize += 8;\n          }\n\n          b = codeBuf & (1 << bits) - 1;\n          this.codeBuf = codeBuf >> bits;\n          this.codeSize = codeSize -= bits;\n          return b;\n        };\n\n        FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n          var str = this.str;\n          var codes = table[0];\n          var maxLen = table[1];\n          var codeSize = this.codeSize;\n          var codeBuf = this.codeBuf;\n          var b;\n\n          while (codeSize < maxLen) {\n            if ((b = str.getByte()) === -1) {\n              break;\n            }\n\n            codeBuf |= b << codeSize;\n            codeSize += 8;\n          }\n\n          var code = codes[codeBuf & (1 << maxLen) - 1];\n          var codeLen = code >> 16;\n          var codeVal = code & 0xffff;\n\n          if (codeLen < 1 || codeSize < codeLen) {\n            throw new _util.FormatError(\"Bad encoding in flate stream\");\n          }\n\n          this.codeBuf = codeBuf >> codeLen;\n          this.codeSize = codeSize - codeLen;\n          return codeVal;\n        };\n\n        FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n          var n = lengths.length;\n          var maxLen = 0;\n          var i;\n\n          for (i = 0; i < n; ++i) {\n            if (lengths[i] > maxLen) {\n              maxLen = lengths[i];\n            }\n          }\n\n          var size = 1 << maxLen;\n          var codes = new Int32Array(size);\n\n          for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n              if (lengths[val] === len) {\n                var code2 = 0;\n                var t = code;\n\n                for (i = 0; i < len; ++i) {\n                  code2 = code2 << 1 | t & 1;\n                  t >>= 1;\n                }\n\n                for (i = code2; i < size; i += skip) {\n                  codes[i] = len << 16 | val;\n                }\n\n                ++code;\n              }\n            }\n          }\n\n          return [codes, maxLen];\n        };\n\n        FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n          var buffer, len;\n          var str = this.str;\n          var hdr = this.getBits(3);\n\n          if (hdr & 1) {\n            this.eof = true;\n          }\n\n          hdr >>= 1;\n\n          if (hdr === 0) {\n            var b;\n\n            if ((b = str.getByte()) === -1) {\n              throw new _util.FormatError(\"Bad block header in flate stream\");\n            }\n\n            var blockLen = b;\n\n            if ((b = str.getByte()) === -1) {\n              throw new _util.FormatError(\"Bad block header in flate stream\");\n            }\n\n            blockLen |= b << 8;\n\n            if ((b = str.getByte()) === -1) {\n              throw new _util.FormatError(\"Bad block header in flate stream\");\n            }\n\n            var check = b;\n\n            if ((b = str.getByte()) === -1) {\n              throw new _util.FormatError(\"Bad block header in flate stream\");\n            }\n\n            check |= b << 8;\n\n            if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n              throw new _util.FormatError(\"Bad uncompressed block length in flate stream\");\n            }\n\n            this.codeBuf = 0;\n            this.codeSize = 0;\n            var bufferLength = this.bufferLength,\n                end = bufferLength + blockLen;\n            buffer = this.ensureBuffer(end);\n            this.bufferLength = end;\n\n            if (blockLen === 0) {\n              if (str.peekByte() === -1) {\n                this.eof = true;\n              }\n            } else {\n              var block = str.getBytes(blockLen);\n              buffer.set(block, bufferLength);\n\n              if (block.length < blockLen) {\n                this.eof = true;\n              }\n            }\n\n            return;\n          }\n\n          var litCodeTable;\n          var distCodeTable;\n\n          if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n          } else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i;\n\n            for (i = 0; i < numCodeLenCodes; ++i) {\n              codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n            }\n\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            len = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength, bitsOffset, what;\n\n            while (i < codes) {\n              var code = this.getCode(codeLenCodeTab);\n\n              if (code === 16) {\n                bitsLength = 2;\n                bitsOffset = 3;\n                what = len;\n              } else if (code === 17) {\n                bitsLength = 3;\n                bitsOffset = 3;\n                what = len = 0;\n              } else if (code === 18) {\n                bitsLength = 7;\n                bitsOffset = 11;\n                what = len = 0;\n              } else {\n                codeLengths[i++] = len = code;\n                continue;\n              }\n\n              var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\n              while (repeatLength-- > 0) {\n                codeLengths[i++] = what;\n              }\n            }\n\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n          } else {\n            throw new _util.FormatError(\"Unknown block type in flate stream\");\n          }\n\n          buffer = this.buffer;\n          var limit = buffer ? buffer.length : 0;\n          var pos = this.bufferLength;\n\n          while (true) {\n            var code1 = this.getCode(litCodeTable);\n\n            if (code1 < 256) {\n              if (pos + 1 >= limit) {\n                buffer = this.ensureBuffer(pos + 1);\n                limit = buffer.length;\n              }\n\n              buffer[pos++] = code1;\n              continue;\n            }\n\n            if (code1 === 256) {\n              this.bufferLength = pos;\n              return;\n            }\n\n            code1 -= 257;\n            code1 = lengthDecode[code1];\n            var code2 = code1 >> 16;\n\n            if (code2 > 0) {\n              code2 = this.getBits(code2);\n            }\n\n            len = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1];\n            code2 = code1 >> 16;\n\n            if (code2 > 0) {\n              code2 = this.getBits(code2);\n            }\n\n            var dist = (code1 & 0xffff) + code2;\n\n            if (pos + len >= limit) {\n              buffer = this.ensureBuffer(pos + len);\n              limit = buffer.length;\n            }\n\n            for (var k = 0; k < len; ++k, ++pos) {\n              buffer[pos] = buffer[pos - dist];\n            }\n          }\n        };\n\n        return FlateStream;\n      }();\n\n      exports.FlateStream = FlateStream;\n\n      var PredictorStream = function PredictorStreamClosure() {\n        function PredictorStream(str, maybeLength, params) {\n          if (!(0, _primitives.isDict)(params)) {\n            return str;\n          }\n\n          var predictor = this.predictor = params.get(\"Predictor\") || 1;\n\n          if (predictor <= 1) {\n            return str;\n          }\n\n          if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new _util.FormatError(\"Unsupported predictor: \".concat(predictor));\n          }\n\n          if (predictor === 2) {\n            this.readBlock = this.readBlockTiff;\n          } else {\n            this.readBlock = this.readBlockPng;\n          }\n\n          this.str = str;\n          this.dict = str.dict;\n          var colors = this.colors = params.get(\"Colors\") || 1;\n          var bits = this.bits = params.get(\"BitsPerComponent\") || 8;\n          var columns = this.columns = params.get(\"Columns\") || 1;\n          this.pixBytes = colors * bits + 7 >> 3;\n          this.rowBytes = columns * colors * bits + 7 >> 3;\n          DecodeStream.call(this, maybeLength);\n          return this;\n        }\n\n        PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\n        PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n          var rowBytes = this.rowBytes;\n          var bufferLength = this.bufferLength;\n          var buffer = this.ensureBuffer(bufferLength + rowBytes);\n          var bits = this.bits;\n          var colors = this.colors;\n          var rawBytes = this.str.getBytes(rowBytes);\n          this.eof = !rawBytes.length;\n\n          if (this.eof) {\n            return;\n          }\n\n          var inbuf = 0,\n              outbuf = 0;\n          var inbits = 0,\n              outbits = 0;\n          var pos = bufferLength;\n          var i;\n\n          if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n              var c = rawBytes[i] ^ inbuf;\n              c ^= c >> 1;\n              c ^= c >> 2;\n              c ^= c >> 4;\n              inbuf = (c & 1) << 7;\n              buffer[pos++] = c;\n            }\n          } else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n              buffer[pos++] = rawBytes[i];\n            }\n\n            for (; i < rowBytes; ++i) {\n              buffer[pos] = buffer[pos - colors] + rawBytes[i];\n              pos++;\n            }\n          } else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n\n            for (i = 0; i < bytesPerPixel; ++i) {\n              buffer[pos++] = rawBytes[i];\n            }\n\n            for (; i < rowBytes; i += 2) {\n              var sum = ((rawBytes[i] & 0xff) << 8) + (rawBytes[i + 1] & 0xff) + ((buffer[pos - bytesPerPixel] & 0xff) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xff);\n              buffer[pos++] = sum >> 8 & 0xff;\n              buffer[pos++] = sum & 0xff;\n            }\n          } else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0,\n                k = bufferLength;\n            var columns = this.columns;\n\n            for (i = 0; i < columns; ++i) {\n              for (var kk = 0; kk < colors; ++kk) {\n                if (inbits < bits) {\n                  inbuf = inbuf << 8 | rawBytes[j++] & 0xff;\n                  inbits += 8;\n                }\n\n                compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n                inbits -= bits;\n                outbuf = outbuf << bits | compArray[kk];\n                outbits += bits;\n\n                if (outbits >= 8) {\n                  buffer[k++] = outbuf >> outbits - 8 & 0xff;\n                  outbits -= 8;\n                }\n              }\n            }\n\n            if (outbits > 0) {\n              buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n            }\n          }\n\n          this.bufferLength += rowBytes;\n        };\n\n        PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n          var rowBytes = this.rowBytes;\n          var pixBytes = this.pixBytes;\n          var predictor = this.str.getByte();\n          var rawBytes = this.str.getBytes(rowBytes);\n          this.eof = !rawBytes.length;\n\n          if (this.eof) {\n            return;\n          }\n\n          var bufferLength = this.bufferLength;\n          var buffer = this.ensureBuffer(bufferLength + rowBytes);\n          var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\n          if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n          }\n\n          var i,\n              j = bufferLength,\n              up,\n              c;\n\n          switch (predictor) {\n            case 0:\n              for (i = 0; i < rowBytes; ++i) {\n                buffer[j++] = rawBytes[i];\n              }\n\n              break;\n\n            case 1:\n              for (i = 0; i < pixBytes; ++i) {\n                buffer[j++] = rawBytes[i];\n              }\n\n              for (; i < rowBytes; ++i) {\n                buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xff;\n                j++;\n              }\n\n              break;\n\n            case 2:\n              for (i = 0; i < rowBytes; ++i) {\n                buffer[j++] = prevRow[i] + rawBytes[i] & 0xff;\n              }\n\n              break;\n\n            case 3:\n              for (i = 0; i < pixBytes; ++i) {\n                buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n              }\n\n              for (; i < rowBytes; ++i) {\n                buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xff;\n                j++;\n              }\n\n              break;\n\n            case 4:\n              for (i = 0; i < pixBytes; ++i) {\n                up = prevRow[i];\n                c = rawBytes[i];\n                buffer[j++] = up + c;\n              }\n\n              for (; i < rowBytes; ++i) {\n                up = prevRow[i];\n                var upLeft = prevRow[i - pixBytes];\n                var left = buffer[j - pixBytes];\n                var p = left + up - upLeft;\n                var pa = p - left;\n\n                if (pa < 0) {\n                  pa = -pa;\n                }\n\n                var pb = p - up;\n\n                if (pb < 0) {\n                  pb = -pb;\n                }\n\n                var pc = p - upLeft;\n\n                if (pc < 0) {\n                  pc = -pc;\n                }\n\n                c = rawBytes[i];\n\n                if (pa <= pb && pa <= pc) {\n                  buffer[j++] = left + c;\n                } else if (pb <= pc) {\n                  buffer[j++] = up + c;\n                } else {\n                  buffer[j++] = upLeft + c;\n                }\n              }\n\n              break;\n\n            default:\n              throw new _util.FormatError(\"Unsupported predictor: \".concat(predictor));\n          }\n\n          this.bufferLength += rowBytes;\n        };\n\n        return PredictorStream;\n      }();\n\n      exports.PredictorStream = PredictorStream;\n\n      var DecryptStream = function DecryptStreamClosure() {\n        function DecryptStream(str, maybeLength, decrypt) {\n          this.str = str;\n          this.dict = str.dict;\n          this.decrypt = decrypt;\n          this.nextChunk = null;\n          this.initialized = false;\n          DecodeStream.call(this, maybeLength);\n        }\n\n        var chunkSize = 512;\n        DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\n        DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n          var chunk;\n\n          if (this.initialized) {\n            chunk = this.nextChunk;\n          } else {\n            chunk = this.str.getBytes(chunkSize);\n            this.initialized = true;\n          }\n\n          if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n          }\n\n          this.nextChunk = this.str.getBytes(chunkSize);\n          var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n          var decrypt = this.decrypt;\n          chunk = decrypt(chunk, !hasMoreData);\n          var bufferLength = this.bufferLength;\n          var i,\n              n = chunk.length;\n          var buffer = this.ensureBuffer(bufferLength + n);\n\n          for (i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[i];\n          }\n\n          this.bufferLength = bufferLength;\n        };\n\n        return DecryptStream;\n      }();\n\n      exports.DecryptStream = DecryptStream;\n\n      var Ascii85Stream = function Ascii85StreamClosure() {\n        function Ascii85Stream(str, maybeLength) {\n          this.str = str;\n          this.dict = str.dict;\n          this.input = new Uint8Array(5);\n\n          if (maybeLength) {\n            maybeLength = 0.8 * maybeLength;\n          }\n\n          DecodeStream.call(this, maybeLength);\n        }\n\n        Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\n        Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n          var TILDA_CHAR = 0x7e;\n          var Z_LOWER_CHAR = 0x7a;\n          var EOF = -1;\n          var str = this.str;\n          var c = str.getByte();\n\n          while ((0, _core_utils.isWhiteSpace)(c)) {\n            c = str.getByte();\n          }\n\n          if (c === EOF || c === TILDA_CHAR) {\n            this.eof = true;\n            return;\n          }\n\n          var bufferLength = this.bufferLength,\n              buffer;\n          var i;\n\n          if (c === Z_LOWER_CHAR) {\n            buffer = this.ensureBuffer(bufferLength + 4);\n\n            for (i = 0; i < 4; ++i) {\n              buffer[bufferLength + i] = 0;\n            }\n\n            this.bufferLength += 4;\n          } else {\n            var input = this.input;\n            input[0] = c;\n\n            for (i = 1; i < 5; ++i) {\n              c = str.getByte();\n\n              while ((0, _core_utils.isWhiteSpace)(c)) {\n                c = str.getByte();\n              }\n\n              input[i] = c;\n\n              if (c === EOF || c === TILDA_CHAR) {\n                break;\n              }\n            }\n\n            buffer = this.ensureBuffer(bufferLength + i - 1);\n            this.bufferLength += i - 1;\n\n            if (i < 5) {\n              for (; i < 5; ++i) {\n                input[i] = 0x21 + 84;\n              }\n\n              this.eof = true;\n            }\n\n            var t = 0;\n\n            for (i = 0; i < 5; ++i) {\n              t = t * 85 + (input[i] - 0x21);\n            }\n\n            for (i = 3; i >= 0; --i) {\n              buffer[bufferLength + i] = t & 0xff;\n              t >>= 8;\n            }\n          }\n        };\n\n        return Ascii85Stream;\n      }();\n\n      exports.Ascii85Stream = Ascii85Stream;\n\n      var AsciiHexStream = function AsciiHexStreamClosure() {\n        function AsciiHexStream(str, maybeLength) {\n          this.str = str;\n          this.dict = str.dict;\n          this.firstDigit = -1;\n\n          if (maybeLength) {\n            maybeLength = 0.5 * maybeLength;\n          }\n\n          DecodeStream.call(this, maybeLength);\n        }\n\n        AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\n        AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n          var UPSTREAM_BLOCK_SIZE = 8000;\n          var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\n          if (!bytes.length) {\n            this.eof = true;\n            return;\n          }\n\n          var maxDecodeLength = bytes.length + 1 >> 1;\n          var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n          var bufferLength = this.bufferLength;\n          var firstDigit = this.firstDigit;\n\n          for (var i = 0, ii = bytes.length; i < ii; i++) {\n            var ch = bytes[i],\n                digit;\n\n            if (ch >= 0x30 && ch <= 0x39) {\n              digit = ch & 0x0f;\n            } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n              digit = (ch & 0x0f) + 9;\n            } else if (ch === 0x3e) {\n              this.eof = true;\n              break;\n            } else {\n              continue;\n            }\n\n            if (firstDigit < 0) {\n              firstDigit = digit;\n            } else {\n              buffer[bufferLength++] = firstDigit << 4 | digit;\n              firstDigit = -1;\n            }\n          }\n\n          if (firstDigit >= 0 && this.eof) {\n            buffer[bufferLength++] = firstDigit << 4;\n            firstDigit = -1;\n          }\n\n          this.firstDigit = firstDigit;\n          this.bufferLength = bufferLength;\n        };\n\n        return AsciiHexStream;\n      }();\n\n      exports.AsciiHexStream = AsciiHexStream;\n\n      var RunLengthStream = function RunLengthStreamClosure() {\n        function RunLengthStream(str, maybeLength) {\n          this.str = str;\n          this.dict = str.dict;\n          DecodeStream.call(this, maybeLength);\n        }\n\n        RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\n        RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n          var repeatHeader = this.str.getBytes(2);\n\n          if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n            this.eof = true;\n            return;\n          }\n\n          var buffer;\n          var bufferLength = this.bufferLength;\n          var n = repeatHeader[0];\n\n          if (n < 128) {\n            buffer = this.ensureBuffer(bufferLength + n + 1);\n            buffer[bufferLength++] = repeatHeader[1];\n\n            if (n > 0) {\n              var source = this.str.getBytes(n);\n              buffer.set(source, bufferLength);\n              bufferLength += n;\n            }\n          } else {\n            n = 257 - n;\n            var b = repeatHeader[1];\n            buffer = this.ensureBuffer(bufferLength + n + 1);\n\n            for (var i = 0; i < n; i++) {\n              buffer[bufferLength++] = b;\n            }\n          }\n\n          this.bufferLength = bufferLength;\n        };\n\n        return RunLengthStream;\n      }();\n\n      exports.RunLengthStream = RunLengthStream;\n\n      var LZWStream = function LZWStreamClosure() {\n        function LZWStream(str, maybeLength, earlyChange) {\n          this.str = str;\n          this.dict = str.dict;\n          this.cachedData = 0;\n          this.bitsCached = 0;\n          var maxLzwDictionarySize = 4096;\n          var lzwState = {\n            earlyChange: earlyChange,\n            codeLength: 9,\n            nextCode: 258,\n            dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n            dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n            dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n            currentSequence: new Uint8Array(maxLzwDictionarySize),\n            currentSequenceLength: 0\n          };\n\n          for (var i = 0; i < 256; ++i) {\n            lzwState.dictionaryValues[i] = i;\n            lzwState.dictionaryLengths[i] = 1;\n          }\n\n          this.lzwState = lzwState;\n          DecodeStream.call(this, maybeLength);\n        }\n\n        LZWStream.prototype = Object.create(DecodeStream.prototype);\n\n        LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n          var bitsCached = this.bitsCached;\n          var cachedData = this.cachedData;\n\n          while (bitsCached < n) {\n            var c = this.str.getByte();\n\n            if (c === -1) {\n              this.eof = true;\n              return null;\n            }\n\n            cachedData = cachedData << 8 | c;\n            bitsCached += 8;\n          }\n\n          this.bitsCached = bitsCached -= n;\n          this.cachedData = cachedData;\n          this.lastCode = null;\n          return cachedData >>> bitsCached & (1 << n) - 1;\n        };\n\n        LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n          var blockSize = 512;\n          var estimatedDecodedSize = blockSize * 2,\n              decodedSizeDelta = blockSize;\n          var i, j, q;\n          var lzwState = this.lzwState;\n\n          if (!lzwState) {\n            return;\n          }\n\n          var earlyChange = lzwState.earlyChange;\n          var nextCode = lzwState.nextCode;\n          var dictionaryValues = lzwState.dictionaryValues;\n          var dictionaryLengths = lzwState.dictionaryLengths;\n          var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n          var codeLength = lzwState.codeLength;\n          var prevCode = lzwState.prevCode;\n          var currentSequence = lzwState.currentSequence;\n          var currentSequenceLength = lzwState.currentSequenceLength;\n          var decodedLength = 0;\n          var currentBufferLength = this.bufferLength;\n          var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\n          for (i = 0; i < blockSize; i++) {\n            var code = this.readBits(codeLength);\n            var hasPrev = currentSequenceLength > 0;\n\n            if (code < 256) {\n              currentSequence[0] = code;\n              currentSequenceLength = 1;\n            } else if (code >= 258) {\n              if (code < nextCode) {\n                currentSequenceLength = dictionaryLengths[code];\n\n                for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n                  currentSequence[j] = dictionaryValues[q];\n                  q = dictionaryPrevCodes[q];\n                }\n              } else {\n                currentSequence[currentSequenceLength++] = currentSequence[0];\n              }\n            } else if (code === 256) {\n              codeLength = 9;\n              nextCode = 258;\n              currentSequenceLength = 0;\n              continue;\n            } else {\n              this.eof = true;\n              delete this.lzwState;\n              break;\n            }\n\n            if (hasPrev) {\n              dictionaryPrevCodes[nextCode] = prevCode;\n              dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n              dictionaryValues[nextCode] = currentSequence[0];\n              nextCode++;\n              codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n            }\n\n            prevCode = code;\n            decodedLength += currentSequenceLength;\n\n            if (estimatedDecodedSize < decodedLength) {\n              do {\n                estimatedDecodedSize += decodedSizeDelta;\n              } while (estimatedDecodedSize < decodedLength);\n\n              buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n            }\n\n            for (j = 0; j < currentSequenceLength; j++) {\n              buffer[currentBufferLength++] = currentSequence[j];\n            }\n          }\n\n          lzwState.nextCode = nextCode;\n          lzwState.codeLength = codeLength;\n          lzwState.prevCode = prevCode;\n          lzwState.currentSequenceLength = currentSequenceLength;\n          this.bufferLength = currentBufferLength;\n        };\n\n        return LZWStream;\n      }();\n\n      exports.LZWStream = LZWStream;\n\n      var NullStream = function NullStreamClosure() {\n        function NullStream() {\n          Stream.call(this, new Uint8Array(0));\n        }\n\n        NullStream.prototype = Stream.prototype;\n        return NullStream;\n      }();\n\n      exports.NullStream = NullStream;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CCITTFaxStream = void 0;\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _ccitt = __w_pdfjs_require__(14);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var CCITTFaxStream = function CCITTFaxStreamClosure() {\n        function CCITTFaxStream(str, maybeLength, params) {\n          this.str = str;\n          this.dict = str.dict;\n\n          if (!(0, _primitives.isDict)(params)) {\n            params = _primitives.Dict.empty;\n          }\n\n          var source = {\n            next: function next() {\n              return str.getByte();\n            }\n          };\n          this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n            K: params.get(\"K\"),\n            EndOfLine: params.get(\"EndOfLine\"),\n            EncodedByteAlign: params.get(\"EncodedByteAlign\"),\n            Columns: params.get(\"Columns\"),\n            Rows: params.get(\"Rows\"),\n            EndOfBlock: params.get(\"EndOfBlock\"),\n            BlackIs1: params.get(\"BlackIs1\")\n          });\n\n          _stream.DecodeStream.call(this, maybeLength);\n        }\n\n        CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\n        CCITTFaxStream.prototype.readBlock = function () {\n          while (!this.eof) {\n            var c = this.ccittFaxDecoder.readNextChar();\n\n            if (c === -1) {\n              this.eof = true;\n              return;\n            }\n\n            this.ensureBuffer(this.bufferLength + 1);\n            this.buffer[this.bufferLength++] = c;\n          }\n        };\n\n        return CCITTFaxStream;\n      }();\n\n      exports.CCITTFaxStream = CCITTFaxStream;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CCITTFaxDecoder = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var CCITTFaxDecoder = function CCITTFaxDecoder() {\n        var ccittEOL = -2;\n        var ccittEOF = -1;\n        var twoDimPass = 0;\n        var twoDimHoriz = 1;\n        var twoDimVert0 = 2;\n        var twoDimVertR1 = 3;\n        var twoDimVertL1 = 4;\n        var twoDimVertR2 = 5;\n        var twoDimVertL2 = 6;\n        var twoDimVertR3 = 7;\n        var twoDimVertL3 = 8;\n        var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n        var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n        var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n        var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n        var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n        var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n\n        function CCITTFaxDecoder(source) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          if (!source || typeof source.next !== \"function\") {\n            throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n          }\n\n          this.source = source;\n          this.eof = false;\n          this.encoding = options.K || 0;\n          this.eoline = options.EndOfLine || false;\n          this.byteAlign = options.EncodedByteAlign || false;\n          this.columns = options.Columns || 1728;\n          this.rows = options.Rows || 0;\n          var eoblock = options.EndOfBlock;\n\n          if (eoblock === null || eoblock === undefined) {\n            eoblock = true;\n          }\n\n          this.eoblock = eoblock;\n          this.black = options.BlackIs1 || false;\n          this.codingLine = new Uint32Array(this.columns + 1);\n          this.refLine = new Uint32Array(this.columns + 2);\n          this.codingLine[0] = this.columns;\n          this.codingPos = 0;\n          this.row = 0;\n          this.nextLine2D = this.encoding < 0;\n          this.inputBits = 0;\n          this.inputBuf = 0;\n          this.outputBits = 0;\n          this.rowsDone = false;\n          var code1;\n\n          while ((code1 = this._lookBits(12)) === 0) {\n            this._eatBits(1);\n          }\n\n          if (code1 === 1) {\n            this._eatBits(12);\n          }\n\n          if (this.encoding > 0) {\n            this.nextLine2D = !this._lookBits(1);\n\n            this._eatBits(1);\n          }\n        }\n\n        CCITTFaxDecoder.prototype = {\n          readNextChar: function readNextChar() {\n            if (this.eof) {\n              return -1;\n            }\n\n            var refLine = this.refLine;\n            var codingLine = this.codingLine;\n            var columns = this.columns;\n            var refPos, blackPixels, bits, i;\n\n            if (this.outputBits === 0) {\n              if (this.rowsDone) {\n                this.eof = true;\n              }\n\n              if (this.eof) {\n                return -1;\n              }\n\n              this.err = false;\n              var code1, code2, code3;\n\n              if (this.nextLine2D) {\n                for (i = 0; codingLine[i] < columns; ++i) {\n                  refLine[i] = codingLine[i];\n                }\n\n                refLine[i++] = columns;\n                refLine[i] = columns;\n                codingLine[0] = 0;\n                this.codingPos = 0;\n                refPos = 0;\n                blackPixels = 0;\n\n                while (codingLine[this.codingPos] < columns) {\n                  code1 = this._getTwoDimCode();\n\n                  switch (code1) {\n                    case twoDimPass:\n                      this._addPixels(refLine[refPos + 1], blackPixels);\n\n                      if (refLine[refPos + 1] < columns) {\n                        refPos += 2;\n                      }\n\n                      break;\n\n                    case twoDimHoriz:\n                      code1 = code2 = 0;\n\n                      if (blackPixels) {\n                        do {\n                          code1 += code3 = this._getBlackCode();\n                        } while (code3 >= 64);\n\n                        do {\n                          code2 += code3 = this._getWhiteCode();\n                        } while (code3 >= 64);\n                      } else {\n                        do {\n                          code1 += code3 = this._getWhiteCode();\n                        } while (code3 >= 64);\n\n                        do {\n                          code2 += code3 = this._getBlackCode();\n                        } while (code3 >= 64);\n                      }\n\n                      this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\n                      if (codingLine[this.codingPos] < columns) {\n                        this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                      }\n\n                      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                        refPos += 2;\n                      }\n\n                      break;\n\n                    case twoDimVertR3:\n                      this._addPixels(refLine[refPos] + 3, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        ++refPos;\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVertR2:\n                      this._addPixels(refLine[refPos] + 2, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        ++refPos;\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVertR1:\n                      this._addPixels(refLine[refPos] + 1, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        ++refPos;\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVert0:\n                      this._addPixels(refLine[refPos], blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        ++refPos;\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVertL3:\n                      this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        if (refPos > 0) {\n                          --refPos;\n                        } else {\n                          ++refPos;\n                        }\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVertL2:\n                      this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        if (refPos > 0) {\n                          --refPos;\n                        } else {\n                          ++refPos;\n                        }\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case twoDimVertL1:\n                      this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\n                      blackPixels ^= 1;\n\n                      if (codingLine[this.codingPos] < columns) {\n                        if (refPos > 0) {\n                          --refPos;\n                        } else {\n                          ++refPos;\n                        }\n\n                        while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                          refPos += 2;\n                        }\n                      }\n\n                      break;\n\n                    case ccittEOF:\n                      this._addPixels(columns, 0);\n\n                      this.eof = true;\n                      break;\n\n                    default:\n                      (0, _util.info)(\"bad 2d code\");\n\n                      this._addPixels(columns, 0);\n\n                      this.err = true;\n                  }\n                }\n              } else {\n                codingLine[0] = 0;\n                this.codingPos = 0;\n                blackPixels = 0;\n\n                while (codingLine[this.codingPos] < columns) {\n                  code1 = 0;\n\n                  if (blackPixels) {\n                    do {\n                      code1 += code3 = this._getBlackCode();\n                    } while (code3 >= 64);\n                  } else {\n                    do {\n                      code1 += code3 = this._getWhiteCode();\n                    } while (code3 >= 64);\n                  }\n\n                  this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\n                  blackPixels ^= 1;\n                }\n              }\n\n              var gotEOL = false;\n\n              if (this.byteAlign) {\n                this.inputBits &= ~7;\n              }\n\n              if (!this.eoblock && this.row === this.rows - 1) {\n                this.rowsDone = true;\n              } else {\n                code1 = this._lookBits(12);\n\n                if (this.eoline) {\n                  while (code1 !== ccittEOF && code1 !== 1) {\n                    this._eatBits(1);\n\n                    code1 = this._lookBits(12);\n                  }\n                } else {\n                  while (code1 === 0) {\n                    this._eatBits(1);\n\n                    code1 = this._lookBits(12);\n                  }\n                }\n\n                if (code1 === 1) {\n                  this._eatBits(12);\n\n                  gotEOL = true;\n                } else if (code1 === ccittEOF) {\n                  this.eof = true;\n                }\n              }\n\n              if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n                this.nextLine2D = !this._lookBits(1);\n\n                this._eatBits(1);\n              }\n\n              if (this.eoblock && gotEOL && this.byteAlign) {\n                code1 = this._lookBits(12);\n\n                if (code1 === 1) {\n                  this._eatBits(12);\n\n                  if (this.encoding > 0) {\n                    this._lookBits(1);\n\n                    this._eatBits(1);\n                  }\n\n                  if (this.encoding >= 0) {\n                    for (i = 0; i < 4; ++i) {\n                      code1 = this._lookBits(12);\n\n                      if (code1 !== 1) {\n                        (0, _util.info)(\"bad rtc code: \" + code1);\n                      }\n\n                      this._eatBits(12);\n\n                      if (this.encoding > 0) {\n                        this._lookBits(1);\n\n                        this._eatBits(1);\n                      }\n                    }\n                  }\n\n                  this.eof = true;\n                }\n              } else if (this.err && this.eoline) {\n                while (true) {\n                  code1 = this._lookBits(13);\n\n                  if (code1 === ccittEOF) {\n                    this.eof = true;\n                    return -1;\n                  }\n\n                  if (code1 >> 1 === 1) {\n                    break;\n                  }\n\n                  this._eatBits(1);\n                }\n\n                this._eatBits(12);\n\n                if (this.encoding > 0) {\n                  this._eatBits(1);\n\n                  this.nextLine2D = !(code1 & 1);\n                }\n              }\n\n              if (codingLine[0] > 0) {\n                this.outputBits = codingLine[this.codingPos = 0];\n              } else {\n                this.outputBits = codingLine[this.codingPos = 1];\n              }\n\n              this.row++;\n            }\n\n            var c;\n\n            if (this.outputBits >= 8) {\n              c = this.codingPos & 1 ? 0 : 0xff;\n              this.outputBits -= 8;\n\n              if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n                this.codingPos++;\n                this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n              }\n            } else {\n              bits = 8;\n              c = 0;\n\n              do {\n                if (this.outputBits > bits) {\n                  c <<= bits;\n\n                  if (!(this.codingPos & 1)) {\n                    c |= 0xff >> 8 - bits;\n                  }\n\n                  this.outputBits -= bits;\n                  bits = 0;\n                } else {\n                  c <<= this.outputBits;\n\n                  if (!(this.codingPos & 1)) {\n                    c |= 0xff >> 8 - this.outputBits;\n                  }\n\n                  bits -= this.outputBits;\n                  this.outputBits = 0;\n\n                  if (codingLine[this.codingPos] < columns) {\n                    this.codingPos++;\n                    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n                  } else if (bits > 0) {\n                    c <<= bits;\n                    bits = 0;\n                  }\n                }\n              } while (bits);\n            }\n\n            if (this.black) {\n              c ^= 0xff;\n            }\n\n            return c;\n          },\n          _addPixels: function _addPixels(a1, blackPixels) {\n            var codingLine = this.codingLine;\n            var codingPos = this.codingPos;\n\n            if (a1 > codingLine[codingPos]) {\n              if (a1 > this.columns) {\n                (0, _util.info)(\"row is wrong length\");\n                this.err = true;\n                a1 = this.columns;\n              }\n\n              if (codingPos & 1 ^ blackPixels) {\n                ++codingPos;\n              }\n\n              codingLine[codingPos] = a1;\n            }\n\n            this.codingPos = codingPos;\n          },\n          _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n            var codingLine = this.codingLine;\n            var codingPos = this.codingPos;\n\n            if (a1 > codingLine[codingPos]) {\n              if (a1 > this.columns) {\n                (0, _util.info)(\"row is wrong length\");\n                this.err = true;\n                a1 = this.columns;\n              }\n\n              if (codingPos & 1 ^ blackPixels) {\n                ++codingPos;\n              }\n\n              codingLine[codingPos] = a1;\n            } else if (a1 < codingLine[codingPos]) {\n              if (a1 < 0) {\n                (0, _util.info)(\"invalid code\");\n                this.err = true;\n                a1 = 0;\n              }\n\n              while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n                --codingPos;\n              }\n\n              codingLine[codingPos] = a1;\n            }\n\n            this.codingPos = codingPos;\n          },\n          _findTableCode: function _findTableCode(start, end, table, limit) {\n            var limitValue = limit || 0;\n\n            for (var i = start; i <= end; ++i) {\n              var code = this._lookBits(i);\n\n              if (code === ccittEOF) {\n                return [true, 1, false];\n              }\n\n              if (i < end) {\n                code <<= end - i;\n              }\n\n              if (!limitValue || code >= limitValue) {\n                var p = table[code - limitValue];\n\n                if (p[0] === i) {\n                  this._eatBits(i);\n\n                  return [true, p[1], true];\n                }\n              }\n            }\n\n            return [false, 0, false];\n          },\n          _getTwoDimCode: function _getTwoDimCode() {\n            var code = 0;\n            var p;\n\n            if (this.eoblock) {\n              code = this._lookBits(7);\n              p = twoDimTable[code];\n\n              if (p && p[0] > 0) {\n                this._eatBits(p[0]);\n\n                return p[1];\n              }\n            } else {\n              var result = this._findTableCode(1, 7, twoDimTable);\n\n              if (result[0] && result[2]) {\n                return result[1];\n              }\n            }\n\n            (0, _util.info)(\"Bad two dim code\");\n            return ccittEOF;\n          },\n          _getWhiteCode: function _getWhiteCode() {\n            var code = 0;\n            var p;\n\n            if (this.eoblock) {\n              code = this._lookBits(12);\n\n              if (code === ccittEOF) {\n                return 1;\n              }\n\n              if (code >> 5 === 0) {\n                p = whiteTable1[code];\n              } else {\n                p = whiteTable2[code >> 3];\n              }\n\n              if (p[0] > 0) {\n                this._eatBits(p[0]);\n\n                return p[1];\n              }\n            } else {\n              var result = this._findTableCode(1, 9, whiteTable2);\n\n              if (result[0]) {\n                return result[1];\n              }\n\n              result = this._findTableCode(11, 12, whiteTable1);\n\n              if (result[0]) {\n                return result[1];\n              }\n            }\n\n            (0, _util.info)(\"bad white code\");\n\n            this._eatBits(1);\n\n            return 1;\n          },\n          _getBlackCode: function _getBlackCode() {\n            var code, p;\n\n            if (this.eoblock) {\n              code = this._lookBits(13);\n\n              if (code === ccittEOF) {\n                return 1;\n              }\n\n              if (code >> 7 === 0) {\n                p = blackTable1[code];\n              } else if (code >> 9 === 0 && code >> 7 !== 0) {\n                p = blackTable2[(code >> 1) - 64];\n              } else {\n                p = blackTable3[code >> 7];\n              }\n\n              if (p[0] > 0) {\n                this._eatBits(p[0]);\n\n                return p[1];\n              }\n            } else {\n              var result = this._findTableCode(2, 6, blackTable3);\n\n              if (result[0]) {\n                return result[1];\n              }\n\n              result = this._findTableCode(7, 12, blackTable2, 64);\n\n              if (result[0]) {\n                return result[1];\n              }\n\n              result = this._findTableCode(10, 13, blackTable1);\n\n              if (result[0]) {\n                return result[1];\n              }\n            }\n\n            (0, _util.info)(\"bad black code\");\n\n            this._eatBits(1);\n\n            return 1;\n          },\n          _lookBits: function _lookBits(n) {\n            var c;\n\n            while (this.inputBits < n) {\n              if ((c = this.source.next()) === -1) {\n                if (this.inputBits === 0) {\n                  return ccittEOF;\n                }\n\n                return this.inputBuf << n - this.inputBits & 0xffff >> 16 - n;\n              }\n\n              this.inputBuf = this.inputBuf << 8 | c;\n              this.inputBits += 8;\n            }\n\n            return this.inputBuf >> this.inputBits - n & 0xffff >> 16 - n;\n          },\n          _eatBits: function _eatBits(n) {\n            if ((this.inputBits -= n) < 0) {\n              this.inputBits = 0;\n            }\n          }\n        };\n        return CCITTFaxDecoder;\n      }();\n\n      exports.CCITTFaxDecoder = CCITTFaxDecoder;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Jbig2Stream = void 0;\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _jbig = __w_pdfjs_require__(16);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var Jbig2Stream = function Jbig2StreamClosure() {\n        function Jbig2Stream(stream, maybeLength, dict, params) {\n          this.stream = stream;\n          this.maybeLength = maybeLength;\n          this.dict = dict;\n          this.params = params;\n\n          _stream.DecodeStream.call(this, maybeLength);\n        }\n\n        Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n        Object.defineProperty(Jbig2Stream.prototype, \"bytes\", {\n          get: function get() {\n            return (0, _util.shadow)(this, \"bytes\", this.stream.getBytes(this.maybeLength));\n          },\n          configurable: true\n        });\n\n        Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n\n        Jbig2Stream.prototype.readBlock = function () {\n          if (this.eof) {\n            return;\n          }\n\n          var jbig2Image = new _jbig.Jbig2Image();\n          var chunks = [];\n\n          if ((0, _primitives.isDict)(this.params)) {\n            var globalsStream = this.params.get(\"JBIG2Globals\");\n\n            if ((0, _primitives.isStream)(globalsStream)) {\n              var globals = globalsStream.getBytes();\n              chunks.push({\n                data: globals,\n                start: 0,\n                end: globals.length\n              });\n            }\n          }\n\n          chunks.push({\n            data: this.bytes,\n            start: 0,\n            end: this.bytes.length\n          });\n          var data = jbig2Image.parseChunks(chunks);\n          var dataLength = data.length;\n\n          for (var i = 0; i < dataLength; i++) {\n            data[i] ^= 0xff;\n          }\n\n          this.buffer = data;\n          this.bufferLength = dataLength;\n          this.eof = true;\n        };\n\n        return Jbig2Stream;\n      }();\n\n      exports.Jbig2Stream = Jbig2Stream;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Jbig2Image = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _arithmetic_decoder = __w_pdfjs_require__(17);\n\n      var _ccitt = __w_pdfjs_require__(14);\n\n      var Jbig2Error = /*#__PURE__*/function (_util$BaseException4) {\n        _inherits(Jbig2Error, _util$BaseException4);\n\n        var _super16 = _createSuper(Jbig2Error);\n\n        function Jbig2Error(msg) {\n          _classCallCheck(this, Jbig2Error);\n\n          return _super16.call(this, \"JBIG2 error: \".concat(msg));\n        }\n\n        return Jbig2Error;\n      }(_util.BaseException);\n\n      var Jbig2Image = function Jbig2ImageClosure() {\n        function ContextCache() {}\n\n        ContextCache.prototype = {\n          getContexts: function getContexts(id) {\n            if (id in this) {\n              return this[id];\n            }\n\n            return this[id] = new Int8Array(1 << 16);\n          }\n        };\n\n        function DecodingContext(data, start, end) {\n          this.data = data;\n          this.start = start;\n          this.end = end;\n        }\n\n        DecodingContext.prototype = {\n          get decoder() {\n            var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n            return (0, _util.shadow)(this, \"decoder\", decoder);\n          },\n\n          get contextCache() {\n            var cache = new ContextCache();\n            return (0, _util.shadow)(this, \"contextCache\", cache);\n          }\n\n        };\n\n        function decodeInteger(contextCache, procedure, decoder) {\n          var contexts = contextCache.getContexts(procedure);\n          var prev = 1;\n\n          function readBits(length) {\n            var v = 0;\n\n            for (var i = 0; i < length; i++) {\n              var bit = decoder.readBit(contexts, prev);\n              prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n              v = v << 1 | bit;\n            }\n\n            return v >>> 0;\n          }\n\n          var sign = readBits(1);\n          var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\n          if (sign === 0) {\n            return value;\n          } else if (value > 0) {\n            return -value;\n          }\n\n          return null;\n        }\n\n        function decodeIAID(contextCache, decoder, codeLength) {\n          var contexts = contextCache.getContexts(\"IAID\");\n          var prev = 1;\n\n          for (var i = 0; i < codeLength; i++) {\n            var bit = decoder.readBit(contexts, prev);\n            prev = prev << 1 | bit;\n          }\n\n          if (codeLength < 31) {\n            return prev & (1 << codeLength) - 1;\n          }\n\n          return prev & 0x7fffffff;\n        }\n\n        var SegmentTypes = [\"SymbolDictionary\", null, null, null, \"IntermediateTextRegion\", null, \"ImmediateTextRegion\", \"ImmediateLosslessTextRegion\", null, null, null, null, null, null, null, null, \"PatternDictionary\", null, null, null, \"IntermediateHalftoneRegion\", null, \"ImmediateHalftoneRegion\", \"ImmediateLosslessHalftoneRegion\", null, null, null, null, null, null, null, null, null, null, null, null, \"IntermediateGenericRegion\", null, \"ImmediateGenericRegion\", \"ImmediateLosslessGenericRegion\", \"IntermediateGenericRefinementRegion\", null, \"ImmediateGenericRefinementRegion\", \"ImmediateLosslessGenericRefinementRegion\", null, null, null, null, \"PageInformation\", \"EndOfPage\", \"EndOfStripe\", \"EndOfFile\", \"Profiles\", \"Tables\", null, null, null, null, null, null, null, null, \"Extension\"];\n        var CodingTemplates = [[{\n          x: -1,\n          y: -2\n        }, {\n          x: 0,\n          y: -2\n        }, {\n          x: 1,\n          y: -2\n        }, {\n          x: -2,\n          y: -1\n        }, {\n          x: -1,\n          y: -1\n        }, {\n          x: 0,\n          y: -1\n        }, {\n          x: 1,\n          y: -1\n        }, {\n          x: 2,\n          y: -1\n        }, {\n          x: -4,\n          y: 0\n        }, {\n          x: -3,\n          y: 0\n        }, {\n          x: -2,\n          y: 0\n        }, {\n          x: -1,\n          y: 0\n        }], [{\n          x: -1,\n          y: -2\n        }, {\n          x: 0,\n          y: -2\n        }, {\n          x: 1,\n          y: -2\n        }, {\n          x: 2,\n          y: -2\n        }, {\n          x: -2,\n          y: -1\n        }, {\n          x: -1,\n          y: -1\n        }, {\n          x: 0,\n          y: -1\n        }, {\n          x: 1,\n          y: -1\n        }, {\n          x: 2,\n          y: -1\n        }, {\n          x: -3,\n          y: 0\n        }, {\n          x: -2,\n          y: 0\n        }, {\n          x: -1,\n          y: 0\n        }], [{\n          x: -1,\n          y: -2\n        }, {\n          x: 0,\n          y: -2\n        }, {\n          x: 1,\n          y: -2\n        }, {\n          x: -2,\n          y: -1\n        }, {\n          x: -1,\n          y: -1\n        }, {\n          x: 0,\n          y: -1\n        }, {\n          x: 1,\n          y: -1\n        }, {\n          x: -2,\n          y: 0\n        }, {\n          x: -1,\n          y: 0\n        }], [{\n          x: -3,\n          y: -1\n        }, {\n          x: -2,\n          y: -1\n        }, {\n          x: -1,\n          y: -1\n        }, {\n          x: 0,\n          y: -1\n        }, {\n          x: 1,\n          y: -1\n        }, {\n          x: -4,\n          y: 0\n        }, {\n          x: -3,\n          y: 0\n        }, {\n          x: -2,\n          y: 0\n        }, {\n          x: -1,\n          y: 0\n        }]];\n        var RefinementTemplates = [{\n          coding: [{\n            x: 0,\n            y: -1\n          }, {\n            x: 1,\n            y: -1\n          }, {\n            x: -1,\n            y: 0\n          }],\n          reference: [{\n            x: 0,\n            y: -1\n          }, {\n            x: 1,\n            y: -1\n          }, {\n            x: -1,\n            y: 0\n          }, {\n            x: 0,\n            y: 0\n          }, {\n            x: 1,\n            y: 0\n          }, {\n            x: -1,\n            y: 1\n          }, {\n            x: 0,\n            y: 1\n          }, {\n            x: 1,\n            y: 1\n          }]\n        }, {\n          coding: [{\n            x: -1,\n            y: -1\n          }, {\n            x: 0,\n            y: -1\n          }, {\n            x: 1,\n            y: -1\n          }, {\n            x: -1,\n            y: 0\n          }],\n          reference: [{\n            x: 0,\n            y: -1\n          }, {\n            x: -1,\n            y: 0\n          }, {\n            x: 0,\n            y: 0\n          }, {\n            x: 1,\n            y: 0\n          }, {\n            x: 0,\n            y: 1\n          }, {\n            x: 1,\n            y: 1\n          }]\n        }];\n        var ReusedContexts = [0x9b25, 0x0795, 0x00e5, 0x0195];\n        var RefinementReusedContexts = [0x0020, 0x0008];\n\n        function decodeBitmapTemplate0(width, height, decodingContext) {\n          var decoder = decodingContext.decoder;\n          var contexts = decodingContext.contextCache.getContexts(\"GB\");\n          var contextLabel,\n              i,\n              j,\n              pixel,\n              row,\n              row1,\n              row2,\n              bitmap = [];\n          var OLD_PIXEL_MASK = 0x7bf7;\n\n          for (i = 0; i < height; i++) {\n            row = bitmap[i] = new Uint8Array(width);\n            row1 = i < 1 ? row : bitmap[i - 1];\n            row2 = i < 2 ? row : bitmap[i - 2];\n            contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\n            for (j = 0; j < width; j++) {\n              row[j] = pixel = decoder.readBit(contexts, contextLabel);\n              contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n            }\n          }\n\n          return bitmap;\n        }\n\n        function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n          if (mmr) {\n            var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n            return decodeMMRBitmap(input, width, height, false);\n          }\n\n          if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n            return decodeBitmapTemplate0(width, height, decodingContext);\n          }\n\n          var useskip = !!skip;\n          var template = CodingTemplates[templateIndex].concat(at);\n          template.sort(function (a, b) {\n            return a.y - b.y || a.x - b.x;\n          });\n          var templateLength = template.length;\n          var templateX = new Int8Array(templateLength);\n          var templateY = new Int8Array(templateLength);\n          var changingTemplateEntries = [];\n          var reuseMask = 0,\n              minX = 0,\n              maxX = 0,\n              minY = 0;\n          var c, k;\n\n          for (k = 0; k < templateLength; k++) {\n            templateX[k] = template[k].x;\n            templateY[k] = template[k].y;\n            minX = Math.min(minX, template[k].x);\n            maxX = Math.max(maxX, template[k].x);\n            minY = Math.min(minY, template[k].y);\n\n            if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n              reuseMask |= 1 << templateLength - 1 - k;\n            } else {\n              changingTemplateEntries.push(k);\n            }\n          }\n\n          var changingEntriesLength = changingTemplateEntries.length;\n          var changingTemplateX = new Int8Array(changingEntriesLength);\n          var changingTemplateY = new Int8Array(changingEntriesLength);\n          var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\n          for (c = 0; c < changingEntriesLength; c++) {\n            k = changingTemplateEntries[c];\n            changingTemplateX[c] = template[k].x;\n            changingTemplateY[c] = template[k].y;\n            changingTemplateBit[c] = 1 << templateLength - 1 - k;\n          }\n\n          var sbb_left = -minX;\n          var sbb_top = -minY;\n          var sbb_right = width - maxX;\n          var pseudoPixelContext = ReusedContexts[templateIndex];\n          var row = new Uint8Array(width);\n          var bitmap = [];\n          var decoder = decodingContext.decoder;\n          var contexts = decodingContext.contextCache.getContexts(\"GB\");\n          var ltp = 0,\n              j,\n              i0,\n              j0,\n              contextLabel = 0,\n              bit,\n              shift;\n\n          for (var i = 0; i < height; i++) {\n            if (prediction) {\n              var sltp = decoder.readBit(contexts, pseudoPixelContext);\n              ltp ^= sltp;\n\n              if (ltp) {\n                bitmap.push(row);\n                continue;\n              }\n            }\n\n            row = new Uint8Array(row);\n            bitmap.push(row);\n\n            for (j = 0; j < width; j++) {\n              if (useskip && skip[i][j]) {\n                row[j] = 0;\n                continue;\n              }\n\n              if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n                contextLabel = contextLabel << 1 & reuseMask;\n\n                for (k = 0; k < changingEntriesLength; k++) {\n                  i0 = i + changingTemplateY[k];\n                  j0 = j + changingTemplateX[k];\n                  bit = bitmap[i0][j0];\n\n                  if (bit) {\n                    bit = changingTemplateBit[k];\n                    contextLabel |= bit;\n                  }\n                }\n              } else {\n                contextLabel = 0;\n                shift = templateLength - 1;\n\n                for (k = 0; k < templateLength; k++, shift--) {\n                  j0 = j + templateX[k];\n\n                  if (j0 >= 0 && j0 < width) {\n                    i0 = i + templateY[k];\n\n                    if (i0 >= 0) {\n                      bit = bitmap[i0][j0];\n\n                      if (bit) {\n                        contextLabel |= bit << shift;\n                      }\n                    }\n                  }\n                }\n              }\n\n              var pixel = decoder.readBit(contexts, contextLabel);\n              row[j] = pixel;\n            }\n          }\n\n          return bitmap;\n        }\n\n        function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n          var codingTemplate = RefinementTemplates[templateIndex].coding;\n\n          if (templateIndex === 0) {\n            codingTemplate = codingTemplate.concat([at[0]]);\n          }\n\n          var codingTemplateLength = codingTemplate.length;\n          var codingTemplateX = new Int32Array(codingTemplateLength);\n          var codingTemplateY = new Int32Array(codingTemplateLength);\n          var k;\n\n          for (k = 0; k < codingTemplateLength; k++) {\n            codingTemplateX[k] = codingTemplate[k].x;\n            codingTemplateY[k] = codingTemplate[k].y;\n          }\n\n          var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\n          if (templateIndex === 0) {\n            referenceTemplate = referenceTemplate.concat([at[1]]);\n          }\n\n          var referenceTemplateLength = referenceTemplate.length;\n          var referenceTemplateX = new Int32Array(referenceTemplateLength);\n          var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\n          for (k = 0; k < referenceTemplateLength; k++) {\n            referenceTemplateX[k] = referenceTemplate[k].x;\n            referenceTemplateY[k] = referenceTemplate[k].y;\n          }\n\n          var referenceWidth = referenceBitmap[0].length;\n          var referenceHeight = referenceBitmap.length;\n          var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n          var bitmap = [];\n          var decoder = decodingContext.decoder;\n          var contexts = decodingContext.contextCache.getContexts(\"GR\");\n          var ltp = 0;\n\n          for (var i = 0; i < height; i++) {\n            if (prediction) {\n              var sltp = decoder.readBit(contexts, pseudoPixelContext);\n              ltp ^= sltp;\n\n              if (ltp) {\n                throw new Jbig2Error(\"prediction is not supported\");\n              }\n            }\n\n            var row = new Uint8Array(width);\n            bitmap.push(row);\n\n            for (var j = 0; j < width; j++) {\n              var i0, j0;\n              var contextLabel = 0;\n\n              for (k = 0; k < codingTemplateLength; k++) {\n                i0 = i + codingTemplateY[k];\n                j0 = j + codingTemplateX[k];\n\n                if (i0 < 0 || j0 < 0 || j0 >= width) {\n                  contextLabel <<= 1;\n                } else {\n                  contextLabel = contextLabel << 1 | bitmap[i0][j0];\n                }\n              }\n\n              for (k = 0; k < referenceTemplateLength; k++) {\n                i0 = i + referenceTemplateY[k] - offsetY;\n                j0 = j + referenceTemplateX[k] - offsetX;\n\n                if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n                  contextLabel <<= 1;\n                } else {\n                  contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n                }\n              }\n\n              var pixel = decoder.readBit(contexts, contextLabel);\n              row[j] = pixel;\n            }\n          }\n\n          return bitmap;\n        }\n\n        function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n          if (huffman && refinement) {\n            throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n          }\n\n          var newSymbols = [];\n          var currentHeight = 0;\n          var symbolCodeLength = (0, _core_utils.log2)(symbols.length + numberOfNewSymbols);\n          var decoder = decodingContext.decoder;\n          var contextCache = decodingContext.contextCache;\n          var tableB1, symbolWidths;\n\n          if (huffman) {\n            tableB1 = getStandardTable(1);\n            symbolWidths = [];\n            symbolCodeLength = Math.max(symbolCodeLength, 1);\n          }\n\n          while (newSymbols.length < numberOfNewSymbols) {\n            var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, \"IADH\", decoder);\n            currentHeight += deltaHeight;\n            var currentWidth = 0,\n                totalWidth = 0;\n            var firstSymbol = huffman ? symbolWidths.length : 0;\n\n            while (true) {\n              var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, \"IADW\", decoder);\n\n              if (deltaWidth === null) {\n                break;\n              }\n\n              currentWidth += deltaWidth;\n              totalWidth += currentWidth;\n              var bitmap;\n\n              if (refinement) {\n                var numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n\n                if (numberOfInstances > 1) {\n                  bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n                } else {\n                  var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n                  var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n                  var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n                  var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n                  bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n                }\n\n                newSymbols.push(bitmap);\n              } else if (huffman) {\n                symbolWidths.push(currentWidth);\n              } else {\n                bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n                newSymbols.push(bitmap);\n              }\n            }\n\n            if (huffman && !refinement) {\n              var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n              huffmanInput.byteAlign();\n              var collectiveBitmap = void 0;\n\n              if (bitmapSize === 0) {\n                collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n              } else {\n                var originalEnd = huffmanInput.end;\n                var bitmapEnd = huffmanInput.position + bitmapSize;\n                huffmanInput.end = bitmapEnd;\n                collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n                huffmanInput.end = originalEnd;\n                huffmanInput.position = bitmapEnd;\n              }\n\n              var numberOfSymbolsDecoded = symbolWidths.length;\n\n              if (firstSymbol === numberOfSymbolsDecoded - 1) {\n                newSymbols.push(collectiveBitmap);\n              } else {\n                var _i11 = void 0,\n                    y = void 0,\n                    xMin = 0,\n                    xMax = void 0,\n                    bitmapWidth = void 0,\n                    symbolBitmap = void 0;\n\n                for (_i11 = firstSymbol; _i11 < numberOfSymbolsDecoded; _i11++) {\n                  bitmapWidth = symbolWidths[_i11];\n                  xMax = xMin + bitmapWidth;\n                  symbolBitmap = [];\n\n                  for (y = 0; y < currentHeight; y++) {\n                    symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n                  }\n\n                  newSymbols.push(symbolBitmap);\n                  xMin = xMax;\n                }\n              }\n            }\n          }\n\n          var exportedSymbols = [];\n          var flags = [],\n              currentFlag = false;\n          var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\n          while (flags.length < totalSymbolsLength) {\n            var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, \"IAEX\", decoder);\n\n            while (runLength--) {\n              flags.push(currentFlag);\n            }\n\n            currentFlag = !currentFlag;\n          }\n\n          for (var i = 0, ii = symbols.length; i < ii; i++) {\n            if (flags[i]) {\n              exportedSymbols.push(symbols[i]);\n            }\n          }\n\n          for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n            if (flags[i]) {\n              exportedSymbols.push(newSymbols[j]);\n            }\n          }\n\n          return exportedSymbols;\n        }\n\n        function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n          if (huffman && refinement) {\n            throw new Jbig2Error(\"refinement with Huffman is not supported\");\n          }\n\n          var bitmap = [];\n          var i, row;\n\n          for (i = 0; i < height; i++) {\n            row = new Uint8Array(width);\n\n            if (defaultPixelValue) {\n              for (var j = 0; j < width; j++) {\n                row[j] = defaultPixelValue;\n              }\n            }\n\n            bitmap.push(row);\n          }\n\n          var decoder = decodingContext.decoder;\n          var contextCache = decodingContext.contextCache;\n          var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, \"IADT\", decoder);\n          var firstS = 0;\n          i = 0;\n\n          while (i < numberOfSymbolInstances) {\n            var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, \"IADT\", decoder);\n            stripT += deltaT;\n            var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, \"IAFS\", decoder);\n            firstS += deltaFirstS;\n            var currentS = firstS;\n\n            do {\n              var currentT = 0;\n\n              if (stripSize > 1) {\n                currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, \"IAIT\", decoder);\n              }\n\n              var t = stripSize * stripT + currentT;\n              var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n              var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, \"IARI\", decoder));\n              var symbolBitmap = inputSymbols[symbolId];\n              var symbolWidth = symbolBitmap[0].length;\n              var symbolHeight = symbolBitmap.length;\n\n              if (applyRefinement) {\n                var rdw = decodeInteger(contextCache, \"IARDW\", decoder);\n                var rdh = decodeInteger(contextCache, \"IARDH\", decoder);\n                var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n                var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n                symbolWidth += rdw;\n                symbolHeight += rdh;\n                symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n              }\n\n              var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n              var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n              var s2, t2, symbolRow;\n\n              if (transposed) {\n                for (s2 = 0; s2 < symbolHeight; s2++) {\n                  row = bitmap[offsetS + s2];\n\n                  if (!row) {\n                    continue;\n                  }\n\n                  symbolRow = symbolBitmap[s2];\n                  var maxWidth = Math.min(width - offsetT, symbolWidth);\n\n                  switch (combinationOperator) {\n                    case 0:\n                      for (t2 = 0; t2 < maxWidth; t2++) {\n                        row[offsetT + t2] |= symbolRow[t2];\n                      }\n\n                      break;\n\n                    case 2:\n                      for (t2 = 0; t2 < maxWidth; t2++) {\n                        row[offsetT + t2] ^= symbolRow[t2];\n                      }\n\n                      break;\n\n                    default:\n                      throw new Jbig2Error(\"operator \".concat(combinationOperator, \" is not supported\"));\n                  }\n                }\n\n                currentS += symbolHeight - 1;\n              } else {\n                for (t2 = 0; t2 < symbolHeight; t2++) {\n                  row = bitmap[offsetT + t2];\n\n                  if (!row) {\n                    continue;\n                  }\n\n                  symbolRow = symbolBitmap[t2];\n\n                  switch (combinationOperator) {\n                    case 0:\n                      for (s2 = 0; s2 < symbolWidth; s2++) {\n                        row[offsetS + s2] |= symbolRow[s2];\n                      }\n\n                      break;\n\n                    case 2:\n                      for (s2 = 0; s2 < symbolWidth; s2++) {\n                        row[offsetS + s2] ^= symbolRow[s2];\n                      }\n\n                      break;\n\n                    default:\n                      throw new Jbig2Error(\"operator \".concat(combinationOperator, \" is not supported\"));\n                  }\n                }\n\n                currentS += symbolWidth - 1;\n              }\n\n              i++;\n              var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, \"IADS\", decoder);\n\n              if (deltaS === null) {\n                break;\n              }\n\n              currentS += deltaS + dsOffset;\n            } while (true);\n          }\n\n          return bitmap;\n        }\n\n        function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n          var at = [];\n\n          if (!mmr) {\n            at.push({\n              x: -patternWidth,\n              y: 0\n            });\n\n            if (template === 0) {\n              at.push({\n                x: -3,\n                y: -1\n              });\n              at.push({\n                x: 2,\n                y: -2\n              });\n              at.push({\n                x: -2,\n                y: -2\n              });\n            }\n          }\n\n          var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n          var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n          var patterns = [];\n\n          for (var i = 0; i <= maxPatternIndex; i++) {\n            var patternBitmap = [];\n            var xMin = patternWidth * i;\n            var xMax = xMin + patternWidth;\n\n            for (var y = 0; y < patternHeight; y++) {\n              patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n\n            patterns.push(patternBitmap);\n          }\n\n          return patterns;\n        }\n\n        function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n          var skip = null;\n\n          if (enableSkip) {\n            throw new Jbig2Error(\"skip is not supported\");\n          }\n\n          if (combinationOperator !== 0) {\n            throw new Jbig2Error(\"operator \" + combinationOperator + \" is not supported in halftone region\");\n          }\n\n          var regionBitmap = [];\n          var i, j, row;\n\n          for (i = 0; i < regionHeight; i++) {\n            row = new Uint8Array(regionWidth);\n\n            if (defaultPixelValue) {\n              for (j = 0; j < regionWidth; j++) {\n                row[j] = defaultPixelValue;\n              }\n            }\n\n            regionBitmap.push(row);\n          }\n\n          var numberOfPatterns = patterns.length;\n          var pattern0 = patterns[0];\n          var patternWidth = pattern0[0].length,\n              patternHeight = pattern0.length;\n          var bitsPerValue = (0, _core_utils.log2)(numberOfPatterns);\n          var at = [];\n\n          if (!mmr) {\n            at.push({\n              x: template <= 1 ? 3 : 2,\n              y: -1\n            });\n\n            if (template === 0) {\n              at.push({\n                x: -3,\n                y: -1\n              });\n              at.push({\n                x: 2,\n                y: -2\n              });\n              at.push({\n                x: -2,\n                y: -2\n              });\n            }\n          }\n\n          var grayScaleBitPlanes = [];\n          var mmrInput, bitmap;\n\n          if (mmr) {\n            mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n          }\n\n          for (i = bitsPerValue - 1; i >= 0; i--) {\n            if (mmr) {\n              bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n            } else {\n              bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n            }\n\n            grayScaleBitPlanes[i] = bitmap;\n          }\n\n          var mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n\n          for (mg = 0; mg < gridHeight; mg++) {\n            for (ng = 0; ng < gridWidth; ng++) {\n              bit = 0;\n              patternIndex = 0;\n\n              for (j = bitsPerValue - 1; j >= 0; j--) {\n                bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n                patternIndex |= bit << j;\n              }\n\n              patternBitmap = patterns[patternIndex];\n              x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n              y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n\n              if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n                for (i = 0; i < patternHeight; i++) {\n                  regionRow = regionBitmap[y + i];\n                  patternRow = patternBitmap[i];\n\n                  for (j = 0; j < patternWidth; j++) {\n                    regionRow[x + j] |= patternRow[j];\n                  }\n                }\n              } else {\n                var regionX = void 0,\n                    regionY = void 0;\n\n                for (i = 0; i < patternHeight; i++) {\n                  regionY = y + i;\n\n                  if (regionY < 0 || regionY >= regionHeight) {\n                    continue;\n                  }\n\n                  regionRow = regionBitmap[regionY];\n                  patternRow = patternBitmap[i];\n\n                  for (j = 0; j < patternWidth; j++) {\n                    regionX = x + j;\n\n                    if (regionX >= 0 && regionX < regionWidth) {\n                      regionRow[regionX] |= patternRow[j];\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          return regionBitmap;\n        }\n\n        function readSegmentHeader(data, start) {\n          var segmentHeader = {};\n          segmentHeader.number = (0, _core_utils.readUint32)(data, start);\n          var flags = data[start + 4];\n          var segmentType = flags & 0x3f;\n\n          if (!SegmentTypes[segmentType]) {\n            throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n          }\n\n          segmentHeader.type = segmentType;\n          segmentHeader.typeName = SegmentTypes[segmentType];\n          segmentHeader.deferredNonRetain = !!(flags & 0x80);\n          var pageAssociationFieldSize = !!(flags & 0x40);\n          var referredFlags = data[start + 5];\n          var referredToCount = referredFlags >> 5 & 7;\n          var retainBits = [referredFlags & 31];\n          var position = start + 6;\n\n          if (referredFlags === 7) {\n            referredToCount = (0, _core_utils.readUint32)(data, position - 1) & 0x1fffffff;\n            position += 3;\n            var bytes = referredToCount + 7 >> 3;\n            retainBits[0] = data[position++];\n\n            while (--bytes > 0) {\n              retainBits.push(data[position++]);\n            }\n          } else if (referredFlags === 5 || referredFlags === 6) {\n            throw new Jbig2Error(\"invalid referred-to flags\");\n          }\n\n          segmentHeader.retainBits = retainBits;\n          var referredToSegmentNumberSize = 4;\n\n          if (segmentHeader.number <= 256) {\n            referredToSegmentNumberSize = 1;\n          } else if (segmentHeader.number <= 65536) {\n            referredToSegmentNumberSize = 2;\n          }\n\n          var referredTo = [];\n          var i, ii;\n\n          for (i = 0; i < referredToCount; i++) {\n            var number = void 0;\n\n            if (referredToSegmentNumberSize === 1) {\n              number = data[position];\n            } else if (referredToSegmentNumberSize === 2) {\n              number = (0, _core_utils.readUint16)(data, position);\n            } else {\n              number = (0, _core_utils.readUint32)(data, position);\n            }\n\n            referredTo.push(number);\n            position += referredToSegmentNumberSize;\n          }\n\n          segmentHeader.referredTo = referredTo;\n\n          if (!pageAssociationFieldSize) {\n            segmentHeader.pageAssociation = data[position++];\n          } else {\n            segmentHeader.pageAssociation = (0, _core_utils.readUint32)(data, position);\n            position += 4;\n          }\n\n          segmentHeader.length = (0, _core_utils.readUint32)(data, position);\n          position += 4;\n\n          if (segmentHeader.length === 0xffffffff) {\n            if (segmentType === 38) {\n              var genericRegionInfo = readRegionSegmentInformation(data, position);\n              var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n              var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n              var searchPatternLength = 6;\n              var searchPattern = new Uint8Array(searchPatternLength);\n\n              if (!genericRegionMmr) {\n                searchPattern[0] = 0xff;\n                searchPattern[1] = 0xac;\n              }\n\n              searchPattern[2] = genericRegionInfo.height >>> 24 & 0xff;\n              searchPattern[3] = genericRegionInfo.height >> 16 & 0xff;\n              searchPattern[4] = genericRegionInfo.height >> 8 & 0xff;\n              searchPattern[5] = genericRegionInfo.height & 0xff;\n\n              for (i = position, ii = data.length; i < ii; i++) {\n                var j = 0;\n\n                while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n                  j++;\n                }\n\n                if (j === searchPatternLength) {\n                  segmentHeader.length = i + searchPatternLength;\n                  break;\n                }\n              }\n\n              if (segmentHeader.length === 0xffffffff) {\n                throw new Jbig2Error(\"segment end was not found\");\n              }\n            } else {\n              throw new Jbig2Error(\"invalid unknown segment length\");\n            }\n          }\n\n          segmentHeader.headerEnd = position;\n          return segmentHeader;\n        }\n\n        function readSegments(header, data, start, end) {\n          var segments = [];\n          var position = start;\n\n          while (position < end) {\n            var segmentHeader = readSegmentHeader(data, position);\n            position = segmentHeader.headerEnd;\n            var segment = {\n              header: segmentHeader,\n              data: data\n            };\n\n            if (!header.randomAccess) {\n              segment.start = position;\n              position += segmentHeader.length;\n              segment.end = position;\n            }\n\n            segments.push(segment);\n\n            if (segmentHeader.type === 51) {\n              break;\n            }\n          }\n\n          if (header.randomAccess) {\n            for (var i = 0, ii = segments.length; i < ii; i++) {\n              segments[i].start = position;\n              position += segments[i].header.length;\n              segments[i].end = position;\n            }\n          }\n\n          return segments;\n        }\n\n        function readRegionSegmentInformation(data, start) {\n          return {\n            width: (0, _core_utils.readUint32)(data, start),\n            height: (0, _core_utils.readUint32)(data, start + 4),\n            x: (0, _core_utils.readUint32)(data, start + 8),\n            y: (0, _core_utils.readUint32)(data, start + 12),\n            combinationOperator: data[start + 16] & 7\n          };\n        }\n\n        var RegionSegmentInformationFieldLength = 17;\n\n        function processSegment(segment, visitor) {\n          var header = segment.header;\n          var data = segment.data,\n              position = segment.start,\n              end = segment.end;\n          var args, at, i, atLength;\n\n          switch (header.type) {\n            case 0:\n              var dictionary = {};\n              var dictionaryFlags = (0, _core_utils.readUint16)(data, position);\n              dictionary.huffman = !!(dictionaryFlags & 1);\n              dictionary.refinement = !!(dictionaryFlags & 2);\n              dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n              dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n              dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n              dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n              dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n              dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n              dictionary.template = dictionaryFlags >> 10 & 3;\n              dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n              position += 2;\n\n              if (!dictionary.huffman) {\n                atLength = dictionary.template === 0 ? 4 : 1;\n                at = [];\n\n                for (i = 0; i < atLength; i++) {\n                  at.push({\n                    x: (0, _core_utils.readInt8)(data, position),\n                    y: (0, _core_utils.readInt8)(data, position + 1)\n                  });\n                  position += 2;\n                }\n\n                dictionary.at = at;\n              }\n\n              if (dictionary.refinement && !dictionary.refinementTemplate) {\n                at = [];\n\n                for (i = 0; i < 2; i++) {\n                  at.push({\n                    x: (0, _core_utils.readInt8)(data, position),\n                    y: (0, _core_utils.readInt8)(data, position + 1)\n                  });\n                  position += 2;\n                }\n\n                dictionary.refinementAt = at;\n              }\n\n              dictionary.numberOfExportedSymbols = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              dictionary.numberOfNewSymbols = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              args = [dictionary, header.number, header.referredTo, data, position, end];\n              break;\n\n            case 6:\n            case 7:\n              var textRegion = {};\n              textRegion.info = readRegionSegmentInformation(data, position);\n              position += RegionSegmentInformationFieldLength;\n              var textRegionSegmentFlags = (0, _core_utils.readUint16)(data, position);\n              position += 2;\n              textRegion.huffman = !!(textRegionSegmentFlags & 1);\n              textRegion.refinement = !!(textRegionSegmentFlags & 2);\n              textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n              textRegion.stripSize = 1 << textRegion.logStripSize;\n              textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n              textRegion.transposed = !!(textRegionSegmentFlags & 64);\n              textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n              textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n              textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n              textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\n              if (textRegion.huffman) {\n                var textRegionHuffmanFlags = (0, _core_utils.readUint16)(data, position);\n                position += 2;\n                textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n                textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n                textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n                textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n                textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n                textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n                textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n                textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n              }\n\n              if (textRegion.refinement && !textRegion.refinementTemplate) {\n                at = [];\n\n                for (i = 0; i < 2; i++) {\n                  at.push({\n                    x: (0, _core_utils.readInt8)(data, position),\n                    y: (0, _core_utils.readInt8)(data, position + 1)\n                  });\n                  position += 2;\n                }\n\n                textRegion.refinementAt = at;\n              }\n\n              textRegion.numberOfSymbolInstances = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              args = [textRegion, header.referredTo, data, position, end];\n              break;\n\n            case 16:\n              var patternDictionary = {};\n              var patternDictionaryFlags = data[position++];\n              patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n              patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n              patternDictionary.patternWidth = data[position++];\n              patternDictionary.patternHeight = data[position++];\n              patternDictionary.maxPatternIndex = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              args = [patternDictionary, header.number, data, position, end];\n              break;\n\n            case 22:\n            case 23:\n              var halftoneRegion = {};\n              halftoneRegion.info = readRegionSegmentInformation(data, position);\n              position += RegionSegmentInformationFieldLength;\n              var halftoneRegionFlags = data[position++];\n              halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n              halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n              halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n              halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n              halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n              halftoneRegion.gridWidth = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              halftoneRegion.gridHeight = (0, _core_utils.readUint32)(data, position);\n              position += 4;\n              halftoneRegion.gridOffsetX = (0, _core_utils.readUint32)(data, position) & 0xffffffff;\n              position += 4;\n              halftoneRegion.gridOffsetY = (0, _core_utils.readUint32)(data, position) & 0xffffffff;\n              position += 4;\n              halftoneRegion.gridVectorX = (0, _core_utils.readUint16)(data, position);\n              position += 2;\n              halftoneRegion.gridVectorY = (0, _core_utils.readUint16)(data, position);\n              position += 2;\n              args = [halftoneRegion, header.referredTo, data, position, end];\n              break;\n\n            case 38:\n            case 39:\n              var genericRegion = {};\n              genericRegion.info = readRegionSegmentInformation(data, position);\n              position += RegionSegmentInformationFieldLength;\n              var genericRegionSegmentFlags = data[position++];\n              genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n              genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n              genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\n              if (!genericRegion.mmr) {\n                atLength = genericRegion.template === 0 ? 4 : 1;\n                at = [];\n\n                for (i = 0; i < atLength; i++) {\n                  at.push({\n                    x: (0, _core_utils.readInt8)(data, position),\n                    y: (0, _core_utils.readInt8)(data, position + 1)\n                  });\n                  position += 2;\n                }\n\n                genericRegion.at = at;\n              }\n\n              args = [genericRegion, data, position, end];\n              break;\n\n            case 48:\n              var pageInfo = {\n                width: (0, _core_utils.readUint32)(data, position),\n                height: (0, _core_utils.readUint32)(data, position + 4),\n                resolutionX: (0, _core_utils.readUint32)(data, position + 8),\n                resolutionY: (0, _core_utils.readUint32)(data, position + 12)\n              };\n\n              if (pageInfo.height === 0xffffffff) {\n                delete pageInfo.height;\n              }\n\n              var pageSegmentFlags = data[position + 16];\n              (0, _core_utils.readUint16)(data, position + 17);\n              pageInfo.lossless = !!(pageSegmentFlags & 1);\n              pageInfo.refinement = !!(pageSegmentFlags & 2);\n              pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n              pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n              pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n              pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n              args = [pageInfo];\n              break;\n\n            case 49:\n              break;\n\n            case 50:\n              break;\n\n            case 51:\n              break;\n\n            case 53:\n              args = [header.number, data, position, end];\n              break;\n\n            case 62:\n              break;\n\n            default:\n              throw new Jbig2Error(\"segment type \".concat(header.typeName, \"(\").concat(header.type, \")\") + \" is not implemented\");\n          }\n\n          var callbackName = \"on\" + header.typeName;\n\n          if (callbackName in visitor) {\n            visitor[callbackName].apply(visitor, args);\n          }\n        }\n\n        function processSegments(segments, visitor) {\n          for (var i = 0, ii = segments.length; i < ii; i++) {\n            processSegment(segments[i], visitor);\n          }\n        }\n\n        function parseJbig2Chunks(chunks) {\n          var visitor = new SimpleSegmentVisitor();\n\n          for (var i = 0, ii = chunks.length; i < ii; i++) {\n            var chunk = chunks[i];\n            var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n            processSegments(segments, visitor);\n          }\n\n          return visitor.buffer;\n        }\n\n        function parseJbig2(data) {\n          var end = data.length;\n          var position = 0;\n\n          if (data[position] !== 0x97 || data[position + 1] !== 0x4a || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0d || data[position + 5] !== 0x0a || data[position + 6] !== 0x1a || data[position + 7] !== 0x0a) {\n            throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n          }\n\n          var header = Object.create(null);\n          position += 8;\n          var flags = data[position++];\n          header.randomAccess = !(flags & 1);\n\n          if (!(flags & 2)) {\n            header.numberOfPages = (0, _core_utils.readUint32)(data, position);\n            position += 4;\n          }\n\n          var segments = readSegments(header, data, position, end);\n          var visitor = new SimpleSegmentVisitor();\n          processSegments(segments, visitor);\n          var _visitor$currentPageI = visitor.currentPageInfo,\n              width = _visitor$currentPageI.width,\n              height = _visitor$currentPageI.height;\n          var bitPacked = visitor.buffer;\n          var imgData = new Uint8ClampedArray(width * height);\n          var q = 0,\n              k = 0;\n\n          for (var i = 0; i < height; i++) {\n            var mask = 0,\n                buffer = void 0;\n\n            for (var j = 0; j < width; j++) {\n              if (!mask) {\n                mask = 128;\n                buffer = bitPacked[k++];\n              }\n\n              imgData[q++] = buffer & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n\n          return {\n            imgData: imgData,\n            width: width,\n            height: height\n          };\n        }\n\n        function SimpleSegmentVisitor() {}\n\n        SimpleSegmentVisitor.prototype = {\n          onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n            this.currentPageInfo = info;\n            var rowSize = info.width + 7 >> 3;\n            var buffer = new Uint8ClampedArray(rowSize * info.height);\n\n            if (info.defaultPixelValue) {\n              for (var i = 0, ii = buffer.length; i < ii; i++) {\n                buffer[i] = 0xff;\n              }\n            }\n\n            this.buffer = buffer;\n          },\n          drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n            var pageInfo = this.currentPageInfo;\n            var width = regionInfo.width,\n                height = regionInfo.height;\n            var rowSize = pageInfo.width + 7 >> 3;\n            var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n            var buffer = this.buffer;\n            var mask0 = 128 >> (regionInfo.x & 7);\n            var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n            var i, j, mask, offset;\n\n            switch (combinationOperator) {\n              case 0:\n                for (i = 0; i < height; i++) {\n                  mask = mask0;\n                  offset = offset0;\n\n                  for (j = 0; j < width; j++) {\n                    if (bitmap[i][j]) {\n                      buffer[offset] |= mask;\n                    }\n\n                    mask >>= 1;\n\n                    if (!mask) {\n                      mask = 128;\n                      offset++;\n                    }\n                  }\n\n                  offset0 += rowSize;\n                }\n\n                break;\n\n              case 2:\n                for (i = 0; i < height; i++) {\n                  mask = mask0;\n                  offset = offset0;\n\n                  for (j = 0; j < width; j++) {\n                    if (bitmap[i][j]) {\n                      buffer[offset] ^= mask;\n                    }\n\n                    mask >>= 1;\n\n                    if (!mask) {\n                      mask = 128;\n                      offset++;\n                    }\n                  }\n\n                  offset0 += rowSize;\n                }\n\n                break;\n\n              default:\n                throw new Jbig2Error(\"operator \".concat(combinationOperator, \" is not supported\"));\n            }\n          },\n          onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n            var regionInfo = region.info;\n            var decodingContext = new DecodingContext(data, start, end);\n            var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n            this.drawBitmap(regionInfo, bitmap);\n          },\n          onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n            this.onImmediateGenericRegion.apply(this, arguments);\n          },\n          onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n            var huffmanTables, huffmanInput;\n\n            if (dictionary.huffman) {\n              huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n              huffmanInput = new Reader(data, start, end);\n            }\n\n            var symbols = this.symbols;\n\n            if (!symbols) {\n              this.symbols = symbols = {};\n            }\n\n            var inputSymbols = [];\n\n            for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n              var referredSymbols = symbols[referredSegments[i]];\n\n              if (referredSymbols) {\n                inputSymbols = inputSymbols.concat(referredSymbols);\n              }\n            }\n\n            var decodingContext = new DecodingContext(data, start, end);\n            symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n          },\n          onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n            var regionInfo = region.info;\n            var huffmanTables, huffmanInput;\n            var symbols = this.symbols;\n            var inputSymbols = [];\n\n            for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n              var referredSymbols = symbols[referredSegments[i]];\n\n              if (referredSymbols) {\n                inputSymbols = inputSymbols.concat(referredSymbols);\n              }\n            }\n\n            var symbolCodeLength = (0, _core_utils.log2)(inputSymbols.length);\n\n            if (region.huffman) {\n              huffmanInput = new Reader(data, start, end);\n              huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n            }\n\n            var decodingContext = new DecodingContext(data, start, end);\n            var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n            this.drawBitmap(regionInfo, bitmap);\n          },\n          onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n            this.onImmediateTextRegion.apply(this, arguments);\n          },\n          onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n            var patterns = this.patterns;\n\n            if (!patterns) {\n              this.patterns = patterns = {};\n            }\n\n            var decodingContext = new DecodingContext(data, start, end);\n            patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n          },\n          onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n            var patterns = this.patterns[referredSegments[0]];\n            var regionInfo = region.info;\n            var decodingContext = new DecodingContext(data, start, end);\n            var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n            this.drawBitmap(regionInfo, bitmap);\n          },\n          onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n            this.onImmediateHalftoneRegion.apply(this, arguments);\n          },\n          onTables: function onTables(currentSegment, data, start, end) {\n            var customTables = this.customTables;\n\n            if (!customTables) {\n              this.customTables = customTables = {};\n            }\n\n            customTables[currentSegment] = decodeTablesSegment(data, start, end);\n          }\n        };\n\n        function HuffmanLine(lineData) {\n          if (lineData.length === 2) {\n            this.isOOB = true;\n            this.rangeLow = 0;\n            this.prefixLength = lineData[0];\n            this.rangeLength = 0;\n            this.prefixCode = lineData[1];\n            this.isLowerRange = false;\n          } else {\n            this.isOOB = false;\n            this.rangeLow = lineData[0];\n            this.prefixLength = lineData[1];\n            this.rangeLength = lineData[2];\n            this.prefixCode = lineData[3];\n            this.isLowerRange = lineData[4] === \"lower\";\n          }\n        }\n\n        function HuffmanTreeNode(line) {\n          this.children = [];\n\n          if (line) {\n            this.isLeaf = true;\n            this.rangeLength = line.rangeLength;\n            this.rangeLow = line.rangeLow;\n            this.isLowerRange = line.isLowerRange;\n            this.isOOB = line.isOOB;\n          } else {\n            this.isLeaf = false;\n          }\n        }\n\n        HuffmanTreeNode.prototype = {\n          buildTree: function buildTree(line, shift) {\n            var bit = line.prefixCode >> shift & 1;\n\n            if (shift <= 0) {\n              this.children[bit] = new HuffmanTreeNode(line);\n            } else {\n              var node = this.children[bit];\n\n              if (!node) {\n                this.children[bit] = node = new HuffmanTreeNode(null);\n              }\n\n              node.buildTree(line, shift - 1);\n            }\n          },\n          decodeNode: function decodeNode(reader) {\n            if (this.isLeaf) {\n              if (this.isOOB) {\n                return null;\n              }\n\n              var htOffset = reader.readBits(this.rangeLength);\n              return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n            }\n\n            var node = this.children[reader.readBit()];\n\n            if (!node) {\n              throw new Jbig2Error(\"invalid Huffman data\");\n            }\n\n            return node.decodeNode(reader);\n          }\n        };\n\n        function HuffmanTable(lines, prefixCodesDone) {\n          if (!prefixCodesDone) {\n            this.assignPrefixCodes(lines);\n          }\n\n          this.rootNode = new HuffmanTreeNode(null);\n\n          for (var i = 0, ii = lines.length; i < ii; i++) {\n            var line = lines[i];\n\n            if (line.prefixLength > 0) {\n              this.rootNode.buildTree(line, line.prefixLength - 1);\n            }\n          }\n        }\n\n        HuffmanTable.prototype = {\n          decode: function decode(reader) {\n            return this.rootNode.decodeNode(reader);\n          },\n          assignPrefixCodes: function assignPrefixCodes(lines) {\n            var linesLength = lines.length;\n            var prefixLengthMax = 0;\n\n            for (var i = 0; i < linesLength; i++) {\n              prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n            }\n\n            var histogram = new Uint32Array(prefixLengthMax + 1);\n\n            for (var _i12 = 0; _i12 < linesLength; _i12++) {\n              histogram[lines[_i12].prefixLength]++;\n            }\n\n            var currentLength = 1,\n                firstCode = 0,\n                currentCode,\n                currentTemp,\n                line;\n            histogram[0] = 0;\n\n            while (currentLength <= prefixLengthMax) {\n              firstCode = firstCode + histogram[currentLength - 1] << 1;\n              currentCode = firstCode;\n              currentTemp = 0;\n\n              while (currentTemp < linesLength) {\n                line = lines[currentTemp];\n\n                if (line.prefixLength === currentLength) {\n                  line.prefixCode = currentCode;\n                  currentCode++;\n                }\n\n                currentTemp++;\n              }\n\n              currentLength++;\n            }\n          }\n        };\n\n        function decodeTablesSegment(data, start, end) {\n          var flags = data[start];\n          var lowestValue = (0, _core_utils.readUint32)(data, start + 1) & 0xffffffff;\n          var highestValue = (0, _core_utils.readUint32)(data, start + 5) & 0xffffffff;\n          var reader = new Reader(data, start + 9, end);\n          var prefixSizeBits = (flags >> 1 & 7) + 1;\n          var rangeSizeBits = (flags >> 4 & 7) + 1;\n          var lines = [];\n          var prefixLength,\n              rangeLength,\n              currentRangeLow = lowestValue;\n\n          do {\n            prefixLength = reader.readBits(prefixSizeBits);\n            rangeLength = reader.readBits(rangeSizeBits);\n            lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n            currentRangeLow += 1 << rangeLength;\n          } while (currentRangeLow < highestValue);\n\n          prefixLength = reader.readBits(prefixSizeBits);\n          lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n          prefixLength = reader.readBits(prefixSizeBits);\n          lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n          if (flags & 1) {\n            prefixLength = reader.readBits(prefixSizeBits);\n            lines.push(new HuffmanLine([prefixLength, 0]));\n          }\n\n          return new HuffmanTable(lines, false);\n        }\n\n        var standardTablesCache = {};\n\n        function getStandardTable(number) {\n          var table = standardTablesCache[number];\n\n          if (table) {\n            return table;\n          }\n\n          var lines;\n\n          switch (number) {\n            case 1:\n              lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n              break;\n\n            case 2:\n              lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xe], [11, 5, 6, 0x1e], [75, 6, 32, 0x3e], [6, 0x3f]];\n              break;\n\n            case 3:\n              lines = [[-256, 8, 8, 0xfe], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xe], [11, 5, 6, 0x1e], [-257, 8, 32, 0xff, \"lower\"], [75, 7, 32, 0x7e], [6, 0x3e]];\n              break;\n\n            case 4:\n              lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xe], [12, 5, 6, 0x1e], [76, 5, 32, 0x1f]];\n              break;\n\n            case 5:\n              lines = [[-255, 7, 8, 0x7e], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xe], [12, 5, 6, 0x1e], [-256, 7, 32, 0x7f, \"lower\"], [76, 6, 32, 0x3e]];\n              break;\n\n            case 6:\n              lines = [[-2048, 5, 10, 0x1c], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xa], [-128, 5, 6, 0x1d], [-64, 5, 5, 0x1e], [-32, 4, 5, 0xb], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xc], [1024, 4, 10, 0xd], [-2049, 6, 32, 0x3e, \"lower\"], [2048, 6, 32, 0x3f]];\n              break;\n\n            case 7:\n              lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1a], [-64, 5, 5, 0x1b], [-32, 4, 5, 0xa], [0, 4, 5, 0xb], [32, 5, 5, 0x1c], [64, 5, 6, 0x1d], [128, 4, 7, 0xc], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1e, \"lower\"], [2048, 5, 32, 0x1f]];\n              break;\n\n            case 8:\n              lines = [[-15, 8, 3, 0xfc], [-7, 9, 1, 0x1fc], [-5, 8, 1, 0xfd], [-3, 9, 0, 0x1fd], [-2, 7, 0, 0x7c], [-1, 4, 0, 0xa], [0, 2, 1, 0x0], [2, 5, 0, 0x1a], [3, 6, 0, 0x3a], [4, 3, 4, 0x4], [20, 6, 1, 0x3b], [22, 4, 4, 0xb], [38, 4, 5, 0xc], [70, 5, 6, 0x1b], [134, 5, 7, 0x1c], [262, 6, 7, 0x3c], [390, 7, 8, 0x7d], [646, 6, 10, 0x3d], [-16, 9, 32, 0x1fe, \"lower\"], [1670, 9, 32, 0x1ff], [2, 0x1]];\n              break;\n\n            case 9:\n              lines = [[-31, 8, 4, 0xfc], [-15, 9, 2, 0x1fc], [-11, 8, 2, 0xfd], [-7, 9, 1, 0x1fd], [-5, 7, 1, 0x7c], [-3, 4, 1, 0xa], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1a], [5, 6, 1, 0x3a], [7, 3, 5, 0x4], [39, 6, 2, 0x3b], [43, 4, 5, 0xb], [75, 4, 6, 0xc], [139, 5, 7, 0x1b], [267, 5, 8, 0x1c], [523, 6, 8, 0x3c], [779, 7, 9, 0x7d], [1291, 6, 11, 0x3d], [-32, 9, 32, 0x1fe, \"lower\"], [3339, 9, 32, 0x1ff], [2, 0x0]];\n              break;\n\n            case 10:\n              lines = [[-21, 7, 4, 0x7a], [-5, 8, 0, 0xfc], [-4, 7, 0, 0x7b], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7c], [5, 8, 0, 0xfd], [6, 2, 6, 0x1], [70, 5, 5, 0x1a], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3a], [582, 6, 9, 0x3b], [1094, 6, 10, 0x3c], [2118, 7, 11, 0x7d], [-22, 8, 32, 0xfe, \"lower\"], [4166, 8, 32, 0xff], [2, 0x2]];\n              break;\n\n            case 11:\n              lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xc], [5, 4, 1, 0xd], [7, 5, 1, 0x1c], [9, 5, 2, 0x1d], [13, 6, 2, 0x3c], [17, 7, 2, 0x7a], [21, 7, 3, 0x7b], [29, 7, 4, 0x7c], [45, 7, 5, 0x7d], [77, 7, 6, 0x7e], [141, 7, 32, 0x7f]];\n              break;\n\n            case 12:\n              lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1c], [6, 5, 1, 0x1d], [8, 6, 1, 0x3c], [10, 7, 0, 0x7a], [11, 7, 1, 0x7b], [13, 7, 2, 0x7c], [17, 7, 3, 0x7d], [25, 7, 4, 0x7e], [41, 8, 5, 0xfe], [73, 8, 32, 0xff]];\n              break;\n\n            case 13:\n              lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xc], [4, 5, 0, 0x1c], [5, 4, 1, 0xd], [7, 3, 3, 0x5], [15, 6, 1, 0x3a], [17, 6, 2, 0x3b], [21, 6, 3, 0x3c], [29, 6, 4, 0x3d], [45, 6, 5, 0x3e], [77, 7, 6, 0x7e], [141, 7, 32, 0x7f]];\n              break;\n\n            case 14:\n              lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n              break;\n\n            case 15:\n              lines = [[-24, 7, 4, 0x7c], [-8, 6, 2, 0x3c], [-4, 5, 1, 0x1c], [-2, 4, 0, 0xc], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xd], [3, 5, 1, 0x1d], [5, 6, 2, 0x3d], [9, 7, 4, 0x7d], [-25, 7, 32, 0x7e, \"lower\"], [25, 7, 32, 0x7f]];\n              break;\n\n            default:\n              throw new Jbig2Error(\"standard table B.\".concat(number, \" does not exist\"));\n          }\n\n          for (var i = 0, ii = lines.length; i < ii; i++) {\n            lines[i] = new HuffmanLine(lines[i]);\n          }\n\n          table = new HuffmanTable(lines, true);\n          standardTablesCache[number] = table;\n          return table;\n        }\n\n        function Reader(data, start, end) {\n          this.data = data;\n          this.start = start;\n          this.end = end;\n          this.position = start;\n          this.shift = -1;\n          this.currentByte = 0;\n        }\n\n        Reader.prototype = {\n          readBit: function readBit() {\n            if (this.shift < 0) {\n              if (this.position >= this.end) {\n                throw new Jbig2Error(\"end of data while reading bit\");\n              }\n\n              this.currentByte = this.data[this.position++];\n              this.shift = 7;\n            }\n\n            var bit = this.currentByte >> this.shift & 1;\n            this.shift--;\n            return bit;\n          },\n          readBits: function readBits(numBits) {\n            var result = 0,\n                i;\n\n            for (i = numBits - 1; i >= 0; i--) {\n              result |= this.readBit() << i;\n            }\n\n            return result;\n          },\n          byteAlign: function byteAlign() {\n            this.shift = -1;\n          },\n          next: function next() {\n            if (this.position >= this.end) {\n              return -1;\n            }\n\n            return this.data[this.position++];\n          }\n        };\n\n        function getCustomHuffmanTable(index, referredTo, customTables) {\n          var currentIndex = 0;\n\n          for (var i = 0, ii = referredTo.length; i < ii; i++) {\n            var table = customTables[referredTo[i]];\n\n            if (table) {\n              if (index === currentIndex) {\n                return table;\n              }\n\n              currentIndex++;\n            }\n          }\n\n          throw new Jbig2Error(\"can't find custom Huffman table\");\n        }\n\n        function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n          var codes = [];\n\n          for (var i = 0; i <= 34; i++) {\n            var codeLength = reader.readBits(4);\n            codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n          }\n\n          var runCodesTable = new HuffmanTable(codes, false);\n          codes.length = 0;\n\n          for (var _i13 = 0; _i13 < numberOfSymbols;) {\n            var _codeLength = runCodesTable.decode(reader);\n\n            if (_codeLength >= 32) {\n              var repeatedLength = void 0,\n                  numberOfRepeats = void 0,\n                  j = void 0;\n\n              switch (_codeLength) {\n                case 32:\n                  if (_i13 === 0) {\n                    throw new Jbig2Error(\"no previous value in symbol ID table\");\n                  }\n\n                  numberOfRepeats = reader.readBits(2) + 3;\n                  repeatedLength = codes[_i13 - 1].prefixLength;\n                  break;\n\n                case 33:\n                  numberOfRepeats = reader.readBits(3) + 3;\n                  repeatedLength = 0;\n                  break;\n\n                case 34:\n                  numberOfRepeats = reader.readBits(7) + 11;\n                  repeatedLength = 0;\n                  break;\n\n                default:\n                  throw new Jbig2Error(\"invalid code length in symbol ID table\");\n              }\n\n              for (j = 0; j < numberOfRepeats; j++) {\n                codes.push(new HuffmanLine([_i13, repeatedLength, 0, 0]));\n                _i13++;\n              }\n            } else {\n              codes.push(new HuffmanLine([_i13, _codeLength, 0, 0]));\n              _i13++;\n            }\n          }\n\n          reader.byteAlign();\n          var symbolIDTable = new HuffmanTable(codes, false);\n          var customIndex = 0,\n              tableFirstS,\n              tableDeltaS,\n              tableDeltaT;\n\n          switch (textRegion.huffmanFS) {\n            case 0:\n            case 1:\n              tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n              break;\n\n            case 3:\n              tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n              customIndex++;\n              break;\n\n            default:\n              throw new Jbig2Error(\"invalid Huffman FS selector\");\n          }\n\n          switch (textRegion.huffmanDS) {\n            case 0:\n            case 1:\n            case 2:\n              tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n              break;\n\n            case 3:\n              tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n              customIndex++;\n              break;\n\n            default:\n              throw new Jbig2Error(\"invalid Huffman DS selector\");\n          }\n\n          switch (textRegion.huffmanDT) {\n            case 0:\n            case 1:\n            case 2:\n              tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n              break;\n\n            case 3:\n              tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n              customIndex++;\n              break;\n\n            default:\n              throw new Jbig2Error(\"invalid Huffman DT selector\");\n          }\n\n          if (textRegion.refinement) {\n            throw new Jbig2Error(\"refinement with Huffman is not supported\");\n          }\n\n          return {\n            symbolIDTable: symbolIDTable,\n            tableFirstS: tableFirstS,\n            tableDeltaS: tableDeltaS,\n            tableDeltaT: tableDeltaT\n          };\n        }\n\n        function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n          var customIndex = 0,\n              tableDeltaHeight,\n              tableDeltaWidth;\n\n          switch (dictionary.huffmanDHSelector) {\n            case 0:\n            case 1:\n              tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n              break;\n\n            case 3:\n              tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n              customIndex++;\n              break;\n\n            default:\n              throw new Jbig2Error(\"invalid Huffman DH selector\");\n          }\n\n          switch (dictionary.huffmanDWSelector) {\n            case 0:\n            case 1:\n              tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n              break;\n\n            case 3:\n              tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n              customIndex++;\n              break;\n\n            default:\n              throw new Jbig2Error(\"invalid Huffman DW selector\");\n          }\n\n          var tableBitmapSize, tableAggregateInstances;\n\n          if (dictionary.bitmapSizeSelector) {\n            tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n            customIndex++;\n          } else {\n            tableBitmapSize = getStandardTable(1);\n          }\n\n          if (dictionary.aggregationInstancesSelector) {\n            tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n          } else {\n            tableAggregateInstances = getStandardTable(1);\n          }\n\n          return {\n            tableDeltaHeight: tableDeltaHeight,\n            tableDeltaWidth: tableDeltaWidth,\n            tableBitmapSize: tableBitmapSize,\n            tableAggregateInstances: tableAggregateInstances\n          };\n        }\n\n        function readUncompressedBitmap(reader, width, height) {\n          var bitmap = [];\n\n          for (var y = 0; y < height; y++) {\n            var row = new Uint8Array(width);\n            bitmap.push(row);\n\n            for (var x = 0; x < width; x++) {\n              row[x] = reader.readBit();\n            }\n\n            reader.byteAlign();\n          }\n\n          return bitmap;\n        }\n\n        function decodeMMRBitmap(input, width, height, endOfBlock) {\n          var params = {\n            K: -1,\n            Columns: width,\n            Rows: height,\n            BlackIs1: true,\n            EndOfBlock: endOfBlock\n          };\n          var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n          var bitmap = [];\n          var currentByte,\n              eof = false;\n\n          for (var y = 0; y < height; y++) {\n            var row = new Uint8Array(width);\n            bitmap.push(row);\n            var shift = -1;\n\n            for (var x = 0; x < width; x++) {\n              if (shift < 0) {\n                currentByte = decoder.readNextChar();\n\n                if (currentByte === -1) {\n                  currentByte = 0;\n                  eof = true;\n                }\n\n                shift = 7;\n              }\n\n              row[x] = currentByte >> shift & 1;\n              shift--;\n            }\n          }\n\n          if (endOfBlock && !eof) {\n            var lookForEOFLimit = 5;\n\n            for (var i = 0; i < lookForEOFLimit; i++) {\n              if (decoder.readNextChar() === -1) {\n                break;\n              }\n            }\n          }\n\n          return bitmap;\n        }\n\n        function Jbig2Image() {}\n\n        Jbig2Image.prototype = {\n          parseChunks: function parseChunks(chunks) {\n            return parseJbig2Chunks(chunks);\n          },\n          parse: function parse(data) {\n            var _parseJbig = parseJbig2(data),\n                imgData = _parseJbig.imgData,\n                width = _parseJbig.width,\n                height = _parseJbig.height;\n\n            this.width = width;\n            this.height = height;\n            return imgData;\n          }\n        };\n        return Jbig2Image;\n      }();\n\n      exports.Jbig2Image = Jbig2Image;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ArithmeticDecoder = void 0;\n      var QeTable = [{\n        qe: 0x5601,\n        nmps: 1,\n        nlps: 1,\n        switchFlag: 1\n      }, {\n        qe: 0x3401,\n        nmps: 2,\n        nlps: 6,\n        switchFlag: 0\n      }, {\n        qe: 0x1801,\n        nmps: 3,\n        nlps: 9,\n        switchFlag: 0\n      }, {\n        qe: 0x0ac1,\n        nmps: 4,\n        nlps: 12,\n        switchFlag: 0\n      }, {\n        qe: 0x0521,\n        nmps: 5,\n        nlps: 29,\n        switchFlag: 0\n      }, {\n        qe: 0x0221,\n        nmps: 38,\n        nlps: 33,\n        switchFlag: 0\n      }, {\n        qe: 0x5601,\n        nmps: 7,\n        nlps: 6,\n        switchFlag: 1\n      }, {\n        qe: 0x5401,\n        nmps: 8,\n        nlps: 14,\n        switchFlag: 0\n      }, {\n        qe: 0x4801,\n        nmps: 9,\n        nlps: 14,\n        switchFlag: 0\n      }, {\n        qe: 0x3801,\n        nmps: 10,\n        nlps: 14,\n        switchFlag: 0\n      }, {\n        qe: 0x3001,\n        nmps: 11,\n        nlps: 17,\n        switchFlag: 0\n      }, {\n        qe: 0x2401,\n        nmps: 12,\n        nlps: 18,\n        switchFlag: 0\n      }, {\n        qe: 0x1c01,\n        nmps: 13,\n        nlps: 20,\n        switchFlag: 0\n      }, {\n        qe: 0x1601,\n        nmps: 29,\n        nlps: 21,\n        switchFlag: 0\n      }, {\n        qe: 0x5601,\n        nmps: 15,\n        nlps: 14,\n        switchFlag: 1\n      }, {\n        qe: 0x5401,\n        nmps: 16,\n        nlps: 14,\n        switchFlag: 0\n      }, {\n        qe: 0x5101,\n        nmps: 17,\n        nlps: 15,\n        switchFlag: 0\n      }, {\n        qe: 0x4801,\n        nmps: 18,\n        nlps: 16,\n        switchFlag: 0\n      }, {\n        qe: 0x3801,\n        nmps: 19,\n        nlps: 17,\n        switchFlag: 0\n      }, {\n        qe: 0x3401,\n        nmps: 20,\n        nlps: 18,\n        switchFlag: 0\n      }, {\n        qe: 0x3001,\n        nmps: 21,\n        nlps: 19,\n        switchFlag: 0\n      }, {\n        qe: 0x2801,\n        nmps: 22,\n        nlps: 19,\n        switchFlag: 0\n      }, {\n        qe: 0x2401,\n        nmps: 23,\n        nlps: 20,\n        switchFlag: 0\n      }, {\n        qe: 0x2201,\n        nmps: 24,\n        nlps: 21,\n        switchFlag: 0\n      }, {\n        qe: 0x1c01,\n        nmps: 25,\n        nlps: 22,\n        switchFlag: 0\n      }, {\n        qe: 0x1801,\n        nmps: 26,\n        nlps: 23,\n        switchFlag: 0\n      }, {\n        qe: 0x1601,\n        nmps: 27,\n        nlps: 24,\n        switchFlag: 0\n      }, {\n        qe: 0x1401,\n        nmps: 28,\n        nlps: 25,\n        switchFlag: 0\n      }, {\n        qe: 0x1201,\n        nmps: 29,\n        nlps: 26,\n        switchFlag: 0\n      }, {\n        qe: 0x1101,\n        nmps: 30,\n        nlps: 27,\n        switchFlag: 0\n      }, {\n        qe: 0x0ac1,\n        nmps: 31,\n        nlps: 28,\n        switchFlag: 0\n      }, {\n        qe: 0x09c1,\n        nmps: 32,\n        nlps: 29,\n        switchFlag: 0\n      }, {\n        qe: 0x08a1,\n        nmps: 33,\n        nlps: 30,\n        switchFlag: 0\n      }, {\n        qe: 0x0521,\n        nmps: 34,\n        nlps: 31,\n        switchFlag: 0\n      }, {\n        qe: 0x0441,\n        nmps: 35,\n        nlps: 32,\n        switchFlag: 0\n      }, {\n        qe: 0x02a1,\n        nmps: 36,\n        nlps: 33,\n        switchFlag: 0\n      }, {\n        qe: 0x0221,\n        nmps: 37,\n        nlps: 34,\n        switchFlag: 0\n      }, {\n        qe: 0x0141,\n        nmps: 38,\n        nlps: 35,\n        switchFlag: 0\n      }, {\n        qe: 0x0111,\n        nmps: 39,\n        nlps: 36,\n        switchFlag: 0\n      }, {\n        qe: 0x0085,\n        nmps: 40,\n        nlps: 37,\n        switchFlag: 0\n      }, {\n        qe: 0x0049,\n        nmps: 41,\n        nlps: 38,\n        switchFlag: 0\n      }, {\n        qe: 0x0025,\n        nmps: 42,\n        nlps: 39,\n        switchFlag: 0\n      }, {\n        qe: 0x0015,\n        nmps: 43,\n        nlps: 40,\n        switchFlag: 0\n      }, {\n        qe: 0x0009,\n        nmps: 44,\n        nlps: 41,\n        switchFlag: 0\n      }, {\n        qe: 0x0005,\n        nmps: 45,\n        nlps: 42,\n        switchFlag: 0\n      }, {\n        qe: 0x0001,\n        nmps: 45,\n        nlps: 43,\n        switchFlag: 0\n      }, {\n        qe: 0x5601,\n        nmps: 46,\n        nlps: 46,\n        switchFlag: 0\n      }];\n\n      var ArithmeticDecoder = /*#__PURE__*/function () {\n        function ArithmeticDecoder(data, start, end) {\n          _classCallCheck(this, ArithmeticDecoder);\n\n          this.data = data;\n          this.bp = start;\n          this.dataEnd = end;\n          this.chigh = data[start];\n          this.clow = 0;\n          this.byteIn();\n          this.chigh = this.chigh << 7 & 0xffff | this.clow >> 9 & 0x7f;\n          this.clow = this.clow << 7 & 0xffff;\n          this.ct -= 7;\n          this.a = 0x8000;\n        }\n\n        _createClass(ArithmeticDecoder, [{\n          key: \"byteIn\",\n          value: function byteIn() {\n            var data = this.data;\n            var bp = this.bp;\n\n            if (data[bp] === 0xff) {\n              if (data[bp + 1] > 0x8f) {\n                this.clow += 0xff00;\n                this.ct = 8;\n              } else {\n                bp++;\n                this.clow += data[bp] << 9;\n                this.ct = 7;\n                this.bp = bp;\n              }\n            } else {\n              bp++;\n              this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n              this.ct = 8;\n              this.bp = bp;\n            }\n\n            if (this.clow > 0xffff) {\n              this.chigh += this.clow >> 16;\n              this.clow &= 0xffff;\n            }\n          }\n        }, {\n          key: \"readBit\",\n          value: function readBit(contexts, pos) {\n            var cx_index = contexts[pos] >> 1,\n                cx_mps = contexts[pos] & 1;\n            var qeTableIcx = QeTable[cx_index];\n            var qeIcx = qeTableIcx.qe;\n            var d;\n            var a = this.a - qeIcx;\n\n            if (this.chigh < qeIcx) {\n              if (a < qeIcx) {\n                a = qeIcx;\n                d = cx_mps;\n                cx_index = qeTableIcx.nmps;\n              } else {\n                a = qeIcx;\n                d = 1 ^ cx_mps;\n\n                if (qeTableIcx.switchFlag === 1) {\n                  cx_mps = d;\n                }\n\n                cx_index = qeTableIcx.nlps;\n              }\n            } else {\n              this.chigh -= qeIcx;\n\n              if ((a & 0x8000) !== 0) {\n                this.a = a;\n                return cx_mps;\n              }\n\n              if (a < qeIcx) {\n                d = 1 ^ cx_mps;\n\n                if (qeTableIcx.switchFlag === 1) {\n                  cx_mps = d;\n                }\n\n                cx_index = qeTableIcx.nlps;\n              } else {\n                d = cx_mps;\n                cx_index = qeTableIcx.nmps;\n              }\n            }\n\n            do {\n              if (this.ct === 0) {\n                this.byteIn();\n              }\n\n              a <<= 1;\n              this.chigh = this.chigh << 1 & 0xffff | this.clow >> 15 & 1;\n              this.clow = this.clow << 1 & 0xffff;\n              this.ct--;\n            } while ((a & 0x8000) === 0);\n\n            this.a = a;\n            contexts[pos] = cx_index << 1 | cx_mps;\n            return d;\n          }\n        }]);\n\n        return ArithmeticDecoder;\n      }();\n\n      exports.ArithmeticDecoder = ArithmeticDecoder;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.JpegStream = void 0;\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _jpg = __w_pdfjs_require__(19);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var JpegStream = function JpegStreamClosure() {\n        function JpegStream(stream, maybeLength, dict, params) {\n          var ch;\n\n          while ((ch = stream.getByte()) !== -1) {\n            if (ch === 0xff) {\n              stream.skip(-1);\n              break;\n            }\n          }\n\n          this.stream = stream;\n          this.maybeLength = maybeLength;\n          this.dict = dict;\n          this.params = params;\n\n          _stream.DecodeStream.call(this, maybeLength);\n        }\n\n        JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n        Object.defineProperty(JpegStream.prototype, \"bytes\", {\n          get: function JpegStream_bytes() {\n            return (0, _util.shadow)(this, \"bytes\", this.stream.getBytes(this.maybeLength));\n          },\n          configurable: true\n        });\n\n        JpegStream.prototype.ensureBuffer = function (requested) {};\n\n        JpegStream.prototype.readBlock = function () {\n          if (this.eof) {\n            return;\n          }\n\n          var jpegOptions = {\n            decodeTransform: undefined,\n            colorTransform: undefined\n          };\n          var decodeArr = this.dict.getArray(\"Decode\", \"D\");\n\n          if (this.forceRGB && Array.isArray(decodeArr)) {\n            var bitsPerComponent = this.dict.get(\"BitsPerComponent\") || 8;\n            var decodeArrLength = decodeArr.length;\n            var transform = new Int32Array(decodeArrLength);\n            var transformNeeded = false;\n            var maxValue = (1 << bitsPerComponent) - 1;\n\n            for (var i = 0; i < decodeArrLength; i += 2) {\n              transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n              transform[i + 1] = decodeArr[i] * maxValue | 0;\n\n              if (transform[i] !== 256 || transform[i + 1] !== 0) {\n                transformNeeded = true;\n              }\n            }\n\n            if (transformNeeded) {\n              jpegOptions.decodeTransform = transform;\n            }\n          }\n\n          if ((0, _primitives.isDict)(this.params)) {\n            var colorTransform = this.params.get(\"ColorTransform\");\n\n            if (Number.isInteger(colorTransform)) {\n              jpegOptions.colorTransform = colorTransform;\n            }\n          }\n\n          var jpegImage = new _jpg.JpegImage(jpegOptions);\n          jpegImage.parse(this.bytes);\n          var data = jpegImage.getData({\n            width: this.drawWidth,\n            height: this.drawHeight,\n            forceRGB: this.forceRGB,\n            isSourcePDF: true\n          });\n          this.buffer = data;\n          this.bufferLength = data.length;\n          this.eof = true;\n        };\n\n        return JpegStream;\n      }();\n\n      exports.JpegStream = JpegStream;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.JpegImage = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var JpegError = /*#__PURE__*/function (_util$BaseException5) {\n        _inherits(JpegError, _util$BaseException5);\n\n        var _super17 = _createSuper(JpegError);\n\n        function JpegError(msg) {\n          _classCallCheck(this, JpegError);\n\n          return _super17.call(this, \"JPEG error: \".concat(msg));\n        }\n\n        return JpegError;\n      }(_util.BaseException);\n\n      var DNLMarkerError = /*#__PURE__*/function (_util$BaseException6) {\n        _inherits(DNLMarkerError, _util$BaseException6);\n\n        var _super18 = _createSuper(DNLMarkerError);\n\n        function DNLMarkerError(message, scanLines) {\n          var _this23;\n\n          _classCallCheck(this, DNLMarkerError);\n\n          _this23 = _super18.call(this, message);\n          _this23.scanLines = scanLines;\n          return _this23;\n        }\n\n        return DNLMarkerError;\n      }(_util.BaseException);\n\n      var EOIMarkerError = /*#__PURE__*/function (_util$BaseException7) {\n        _inherits(EOIMarkerError, _util$BaseException7);\n\n        var _super19 = _createSuper(EOIMarkerError);\n\n        function EOIMarkerError() {\n          _classCallCheck(this, EOIMarkerError);\n\n          return _super19.apply(this, arguments);\n        }\n\n        return EOIMarkerError;\n      }(_util.BaseException);\n\n      var JpegImage = function JpegImageClosure() {\n        var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n        var dctCos1 = 4017;\n        var dctSin1 = 799;\n        var dctCos3 = 3406;\n        var dctSin3 = 2276;\n        var dctCos6 = 1567;\n        var dctSin6 = 3784;\n        var dctSqrt2 = 5793;\n        var dctSqrt1d2 = 2896;\n\n        function JpegImage() {\n          var _ref25 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              _ref25$decodeTransfor = _ref25.decodeTransform,\n              decodeTransform = _ref25$decodeTransfor === void 0 ? null : _ref25$decodeTransfor,\n              _ref25$colorTransform = _ref25.colorTransform,\n              colorTransform = _ref25$colorTransform === void 0 ? -1 : _ref25$colorTransform;\n\n          this._decodeTransform = decodeTransform;\n          this._colorTransform = colorTransform;\n        }\n\n        function buildHuffmanTable(codeLengths, values) {\n          var k = 0,\n              code = [],\n              i,\n              j,\n              length = 16;\n\n          while (length > 0 && !codeLengths[length - 1]) {\n            length--;\n          }\n\n          code.push({\n            children: [],\n            index: 0\n          });\n          var p = code[0],\n              q;\n\n          for (i = 0; i < length; i++) {\n            for (j = 0; j < codeLengths[i]; j++) {\n              p = code.pop();\n              p.children[p.index] = values[k];\n\n              while (p.index > 0) {\n                p = code.pop();\n              }\n\n              p.index++;\n              code.push(p);\n\n              while (code.length <= i) {\n                code.push(q = {\n                  children: [],\n                  index: 0\n                });\n                p.children[p.index] = q.children;\n                p = q;\n              }\n\n              k++;\n            }\n\n            if (i + 1 < length) {\n              code.push(q = {\n                children: [],\n                index: 0\n              });\n              p.children[p.index] = q.children;\n              p = q;\n            }\n          }\n\n          return code[0].children;\n        }\n\n        function getBlockBufferOffset(component, row, col) {\n          return 64 * ((component.blocksPerLine + 1) * row + col);\n        }\n\n        function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n          var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n          var mcusPerLine = frame.mcusPerLine;\n          var progressive = frame.progressive;\n          var startOffset = offset;\n          var bitsData = 0,\n              bitsCount = 0;\n\n          function readBit() {\n            if (bitsCount > 0) {\n              bitsCount--;\n              return bitsData >> bitsCount & 1;\n            }\n\n            bitsData = data[offset++];\n\n            if (bitsData === 0xff) {\n              var nextByte = data[offset++];\n\n              if (nextByte) {\n                if (nextByte === 0xdc && parseDNLMarker) {\n                  offset += 2;\n                  var scanLines = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n\n                  if (scanLines > 0 && scanLines !== frame.scanLines) {\n                    throw new DNLMarkerError(\"Found DNL marker (0xFFDC) while parsing scan data\", scanLines);\n                  }\n                } else if (nextByte === 0xd9) {\n                  if (parseDNLMarker) {\n                    var maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n\n                    if (maybeScanLines > 0 && Math.round(frame.scanLines / maybeScanLines) >= 10) {\n                      throw new DNLMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data, \" + \"possibly caused by incorrect `scanLines` parameter\", maybeScanLines);\n                    }\n                  }\n\n                  throw new EOIMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data\");\n                }\n\n                throw new JpegError(\"unexpected marker \".concat((bitsData << 8 | nextByte).toString(16)));\n              }\n            }\n\n            bitsCount = 7;\n            return bitsData >>> 7;\n          }\n\n          function decodeHuffman(tree) {\n            var node = tree;\n\n            while (true) {\n              node = node[readBit()];\n\n              switch (typeof node) {\n                case \"number\":\n                  return node;\n\n                case \"object\":\n                  continue;\n              }\n\n              throw new JpegError(\"invalid huffman sequence\");\n            }\n          }\n\n          function receive(length) {\n            var n = 0;\n\n            while (length > 0) {\n              n = n << 1 | readBit();\n              length--;\n            }\n\n            return n;\n          }\n\n          function receiveAndExtend(length) {\n            if (length === 1) {\n              return readBit() === 1 ? 1 : -1;\n            }\n\n            var n = receive(length);\n\n            if (n >= 1 << length - 1) {\n              return n;\n            }\n\n            return n + (-1 << length) + 1;\n          }\n\n          function decodeBaseline(component, blockOffset) {\n            var t = decodeHuffman(component.huffmanTableDC);\n            var diff = t === 0 ? 0 : receiveAndExtend(t);\n            component.blockData[blockOffset] = component.pred += diff;\n            var k = 1;\n\n            while (k < 64) {\n              var rs = decodeHuffman(component.huffmanTableAC);\n              var s = rs & 15,\n                  r = rs >> 4;\n\n              if (s === 0) {\n                if (r < 15) {\n                  break;\n                }\n\n                k += 16;\n                continue;\n              }\n\n              k += r;\n              var z = dctZigZag[k];\n              component.blockData[blockOffset + z] = receiveAndExtend(s);\n              k++;\n            }\n          }\n\n          function decodeDCFirst(component, blockOffset) {\n            var t = decodeHuffman(component.huffmanTableDC);\n            var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n            component.blockData[blockOffset] = component.pred += diff;\n          }\n\n          function decodeDCSuccessive(component, blockOffset) {\n            component.blockData[blockOffset] |= readBit() << successive;\n          }\n\n          var eobrun = 0;\n\n          function decodeACFirst(component, blockOffset) {\n            if (eobrun > 0) {\n              eobrun--;\n              return;\n            }\n\n            var k = spectralStart,\n                e = spectralEnd;\n\n            while (k <= e) {\n              var rs = decodeHuffman(component.huffmanTableAC);\n              var s = rs & 15,\n                  r = rs >> 4;\n\n              if (s === 0) {\n                if (r < 15) {\n                  eobrun = receive(r) + (1 << r) - 1;\n                  break;\n                }\n\n                k += 16;\n                continue;\n              }\n\n              k += r;\n              var z = dctZigZag[k];\n              component.blockData[blockOffset + z] = receiveAndExtend(s) * (1 << successive);\n              k++;\n            }\n          }\n\n          var successiveACState = 0,\n              successiveACNextValue;\n\n          function decodeACSuccessive(component, blockOffset) {\n            var k = spectralStart;\n            var e = spectralEnd;\n            var r = 0;\n            var s;\n            var rs;\n\n            while (k <= e) {\n              var offsetZ = blockOffset + dctZigZag[k];\n              var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n\n              switch (successiveACState) {\n                case 0:\n                  rs = decodeHuffman(component.huffmanTableAC);\n                  s = rs & 15;\n                  r = rs >> 4;\n\n                  if (s === 0) {\n                    if (r < 15) {\n                      eobrun = receive(r) + (1 << r);\n                      successiveACState = 4;\n                    } else {\n                      r = 16;\n                      successiveACState = 1;\n                    }\n                  } else {\n                    if (s !== 1) {\n                      throw new JpegError(\"invalid ACn encoding\");\n                    }\n\n                    successiveACNextValue = receiveAndExtend(s);\n                    successiveACState = r ? 2 : 3;\n                  }\n\n                  continue;\n\n                case 1:\n                case 2:\n                  if (component.blockData[offsetZ]) {\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\n                  } else {\n                    r--;\n\n                    if (r === 0) {\n                      successiveACState = successiveACState === 2 ? 3 : 0;\n                    }\n                  }\n\n                  break;\n\n                case 3:\n                  if (component.blockData[offsetZ]) {\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\n                  } else {\n                    component.blockData[offsetZ] = successiveACNextValue << successive;\n                    successiveACState = 0;\n                  }\n\n                  break;\n\n                case 4:\n                  if (component.blockData[offsetZ]) {\n                    component.blockData[offsetZ] += sign * (readBit() << successive);\n                  }\n\n                  break;\n              }\n\n              k++;\n            }\n\n            if (successiveACState === 4) {\n              eobrun--;\n\n              if (eobrun === 0) {\n                successiveACState = 0;\n              }\n            }\n          }\n\n          var blockRow = 0;\n\n          function decodeMcu(component, decode, mcu, row, col) {\n            var mcuRow = mcu / mcusPerLine | 0;\n            var mcuCol = mcu % mcusPerLine;\n            blockRow = mcuRow * component.v + row;\n            var blockCol = mcuCol * component.h + col;\n            var blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n            decode(component, blockOffset);\n          }\n\n          function decodeBlock(component, decode, mcu) {\n            blockRow = mcu / component.blocksPerLine | 0;\n            var blockCol = mcu % component.blocksPerLine;\n            var blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n            decode(component, blockOffset);\n          }\n\n          var componentsLength = components.length;\n          var component, i, j, k, n;\n          var decodeFn;\n\n          if (progressive) {\n            if (spectralStart === 0) {\n              decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n            } else {\n              decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n            }\n          } else {\n            decodeFn = decodeBaseline;\n          }\n\n          var mcu = 0,\n              fileMarker;\n          var mcuExpected;\n\n          if (componentsLength === 1) {\n            mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n          } else {\n            mcuExpected = mcusPerLine * frame.mcusPerColumn;\n          }\n\n          var h, v;\n\n          while (mcu <= mcuExpected) {\n            var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n\n            if (mcuToRead > 0) {\n              for (i = 0; i < componentsLength; i++) {\n                components[i].pred = 0;\n              }\n\n              eobrun = 0;\n\n              if (componentsLength === 1) {\n                component = components[0];\n\n                for (n = 0; n < mcuToRead; n++) {\n                  decodeBlock(component, decodeFn, mcu);\n                  mcu++;\n                }\n              } else {\n                for (n = 0; n < mcuToRead; n++) {\n                  for (i = 0; i < componentsLength; i++) {\n                    component = components[i];\n                    h = component.h;\n                    v = component.v;\n\n                    for (j = 0; j < v; j++) {\n                      for (k = 0; k < h; k++) {\n                        decodeMcu(component, decodeFn, mcu, j, k);\n                      }\n                    }\n                  }\n\n                  mcu++;\n                }\n              }\n            }\n\n            bitsCount = 0;\n            fileMarker = findNextFileMarker(data, offset);\n\n            if (!fileMarker) {\n              break;\n            }\n\n            if (fileMarker.invalid) {\n              var partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n              (0, _util.warn)(\"decodeScan - \".concat(partialMsg, \" MCU data, current marker is: \").concat(fileMarker.invalid));\n              offset = fileMarker.offset;\n            }\n\n            if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n              offset += 2;\n            } else {\n              break;\n            }\n          }\n\n          return offset - startOffset;\n        }\n\n        function quantizeAndInverse(component, blockBufferOffset, p) {\n          var qt = component.quantizationTable,\n              blockData = component.blockData;\n          var v0, v1, v2, v3, v4, v5, v6, v7;\n          var p0, p1, p2, p3, p4, p5, p6, p7;\n          var t;\n\n          if (!qt) {\n            throw new JpegError(\"missing required Quantization Table.\");\n          }\n\n          for (var row = 0; row < 64; row += 8) {\n            p0 = blockData[blockBufferOffset + row];\n            p1 = blockData[blockBufferOffset + row + 1];\n            p2 = blockData[blockBufferOffset + row + 2];\n            p3 = blockData[blockBufferOffset + row + 3];\n            p4 = blockData[blockBufferOffset + row + 4];\n            p5 = blockData[blockBufferOffset + row + 5];\n            p6 = blockData[blockBufferOffset + row + 6];\n            p7 = blockData[blockBufferOffset + row + 7];\n            p0 *= qt[row];\n\n            if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n              t = dctSqrt2 * p0 + 512 >> 10;\n              p[row] = t;\n              p[row + 1] = t;\n              p[row + 2] = t;\n              p[row + 3] = t;\n              p[row + 4] = t;\n              p[row + 5] = t;\n              p[row + 6] = t;\n              p[row + 7] = t;\n              continue;\n            }\n\n            p1 *= qt[row + 1];\n            p2 *= qt[row + 2];\n            p3 *= qt[row + 3];\n            p4 *= qt[row + 4];\n            p5 *= qt[row + 5];\n            p6 *= qt[row + 6];\n            p7 *= qt[row + 7];\n            v0 = dctSqrt2 * p0 + 128 >> 8;\n            v1 = dctSqrt2 * p4 + 128 >> 8;\n            v2 = p2;\n            v3 = p6;\n            v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n            v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n            v5 = p3 << 4;\n            v6 = p5 << 4;\n            v0 = v0 + v1 + 1 >> 1;\n            v1 = v0 - v1;\n            t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n            v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n            v3 = t;\n            v4 = v4 + v6 + 1 >> 1;\n            v6 = v4 - v6;\n            v7 = v7 + v5 + 1 >> 1;\n            v5 = v7 - v5;\n            v0 = v0 + v3 + 1 >> 1;\n            v3 = v0 - v3;\n            v1 = v1 + v2 + 1 >> 1;\n            v2 = v1 - v2;\n            t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n            v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n            v7 = t;\n            t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n            v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n            v6 = t;\n            p[row] = v0 + v7;\n            p[row + 7] = v0 - v7;\n            p[row + 1] = v1 + v6;\n            p[row + 6] = v1 - v6;\n            p[row + 2] = v2 + v5;\n            p[row + 5] = v2 - v5;\n            p[row + 3] = v3 + v4;\n            p[row + 4] = v3 - v4;\n          }\n\n          for (var col = 0; col < 8; ++col) {\n            p0 = p[col];\n            p1 = p[col + 8];\n            p2 = p[col + 16];\n            p3 = p[col + 24];\n            p4 = p[col + 32];\n            p5 = p[col + 40];\n            p6 = p[col + 48];\n            p7 = p[col + 56];\n\n            if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n              t = dctSqrt2 * p0 + 8192 >> 14;\n\n              if (t < -2040) {\n                t = 0;\n              } else if (t >= 2024) {\n                t = 255;\n              } else {\n                t = t + 2056 >> 4;\n              }\n\n              blockData[blockBufferOffset + col] = t;\n              blockData[blockBufferOffset + col + 8] = t;\n              blockData[blockBufferOffset + col + 16] = t;\n              blockData[blockBufferOffset + col + 24] = t;\n              blockData[blockBufferOffset + col + 32] = t;\n              blockData[blockBufferOffset + col + 40] = t;\n              blockData[blockBufferOffset + col + 48] = t;\n              blockData[blockBufferOffset + col + 56] = t;\n              continue;\n            }\n\n            v0 = dctSqrt2 * p0 + 2048 >> 12;\n            v1 = dctSqrt2 * p4 + 2048 >> 12;\n            v2 = p2;\n            v3 = p6;\n            v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n            v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n            v5 = p3;\n            v6 = p5;\n            v0 = (v0 + v1 + 1 >> 1) + 4112;\n            v1 = v0 - v1;\n            t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n            v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n            v3 = t;\n            v4 = v4 + v6 + 1 >> 1;\n            v6 = v4 - v6;\n            v7 = v7 + v5 + 1 >> 1;\n            v5 = v7 - v5;\n            v0 = v0 + v3 + 1 >> 1;\n            v3 = v0 - v3;\n            v1 = v1 + v2 + 1 >> 1;\n            v2 = v1 - v2;\n            t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n            v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n            v7 = t;\n            t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n            v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n            v6 = t;\n            p0 = v0 + v7;\n            p7 = v0 - v7;\n            p1 = v1 + v6;\n            p6 = v1 - v6;\n            p2 = v2 + v5;\n            p5 = v2 - v5;\n            p3 = v3 + v4;\n            p4 = v3 - v4;\n\n            if (p0 < 16) {\n              p0 = 0;\n            } else if (p0 >= 4080) {\n              p0 = 255;\n            } else {\n              p0 >>= 4;\n            }\n\n            if (p1 < 16) {\n              p1 = 0;\n            } else if (p1 >= 4080) {\n              p1 = 255;\n            } else {\n              p1 >>= 4;\n            }\n\n            if (p2 < 16) {\n              p2 = 0;\n            } else if (p2 >= 4080) {\n              p2 = 255;\n            } else {\n              p2 >>= 4;\n            }\n\n            if (p3 < 16) {\n              p3 = 0;\n            } else if (p3 >= 4080) {\n              p3 = 255;\n            } else {\n              p3 >>= 4;\n            }\n\n            if (p4 < 16) {\n              p4 = 0;\n            } else if (p4 >= 4080) {\n              p4 = 255;\n            } else {\n              p4 >>= 4;\n            }\n\n            if (p5 < 16) {\n              p5 = 0;\n            } else if (p5 >= 4080) {\n              p5 = 255;\n            } else {\n              p5 >>= 4;\n            }\n\n            if (p6 < 16) {\n              p6 = 0;\n            } else if (p6 >= 4080) {\n              p6 = 255;\n            } else {\n              p6 >>= 4;\n            }\n\n            if (p7 < 16) {\n              p7 = 0;\n            } else if (p7 >= 4080) {\n              p7 = 255;\n            } else {\n              p7 >>= 4;\n            }\n\n            blockData[blockBufferOffset + col] = p0;\n            blockData[blockBufferOffset + col + 8] = p1;\n            blockData[blockBufferOffset + col + 16] = p2;\n            blockData[blockBufferOffset + col + 24] = p3;\n            blockData[blockBufferOffset + col + 32] = p4;\n            blockData[blockBufferOffset + col + 40] = p5;\n            blockData[blockBufferOffset + col + 48] = p6;\n            blockData[blockBufferOffset + col + 56] = p7;\n          }\n        }\n\n        function buildComponentData(frame, component) {\n          var blocksPerLine = component.blocksPerLine;\n          var blocksPerColumn = component.blocksPerColumn;\n          var computationBuffer = new Int16Array(64);\n\n          for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n            for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n              var offset = getBlockBufferOffset(component, blockRow, blockCol);\n              quantizeAndInverse(component, offset, computationBuffer);\n            }\n          }\n\n          return component.blockData;\n        }\n\n        function findNextFileMarker(data, currentPos) {\n          var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n          var maxPos = data.length - 1;\n          var newPos = startPos < currentPos ? startPos : currentPos;\n\n          if (currentPos >= maxPos) {\n            return null;\n          }\n\n          var currentMarker = (0, _core_utils.readUint16)(data, currentPos);\n\n          if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n            return {\n              invalid: null,\n              marker: currentMarker,\n              offset: currentPos\n            };\n          }\n\n          var newMarker = (0, _core_utils.readUint16)(data, newPos);\n\n          while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n            if (++newPos >= maxPos) {\n              return null;\n            }\n\n            newMarker = (0, _core_utils.readUint16)(data, newPos);\n          }\n\n          return {\n            invalid: currentMarker.toString(16),\n            marker: newMarker,\n            offset: newPos\n          };\n        }\n\n        JpegImage.prototype = {\n          parse: function parse(data) {\n            var _ref26 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                _ref26$dnlScanLines = _ref26.dnlScanLines,\n                dnlScanLines = _ref26$dnlScanLines === void 0 ? null : _ref26$dnlScanLines;\n\n            function readDataBlock() {\n              var length = (0, _core_utils.readUint16)(data, offset);\n              offset += 2;\n              var endOffset = offset + length - 2;\n              var fileMarker = findNextFileMarker(data, endOffset, offset);\n\n              if (fileMarker && fileMarker.invalid) {\n                (0, _util.warn)(\"readDataBlock - incorrect length, current marker is: \" + fileMarker.invalid);\n                endOffset = fileMarker.offset;\n              }\n\n              var array = data.subarray(offset, endOffset);\n              offset += array.length;\n              return array;\n            }\n\n            function prepareComponents(frame) {\n              var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n              var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\n              for (var i = 0; i < frame.components.length; i++) {\n                component = frame.components[i];\n                var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n                var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n                var blocksPerLineForMcu = mcusPerLine * component.h;\n                var blocksPerColumnForMcu = mcusPerColumn * component.v;\n                var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n                component.blockData = new Int16Array(blocksBufferSize);\n                component.blocksPerLine = blocksPerLine;\n                component.blocksPerColumn = blocksPerColumn;\n              }\n\n              frame.mcusPerLine = mcusPerLine;\n              frame.mcusPerColumn = mcusPerColumn;\n            }\n\n            var offset = 0;\n            var jfif = null;\n            var adobe = null;\n            var frame, resetInterval;\n            var numSOSMarkers = 0;\n            var quantizationTables = [];\n            var huffmanTablesAC = [],\n                huffmanTablesDC = [];\n            var fileMarker = (0, _core_utils.readUint16)(data, offset);\n            offset += 2;\n\n            if (fileMarker !== 0xffd8) {\n              throw new JpegError(\"SOI not found\");\n            }\n\n            fileMarker = (0, _core_utils.readUint16)(data, offset);\n            offset += 2;\n\n            markerLoop: while (fileMarker !== 0xffd9) {\n              var i, j, l;\n\n              switch (fileMarker) {\n                case 0xffe0:\n                case 0xffe1:\n                case 0xffe2:\n                case 0xffe3:\n                case 0xffe4:\n                case 0xffe5:\n                case 0xffe6:\n                case 0xffe7:\n                case 0xffe8:\n                case 0xffe9:\n                case 0xffea:\n                case 0xffeb:\n                case 0xffec:\n                case 0xffed:\n                case 0xffee:\n                case 0xffef:\n                case 0xfffe:\n                  var appData = readDataBlock();\n\n                  if (fileMarker === 0xffe0) {\n                    if (appData[0] === 0x4a && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                      jfif = {\n                        version: {\n                          major: appData[5],\n                          minor: appData[6]\n                        },\n                        densityUnits: appData[7],\n                        xDensity: appData[8] << 8 | appData[9],\n                        yDensity: appData[10] << 8 | appData[11],\n                        thumbWidth: appData[12],\n                        thumbHeight: appData[13],\n                        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                      };\n                    }\n                  }\n\n                  if (fileMarker === 0xffee) {\n                    if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6f && appData[3] === 0x62 && appData[4] === 0x65) {\n                      adobe = {\n                        version: appData[5] << 8 | appData[6],\n                        flags0: appData[7] << 8 | appData[8],\n                        flags1: appData[9] << 8 | appData[10],\n                        transformCode: appData[11]\n                      };\n                    }\n                  }\n\n                  break;\n\n                case 0xffdb:\n                  var quantizationTablesLength = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n                  var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n                  var z;\n\n                  while (offset < quantizationTablesEnd) {\n                    var quantizationTableSpec = data[offset++];\n                    var tableData = new Uint16Array(64);\n\n                    if (quantizationTableSpec >> 4 === 0) {\n                      for (j = 0; j < 64; j++) {\n                        z = dctZigZag[j];\n                        tableData[z] = data[offset++];\n                      }\n                    } else if (quantizationTableSpec >> 4 === 1) {\n                      for (j = 0; j < 64; j++) {\n                        z = dctZigZag[j];\n                        tableData[z] = (0, _core_utils.readUint16)(data, offset);\n                        offset += 2;\n                      }\n                    } else {\n                      throw new JpegError(\"DQT - invalid table spec\");\n                    }\n\n                    quantizationTables[quantizationTableSpec & 15] = tableData;\n                  }\n\n                  break;\n\n                case 0xffc0:\n                case 0xffc1:\n                case 0xffc2:\n                  if (frame) {\n                    throw new JpegError(\"Only single frame JPEGs supported\");\n                  }\n\n                  offset += 2;\n                  frame = {};\n                  frame.extended = fileMarker === 0xffc1;\n                  frame.progressive = fileMarker === 0xffc2;\n                  frame.precision = data[offset++];\n                  var sofScanLines = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n                  frame.scanLines = dnlScanLines || sofScanLines;\n                  frame.samplesPerLine = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n                  frame.components = [];\n                  frame.componentIds = {};\n                  var componentsCount = data[offset++],\n                      componentId;\n                  var maxH = 0,\n                      maxV = 0;\n\n                  for (i = 0; i < componentsCount; i++) {\n                    componentId = data[offset];\n                    var h = data[offset + 1] >> 4;\n                    var v = data[offset + 1] & 15;\n\n                    if (maxH < h) {\n                      maxH = h;\n                    }\n\n                    if (maxV < v) {\n                      maxV = v;\n                    }\n\n                    var qId = data[offset + 2];\n                    l = frame.components.push({\n                      h: h,\n                      v: v,\n                      quantizationId: qId,\n                      quantizationTable: null\n                    });\n                    frame.componentIds[componentId] = l - 1;\n                    offset += 3;\n                  }\n\n                  frame.maxH = maxH;\n                  frame.maxV = maxV;\n                  prepareComponents(frame);\n                  break;\n\n                case 0xffc4:\n                  var huffmanLength = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n\n                  for (i = 2; i < huffmanLength;) {\n                    var huffmanTableSpec = data[offset++];\n                    var codeLengths = new Uint8Array(16);\n                    var codeLengthSum = 0;\n\n                    for (j = 0; j < 16; j++, offset++) {\n                      codeLengthSum += codeLengths[j] = data[offset];\n                    }\n\n                    var huffmanValues = new Uint8Array(codeLengthSum);\n\n                    for (j = 0; j < codeLengthSum; j++, offset++) {\n                      huffmanValues[j] = data[offset];\n                    }\n\n                    i += 17 + codeLengthSum;\n                    (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n                  }\n\n                  break;\n\n                case 0xffdd:\n                  offset += 2;\n                  resetInterval = (0, _core_utils.readUint16)(data, offset);\n                  offset += 2;\n                  break;\n\n                case 0xffda:\n                  var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n                  offset += 2;\n                  var selectorsCount = data[offset++];\n                  var components = [],\n                      component;\n\n                  for (i = 0; i < selectorsCount; i++) {\n                    var index = data[offset++];\n                    var componentIndex = frame.componentIds[index];\n                    component = frame.components[componentIndex];\n                    component.index = index;\n                    var tableSpec = data[offset++];\n                    component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n                    component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n                    components.push(component);\n                  }\n\n                  var spectralStart = data[offset++];\n                  var spectralEnd = data[offset++];\n                  var successiveApproximation = data[offset++];\n\n                  try {\n                    var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n                    offset += processed;\n                  } catch (ex) {\n                    if (ex instanceof DNLMarkerError) {\n                      (0, _util.warn)(\"\".concat(ex.message, \" -- attempting to re-parse the JPEG image.\"));\n                      return this.parse(data, {\n                        dnlScanLines: ex.scanLines\n                      });\n                    } else if (ex instanceof EOIMarkerError) {\n                      (0, _util.warn)(\"\".concat(ex.message, \" -- ignoring the rest of the image data.\"));\n                      break markerLoop;\n                    }\n\n                    throw ex;\n                  }\n\n                  break;\n\n                case 0xffdc:\n                  offset += 4;\n                  break;\n\n                case 0xffff:\n                  if (data[offset] !== 0xff) {\n                    offset--;\n                  }\n\n                  break;\n\n                default:\n                  var nextFileMarker = findNextFileMarker(data, offset - 2, offset - 3);\n\n                  if (nextFileMarker && nextFileMarker.invalid) {\n                    (0, _util.warn)(\"JpegImage.parse - unexpected data, current marker is: \" + nextFileMarker.invalid);\n                    offset = nextFileMarker.offset;\n                    break;\n                  }\n\n                  if (offset >= data.length - 1) {\n                    (0, _util.warn)(\"JpegImage.parse - reached the end of the image data \" + \"without finding an EOI marker (0xFFD9).\");\n                    break markerLoop;\n                  }\n\n                  throw new JpegError(\"JpegImage.parse - unknown marker: \" + fileMarker.toString(16));\n              }\n\n              fileMarker = (0, _core_utils.readUint16)(data, offset);\n              offset += 2;\n            }\n\n            this.width = frame.samplesPerLine;\n            this.height = frame.scanLines;\n            this.jfif = jfif;\n            this.adobe = adobe;\n            this.components = [];\n\n            for (i = 0; i < frame.components.length; i++) {\n              component = frame.components[i];\n              var quantizationTable = quantizationTables[component.quantizationId];\n\n              if (quantizationTable) {\n                component.quantizationTable = quantizationTable;\n              }\n\n              this.components.push({\n                index: component.index,\n                output: buildComponentData(frame, component),\n                scaleX: component.h / frame.maxH,\n                scaleY: component.v / frame.maxV,\n                blocksPerLine: component.blocksPerLine,\n                blocksPerColumn: component.blocksPerColumn\n              });\n            }\n\n            this.numComponents = this.components.length;\n            return undefined;\n          },\n          _getLinearizedBlockData: function _getLinearizedBlockData(width, height) {\n            var isSourcePDF = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var scaleX = this.width / width,\n                scaleY = this.height / height;\n            var component, componentScaleX, componentScaleY, blocksPerScanline;\n            var x, y, i, j, k;\n            var index;\n            var offset = 0;\n            var output;\n            var numComponents = this.components.length;\n            var dataLength = width * height * numComponents;\n            var data = new Uint8ClampedArray(dataLength);\n            var xScaleBlockOffset = new Uint32Array(width);\n            var mask3LSB = 0xfffffff8;\n            var lastComponentScaleX;\n\n            for (i = 0; i < numComponents; i++) {\n              component = this.components[i];\n              componentScaleX = component.scaleX * scaleX;\n              componentScaleY = component.scaleY * scaleY;\n              offset = i;\n              output = component.output;\n              blocksPerScanline = component.blocksPerLine + 1 << 3;\n\n              if (componentScaleX !== lastComponentScaleX) {\n                for (x = 0; x < width; x++) {\n                  j = 0 | x * componentScaleX;\n                  xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n                }\n\n                lastComponentScaleX = componentScaleX;\n              }\n\n              for (y = 0; y < height; y++) {\n                j = 0 | y * componentScaleY;\n                index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\n                for (x = 0; x < width; x++) {\n                  data[offset] = output[index + xScaleBlockOffset[x]];\n                  offset += numComponents;\n                }\n              }\n            }\n\n            var transform = this._decodeTransform;\n\n            if (!isSourcePDF && numComponents === 4 && !transform) {\n              transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n            }\n\n            if (transform) {\n              for (i = 0; i < dataLength;) {\n                for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n                  data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n                }\n              }\n            }\n\n            return data;\n          },\n\n          get _isColorConversionNeeded() {\n            if (this.adobe) {\n              return !!this.adobe.transformCode;\n            }\n\n            if (this.numComponents === 3) {\n              if (this._colorTransform === 0) {\n                return false;\n              } else if (this.components[0].index === 0x52 && this.components[1].index === 0x47 && this.components[2].index === 0x42) {\n                return false;\n              }\n\n              return true;\n            }\n\n            if (this._colorTransform === 1) {\n              return true;\n            }\n\n            return false;\n          },\n\n          _convertYccToRgb: function convertYccToRgb(data) {\n            var Y, Cb, Cr;\n\n            for (var i = 0, length = data.length; i < length; i += 3) {\n              Y = data[i];\n              Cb = data[i + 1];\n              Cr = data[i + 2];\n              data[i] = Y - 179.456 + 1.402 * Cr;\n              data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n              data[i + 2] = Y - 226.816 + 1.772 * Cb;\n            }\n\n            return data;\n          },\n          _convertYcckToRgb: function convertYcckToRgb(data) {\n            var Y, Cb, Cr, k;\n            var offset = 0;\n\n            for (var i = 0, length = data.length; i < length; i += 4) {\n              Y = data[i];\n              Cb = data[i + 1];\n              Cr = data[i + 2];\n              k = data[i + 3];\n              data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n              data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n              data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n            }\n\n            return data.subarray(0, offset);\n          },\n          _convertYcckToCmyk: function convertYcckToCmyk(data) {\n            var Y, Cb, Cr;\n\n            for (var i = 0, length = data.length; i < length; i += 4) {\n              Y = data[i];\n              Cb = data[i + 1];\n              Cr = data[i + 2];\n              data[i] = 434.456 - Y - 1.402 * Cr;\n              data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n              data[i + 2] = 481.816 - Y - 1.772 * Cb;\n            }\n\n            return data;\n          },\n          _convertCmykToRgb: function convertCmykToRgb(data) {\n            var c, m, y, k;\n            var offset = 0;\n\n            for (var i = 0, length = data.length; i < length; i += 4) {\n              c = data[i];\n              m = data[i + 1];\n              y = data[i + 2];\n              k = data[i + 3];\n              data[offset++] = 255 + c * (-0.00006747147073602441 * c + 0.0008379262121013727 * m + 0.0002894718188643294 * y + 0.003264231057537806 * k - 1.1185611867203937) + m * (0.000026374107616089405 * m - 0.00008626949158638572 * y - 0.0002748769067499491 * k - 0.02155688794978967) + y * (-0.00003878099212869363 * y - 0.0003267808279485286 * k + 0.0686742238595345) - k * (0.0003361971776183937 * k + 0.7430659151342254);\n              data[offset++] = 255 + c * (0.00013596372813588848 * c + 0.000924537132573585 * m + 0.00010567359618683593 * y + 0.0004791864687436512 * k - 0.3109689587515875) + m * (-0.00023545346108370344 * m + 0.0002702845253534714 * y + 0.0020200308977307156 * k - 0.7488052167015494) + y * (0.00006834815998235662 * y + 0.00015168452363460973 * k - 0.09751927774728933) - k * (0.00031891311758832814 * k + 0.7364883807733168);\n              data[offset++] = 255 + c * (0.000013598650411385307 * c + 0.00012423956175490851 * m + 0.0004751985097583589 * y - 0.0000036729317476630422 * k - 0.05562186980264034) + m * (0.00016141380598724676 * m + 0.0009692239130725186 * y + 0.0007782692450036253 * k - 0.44015232367526463) + y * (5.068882914068769e-7 * y + 0.0017778369011375071 * k - 0.7591454649749609) - k * (0.0003435319965105553 * k + 0.7063770186160144);\n            }\n\n            return data.subarray(0, offset);\n          },\n          getData: function getData(_ref27) {\n            var width = _ref27.width,\n                height = _ref27.height,\n                _ref27$forceRGB = _ref27.forceRGB,\n                forceRGB = _ref27$forceRGB === void 0 ? false : _ref27$forceRGB,\n                _ref27$isSourcePDF = _ref27.isSourcePDF,\n                isSourcePDF = _ref27$isSourcePDF === void 0 ? false : _ref27$isSourcePDF;\n\n            if (this.numComponents > 4) {\n              throw new JpegError(\"Unsupported color mode\");\n            }\n\n            var data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n            if (this.numComponents === 1 && forceRGB) {\n              var dataLength = data.length;\n              var rgbData = new Uint8ClampedArray(dataLength * 3);\n              var offset = 0;\n\n              for (var i = 0; i < dataLength; i++) {\n                var grayColor = data[i];\n                rgbData[offset++] = grayColor;\n                rgbData[offset++] = grayColor;\n                rgbData[offset++] = grayColor;\n              }\n\n              return rgbData;\n            } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n              return this._convertYccToRgb(data);\n            } else if (this.numComponents === 4) {\n              if (this._isColorConversionNeeded) {\n                if (forceRGB) {\n                  return this._convertYcckToRgb(data);\n                }\n\n                return this._convertYcckToCmyk(data);\n              } else if (forceRGB) {\n                return this._convertCmykToRgb(data);\n              }\n            }\n\n            return data;\n          }\n        };\n        return JpegImage;\n      }();\n\n      exports.JpegImage = JpegImage;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.JpxStream = void 0;\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _jpx = __w_pdfjs_require__(21);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var JpxStream = function JpxStreamClosure() {\n        function JpxStream(stream, maybeLength, dict, params) {\n          this.stream = stream;\n          this.maybeLength = maybeLength;\n          this.dict = dict;\n          this.params = params;\n\n          _stream.DecodeStream.call(this, maybeLength);\n        }\n\n        JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n        Object.defineProperty(JpxStream.prototype, \"bytes\", {\n          get: function JpxStream_bytes() {\n            return (0, _util.shadow)(this, \"bytes\", this.stream.getBytes(this.maybeLength));\n          },\n          configurable: true\n        });\n\n        JpxStream.prototype.ensureBuffer = function (requested) {};\n\n        JpxStream.prototype.readBlock = function () {\n          if (this.eof) {\n            return;\n          }\n\n          var jpxImage = new _jpx.JpxImage();\n          jpxImage.parse(this.bytes);\n          var width = jpxImage.width;\n          var height = jpxImage.height;\n          var componentsCount = jpxImage.componentsCount;\n          var tileCount = jpxImage.tiles.length;\n\n          if (tileCount === 1) {\n            this.buffer = jpxImage.tiles[0].items;\n          } else {\n            var data = new Uint8ClampedArray(width * height * componentsCount);\n\n            for (var k = 0; k < tileCount; k++) {\n              var tileComponents = jpxImage.tiles[k];\n              var tileWidth = tileComponents.width;\n              var tileHeight = tileComponents.height;\n              var tileLeft = tileComponents.left;\n              var tileTop = tileComponents.top;\n              var src = tileComponents.items;\n              var srcPosition = 0;\n              var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n              var imgRowSize = width * componentsCount;\n              var tileRowSize = tileWidth * componentsCount;\n\n              for (var j = 0; j < tileHeight; j++) {\n                var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n                data.set(rowBytes, dataPosition);\n                srcPosition += tileRowSize;\n                dataPosition += imgRowSize;\n              }\n            }\n\n            this.buffer = data;\n          }\n\n          this.bufferLength = this.buffer.length;\n          this.eof = true;\n        };\n\n        return JpxStream;\n      }();\n\n      exports.JpxStream = JpxStream;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.JpxImage = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _arithmetic_decoder = __w_pdfjs_require__(17);\n\n      var JpxError = /*#__PURE__*/function (_util$BaseException8) {\n        _inherits(JpxError, _util$BaseException8);\n\n        var _super20 = _createSuper(JpxError);\n\n        function JpxError(msg) {\n          _classCallCheck(this, JpxError);\n\n          return _super20.call(this, \"JPX error: \".concat(msg));\n        }\n\n        return JpxError;\n      }(_util.BaseException);\n\n      var JpxImage = function JpxImageClosure() {\n        var SubbandsGainLog2 = {\n          LL: 0,\n          LH: 1,\n          HL: 1,\n          HH: 2\n        };\n\n        function JpxImage() {\n          this.failOnCorruptedImage = false;\n        }\n\n        JpxImage.prototype = {\n          parse: function JpxImage_parse(data) {\n            var head = (0, _core_utils.readUint16)(data, 0);\n\n            if (head === 0xff4f) {\n              this.parseCodestream(data, 0, data.length);\n              return;\n            }\n\n            var position = 0,\n                length = data.length;\n\n            while (position < length) {\n              var headerSize = 8;\n              var lbox = (0, _core_utils.readUint32)(data, position);\n              var tbox = (0, _core_utils.readUint32)(data, position + 4);\n              position += headerSize;\n\n              if (lbox === 1) {\n                lbox = (0, _core_utils.readUint32)(data, position) * 4294967296 + (0, _core_utils.readUint32)(data, position + 4);\n                position += 8;\n                headerSize += 8;\n              }\n\n              if (lbox === 0) {\n                lbox = length - position + headerSize;\n              }\n\n              if (lbox < headerSize) {\n                throw new JpxError(\"Invalid box field size\");\n              }\n\n              var dataLength = lbox - headerSize;\n              var jumpDataLength = true;\n\n              switch (tbox) {\n                case 0x6a703268:\n                  jumpDataLength = false;\n                  break;\n\n                case 0x636f6c72:\n                  var method = data[position];\n\n                  if (method === 1) {\n                    var colorspace = (0, _core_utils.readUint32)(data, position + 3);\n\n                    switch (colorspace) {\n                      case 16:\n                      case 17:\n                      case 18:\n                        break;\n\n                      default:\n                        (0, _util.warn)(\"Unknown colorspace \" + colorspace);\n                        break;\n                    }\n                  } else if (method === 2) {\n                    (0, _util.info)(\"ICC profile not supported\");\n                  }\n\n                  break;\n\n                case 0x6a703263:\n                  this.parseCodestream(data, position, position + dataLength);\n                  break;\n\n                case 0x6a502020:\n                  if ((0, _core_utils.readUint32)(data, position) !== 0x0d0a870a) {\n                    (0, _util.warn)(\"Invalid JP2 signature\");\n                  }\n\n                  break;\n\n                case 0x6a501a1a:\n                case 0x66747970:\n                case 0x72726571:\n                case 0x72657320:\n                case 0x69686472:\n                  break;\n\n                default:\n                  var headerType = String.fromCharCode(tbox >> 24 & 0xff, tbox >> 16 & 0xff, tbox >> 8 & 0xff, tbox & 0xff);\n                  (0, _util.warn)(\"Unsupported header type \" + tbox + \" (\" + headerType + \")\");\n                  break;\n              }\n\n              if (jumpDataLength) {\n                position += dataLength;\n              }\n            }\n          },\n          parseImageProperties: function JpxImage_parseImageProperties(stream) {\n            var newByte = stream.getByte();\n\n            while (newByte >= 0) {\n              var oldByte = newByte;\n              newByte = stream.getByte();\n              var code = oldByte << 8 | newByte;\n\n              if (code === 0xff51) {\n                stream.skip(4);\n                var Xsiz = stream.getInt32() >>> 0;\n                var Ysiz = stream.getInt32() >>> 0;\n                var XOsiz = stream.getInt32() >>> 0;\n                var YOsiz = stream.getInt32() >>> 0;\n                stream.skip(16);\n                var Csiz = stream.getUint16();\n                this.width = Xsiz - XOsiz;\n                this.height = Ysiz - YOsiz;\n                this.componentsCount = Csiz;\n                this.bitsPerComponent = 8;\n                return;\n              }\n            }\n\n            throw new JpxError(\"No size marker found in JPX stream\");\n          },\n          parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n            var context = {};\n            var doNotRecover = false;\n\n            try {\n              var position = start;\n\n              while (position + 1 < end) {\n                var code = (0, _core_utils.readUint16)(data, position);\n                position += 2;\n                var length = 0,\n                    j,\n                    sqcd,\n                    spqcds,\n                    spqcdSize,\n                    scalarExpounded,\n                    tile;\n\n                switch (code) {\n                  case 0xff4f:\n                    context.mainHeader = true;\n                    break;\n\n                  case 0xffd9:\n                    break;\n\n                  case 0xff51:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    var siz = {};\n                    siz.Xsiz = (0, _core_utils.readUint32)(data, position + 4);\n                    siz.Ysiz = (0, _core_utils.readUint32)(data, position + 8);\n                    siz.XOsiz = (0, _core_utils.readUint32)(data, position + 12);\n                    siz.YOsiz = (0, _core_utils.readUint32)(data, position + 16);\n                    siz.XTsiz = (0, _core_utils.readUint32)(data, position + 20);\n                    siz.YTsiz = (0, _core_utils.readUint32)(data, position + 24);\n                    siz.XTOsiz = (0, _core_utils.readUint32)(data, position + 28);\n                    siz.YTOsiz = (0, _core_utils.readUint32)(data, position + 32);\n                    var componentsCount = (0, _core_utils.readUint16)(data, position + 36);\n                    siz.Csiz = componentsCount;\n                    var components = [];\n                    j = position + 38;\n\n                    for (var i = 0; i < componentsCount; i++) {\n                      var component = {\n                        precision: (data[j] & 0x7f) + 1,\n                        isSigned: !!(data[j] & 0x80),\n                        XRsiz: data[j + 1],\n                        YRsiz: data[j + 2]\n                      };\n                      j += 3;\n                      calculateComponentDimensions(component, siz);\n                      components.push(component);\n                    }\n\n                    context.SIZ = siz;\n                    context.components = components;\n                    calculateTileGrids(context, components);\n                    context.QCC = [];\n                    context.COC = [];\n                    break;\n\n                  case 0xff5c:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    var qcd = {};\n                    j = position + 2;\n                    sqcd = data[j++];\n\n                    switch (sqcd & 0x1f) {\n                      case 0:\n                        spqcdSize = 8;\n                        scalarExpounded = true;\n                        break;\n\n                      case 1:\n                        spqcdSize = 16;\n                        scalarExpounded = false;\n                        break;\n\n                      case 2:\n                        spqcdSize = 16;\n                        scalarExpounded = true;\n                        break;\n\n                      default:\n                        throw new Error(\"Invalid SQcd value \" + sqcd);\n                    }\n\n                    qcd.noQuantization = spqcdSize === 8;\n                    qcd.scalarExpounded = scalarExpounded;\n                    qcd.guardBits = sqcd >> 5;\n                    spqcds = [];\n\n                    while (j < length + position) {\n                      var spqcd = {};\n\n                      if (spqcdSize === 8) {\n                        spqcd.epsilon = data[j++] >> 3;\n                        spqcd.mu = 0;\n                      } else {\n                        spqcd.epsilon = data[j] >> 3;\n                        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                        j += 2;\n                      }\n\n                      spqcds.push(spqcd);\n                    }\n\n                    qcd.SPqcds = spqcds;\n\n                    if (context.mainHeader) {\n                      context.QCD = qcd;\n                    } else {\n                      context.currentTile.QCD = qcd;\n                      context.currentTile.QCC = [];\n                    }\n\n                    break;\n\n                  case 0xff5d:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    var qcc = {};\n                    j = position + 2;\n                    var cqcc;\n\n                    if (context.SIZ.Csiz < 257) {\n                      cqcc = data[j++];\n                    } else {\n                      cqcc = (0, _core_utils.readUint16)(data, j);\n                      j += 2;\n                    }\n\n                    sqcd = data[j++];\n\n                    switch (sqcd & 0x1f) {\n                      case 0:\n                        spqcdSize = 8;\n                        scalarExpounded = true;\n                        break;\n\n                      case 1:\n                        spqcdSize = 16;\n                        scalarExpounded = false;\n                        break;\n\n                      case 2:\n                        spqcdSize = 16;\n                        scalarExpounded = true;\n                        break;\n\n                      default:\n                        throw new Error(\"Invalid SQcd value \" + sqcd);\n                    }\n\n                    qcc.noQuantization = spqcdSize === 8;\n                    qcc.scalarExpounded = scalarExpounded;\n                    qcc.guardBits = sqcd >> 5;\n                    spqcds = [];\n\n                    while (j < length + position) {\n                      spqcd = {};\n\n                      if (spqcdSize === 8) {\n                        spqcd.epsilon = data[j++] >> 3;\n                        spqcd.mu = 0;\n                      } else {\n                        spqcd.epsilon = data[j] >> 3;\n                        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                        j += 2;\n                      }\n\n                      spqcds.push(spqcd);\n                    }\n\n                    qcc.SPqcds = spqcds;\n\n                    if (context.mainHeader) {\n                      context.QCC[cqcc] = qcc;\n                    } else {\n                      context.currentTile.QCC[cqcc] = qcc;\n                    }\n\n                    break;\n\n                  case 0xff52:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    var cod = {};\n                    j = position + 2;\n                    var scod = data[j++];\n                    cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n                    cod.sopMarkerUsed = !!(scod & 2);\n                    cod.ephMarkerUsed = !!(scod & 4);\n                    cod.progressionOrder = data[j++];\n                    cod.layersCount = (0, _core_utils.readUint16)(data, j);\n                    j += 2;\n                    cod.multipleComponentTransform = data[j++];\n                    cod.decompositionLevelsCount = data[j++];\n                    cod.xcb = (data[j++] & 0xf) + 2;\n                    cod.ycb = (data[j++] & 0xf) + 2;\n                    var blockStyle = data[j++];\n                    cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n                    cod.resetContextProbabilities = !!(blockStyle & 2);\n                    cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n                    cod.verticallyStripe = !!(blockStyle & 8);\n                    cod.predictableTermination = !!(blockStyle & 16);\n                    cod.segmentationSymbolUsed = !!(blockStyle & 32);\n                    cod.reversibleTransformation = data[j++];\n\n                    if (cod.entropyCoderWithCustomPrecincts) {\n                      var precinctsSizes = [];\n\n                      while (j < length + position) {\n                        var precinctsSize = data[j++];\n                        precinctsSizes.push({\n                          PPx: precinctsSize & 0xf,\n                          PPy: precinctsSize >> 4\n                        });\n                      }\n\n                      cod.precinctsSizes = precinctsSizes;\n                    }\n\n                    var unsupported = [];\n\n                    if (cod.selectiveArithmeticCodingBypass) {\n                      unsupported.push(\"selectiveArithmeticCodingBypass\");\n                    }\n\n                    if (cod.resetContextProbabilities) {\n                      unsupported.push(\"resetContextProbabilities\");\n                    }\n\n                    if (cod.terminationOnEachCodingPass) {\n                      unsupported.push(\"terminationOnEachCodingPass\");\n                    }\n\n                    if (cod.verticallyStripe) {\n                      unsupported.push(\"verticallyStripe\");\n                    }\n\n                    if (cod.predictableTermination) {\n                      unsupported.push(\"predictableTermination\");\n                    }\n\n                    if (unsupported.length > 0) {\n                      doNotRecover = true;\n                      throw new Error(\"Unsupported COD options (\" + unsupported.join(\", \") + \")\");\n                    }\n\n                    if (context.mainHeader) {\n                      context.COD = cod;\n                    } else {\n                      context.currentTile.COD = cod;\n                      context.currentTile.COC = [];\n                    }\n\n                    break;\n\n                  case 0xff90:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    tile = {};\n                    tile.index = (0, _core_utils.readUint16)(data, position + 2);\n                    tile.length = (0, _core_utils.readUint32)(data, position + 4);\n                    tile.dataEnd = tile.length + position - 2;\n                    tile.partIndex = data[position + 8];\n                    tile.partsCount = data[position + 9];\n                    context.mainHeader = false;\n\n                    if (tile.partIndex === 0) {\n                      tile.COD = context.COD;\n                      tile.COC = context.COC.slice(0);\n                      tile.QCD = context.QCD;\n                      tile.QCC = context.QCC.slice(0);\n                    }\n\n                    context.currentTile = tile;\n                    break;\n\n                  case 0xff93:\n                    tile = context.currentTile;\n\n                    if (tile.partIndex === 0) {\n                      initializeTile(context, tile.index);\n                      buildPackets(context);\n                    }\n\n                    length = tile.dataEnd - position;\n                    parseTilePackets(context, data, position, length);\n                    break;\n\n                  case 0xff55:\n                  case 0xff57:\n                  case 0xff58:\n                  case 0xff64:\n                    length = (0, _core_utils.readUint16)(data, position);\n                    break;\n\n                  case 0xff53:\n                    throw new Error(\"Codestream code 0xFF53 (COC) is not implemented\");\n\n                  default:\n                    throw new Error(\"Unknown codestream code: \" + code.toString(16));\n                }\n\n                position += length;\n              }\n            } catch (e) {\n              if (doNotRecover || this.failOnCorruptedImage) {\n                throw new JpxError(e.message);\n              } else {\n                (0, _util.warn)(\"JPX: Trying to recover from: \" + e.message);\n              }\n            }\n\n            this.tiles = transformComponents(context);\n            this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n            this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n            this.componentsCount = context.SIZ.Csiz;\n          }\n        };\n\n        function calculateComponentDimensions(component, siz) {\n          component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n          component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n          component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n          component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n          component.width = component.x1 - component.x0;\n          component.height = component.y1 - component.y0;\n        }\n\n        function calculateTileGrids(context, components) {\n          var siz = context.SIZ;\n          var tile,\n              tiles = [];\n          var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n          var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\n          for (var q = 0; q < numYtiles; q++) {\n            for (var p = 0; p < numXtiles; p++) {\n              tile = {};\n              tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n              tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n              tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n              tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n              tile.width = tile.tx1 - tile.tx0;\n              tile.height = tile.ty1 - tile.ty0;\n              tile.components = [];\n              tiles.push(tile);\n            }\n          }\n\n          context.tiles = tiles;\n          var componentsCount = siz.Csiz;\n\n          for (var i = 0, ii = componentsCount; i < ii; i++) {\n            var component = components[i];\n\n            for (var j = 0, jj = tiles.length; j < jj; j++) {\n              var tileComponent = {};\n              tile = tiles[j];\n              tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n              tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n              tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n              tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n              tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n              tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n              tile.components[i] = tileComponent;\n            }\n          }\n        }\n\n        function getBlocksDimensions(context, component, r) {\n          var codOrCoc = component.codingStyleParameters;\n          var result = {};\n\n          if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n            result.PPx = 15;\n            result.PPy = 15;\n          } else {\n            result.PPx = codOrCoc.precinctsSizes[r].PPx;\n            result.PPy = codOrCoc.precinctsSizes[r].PPy;\n          }\n\n          result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n          result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n          return result;\n        }\n\n        function buildPrecincts(context, resolution, dimensions) {\n          var precinctWidth = 1 << dimensions.PPx;\n          var precinctHeight = 1 << dimensions.PPy;\n          var isZeroRes = resolution.resLevel === 0;\n          var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n          var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n          var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n          var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n          var numprecincts = numprecinctswide * numprecinctshigh;\n          resolution.precinctParameters = {\n            precinctWidth: precinctWidth,\n            precinctHeight: precinctHeight,\n            numprecinctswide: numprecinctswide,\n            numprecinctshigh: numprecinctshigh,\n            numprecincts: numprecincts,\n            precinctWidthInSubband: precinctWidthInSubband,\n            precinctHeightInSubband: precinctHeightInSubband\n          };\n        }\n\n        function buildCodeblocks(context, subband, dimensions) {\n          var xcb_ = dimensions.xcb_;\n          var ycb_ = dimensions.ycb_;\n          var codeblockWidth = 1 << xcb_;\n          var codeblockHeight = 1 << ycb_;\n          var cbx0 = subband.tbx0 >> xcb_;\n          var cby0 = subband.tby0 >> ycb_;\n          var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n          var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n          var precinctParameters = subband.resolution.precinctParameters;\n          var codeblocks = [];\n          var precincts = [];\n          var i, j, codeblock, precinctNumber;\n\n          for (j = cby0; j < cby1; j++) {\n            for (i = cbx0; i < cbx1; i++) {\n              codeblock = {\n                cbx: i,\n                cby: j,\n                tbx0: codeblockWidth * i,\n                tby0: codeblockHeight * j,\n                tbx1: codeblockWidth * (i + 1),\n                tby1: codeblockHeight * (j + 1)\n              };\n              codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n              codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n              codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n              codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n              var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n              var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n              precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n              codeblock.precinctNumber = precinctNumber;\n              codeblock.subbandType = subband.type;\n              codeblock.Lblock = 3;\n\n              if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n                continue;\n              }\n\n              codeblocks.push(codeblock);\n              var precinct = precincts[precinctNumber];\n\n              if (precinct !== undefined) {\n                if (i < precinct.cbxMin) {\n                  precinct.cbxMin = i;\n                } else if (i > precinct.cbxMax) {\n                  precinct.cbxMax = i;\n                }\n\n                if (j < precinct.cbyMin) {\n                  precinct.cbxMin = j;\n                } else if (j > precinct.cbyMax) {\n                  precinct.cbyMax = j;\n                }\n              } else {\n                precincts[precinctNumber] = precinct = {\n                  cbxMin: i,\n                  cbyMin: j,\n                  cbxMax: i,\n                  cbyMax: j\n                };\n              }\n\n              codeblock.precinct = precinct;\n            }\n          }\n\n          subband.codeblockParameters = {\n            codeblockWidth: xcb_,\n            codeblockHeight: ycb_,\n            numcodeblockwide: cbx1 - cbx0 + 1,\n            numcodeblockhigh: cby1 - cby0 + 1\n          };\n          subband.codeblocks = codeblocks;\n          subband.precincts = precincts;\n        }\n\n        function createPacket(resolution, precinctNumber, layerNumber) {\n          var precinctCodeblocks = [];\n          var subbands = resolution.subbands;\n\n          for (var i = 0, ii = subbands.length; i < ii; i++) {\n            var subband = subbands[i];\n            var codeblocks = subband.codeblocks;\n\n            for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n              var codeblock = codeblocks[j];\n\n              if (codeblock.precinctNumber !== precinctNumber) {\n                continue;\n              }\n\n              precinctCodeblocks.push(codeblock);\n            }\n          }\n\n          return {\n            layerNumber: layerNumber,\n            codeblocks: precinctCodeblocks\n          };\n        }\n\n        function LayerResolutionComponentPositionIterator(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\n          var componentsCount = siz.Csiz;\n          var maxDecompositionLevelsCount = 0;\n\n          for (var q = 0; q < componentsCount; q++) {\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n          }\n\n          var l = 0,\n              r = 0,\n              i = 0,\n              k = 0;\n\n          this.nextPacket = function JpxImage_nextPacket() {\n            for (; l < layersCount; l++) {\n              for (; r <= maxDecompositionLevelsCount; r++) {\n                for (; i < componentsCount; i++) {\n                  var component = tile.components[i];\n\n                  if (r > component.codingStyleParameters.decompositionLevelsCount) {\n                    continue;\n                  }\n\n                  var resolution = component.resolutions[r];\n                  var numprecincts = resolution.precinctParameters.numprecincts;\n\n                  for (; k < numprecincts;) {\n                    var packet = createPacket(resolution, k, l);\n                    k++;\n                    return packet;\n                  }\n\n                  k = 0;\n                }\n\n                i = 0;\n              }\n\n              r = 0;\n            }\n\n            throw new JpxError(\"Out of packets\");\n          };\n        }\n\n        function ResolutionLayerComponentPositionIterator(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\n          var componentsCount = siz.Csiz;\n          var maxDecompositionLevelsCount = 0;\n\n          for (var q = 0; q < componentsCount; q++) {\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n          }\n\n          var r = 0,\n              l = 0,\n              i = 0,\n              k = 0;\n\n          this.nextPacket = function JpxImage_nextPacket() {\n            for (; r <= maxDecompositionLevelsCount; r++) {\n              for (; l < layersCount; l++) {\n                for (; i < componentsCount; i++) {\n                  var component = tile.components[i];\n\n                  if (r > component.codingStyleParameters.decompositionLevelsCount) {\n                    continue;\n                  }\n\n                  var resolution = component.resolutions[r];\n                  var numprecincts = resolution.precinctParameters.numprecincts;\n\n                  for (; k < numprecincts;) {\n                    var packet = createPacket(resolution, k, l);\n                    k++;\n                    return packet;\n                  }\n\n                  k = 0;\n                }\n\n                i = 0;\n              }\n\n              l = 0;\n            }\n\n            throw new JpxError(\"Out of packets\");\n          };\n        }\n\n        function ResolutionPositionComponentLayerIterator(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\n          var componentsCount = siz.Csiz;\n          var l, r, c, p;\n          var maxDecompositionLevelsCount = 0;\n\n          for (c = 0; c < componentsCount; c++) {\n            var component = tile.components[c];\n            maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n          }\n\n          var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\n          for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n            var maxNumPrecincts = 0;\n\n            for (c = 0; c < componentsCount; ++c) {\n              var resolutions = tile.components[c].resolutions;\n\n              if (r < resolutions.length) {\n                maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n              }\n            }\n\n            maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n          }\n\n          l = 0;\n          r = 0;\n          c = 0;\n          p = 0;\n\n          this.nextPacket = function JpxImage_nextPacket() {\n            for (; r <= maxDecompositionLevelsCount; r++) {\n              for (; p < maxNumPrecinctsInLevel[r]; p++) {\n                for (; c < componentsCount; c++) {\n                  var _component = tile.components[c];\n\n                  if (r > _component.codingStyleParameters.decompositionLevelsCount) {\n                    continue;\n                  }\n\n                  var resolution = _component.resolutions[r];\n                  var numprecincts = resolution.precinctParameters.numprecincts;\n\n                  if (p >= numprecincts) {\n                    continue;\n                  }\n\n                  for (; l < layersCount;) {\n                    var packet = createPacket(resolution, p, l);\n                    l++;\n                    return packet;\n                  }\n\n                  l = 0;\n                }\n\n                c = 0;\n              }\n\n              p = 0;\n            }\n\n            throw new JpxError(\"Out of packets\");\n          };\n        }\n\n        function PositionComponentResolutionLayerIterator(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\n          var componentsCount = siz.Csiz;\n          var precinctsSizes = getPrecinctSizesInImageScale(tile);\n          var precinctsIterationSizes = precinctsSizes;\n          var l = 0,\n              r = 0,\n              c = 0,\n              px = 0,\n              py = 0;\n\n          this.nextPacket = function JpxImage_nextPacket() {\n            for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n              for (; px < precinctsIterationSizes.maxNumWide; px++) {\n                for (; c < componentsCount; c++) {\n                  var component = tile.components[c];\n                  var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\n                  for (; r <= decompositionLevelsCount; r++) {\n                    var resolution = component.resolutions[r];\n                    var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n                    var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\n                    if (k === null) {\n                      continue;\n                    }\n\n                    for (; l < layersCount;) {\n                      var packet = createPacket(resolution, k, l);\n                      l++;\n                      return packet;\n                    }\n\n                    l = 0;\n                  }\n\n                  r = 0;\n                }\n\n                c = 0;\n              }\n\n              px = 0;\n            }\n\n            throw new JpxError(\"Out of packets\");\n          };\n        }\n\n        function ComponentPositionResolutionLayerIterator(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var layersCount = tile.codingStyleDefaultParameters.layersCount;\n          var componentsCount = siz.Csiz;\n          var precinctsSizes = getPrecinctSizesInImageScale(tile);\n          var l = 0,\n              r = 0,\n              c = 0,\n              px = 0,\n              py = 0;\n\n          this.nextPacket = function JpxImage_nextPacket() {\n            for (; c < componentsCount; ++c) {\n              var component = tile.components[c];\n              var precinctsIterationSizes = precinctsSizes.components[c];\n              var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\n              for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n                for (; px < precinctsIterationSizes.maxNumWide; px++) {\n                  for (; r <= decompositionLevelsCount; r++) {\n                    var resolution = component.resolutions[r];\n                    var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n                    var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\n                    if (k === null) {\n                      continue;\n                    }\n\n                    for (; l < layersCount;) {\n                      var packet = createPacket(resolution, k, l);\n                      l++;\n                      return packet;\n                    }\n\n                    l = 0;\n                  }\n\n                  r = 0;\n                }\n\n                px = 0;\n              }\n\n              py = 0;\n            }\n\n            throw new JpxError(\"Out of packets\");\n          };\n        }\n\n        function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n          var posX = pxIndex * precinctIterationSizes.minWidth;\n          var posY = pyIndex * precinctIterationSizes.minHeight;\n\n          if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n            return null;\n          }\n\n          var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n          return posX / sizeInImageScale.height + startPrecinctRowIndex;\n        }\n\n        function getPrecinctSizesInImageScale(tile) {\n          var componentsCount = tile.components.length;\n          var minWidth = Number.MAX_VALUE;\n          var minHeight = Number.MAX_VALUE;\n          var maxNumWide = 0;\n          var maxNumHigh = 0;\n          var sizePerComponent = new Array(componentsCount);\n\n          for (var c = 0; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            var sizePerResolution = new Array(decompositionLevelsCount + 1);\n            var minWidthCurrentComponent = Number.MAX_VALUE;\n            var minHeightCurrentComponent = Number.MAX_VALUE;\n            var maxNumWideCurrentComponent = 0;\n            var maxNumHighCurrentComponent = 0;\n            var scale = 1;\n\n            for (var r = decompositionLevelsCount; r >= 0; --r) {\n              var resolution = component.resolutions[r];\n              var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n              var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n              minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n              minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n              maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n              maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n              sizePerResolution[r] = {\n                width: widthCurrentResolution,\n                height: heightCurrentResolution\n              };\n              scale <<= 1;\n            }\n\n            minWidth = Math.min(minWidth, minWidthCurrentComponent);\n            minHeight = Math.min(minHeight, minHeightCurrentComponent);\n            maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n            maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n            sizePerComponent[c] = {\n              resolutions: sizePerResolution,\n              minWidth: minWidthCurrentComponent,\n              minHeight: minHeightCurrentComponent,\n              maxNumWide: maxNumWideCurrentComponent,\n              maxNumHigh: maxNumHighCurrentComponent\n            };\n          }\n\n          return {\n            components: sizePerComponent,\n            minWidth: minWidth,\n            minHeight: minHeight,\n            maxNumWide: maxNumWide,\n            maxNumHigh: maxNumHigh\n          };\n        }\n\n        function buildPackets(context) {\n          var siz = context.SIZ;\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var componentsCount = siz.Csiz;\n\n          for (var c = 0; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            var resolutions = [];\n            var subbands = [];\n\n            for (var r = 0; r <= decompositionLevelsCount; r++) {\n              var blocksDimensions = getBlocksDimensions(context, component, r);\n              var resolution = {};\n              var scale = 1 << decompositionLevelsCount - r;\n              resolution.trx0 = Math.ceil(component.tcx0 / scale);\n              resolution.try0 = Math.ceil(component.tcy0 / scale);\n              resolution.trx1 = Math.ceil(component.tcx1 / scale);\n              resolution.try1 = Math.ceil(component.tcy1 / scale);\n              resolution.resLevel = r;\n              buildPrecincts(context, resolution, blocksDimensions);\n              resolutions.push(resolution);\n              var subband;\n\n              if (r === 0) {\n                subband = {};\n                subband.type = \"LL\";\n                subband.tbx0 = Math.ceil(component.tcx0 / scale);\n                subband.tby0 = Math.ceil(component.tcy0 / scale);\n                subband.tbx1 = Math.ceil(component.tcx1 / scale);\n                subband.tby1 = Math.ceil(component.tcy1 / scale);\n                subband.resolution = resolution;\n                buildCodeblocks(context, subband, blocksDimensions);\n                subbands.push(subband);\n                resolution.subbands = [subband];\n              } else {\n                var bscale = 1 << decompositionLevelsCount - r + 1;\n                var resolutionSubbands = [];\n                subband = {};\n                subband.type = \"HL\";\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n                subband.tby0 = Math.ceil(component.tcy0 / bscale);\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n                subband.tby1 = Math.ceil(component.tcy1 / bscale);\n                subband.resolution = resolution;\n                buildCodeblocks(context, subband, blocksDimensions);\n                subbands.push(subband);\n                resolutionSubbands.push(subband);\n                subband = {};\n                subband.type = \"LH\";\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n                subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n                subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n                subband.resolution = resolution;\n                buildCodeblocks(context, subband, blocksDimensions);\n                subbands.push(subband);\n                resolutionSubbands.push(subband);\n                subband = {};\n                subband.type = \"HH\";\n                subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n                subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n                subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n                subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n                subband.resolution = resolution;\n                buildCodeblocks(context, subband, blocksDimensions);\n                subbands.push(subband);\n                resolutionSubbands.push(subband);\n                resolution.subbands = resolutionSubbands;\n              }\n            }\n\n            component.resolutions = resolutions;\n            component.subbands = subbands;\n          }\n\n          var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\n          switch (progressionOrder) {\n            case 0:\n              tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n              break;\n\n            case 1:\n              tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n              break;\n\n            case 2:\n              tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n              break;\n\n            case 3:\n              tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n              break;\n\n            case 4:\n              tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n              break;\n\n            default:\n              throw new JpxError(\"Unsupported progression order \".concat(progressionOrder));\n          }\n        }\n\n        function parseTilePackets(context, data, offset, dataLength) {\n          var position = 0;\n          var buffer,\n              bufferSize = 0,\n              skipNextBit = false;\n\n          function readBits(count) {\n            while (bufferSize < count) {\n              var b = data[offset + position];\n              position++;\n\n              if (skipNextBit) {\n                buffer = buffer << 7 | b;\n                bufferSize += 7;\n                skipNextBit = false;\n              } else {\n                buffer = buffer << 8 | b;\n                bufferSize += 8;\n              }\n\n              if (b === 0xff) {\n                skipNextBit = true;\n              }\n            }\n\n            bufferSize -= count;\n            return buffer >>> bufferSize & (1 << count) - 1;\n          }\n\n          function skipMarkerIfEqual(value) {\n            if (data[offset + position - 1] === 0xff && data[offset + position] === value) {\n              skipBytes(1);\n              return true;\n            } else if (data[offset + position] === 0xff && data[offset + position + 1] === value) {\n              skipBytes(2);\n              return true;\n            }\n\n            return false;\n          }\n\n          function skipBytes(count) {\n            position += count;\n          }\n\n          function alignToByte() {\n            bufferSize = 0;\n\n            if (skipNextBit) {\n              position++;\n              skipNextBit = false;\n            }\n          }\n\n          function readCodingpasses() {\n            if (readBits(1) === 0) {\n              return 1;\n            }\n\n            if (readBits(1) === 0) {\n              return 2;\n            }\n\n            var value = readBits(2);\n\n            if (value < 3) {\n              return value + 3;\n            }\n\n            value = readBits(5);\n\n            if (value < 31) {\n              return value + 6;\n            }\n\n            value = readBits(7);\n            return value + 37;\n          }\n\n          var tileIndex = context.currentTile.index;\n          var tile = context.tiles[tileIndex];\n          var sopMarkerUsed = context.COD.sopMarkerUsed;\n          var ephMarkerUsed = context.COD.ephMarkerUsed;\n          var packetsIterator = tile.packetsIterator;\n\n          while (position < dataLength) {\n            alignToByte();\n\n            if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n              skipBytes(4);\n            }\n\n            var packet = packetsIterator.nextPacket();\n\n            if (!readBits(1)) {\n              continue;\n            }\n\n            var layerNumber = packet.layerNumber;\n            var queue = [],\n                codeblock;\n\n            for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n              codeblock = packet.codeblocks[i];\n              var precinct = codeblock.precinct;\n              var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n              var codeblockRow = codeblock.cby - precinct.cbyMin;\n              var codeblockIncluded = false;\n              var firstTimeInclusion = false;\n              var valueReady;\n\n              if (codeblock.included !== undefined) {\n                codeblockIncluded = !!readBits(1);\n              } else {\n                precinct = codeblock.precinct;\n                var inclusionTree, zeroBitPlanesTree;\n\n                if (precinct.inclusionTree !== undefined) {\n                  inclusionTree = precinct.inclusionTree;\n                } else {\n                  var width = precinct.cbxMax - precinct.cbxMin + 1;\n                  var height = precinct.cbyMax - precinct.cbyMin + 1;\n                  inclusionTree = new InclusionTree(width, height, layerNumber);\n                  zeroBitPlanesTree = new TagTree(width, height);\n                  precinct.inclusionTree = inclusionTree;\n                  precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n                }\n\n                if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n                  while (true) {\n                    if (readBits(1)) {\n                      valueReady = !inclusionTree.nextLevel();\n\n                      if (valueReady) {\n                        codeblock.included = true;\n                        codeblockIncluded = firstTimeInclusion = true;\n                        break;\n                      }\n                    } else {\n                      inclusionTree.incrementValue(layerNumber);\n                      break;\n                    }\n                  }\n                }\n              }\n\n              if (!codeblockIncluded) {\n                continue;\n              }\n\n              if (firstTimeInclusion) {\n                zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n                zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\n                while (true) {\n                  if (readBits(1)) {\n                    valueReady = !zeroBitPlanesTree.nextLevel();\n\n                    if (valueReady) {\n                      break;\n                    }\n                  } else {\n                    zeroBitPlanesTree.incrementValue();\n                  }\n                }\n\n                codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n              }\n\n              var codingpasses = readCodingpasses();\n\n              while (readBits(1)) {\n                codeblock.Lblock++;\n              }\n\n              var codingpassesLog2 = (0, _core_utils.log2)(codingpasses);\n              var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n              var codedDataLength = readBits(bits);\n              queue.push({\n                codeblock: codeblock,\n                codingpasses: codingpasses,\n                dataLength: codedDataLength\n              });\n            }\n\n            alignToByte();\n\n            if (ephMarkerUsed) {\n              skipMarkerIfEqual(0x92);\n            }\n\n            while (queue.length > 0) {\n              var packetItem = queue.shift();\n              codeblock = packetItem.codeblock;\n\n              if (codeblock.data === undefined) {\n                codeblock.data = [];\n              }\n\n              codeblock.data.push({\n                data: data,\n                start: offset + position,\n                end: offset + position + packetItem.dataLength,\n                codingpasses: packetItem.codingpasses\n              });\n              position += packetItem.dataLength;\n            }\n          }\n\n          return position;\n        }\n\n        function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n          var x0 = subband.tbx0;\n          var y0 = subband.tby0;\n          var width = subband.tbx1 - subband.tbx0;\n          var codeblocks = subband.codeblocks;\n          var right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n          var bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n\n          for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n            var codeblock = codeblocks[i];\n            var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n            var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\n            if (blockWidth === 0 || blockHeight === 0) {\n              continue;\n            }\n\n            if (codeblock.data === undefined) {\n              continue;\n            }\n\n            var bitModel, currentCodingpassType;\n            bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n            currentCodingpassType = 2;\n            var data = codeblock.data,\n                totalLength = 0,\n                codingpasses = 0;\n            var j, jj, dataItem;\n\n            for (j = 0, jj = data.length; j < jj; j++) {\n              dataItem = data[j];\n              totalLength += dataItem.end - dataItem.start;\n              codingpasses += dataItem.codingpasses;\n            }\n\n            var encodedData = new Uint8Array(totalLength);\n            var position = 0;\n\n            for (j = 0, jj = data.length; j < jj; j++) {\n              dataItem = data[j];\n              var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n              encodedData.set(chunk, position);\n              position += chunk.length;\n            }\n\n            var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n            bitModel.setDecoder(decoder);\n\n            for (j = 0; j < codingpasses; j++) {\n              switch (currentCodingpassType) {\n                case 0:\n                  bitModel.runSignificancePropagationPass();\n                  break;\n\n                case 1:\n                  bitModel.runMagnitudeRefinementPass();\n                  break;\n\n                case 2:\n                  bitModel.runCleanupPass();\n\n                  if (segmentationSymbolUsed) {\n                    bitModel.checkSegmentationSymbol();\n                  }\n\n                  break;\n              }\n\n              currentCodingpassType = (currentCodingpassType + 1) % 3;\n            }\n\n            var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n            var sign = bitModel.coefficentsSign;\n            var magnitude = bitModel.coefficentsMagnitude;\n            var bitsDecoded = bitModel.bitsDecoded;\n            var magnitudeCorrection = reversible ? 0 : 0.5;\n            var k, n, nb;\n            position = 0;\n            var interleave = subband.type !== \"LL\";\n\n            for (j = 0; j < blockHeight; j++) {\n              var row = offset / width | 0;\n              var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\n              for (k = 0; k < blockWidth; k++) {\n                n = magnitude[position];\n\n                if (n !== 0) {\n                  n = (n + magnitudeCorrection) * delta;\n\n                  if (sign[position] !== 0) {\n                    n = -n;\n                  }\n\n                  nb = bitsDecoded[position];\n                  var pos = interleave ? levelOffset + (offset << 1) : offset;\n\n                  if (reversible && nb >= mb) {\n                    coefficients[pos] = n;\n                  } else {\n                    coefficients[pos] = n * (1 << mb - nb);\n                  }\n                }\n\n                offset++;\n                position++;\n              }\n\n              offset += width - blockWidth;\n            }\n          }\n        }\n\n        function transformTile(context, tile, c) {\n          var component = tile.components[c];\n          var codingStyleParameters = component.codingStyleParameters;\n          var quantizationParameters = component.quantizationParameters;\n          var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n          var spqcds = quantizationParameters.SPqcds;\n          var scalarExpounded = quantizationParameters.scalarExpounded;\n          var guardBits = quantizationParameters.guardBits;\n          var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n          var precision = context.components[c].precision;\n          var reversible = codingStyleParameters.reversibleTransformation;\n          var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n          var subbandCoefficients = [];\n          var b = 0;\n\n          for (var i = 0; i <= decompositionLevelsCount; i++) {\n            var resolution = component.resolutions[i];\n            var width = resolution.trx1 - resolution.trx0;\n            var height = resolution.try1 - resolution.try0;\n            var coefficients = new Float32Array(width * height);\n\n            for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n              var mu, epsilon;\n\n              if (!scalarExpounded) {\n                mu = spqcds[0].mu;\n                epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n              } else {\n                mu = spqcds[b].mu;\n                epsilon = spqcds[b].epsilon;\n                b++;\n              }\n\n              var subband = resolution.subbands[j];\n              var gainLog2 = SubbandsGainLog2[subband.type];\n              var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n              var mb = guardBits + epsilon - 1;\n              copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n            }\n\n            subbandCoefficients.push({\n              width: width,\n              height: height,\n              items: coefficients\n            });\n          }\n\n          var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n          return {\n            left: component.tcx0,\n            top: component.tcy0,\n            width: result.width,\n            height: result.height,\n            items: result.items\n          };\n        }\n\n        function transformComponents(context) {\n          var siz = context.SIZ;\n          var components = context.components;\n          var componentsCount = siz.Csiz;\n          var resultImages = [];\n\n          for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n            var tile = context.tiles[i];\n            var transformedTiles = [];\n            var c;\n\n            for (c = 0; c < componentsCount; c++) {\n              transformedTiles[c] = transformTile(context, tile, c);\n            }\n\n            var tile0 = transformedTiles[0];\n            var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n            var result = {\n              left: tile0.left,\n              top: tile0.top,\n              width: tile0.width,\n              height: tile0.height,\n              items: out\n            };\n            var shift, offset;\n            var pos = 0,\n                j,\n                jj,\n                y0,\n                y1,\n                y2;\n\n            if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n              var fourComponents = componentsCount === 4;\n              var y0items = transformedTiles[0].items;\n              var y1items = transformedTiles[1].items;\n              var y2items = transformedTiles[2].items;\n              var y3items = fourComponents ? transformedTiles[3].items : null;\n              shift = components[0].precision - 8;\n              offset = (128 << shift) + 0.5;\n              var component0 = tile.components[0];\n              var alpha01 = componentsCount - 3;\n              jj = y0items.length;\n\n              if (!component0.codingStyleParameters.reversibleTransformation) {\n                for (j = 0; j < jj; j++, pos += alpha01) {\n                  y0 = y0items[j] + offset;\n                  y1 = y1items[j];\n                  y2 = y2items[j];\n                  out[pos++] = y0 + 1.402 * y2 >> shift;\n                  out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n                  out[pos++] = y0 + 1.772 * y1 >> shift;\n                }\n              } else {\n                for (j = 0; j < jj; j++, pos += alpha01) {\n                  y0 = y0items[j] + offset;\n                  y1 = y1items[j];\n                  y2 = y2items[j];\n                  var g = y0 - (y2 + y1 >> 2);\n                  out[pos++] = g + y2 >> shift;\n                  out[pos++] = g >> shift;\n                  out[pos++] = g + y1 >> shift;\n                }\n              }\n\n              if (fourComponents) {\n                for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n                  out[pos] = y3items[j] + offset >> shift;\n                }\n              }\n            } else {\n              for (c = 0; c < componentsCount; c++) {\n                var items = transformedTiles[c].items;\n                shift = components[c].precision - 8;\n                offset = (128 << shift) + 0.5;\n\n                for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n                  out[pos] = items[j] + offset >> shift;\n                  pos += componentsCount;\n                }\n              }\n            }\n\n            resultImages.push(result);\n          }\n\n          return resultImages;\n        }\n\n        function initializeTile(context, tileIndex) {\n          var siz = context.SIZ;\n          var componentsCount = siz.Csiz;\n          var tile = context.tiles[tileIndex];\n\n          for (var c = 0; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n            component.quantizationParameters = qcdOrQcc;\n            var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n            component.codingStyleParameters = codOrCoc;\n          }\n\n          tile.codingStyleDefaultParameters = context.currentTile.COD;\n        }\n\n        var TagTree = function TagTreeClosure() {\n          function TagTree(width, height) {\n            var levelsLength = (0, _core_utils.log2)(Math.max(width, height)) + 1;\n            this.levels = [];\n\n            for (var i = 0; i < levelsLength; i++) {\n              var level = {\n                width: width,\n                height: height,\n                items: []\n              };\n              this.levels.push(level);\n              width = Math.ceil(width / 2);\n              height = Math.ceil(height / 2);\n            }\n          }\n\n          TagTree.prototype = {\n            reset: function TagTree_reset(i, j) {\n              var currentLevel = 0,\n                  value = 0,\n                  level;\n\n              while (currentLevel < this.levels.length) {\n                level = this.levels[currentLevel];\n                var index = i + j * level.width;\n\n                if (level.items[index] !== undefined) {\n                  value = level.items[index];\n                  break;\n                }\n\n                level.index = index;\n                i >>= 1;\n                j >>= 1;\n                currentLevel++;\n              }\n\n              currentLevel--;\n              level = this.levels[currentLevel];\n              level.items[level.index] = value;\n              this.currentLevel = currentLevel;\n              delete this.value;\n            },\n            incrementValue: function TagTree_incrementValue() {\n              var level = this.levels[this.currentLevel];\n              level.items[level.index]++;\n            },\n            nextLevel: function TagTree_nextLevel() {\n              var currentLevel = this.currentLevel;\n              var level = this.levels[currentLevel];\n              var value = level.items[level.index];\n              currentLevel--;\n\n              if (currentLevel < 0) {\n                this.value = value;\n                return false;\n              }\n\n              this.currentLevel = currentLevel;\n              level = this.levels[currentLevel];\n              level.items[level.index] = value;\n              return true;\n            }\n          };\n          return TagTree;\n        }();\n\n        var InclusionTree = function InclusionTreeClosure() {\n          function InclusionTree(width, height, defaultValue) {\n            var levelsLength = (0, _core_utils.log2)(Math.max(width, height)) + 1;\n            this.levels = [];\n\n            for (var i = 0; i < levelsLength; i++) {\n              var items = new Uint8Array(width * height);\n\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                items[j] = defaultValue;\n              }\n\n              var level = {\n                width: width,\n                height: height,\n                items: items\n              };\n              this.levels.push(level);\n              width = Math.ceil(width / 2);\n              height = Math.ceil(height / 2);\n            }\n          }\n\n          InclusionTree.prototype = {\n            reset: function InclusionTree_reset(i, j, stopValue) {\n              var currentLevel = 0;\n\n              while (currentLevel < this.levels.length) {\n                var level = this.levels[currentLevel];\n                var index = i + j * level.width;\n                level.index = index;\n                var value = level.items[index];\n\n                if (value === 0xff) {\n                  break;\n                }\n\n                if (value > stopValue) {\n                  this.currentLevel = currentLevel;\n                  this.propagateValues();\n                  return false;\n                }\n\n                i >>= 1;\n                j >>= 1;\n                currentLevel++;\n              }\n\n              this.currentLevel = currentLevel - 1;\n              return true;\n            },\n            incrementValue: function InclusionTree_incrementValue(stopValue) {\n              var level = this.levels[this.currentLevel];\n              level.items[level.index] = stopValue + 1;\n              this.propagateValues();\n            },\n            propagateValues: function InclusionTree_propagateValues() {\n              var levelIndex = this.currentLevel;\n              var level = this.levels[levelIndex];\n              var currentValue = level.items[level.index];\n\n              while (--levelIndex >= 0) {\n                level = this.levels[levelIndex];\n                level.items[level.index] = currentValue;\n              }\n            },\n            nextLevel: function InclusionTree_nextLevel() {\n              var currentLevel = this.currentLevel;\n              var level = this.levels[currentLevel];\n              var value = level.items[level.index];\n              level.items[level.index] = 0xff;\n              currentLevel--;\n\n              if (currentLevel < 0) {\n                return false;\n              }\n\n              this.currentLevel = currentLevel;\n              level = this.levels[currentLevel];\n              level.items[level.index] = value;\n              return true;\n            }\n          };\n          return InclusionTree;\n        }();\n\n        var BitModel = function BitModelClosure() {\n          var UNIFORM_CONTEXT = 17;\n          var RUNLENGTH_CONTEXT = 18;\n          var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n          var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n          var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n\n          function BitModel(width, height, subband, zeroBitPlanes, mb) {\n            this.width = width;\n            this.height = height;\n            var contextLabelTable;\n\n            if (subband === \"HH\") {\n              contextLabelTable = HHContextLabel;\n            } else if (subband === \"HL\") {\n              contextLabelTable = HLContextLabel;\n            } else {\n              contextLabelTable = LLAndLHContextsLabel;\n            }\n\n            this.contextLabelTable = contextLabelTable;\n            var coefficientCount = width * height;\n            this.neighborsSignificance = new Uint8Array(coefficientCount);\n            this.coefficentsSign = new Uint8Array(coefficientCount);\n            var coefficentsMagnitude;\n\n            if (mb > 14) {\n              coefficentsMagnitude = new Uint32Array(coefficientCount);\n            } else if (mb > 6) {\n              coefficentsMagnitude = new Uint16Array(coefficientCount);\n            } else {\n              coefficentsMagnitude = new Uint8Array(coefficientCount);\n            }\n\n            this.coefficentsMagnitude = coefficentsMagnitude;\n            this.processingFlags = new Uint8Array(coefficientCount);\n            var bitsDecoded = new Uint8Array(coefficientCount);\n\n            if (zeroBitPlanes !== 0) {\n              for (var i = 0; i < coefficientCount; i++) {\n                bitsDecoded[i] = zeroBitPlanes;\n              }\n            }\n\n            this.bitsDecoded = bitsDecoded;\n            this.reset();\n          }\n\n          BitModel.prototype = {\n            setDecoder: function BitModel_setDecoder(decoder) {\n              this.decoder = decoder;\n            },\n            reset: function BitModel_reset() {\n              this.contexts = new Int8Array(19);\n              this.contexts[0] = 4 << 1 | 0;\n              this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n              this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n            },\n            setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n              var neighborsSignificance = this.neighborsSignificance;\n              var width = this.width,\n                  height = this.height;\n              var left = column > 0;\n              var right = column + 1 < width;\n              var i;\n\n              if (row > 0) {\n                i = index - width;\n\n                if (left) {\n                  neighborsSignificance[i - 1] += 0x10;\n                }\n\n                if (right) {\n                  neighborsSignificance[i + 1] += 0x10;\n                }\n\n                neighborsSignificance[i] += 0x04;\n              }\n\n              if (row + 1 < height) {\n                i = index + width;\n\n                if (left) {\n                  neighborsSignificance[i - 1] += 0x10;\n                }\n\n                if (right) {\n                  neighborsSignificance[i + 1] += 0x10;\n                }\n\n                neighborsSignificance[i] += 0x04;\n              }\n\n              if (left) {\n                neighborsSignificance[index - 1] += 0x01;\n              }\n\n              if (right) {\n                neighborsSignificance[index + 1] += 0x01;\n              }\n\n              neighborsSignificance[index] |= 0x80;\n            },\n            runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n              var decoder = this.decoder;\n              var width = this.width,\n                  height = this.height;\n              var coefficentsMagnitude = this.coefficentsMagnitude;\n              var coefficentsSign = this.coefficentsSign;\n              var neighborsSignificance = this.neighborsSignificance;\n              var processingFlags = this.processingFlags;\n              var contexts = this.contexts;\n              var labels = this.contextLabelTable;\n              var bitsDecoded = this.bitsDecoded;\n              var processedInverseMask = ~1;\n              var processedMask = 1;\n              var firstMagnitudeBitMask = 2;\n\n              for (var i0 = 0; i0 < height; i0 += 4) {\n                for (var j = 0; j < width; j++) {\n                  var index = i0 * width + j;\n\n                  for (var i1 = 0; i1 < 4; i1++, index += width) {\n                    var i = i0 + i1;\n\n                    if (i >= height) {\n                      break;\n                    }\n\n                    processingFlags[index] &= processedInverseMask;\n\n                    if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                      continue;\n                    }\n\n                    var contextLabel = labels[neighborsSignificance[index]];\n                    var decision = decoder.readBit(contexts, contextLabel);\n\n                    if (decision) {\n                      var sign = this.decodeSignBit(i, j, index);\n                      coefficentsSign[index] = sign;\n                      coefficentsMagnitude[index] = 1;\n                      this.setNeighborsSignificance(i, j, index);\n                      processingFlags[index] |= firstMagnitudeBitMask;\n                    }\n\n                    bitsDecoded[index]++;\n                    processingFlags[index] |= processedMask;\n                  }\n                }\n              }\n            },\n            decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n              var width = this.width,\n                  height = this.height;\n              var coefficentsMagnitude = this.coefficentsMagnitude;\n              var coefficentsSign = this.coefficentsSign;\n              var contribution, sign0, sign1, significance1;\n              var contextLabel, decoded;\n              significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\n              if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n                sign1 = coefficentsSign[index + 1];\n\n                if (significance1) {\n                  sign0 = coefficentsSign[index - 1];\n                  contribution = 1 - sign1 - sign0;\n                } else {\n                  contribution = 1 - sign1 - sign1;\n                }\n              } else if (significance1) {\n                sign0 = coefficentsSign[index - 1];\n                contribution = 1 - sign0 - sign0;\n              } else {\n                contribution = 0;\n              }\n\n              var horizontalContribution = 3 * contribution;\n              significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\n              if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n                sign1 = coefficentsSign[index + width];\n\n                if (significance1) {\n                  sign0 = coefficentsSign[index - width];\n                  contribution = 1 - sign1 - sign0 + horizontalContribution;\n                } else {\n                  contribution = 1 - sign1 - sign1 + horizontalContribution;\n                }\n              } else if (significance1) {\n                sign0 = coefficentsSign[index - width];\n                contribution = 1 - sign0 - sign0 + horizontalContribution;\n              } else {\n                contribution = horizontalContribution;\n              }\n\n              if (contribution >= 0) {\n                contextLabel = 9 + contribution;\n                decoded = this.decoder.readBit(this.contexts, contextLabel);\n              } else {\n                contextLabel = 9 - contribution;\n                decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n              }\n\n              return decoded;\n            },\n            runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n              var decoder = this.decoder;\n              var width = this.width,\n                  height = this.height;\n              var coefficentsMagnitude = this.coefficentsMagnitude;\n              var neighborsSignificance = this.neighborsSignificance;\n              var contexts = this.contexts;\n              var bitsDecoded = this.bitsDecoded;\n              var processingFlags = this.processingFlags;\n              var processedMask = 1;\n              var firstMagnitudeBitMask = 2;\n              var length = width * height;\n              var width4 = width * 4;\n\n              for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n                indexNext = Math.min(length, index0 + width4);\n\n                for (var j = 0; j < width; j++) {\n                  for (var index = index0 + j; index < indexNext; index += width) {\n                    if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                      continue;\n                    }\n\n                    var contextLabel = 16;\n\n                    if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                      processingFlags[index] ^= firstMagnitudeBitMask;\n                      var significance = neighborsSignificance[index] & 127;\n                      contextLabel = significance === 0 ? 15 : 14;\n                    }\n\n                    var bit = decoder.readBit(contexts, contextLabel);\n                    coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n                    bitsDecoded[index]++;\n                    processingFlags[index] |= processedMask;\n                  }\n                }\n              }\n            },\n            runCleanupPass: function BitModel_runCleanupPass() {\n              var decoder = this.decoder;\n              var width = this.width,\n                  height = this.height;\n              var neighborsSignificance = this.neighborsSignificance;\n              var coefficentsMagnitude = this.coefficentsMagnitude;\n              var coefficentsSign = this.coefficentsSign;\n              var contexts = this.contexts;\n              var labels = this.contextLabelTable;\n              var bitsDecoded = this.bitsDecoded;\n              var processingFlags = this.processingFlags;\n              var processedMask = 1;\n              var firstMagnitudeBitMask = 2;\n              var oneRowDown = width;\n              var twoRowsDown = width * 2;\n              var threeRowsDown = width * 3;\n              var iNext;\n\n              for (var i0 = 0; i0 < height; i0 = iNext) {\n                iNext = Math.min(i0 + 4, height);\n                var indexBase = i0 * width;\n                var checkAllEmpty = i0 + 3 < height;\n\n                for (var j = 0; j < width; j++) {\n                  var index0 = indexBase + j;\n                  var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n                  var i1 = 0,\n                      index = index0;\n                  var i = i0,\n                      sign;\n\n                  if (allEmpty) {\n                    var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\n                    if (!hasSignificantCoefficent) {\n                      bitsDecoded[index0]++;\n                      bitsDecoded[index0 + oneRowDown]++;\n                      bitsDecoded[index0 + twoRowsDown]++;\n                      bitsDecoded[index0 + threeRowsDown]++;\n                      continue;\n                    }\n\n                    i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\n                    if (i1 !== 0) {\n                      i = i0 + i1;\n                      index += i1 * width;\n                    }\n\n                    sign = this.decodeSignBit(i, j, index);\n                    coefficentsSign[index] = sign;\n                    coefficentsMagnitude[index] = 1;\n                    this.setNeighborsSignificance(i, j, index);\n                    processingFlags[index] |= firstMagnitudeBitMask;\n                    index = index0;\n\n                    for (var i2 = i0; i2 <= i; i2++, index += width) {\n                      bitsDecoded[index]++;\n                    }\n\n                    i1++;\n                  }\n\n                  for (i = i0 + i1; i < iNext; i++, index += width) {\n                    if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                      continue;\n                    }\n\n                    var contextLabel = labels[neighborsSignificance[index]];\n                    var decision = decoder.readBit(contexts, contextLabel);\n\n                    if (decision === 1) {\n                      sign = this.decodeSignBit(i, j, index);\n                      coefficentsSign[index] = sign;\n                      coefficentsMagnitude[index] = 1;\n                      this.setNeighborsSignificance(i, j, index);\n                      processingFlags[index] |= firstMagnitudeBitMask;\n                    }\n\n                    bitsDecoded[index]++;\n                  }\n                }\n              }\n            },\n            checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n              var decoder = this.decoder;\n              var contexts = this.contexts;\n              var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\n              if (symbol !== 0xa) {\n                throw new JpxError(\"Invalid segmentation symbol\");\n              }\n            }\n          };\n          return BitModel;\n        }();\n\n        var Transform = function TransformClosure() {\n          function Transform() {}\n\n          Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n            var ll = subbands[0];\n\n            for (var i = 1, ii = subbands.length; i < ii; i++) {\n              ll = this.iterate(ll, subbands[i], u0, v0);\n            }\n\n            return ll;\n          };\n\n          Transform.prototype.extend = function extend(buffer, offset, size) {\n            var i1 = offset - 1,\n                j1 = offset + 1;\n            var i2 = offset + size - 2,\n                j2 = offset + size;\n            buffer[i1--] = buffer[j1++];\n            buffer[j2++] = buffer[i2--];\n            buffer[i1--] = buffer[j1++];\n            buffer[j2++] = buffer[i2--];\n            buffer[i1--] = buffer[j1++];\n            buffer[j2++] = buffer[i2--];\n            buffer[i1] = buffer[j1];\n            buffer[j2] = buffer[i2];\n          };\n\n          Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n            var llWidth = ll.width,\n                llHeight = ll.height,\n                llItems = ll.items;\n            var width = hl_lh_hh.width;\n            var height = hl_lh_hh.height;\n            var items = hl_lh_hh.items;\n            var i, j, k, l, u, v;\n\n            for (k = 0, i = 0; i < llHeight; i++) {\n              l = i * 2 * width;\n\n              for (j = 0; j < llWidth; j++, k++, l += 2) {\n                items[l] = llItems[k];\n              }\n            }\n\n            llItems = ll.items = null;\n            var bufferPadding = 4;\n            var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n            if (width === 1) {\n              if ((u0 & 1) !== 0) {\n                for (v = 0, k = 0; v < height; v++, k += width) {\n                  items[k] *= 0.5;\n                }\n              }\n            } else {\n              for (v = 0, k = 0; v < height; v++, k += width) {\n                rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n                this.extend(rowBuffer, bufferPadding, width);\n                this.filter(rowBuffer, bufferPadding, width);\n                items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n              }\n            }\n\n            var numBuffers = 16;\n            var colBuffers = [];\n\n            for (i = 0; i < numBuffers; i++) {\n              colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n            }\n\n            var b,\n                currentBuffer = 0;\n            ll = bufferPadding + height;\n\n            if (height === 1) {\n              if ((v0 & 1) !== 0) {\n                for (u = 0; u < width; u++) {\n                  items[u] *= 0.5;\n                }\n              }\n            } else {\n              for (u = 0; u < width; u++) {\n                if (currentBuffer === 0) {\n                  numBuffers = Math.min(width - u, numBuffers);\n\n                  for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n                    for (b = 0; b < numBuffers; b++) {\n                      colBuffers[b][l] = items[k + b];\n                    }\n                  }\n\n                  currentBuffer = numBuffers;\n                }\n\n                currentBuffer--;\n                var buffer = colBuffers[currentBuffer];\n                this.extend(buffer, bufferPadding, height);\n                this.filter(buffer, bufferPadding, height);\n\n                if (currentBuffer === 0) {\n                  k = u - numBuffers + 1;\n\n                  for (l = bufferPadding; l < ll; k += width, l++) {\n                    for (b = 0; b < numBuffers; b++) {\n                      items[k + b] = colBuffers[b][l];\n                    }\n                  }\n                }\n              }\n            }\n\n            return {\n              width: width,\n              height: height,\n              items: items\n            };\n          };\n\n          return Transform;\n        }();\n\n        var IrreversibleTransform = function IrreversibleTransformClosure() {\n          function IrreversibleTransform() {\n            Transform.call(this);\n          }\n\n          IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\n          IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n            var len = length >> 1;\n            offset = offset | 0;\n            var j, n, current, next;\n            var alpha = -1.586134342059924;\n            var beta = -0.052980118572961;\n            var gamma = 0.882911075530934;\n            var delta = 0.443506852043971;\n            var K = 1.230174104914001;\n            var K_ = 1 / K;\n            j = offset - 3;\n\n            for (n = len + 4; n--; j += 2) {\n              x[j] *= K_;\n            }\n\n            j = offset - 2;\n            current = delta * x[j - 1];\n\n            for (n = len + 3; n--; j += 2) {\n              next = delta * x[j + 1];\n              x[j] = K * x[j] - current - next;\n\n              if (n--) {\n                j += 2;\n                current = delta * x[j + 1];\n                x[j] = K * x[j] - current - next;\n              } else {\n                break;\n              }\n            }\n\n            j = offset - 1;\n            current = gamma * x[j - 1];\n\n            for (n = len + 2; n--; j += 2) {\n              next = gamma * x[j + 1];\n              x[j] -= current + next;\n\n              if (n--) {\n                j += 2;\n                current = gamma * x[j + 1];\n                x[j] -= current + next;\n              } else {\n                break;\n              }\n            }\n\n            j = offset;\n            current = beta * x[j - 1];\n\n            for (n = len + 1; n--; j += 2) {\n              next = beta * x[j + 1];\n              x[j] -= current + next;\n\n              if (n--) {\n                j += 2;\n                current = beta * x[j + 1];\n                x[j] -= current + next;\n              } else {\n                break;\n              }\n            }\n\n            if (len !== 0) {\n              j = offset + 1;\n              current = alpha * x[j - 1];\n\n              for (n = len; n--; j += 2) {\n                next = alpha * x[j + 1];\n                x[j] -= current + next;\n\n                if (n--) {\n                  j += 2;\n                  current = alpha * x[j + 1];\n                  x[j] -= current + next;\n                } else {\n                  break;\n                }\n              }\n            }\n          };\n\n          return IrreversibleTransform;\n        }();\n\n        var ReversibleTransform = function ReversibleTransformClosure() {\n          function ReversibleTransform() {\n            Transform.call(this);\n          }\n\n          ReversibleTransform.prototype = Object.create(Transform.prototype);\n\n          ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n            var len = length >> 1;\n            offset = offset | 0;\n            var j, n;\n\n            for (j = offset, n = len + 1; n--; j += 2) {\n              x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n            }\n\n            for (j = offset + 1, n = len; n--; j += 2) {\n              x[j] += x[j - 1] + x[j + 1] >> 1;\n            }\n          };\n\n          return ReversibleTransform;\n        }();\n\n        return JpxImage;\n      }();\n\n      exports.JpxImage = JpxImage;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var ARCFourCipher = function ARCFourCipherClosure() {\n        function ARCFourCipher(key) {\n          this.a = 0;\n          this.b = 0;\n          var s = new Uint8Array(256);\n          var i,\n              j = 0,\n              tmp,\n              keyLength = key.length;\n\n          for (i = 0; i < 256; ++i) {\n            s[i] = i;\n          }\n\n          for (i = 0; i < 256; ++i) {\n            tmp = s[i];\n            j = j + tmp + key[i % keyLength] & 0xff;\n            s[i] = s[j];\n            s[j] = tmp;\n          }\n\n          this.s = s;\n        }\n\n        ARCFourCipher.prototype = {\n          encryptBlock: function ARCFourCipher_encryptBlock(data) {\n            var i,\n                n = data.length,\n                tmp,\n                tmp2;\n            var a = this.a,\n                b = this.b,\n                s = this.s;\n            var output = new Uint8Array(n);\n\n            for (i = 0; i < n; ++i) {\n              a = a + 1 & 0xff;\n              tmp = s[a];\n              b = b + tmp & 0xff;\n              tmp2 = s[b];\n              s[a] = tmp2;\n              s[b] = tmp;\n              output[i] = data[i] ^ s[tmp + tmp2 & 0xff];\n            }\n\n            this.a = a;\n            this.b = b;\n            return output;\n          }\n        };\n        ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n        ARCFourCipher.prototype.encrypt = ARCFourCipher.prototype.encryptBlock;\n        return ARCFourCipher;\n      }();\n\n      exports.ARCFourCipher = ARCFourCipher;\n\n      var calculateMD5 = function calculateMD5Closure() {\n        var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n\n        function hash(data, offset, length) {\n          var h0 = 1732584193,\n              h1 = -271733879,\n              h2 = -1732584194,\n              h3 = 271733878;\n          var paddedLength = length + 72 & ~63;\n          var padded = new Uint8Array(paddedLength);\n          var i, j, n;\n\n          for (i = 0; i < length; ++i) {\n            padded[i] = data[offset++];\n          }\n\n          padded[i++] = 0x80;\n          n = paddedLength - 8;\n\n          while (i < n) {\n            padded[i++] = 0;\n          }\n\n          padded[i++] = length << 3 & 0xff;\n          padded[i++] = length >> 5 & 0xff;\n          padded[i++] = length >> 13 & 0xff;\n          padded[i++] = length >> 21 & 0xff;\n          padded[i++] = length >>> 29 & 0xff;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          var w = new Int32Array(16);\n\n          for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n              w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n            }\n\n            var a = h0,\n                b = h1,\n                c = h2,\n                d = h3,\n                f,\n                g;\n\n            for (j = 0; j < 64; ++j) {\n              if (j < 16) {\n                f = b & c | ~b & d;\n                g = j;\n              } else if (j < 32) {\n                f = d & b | ~d & c;\n                g = 5 * j + 1 & 15;\n              } else if (j < 48) {\n                f = b ^ c ^ d;\n                g = 3 * j + 5 & 15;\n              } else {\n                f = c ^ (b | ~d);\n                g = 7 * j & 15;\n              }\n\n              var tmp = d,\n                  rotateArg = a + f + k[j] + w[g] | 0,\n                  rotate = r[j];\n              d = c;\n              c = b;\n              b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n              a = tmp;\n            }\n\n            h0 = h0 + a | 0;\n            h1 = h1 + b | 0;\n            h2 = h2 + c | 0;\n            h3 = h3 + d | 0;\n          }\n\n          return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n        }\n\n        return hash;\n      }();\n\n      exports.calculateMD5 = calculateMD5;\n\n      var Word64 = function Word64Closure() {\n        function Word64(highInteger, lowInteger) {\n          this.high = highInteger | 0;\n          this.low = lowInteger | 0;\n        }\n\n        Word64.prototype = {\n          and: function Word64_and(word) {\n            this.high &= word.high;\n            this.low &= word.low;\n          },\n          xor: function Word64_xor(word) {\n            this.high ^= word.high;\n            this.low ^= word.low;\n          },\n          or: function Word64_or(word) {\n            this.high |= word.high;\n            this.low |= word.low;\n          },\n          shiftRight: function Word64_shiftRight(places) {\n            if (places >= 32) {\n              this.low = this.high >>> places - 32 | 0;\n              this.high = 0;\n            } else {\n              this.low = this.low >>> places | this.high << 32 - places;\n              this.high = this.high >>> places | 0;\n            }\n          },\n          shiftLeft: function Word64_shiftLeft(places) {\n            if (places >= 32) {\n              this.high = this.low << places - 32;\n              this.low = 0;\n            } else {\n              this.high = this.high << places | this.low >>> 32 - places;\n              this.low = this.low << places;\n            }\n          },\n          rotateRight: function Word64_rotateRight(places) {\n            var low, high;\n\n            if (places & 32) {\n              high = this.low;\n              low = this.high;\n            } else {\n              low = this.low;\n              high = this.high;\n            }\n\n            places &= 31;\n            this.low = low >>> places | high << 32 - places;\n            this.high = high >>> places | low << 32 - places;\n          },\n          not: function Word64_not() {\n            this.high = ~this.high;\n            this.low = ~this.low;\n          },\n          add: function Word64_add(word) {\n            var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n            var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\n            if (lowAdd > 0xffffffff) {\n              highAdd += 1;\n            }\n\n            this.low = lowAdd | 0;\n            this.high = highAdd | 0;\n          },\n          copyTo: function Word64_copyTo(bytes, offset) {\n            bytes[offset] = this.high >>> 24 & 0xff;\n            bytes[offset + 1] = this.high >> 16 & 0xff;\n            bytes[offset + 2] = this.high >> 8 & 0xff;\n            bytes[offset + 3] = this.high & 0xff;\n            bytes[offset + 4] = this.low >>> 24 & 0xff;\n            bytes[offset + 5] = this.low >> 16 & 0xff;\n            bytes[offset + 6] = this.low >> 8 & 0xff;\n            bytes[offset + 7] = this.low & 0xff;\n          },\n          assign: function Word64_assign(word) {\n            this.high = word.high;\n            this.low = word.low;\n          }\n        };\n        return Word64;\n      }();\n\n      var calculateSHA256 = function calculateSHA256Closure() {\n        function rotr(x, n) {\n          return x >>> n | x << 32 - n;\n        }\n\n        function ch(x, y, z) {\n          return x & y ^ ~x & z;\n        }\n\n        function maj(x, y, z) {\n          return x & y ^ x & z ^ y & z;\n        }\n\n        function sigma(x) {\n          return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n        }\n\n        function sigmaPrime(x) {\n          return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n        }\n\n        function littleSigma(x) {\n          return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n        }\n\n        function littleSigmaPrime(x) {\n          return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n        }\n\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n        function hash(data, offset, length) {\n          var h0 = 0x6a09e667,\n              h1 = 0xbb67ae85,\n              h2 = 0x3c6ef372,\n              h3 = 0xa54ff53a,\n              h4 = 0x510e527f,\n              h5 = 0x9b05688c,\n              h6 = 0x1f83d9ab,\n              h7 = 0x5be0cd19;\n          var paddedLength = Math.ceil((length + 9) / 64) * 64;\n          var padded = new Uint8Array(paddedLength);\n          var i, j, n;\n\n          for (i = 0; i < length; ++i) {\n            padded[i] = data[offset++];\n          }\n\n          padded[i++] = 0x80;\n          n = paddedLength - 8;\n\n          while (i < n) {\n            padded[i++] = 0;\n          }\n\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = length >>> 29 & 0xff;\n          padded[i++] = length >> 21 & 0xff;\n          padded[i++] = length >> 13 & 0xff;\n          padded[i++] = length >> 5 & 0xff;\n          padded[i++] = length << 3 & 0xff;\n          var w = new Uint32Array(64);\n\n          for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n              w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n              i += 4;\n            }\n\n            for (j = 16; j < 64; ++j) {\n              w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n            }\n\n            var a = h0,\n                b = h1,\n                c = h2,\n                d = h3,\n                e = h4,\n                f = h5,\n                g = h6,\n                h = h7,\n                t1,\n                t2;\n\n            for (j = 0; j < 64; ++j) {\n              t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n              t2 = sigma(a) + maj(a, b, c);\n              h = g;\n              g = f;\n              f = e;\n              e = d + t1 | 0;\n              d = c;\n              c = b;\n              b = a;\n              a = t1 + t2 | 0;\n            }\n\n            h0 = h0 + a | 0;\n            h1 = h1 + b | 0;\n            h2 = h2 + c | 0;\n            h3 = h3 + d | 0;\n            h4 = h4 + e | 0;\n            h5 = h5 + f | 0;\n            h6 = h6 + g | 0;\n            h7 = h7 + h | 0;\n          }\n\n          return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n        }\n\n        return hash;\n      }();\n\n      exports.calculateSHA256 = calculateSHA256;\n\n      var calculateSHA512 = function calculateSHA512Closure() {\n        function ch(result, x, y, z, tmp) {\n          result.assign(x);\n          result.and(y);\n          tmp.assign(x);\n          tmp.not();\n          tmp.and(z);\n          result.xor(tmp);\n        }\n\n        function maj(result, x, y, z, tmp) {\n          result.assign(x);\n          result.and(y);\n          tmp.assign(x);\n          tmp.and(z);\n          result.xor(tmp);\n          tmp.assign(y);\n          tmp.and(z);\n          result.xor(tmp);\n        }\n\n        function sigma(result, x, tmp) {\n          result.assign(x);\n          result.rotateRight(28);\n          tmp.assign(x);\n          tmp.rotateRight(34);\n          result.xor(tmp);\n          tmp.assign(x);\n          tmp.rotateRight(39);\n          result.xor(tmp);\n        }\n\n        function sigmaPrime(result, x, tmp) {\n          result.assign(x);\n          result.rotateRight(14);\n          tmp.assign(x);\n          tmp.rotateRight(18);\n          result.xor(tmp);\n          tmp.assign(x);\n          tmp.rotateRight(41);\n          result.xor(tmp);\n        }\n\n        function littleSigma(result, x, tmp) {\n          result.assign(x);\n          result.rotateRight(1);\n          tmp.assign(x);\n          tmp.rotateRight(8);\n          result.xor(tmp);\n          tmp.assign(x);\n          tmp.shiftRight(7);\n          result.xor(tmp);\n        }\n\n        function littleSigmaPrime(result, x, tmp) {\n          result.assign(x);\n          result.rotateRight(19);\n          tmp.assign(x);\n          tmp.rotateRight(61);\n          result.xor(tmp);\n          tmp.assign(x);\n          tmp.shiftRight(6);\n          result.xor(tmp);\n        }\n\n        var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n\n        function hash(data, offset, length, mode384) {\n          mode384 = !!mode384;\n          var h0, h1, h2, h3, h4, h5, h6, h7;\n\n          if (!mode384) {\n            h0 = new Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new Word64(0x510e527f, 0xade682d1);\n            h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new Word64(0x5be0cd19, 0x137e2179);\n          } else {\n            h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new Word64(0x629a292a, 0x367cd507);\n            h2 = new Word64(0x9159015a, 0x3070dd17);\n            h3 = new Word64(0x152fecd8, 0xf70e5939);\n            h4 = new Word64(0x67332667, 0xffc00b31);\n            h5 = new Word64(0x8eb44a87, 0x68581511);\n            h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n          }\n\n          var paddedLength = Math.ceil((length + 17) / 128) * 128;\n          var padded = new Uint8Array(paddedLength);\n          var i, j, n;\n\n          for (i = 0; i < length; ++i) {\n            padded[i] = data[offset++];\n          }\n\n          padded[i++] = 0x80;\n          n = paddedLength - 16;\n\n          while (i < n) {\n            padded[i++] = 0;\n          }\n\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = 0;\n          padded[i++] = length >>> 29 & 0xff;\n          padded[i++] = length >> 21 & 0xff;\n          padded[i++] = length >> 13 & 0xff;\n          padded[i++] = length >> 5 & 0xff;\n          padded[i++] = length << 3 & 0xff;\n          var w = new Array(80);\n\n          for (i = 0; i < 80; i++) {\n            w[i] = new Word64(0, 0);\n          }\n\n          var a = new Word64(0, 0),\n              b = new Word64(0, 0),\n              c = new Word64(0, 0);\n          var d = new Word64(0, 0),\n              e = new Word64(0, 0),\n              f = new Word64(0, 0);\n          var g = new Word64(0, 0),\n              h = new Word64(0, 0);\n          var t1 = new Word64(0, 0),\n              t2 = new Word64(0, 0);\n          var tmp1 = new Word64(0, 0),\n              tmp2 = new Word64(0, 0),\n              tmp3;\n\n          for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n              w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n              w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n              i += 8;\n            }\n\n            for (j = 16; j < 80; ++j) {\n              tmp3 = w[j];\n              littleSigmaPrime(tmp3, w[j - 2], tmp2);\n              tmp3.add(w[j - 7]);\n              littleSigma(tmp1, w[j - 15], tmp2);\n              tmp3.add(tmp1);\n              tmp3.add(w[j - 16]);\n            }\n\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n\n            for (j = 0; j < 80; ++j) {\n              t1.assign(h);\n              sigmaPrime(tmp1, e, tmp2);\n              t1.add(tmp1);\n              ch(tmp1, e, f, g, tmp2);\n              t1.add(tmp1);\n              t1.add(k[j]);\n              t1.add(w[j]);\n              sigma(t2, a, tmp2);\n              maj(tmp1, a, b, c, tmp2);\n              t2.add(tmp1);\n              tmp3 = h;\n              h = g;\n              g = f;\n              f = e;\n              d.add(t1);\n              e = d;\n              d = c;\n              c = b;\n              b = a;\n              tmp3.assign(t1);\n              tmp3.add(t2);\n              a = tmp3;\n            }\n\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n          }\n\n          var result;\n\n          if (!mode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n          } else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n          }\n\n          return result;\n        }\n\n        return hash;\n      }();\n\n      exports.calculateSHA512 = calculateSHA512;\n\n      var calculateSHA384 = function calculateSHA384Closure() {\n        function hash(data, offset, length) {\n          return calculateSHA512(data, offset, length, true);\n        }\n\n        return hash;\n      }();\n\n      exports.calculateSHA384 = calculateSHA384;\n\n      var NullCipher = function NullCipherClosure() {\n        function NullCipher() {}\n\n        NullCipher.prototype = {\n          decryptBlock: function NullCipher_decryptBlock(data) {\n            return data;\n          },\n          encrypt: function NullCipher_encrypt(data) {\n            return data;\n          }\n        };\n        return NullCipher;\n      }();\n\n      var AESBaseCipher = /*#__PURE__*/function () {\n        function AESBaseCipher() {\n          _classCallCheck(this, AESBaseCipher);\n\n          if (this.constructor === AESBaseCipher) {\n            (0, _util.unreachable)(\"Cannot initialize AESBaseCipher.\");\n          }\n\n          this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n          this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n          this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n          this._mixCol = new Uint8Array(256);\n\n          for (var i = 0; i < 256; i++) {\n            if (i < 128) {\n              this._mixCol[i] = i << 1;\n            } else {\n              this._mixCol[i] = i << 1 ^ 0x1b;\n            }\n          }\n\n          this.buffer = new Uint8Array(16);\n          this.bufferPosition = 0;\n        }\n\n        _createClass(AESBaseCipher, [{\n          key: \"_expandKey\",\n          value: function _expandKey(cipherKey) {\n            (0, _util.unreachable)(\"Cannot call `_expandKey` on the base class\");\n          }\n        }, {\n          key: \"_decrypt\",\n          value: function _decrypt(input, key) {\n            var t, u, v;\n            var state = new Uint8Array(16);\n            state.set(input);\n\n            for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n              state[j] ^= key[k];\n            }\n\n            for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n              t = state[13];\n              state[13] = state[9];\n              state[9] = state[5];\n              state[5] = state[1];\n              state[1] = t;\n              t = state[14];\n              u = state[10];\n              state[14] = state[6];\n              state[10] = state[2];\n              state[6] = t;\n              state[2] = u;\n              t = state[15];\n              u = state[11];\n              v = state[7];\n              state[15] = state[3];\n              state[11] = t;\n              state[7] = u;\n              state[3] = v;\n\n              for (var _j2 = 0; _j2 < 16; ++_j2) {\n                state[_j2] = this._inv_s[state[_j2]];\n              }\n\n              for (var _j3 = 0, _k = i * 16; _j3 < 16; ++_j3, ++_k) {\n                state[_j3] ^= key[_k];\n              }\n\n              for (var _j4 = 0; _j4 < 16; _j4 += 4) {\n                var s0 = this._mix[state[_j4]];\n                var s1 = this._mix[state[_j4 + 1]];\n                var s2 = this._mix[state[_j4 + 2]];\n                var s3 = this._mix[state[_j4 + 3]];\n                t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n                state[_j4] = t >>> 24 & 0xff;\n                state[_j4 + 1] = t >> 16 & 0xff;\n                state[_j4 + 2] = t >> 8 & 0xff;\n                state[_j4 + 3] = t & 0xff;\n              }\n            }\n\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n\n            for (var _j5 = 0; _j5 < 16; ++_j5) {\n              state[_j5] = this._inv_s[state[_j5]];\n              state[_j5] ^= key[_j5];\n            }\n\n            return state;\n          }\n        }, {\n          key: \"_encrypt\",\n          value: function _encrypt(input, key) {\n            var s = this._s;\n            var t, u, v;\n            var state = new Uint8Array(16);\n            state.set(input);\n\n            for (var j = 0; j < 16; ++j) {\n              state[j] ^= key[j];\n            }\n\n            for (var i = 1; i < this._cyclesOfRepetition; i++) {\n              for (var _j6 = 0; _j6 < 16; ++_j6) {\n                state[_j6] = s[state[_j6]];\n              }\n\n              v = state[1];\n              state[1] = state[5];\n              state[5] = state[9];\n              state[9] = state[13];\n              state[13] = v;\n              v = state[2];\n              u = state[6];\n              state[2] = state[10];\n              state[6] = state[14];\n              state[10] = v;\n              state[14] = u;\n              v = state[3];\n              u = state[7];\n              t = state[11];\n              state[3] = state[15];\n              state[7] = v;\n              state[11] = u;\n              state[15] = t;\n\n              for (var _j7 = 0; _j7 < 16; _j7 += 4) {\n                var s0 = state[_j7 + 0];\n                var s1 = state[_j7 + 1];\n                var s2 = state[_j7 + 2];\n                var s3 = state[_j7 + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[_j7 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[_j7 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[_j7 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[_j7 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n              }\n\n              for (var _j8 = 0, k = i * 16; _j8 < 16; ++_j8, ++k) {\n                state[_j8] ^= key[k];\n              }\n            }\n\n            for (var _j9 = 0; _j9 < 16; ++_j9) {\n              state[_j9] = s[state[_j9]];\n            }\n\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n\n            for (var _j10 = 0, _k2 = this._keySize; _j10 < 16; ++_j10, ++_k2) {\n              state[_j10] ^= key[_k2];\n            }\n\n            return state;\n          }\n        }, {\n          key: \"_decryptBlock2\",\n          value: function _decryptBlock2(data, finalize) {\n            var sourceLength = data.length;\n            var buffer = this.buffer,\n                bufferLength = this.bufferPosition;\n            var result = [];\n            var iv = this.iv;\n\n            for (var i = 0; i < sourceLength; ++i) {\n              buffer[bufferLength] = data[i];\n              ++bufferLength;\n\n              if (bufferLength < 16) {\n                continue;\n              }\n\n              var plain = this._decrypt(buffer, this._key);\n\n              for (var j = 0; j < 16; ++j) {\n                plain[j] ^= iv[j];\n              }\n\n              iv = buffer;\n              result.push(plain);\n              buffer = new Uint8Array(16);\n              bufferLength = 0;\n            }\n\n            this.buffer = buffer;\n            this.bufferLength = bufferLength;\n            this.iv = iv;\n\n            if (result.length === 0) {\n              return new Uint8Array(0);\n            }\n\n            var outputLength = 16 * result.length;\n\n            if (finalize) {\n              var lastBlock = result[result.length - 1];\n              var psLen = lastBlock[15];\n\n              if (psLen <= 16) {\n                for (var _i14 = 15, ii = 16 - psLen; _i14 >= ii; --_i14) {\n                  if (lastBlock[_i14] !== psLen) {\n                    psLen = 0;\n                    break;\n                  }\n                }\n\n                outputLength -= psLen;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n              }\n            }\n\n            var output = new Uint8Array(outputLength);\n\n            for (var _i15 = 0, _j11 = 0, _ii3 = result.length; _i15 < _ii3; ++_i15, _j11 += 16) {\n              output.set(result[_i15], _j11);\n            }\n\n            return output;\n          }\n        }, {\n          key: \"decryptBlock\",\n          value: function decryptBlock(data, finalize) {\n            var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var sourceLength = data.length;\n            var buffer = this.buffer;\n            var bufferLength = this.bufferPosition;\n\n            if (iv) {\n              this.iv = iv;\n            } else {\n              for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[bufferLength] = data[i];\n              }\n\n              if (bufferLength < 16) {\n                this.bufferLength = bufferLength;\n                return new Uint8Array(0);\n              }\n\n              this.iv = buffer;\n              data = data.subarray(16);\n            }\n\n            this.buffer = new Uint8Array(16);\n            this.bufferLength = 0;\n            this.decryptBlock = this._decryptBlock2;\n            return this.decryptBlock(data, finalize);\n          }\n        }, {\n          key: \"encrypt\",\n          value: function encrypt(data, iv) {\n            var sourceLength = data.length;\n            var buffer = this.buffer,\n                bufferLength = this.bufferPosition;\n            var result = [];\n\n            if (!iv) {\n              iv = new Uint8Array(16);\n            }\n\n            for (var i = 0; i < sourceLength; ++i) {\n              buffer[bufferLength] = data[i];\n              ++bufferLength;\n\n              if (bufferLength < 16) {\n                continue;\n              }\n\n              for (var j = 0; j < 16; ++j) {\n                buffer[j] ^= iv[j];\n              }\n\n              var cipher = this._encrypt(buffer, this._key);\n\n              iv = cipher;\n              result.push(cipher);\n              buffer = new Uint8Array(16);\n              bufferLength = 0;\n            }\n\n            this.buffer = buffer;\n            this.bufferLength = bufferLength;\n            this.iv = iv;\n\n            if (result.length === 0) {\n              return new Uint8Array(0);\n            }\n\n            var outputLength = 16 * result.length;\n            var output = new Uint8Array(outputLength);\n\n            for (var _i16 = 0, _j12 = 0, ii = result.length; _i16 < ii; ++_i16, _j12 += 16) {\n              output.set(result[_i16], _j12);\n            }\n\n            return output;\n          }\n        }]);\n\n        return AESBaseCipher;\n      }();\n\n      var AES128Cipher = /*#__PURE__*/function (_AESBaseCipher) {\n        _inherits(AES128Cipher, _AESBaseCipher);\n\n        var _super21 = _createSuper(AES128Cipher);\n\n        function AES128Cipher(key) {\n          var _this24;\n\n          _classCallCheck(this, AES128Cipher);\n\n          _this24 = _super21.call(this);\n          _this24._cyclesOfRepetition = 10;\n          _this24._keySize = 160;\n          _this24._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n          _this24._key = _this24._expandKey(key);\n          return _this24;\n        }\n\n        _createClass(AES128Cipher, [{\n          key: \"_expandKey\",\n          value: function _expandKey(cipherKey) {\n            var b = 176;\n            var s = this._s;\n            var rcon = this._rcon;\n            var result = new Uint8Array(b);\n            result.set(cipherKey);\n\n            for (var j = 16, i = 1; j < b; ++i) {\n              var t1 = result[j - 3];\n              var t2 = result[j - 2];\n              var t3 = result[j - 1];\n              var t4 = result[j - 4];\n              t1 = s[t1];\n              t2 = s[t2];\n              t3 = s[t3];\n              t4 = s[t4];\n              t1 = t1 ^ rcon[i];\n\n              for (var n = 0; n < 4; ++n) {\n                result[j] = t1 ^= result[j - 16];\n                j++;\n                result[j] = t2 ^= result[j - 16];\n                j++;\n                result[j] = t3 ^= result[j - 16];\n                j++;\n                result[j] = t4 ^= result[j - 16];\n                j++;\n              }\n            }\n\n            return result;\n          }\n        }]);\n\n        return AES128Cipher;\n      }(AESBaseCipher);\n\n      exports.AES128Cipher = AES128Cipher;\n\n      var AES256Cipher = /*#__PURE__*/function (_AESBaseCipher2) {\n        _inherits(AES256Cipher, _AESBaseCipher2);\n\n        var _super22 = _createSuper(AES256Cipher);\n\n        function AES256Cipher(key) {\n          var _this25;\n\n          _classCallCheck(this, AES256Cipher);\n\n          _this25 = _super22.call(this);\n          _this25._cyclesOfRepetition = 14;\n          _this25._keySize = 224;\n          _this25._key = _this25._expandKey(key);\n          return _this25;\n        }\n\n        _createClass(AES256Cipher, [{\n          key: \"_expandKey\",\n          value: function _expandKey(cipherKey) {\n            var b = 240;\n            var s = this._s;\n            var result = new Uint8Array(b);\n            result.set(cipherKey);\n            var r = 1;\n            var t1, t2, t3, t4;\n\n            for (var j = 32, i = 1; j < b; ++i) {\n              if (j % 32 === 16) {\n                t1 = s[t1];\n                t2 = s[t2];\n                t3 = s[t3];\n                t4 = s[t4];\n              } else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[t1];\n                t2 = s[t2];\n                t3 = s[t3];\n                t4 = s[t4];\n                t1 = t1 ^ r;\n\n                if ((r <<= 1) >= 256) {\n                  r = (r ^ 0x1b) & 0xff;\n                }\n              }\n\n              for (var n = 0; n < 4; ++n) {\n                result[j] = t1 ^= result[j - 32];\n                j++;\n                result[j] = t2 ^= result[j - 32];\n                j++;\n                result[j] = t3 ^= result[j - 32];\n                j++;\n                result[j] = t4 ^= result[j - 32];\n                j++;\n              }\n            }\n\n            return result;\n          }\n        }]);\n\n        return AES256Cipher;\n      }(AESBaseCipher);\n\n      exports.AES256Cipher = AES256Cipher;\n\n      var PDF17 = function PDF17Closure() {\n        function compareByteArrays(array1, array2) {\n          if (array1.length !== array2.length) {\n            return false;\n          }\n\n          for (var i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function PDF17() {}\n\n        PDF17.prototype = {\n          checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n            var hashData = new Uint8Array(password.length + 56);\n            hashData.set(password, 0);\n            hashData.set(ownerValidationSalt, password.length);\n            hashData.set(userBytes, password.length + ownerValidationSalt.length);\n            var result = calculateSHA256(hashData, 0, hashData.length);\n            return compareByteArrays(result, ownerPassword);\n          },\n          checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n            var hashData = new Uint8Array(password.length + 8);\n            hashData.set(password, 0);\n            hashData.set(userValidationSalt, password.length);\n            var result = calculateSHA256(hashData, 0, hashData.length);\n            return compareByteArrays(result, userPassword);\n          },\n          getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n            var hashData = new Uint8Array(password.length + 56);\n            hashData.set(password, 0);\n            hashData.set(ownerKeySalt, password.length);\n            hashData.set(userBytes, password.length + ownerKeySalt.length);\n            var key = calculateSHA256(hashData, 0, hashData.length);\n            var cipher = new AES256Cipher(key);\n            return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n          },\n          getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n            var hashData = new Uint8Array(password.length + 8);\n            hashData.set(password, 0);\n            hashData.set(userKeySalt, password.length);\n            var key = calculateSHA256(hashData, 0, hashData.length);\n            var cipher = new AES256Cipher(key);\n            return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n          }\n        };\n        return PDF17;\n      }();\n\n      exports.PDF17 = PDF17;\n\n      var PDF20 = function PDF20Closure() {\n        function concatArrays(array1, array2) {\n          var t = new Uint8Array(array1.length + array2.length);\n          t.set(array1, 0);\n          t.set(array2, array1.length);\n          return t;\n        }\n\n        function calculatePDF20Hash(password, input, userBytes) {\n          var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n          var e = [0];\n          var i = 0;\n\n          while (i < 64 || e[e.length - 1] > i - 32) {\n            var arrayLength = password.length + k.length + userBytes.length;\n            var k1 = new Uint8Array(arrayLength * 64);\n            var array = concatArrays(password, k);\n            array = concatArrays(array, userBytes);\n\n            for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n              k1.set(array, pos);\n            }\n\n            var cipher = new AES128Cipher(k.subarray(0, 16));\n            e = cipher.encrypt(k1, k.subarray(16, 32));\n            var remainder = 0;\n\n            for (var z = 0; z < 16; z++) {\n              remainder *= 256 % 3;\n              remainder %= 3;\n              remainder += (e[z] >>> 0) % 3;\n              remainder %= 3;\n            }\n\n            if (remainder === 0) {\n              k = calculateSHA256(e, 0, e.length);\n            } else if (remainder === 1) {\n              k = calculateSHA384(e, 0, e.length);\n            } else if (remainder === 2) {\n              k = calculateSHA512(e, 0, e.length);\n            }\n\n            i++;\n          }\n\n          return k.subarray(0, 32);\n        }\n\n        function PDF20() {}\n\n        function compareByteArrays(array1, array2) {\n          if (array1.length !== array2.length) {\n            return false;\n          }\n\n          for (var i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        PDF20.prototype = {\n          hash: function PDF20_hash(password, concatBytes, userBytes) {\n            return calculatePDF20Hash(password, concatBytes, userBytes);\n          },\n          checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n            var hashData = new Uint8Array(password.length + 56);\n            hashData.set(password, 0);\n            hashData.set(ownerValidationSalt, password.length);\n            hashData.set(userBytes, password.length + ownerValidationSalt.length);\n            var result = calculatePDF20Hash(password, hashData, userBytes);\n            return compareByteArrays(result, ownerPassword);\n          },\n          checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n            var hashData = new Uint8Array(password.length + 8);\n            hashData.set(password, 0);\n            hashData.set(userValidationSalt, password.length);\n            var result = calculatePDF20Hash(password, hashData, []);\n            return compareByteArrays(result, userPassword);\n          },\n          getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n            var hashData = new Uint8Array(password.length + 56);\n            hashData.set(password, 0);\n            hashData.set(ownerKeySalt, password.length);\n            hashData.set(userBytes, password.length + ownerKeySalt.length);\n            var key = calculatePDF20Hash(password, hashData, userBytes);\n            var cipher = new AES256Cipher(key);\n            return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n          },\n          getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n            var hashData = new Uint8Array(password.length + 8);\n            hashData.set(password, 0);\n            hashData.set(userKeySalt, password.length);\n            var key = calculatePDF20Hash(password, hashData, []);\n            var cipher = new AES256Cipher(key);\n            return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n          }\n        };\n        return PDF20;\n      }();\n\n      exports.PDF20 = PDF20;\n\n      var CipherTransform = function CipherTransformClosure() {\n        function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n          this.StringCipherConstructor = stringCipherConstructor;\n          this.StreamCipherConstructor = streamCipherConstructor;\n        }\n\n        CipherTransform.prototype = {\n          createStream: function CipherTransform_createStream(stream, length) {\n            var cipher = new this.StreamCipherConstructor();\n            return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n              return cipher.decryptBlock(data, finalize);\n            });\n          },\n          decryptString: function CipherTransform_decryptString(s) {\n            var cipher = new this.StringCipherConstructor();\n            var data = (0, _util.stringToBytes)(s);\n            data = cipher.decryptBlock(data, true);\n            return (0, _util.bytesToString)(data);\n          },\n          encryptString: function CipherTransform_encryptString(s) {\n            var cipher = new this.StringCipherConstructor();\n\n            if (cipher instanceof AESBaseCipher) {\n              var strLen = s.length;\n              var pad = 16 - strLen % 16;\n\n              if (pad !== 16) {\n                s = s.padEnd(16 * Math.ceil(strLen / 16), String.fromCharCode(pad));\n              }\n\n              var iv = new Uint8Array(16);\n\n              if (typeof crypto !== \"undefined\") {\n                crypto.getRandomValues(iv);\n              } else {\n                for (var i = 0; i < 16; i++) {\n                  iv[i] = Math.floor(256 * Math.random());\n                }\n              }\n\n              var _data = (0, _util.stringToBytes)(s);\n\n              _data = cipher.encrypt(_data, iv);\n              var buf = new Uint8Array(16 + _data.length);\n              buf.set(iv);\n              buf.set(_data, 16);\n              return (0, _util.bytesToString)(buf);\n            }\n\n            var data = (0, _util.stringToBytes)(s);\n            data = cipher.encrypt(data);\n            return (0, _util.bytesToString)(data);\n          }\n        };\n        return CipherTransform;\n      }();\n\n      var CipherTransformFactory = function CipherTransformFactoryClosure() {\n        var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n\n        function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n          if (password) {\n            var passwordLength = Math.min(127, password.length);\n            password = password.subarray(0, passwordLength);\n          } else {\n            password = [];\n          }\n\n          var pdfAlgorithm;\n\n          if (revision === 6) {\n            pdfAlgorithm = new PDF20();\n          } else {\n            pdfAlgorithm = new PDF17();\n          }\n\n          if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n            return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n          } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n            return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n          }\n\n          return null;\n        }\n\n        function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n          var hashDataSize = 40 + ownerPassword.length + fileId.length;\n          var hashData = new Uint8Array(hashDataSize),\n              i = 0,\n              j,\n              n;\n\n          if (password) {\n            n = Math.min(32, password.length);\n\n            for (; i < n; ++i) {\n              hashData[i] = password[i];\n            }\n          }\n\n          j = 0;\n\n          while (i < 32) {\n            hashData[i++] = defaultPasswordBytes[j++];\n          }\n\n          for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[j];\n          }\n\n          hashData[i++] = flags & 0xff;\n          hashData[i++] = flags >> 8 & 0xff;\n          hashData[i++] = flags >> 16 & 0xff;\n          hashData[i++] = flags >>> 24 & 0xff;\n\n          for (j = 0, n = fileId.length; j < n; ++j) {\n            hashData[i++] = fileId[j];\n          }\n\n          if (revision >= 4 && !encryptMetadata) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n          }\n\n          var hash = calculateMD5(hashData, 0, i);\n          var keyLengthInBytes = keyLength >> 3;\n\n          if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n              hash = calculateMD5(hash, 0, keyLengthInBytes);\n            }\n          }\n\n          var encryptionKey = hash.subarray(0, keyLengthInBytes);\n          var cipher, checkData;\n\n          if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n              hashData[i] = defaultPasswordBytes[i];\n            }\n\n            for (j = 0, n = fileId.length; j < n; ++j) {\n              hashData[i++] = fileId[j];\n            }\n\n            cipher = new ARCFourCipher(encryptionKey);\n            checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n),\n                k;\n\n            for (j = 1; j <= 19; ++j) {\n              for (k = 0; k < n; ++k) {\n                derivedKey[k] = encryptionKey[k] ^ j;\n              }\n\n              cipher = new ARCFourCipher(derivedKey);\n              checkData = cipher.encryptBlock(checkData);\n            }\n\n            for (j = 0, n = checkData.length; j < n; ++j) {\n              if (userPassword[j] !== checkData[j]) {\n                return null;\n              }\n            }\n          } else {\n            cipher = new ARCFourCipher(encryptionKey);\n            checkData = cipher.encryptBlock(defaultPasswordBytes);\n\n            for (j = 0, n = checkData.length; j < n; ++j) {\n              if (userPassword[j] !== checkData[j]) {\n                return null;\n              }\n            }\n          }\n\n          return encryptionKey;\n        }\n\n        function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n          var hashData = new Uint8Array(32),\n              i = 0,\n              j,\n              n;\n          n = Math.min(32, password.length);\n\n          for (; i < n; ++i) {\n            hashData[i] = password[i];\n          }\n\n          j = 0;\n\n          while (i < 32) {\n            hashData[i++] = defaultPasswordBytes[j++];\n          }\n\n          var hash = calculateMD5(hashData, 0, i);\n          var keyLengthInBytes = keyLength >> 3;\n\n          if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n              hash = calculateMD5(hash, 0, hash.length);\n            }\n          }\n\n          var cipher, userPassword;\n\n          if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes),\n                k;\n\n            for (j = 19; j >= 0; j--) {\n              for (k = 0; k < keyLengthInBytes; ++k) {\n                derivedKey[k] = hash[k] ^ j;\n              }\n\n              cipher = new ARCFourCipher(derivedKey);\n              userPassword = cipher.encryptBlock(userPassword);\n            }\n          } else {\n            cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher.encryptBlock(ownerPassword);\n          }\n\n          return userPassword;\n        }\n\n        var identityName = _primitives.Name.get(\"Identity\");\n\n        function CipherTransformFactory(dict, fileId, password) {\n          var filter = dict.get(\"Filter\");\n\n          if (!(0, _primitives.isName)(filter, \"Standard\")) {\n            throw new _util.FormatError(\"unknown encryption method\");\n          }\n\n          this.dict = dict;\n          var algorithm = dict.get(\"V\");\n\n          if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n            throw new _util.FormatError(\"unsupported encryption algorithm\");\n          }\n\n          this.algorithm = algorithm;\n          var keyLength = dict.get(\"Length\");\n\n          if (!keyLength) {\n            if (algorithm <= 3) {\n              keyLength = 40;\n            } else {\n              var cfDict = dict.get(\"CF\");\n              var streamCryptoName = dict.get(\"StmF\");\n\n              if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n                cfDict.suppressEncryption = true;\n                var handlerDict = cfDict.get(streamCryptoName.name);\n                keyLength = handlerDict && handlerDict.get(\"Length\") || 128;\n\n                if (keyLength < 40) {\n                  keyLength <<= 3;\n                }\n              }\n            }\n          }\n\n          if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new _util.FormatError(\"invalid key length\");\n          }\n\n          var ownerPassword = (0, _util.stringToBytes)(dict.get(\"O\")).subarray(0, 32);\n          var userPassword = (0, _util.stringToBytes)(dict.get(\"U\")).subarray(0, 32);\n          var flags = dict.get(\"P\");\n          var revision = dict.get(\"R\");\n          var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get(\"EncryptMetadata\") !== false;\n          this.encryptMetadata = encryptMetadata;\n          var fileIdBytes = (0, _util.stringToBytes)(fileId);\n          var passwordBytes;\n\n          if (password) {\n            if (revision === 6) {\n              try {\n                password = (0, _util.utf8StringToString)(password);\n              } catch (ex) {\n                (0, _util.warn)(\"CipherTransformFactory: \" + \"Unable to convert UTF8 encoded password.\");\n              }\n            }\n\n            passwordBytes = (0, _util.stringToBytes)(password);\n          }\n\n          var encryptionKey;\n\n          if (algorithm !== 5) {\n            encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n          } else {\n            var ownerValidationSalt = (0, _util.stringToBytes)(dict.get(\"O\")).subarray(32, 40);\n            var ownerKeySalt = (0, _util.stringToBytes)(dict.get(\"O\")).subarray(40, 48);\n            var uBytes = (0, _util.stringToBytes)(dict.get(\"U\")).subarray(0, 48);\n            var userValidationSalt = (0, _util.stringToBytes)(dict.get(\"U\")).subarray(32, 40);\n            var userKeySalt = (0, _util.stringToBytes)(dict.get(\"U\")).subarray(40, 48);\n            var ownerEncryption = (0, _util.stringToBytes)(dict.get(\"OE\"));\n            var userEncryption = (0, _util.stringToBytes)(dict.get(\"UE\"));\n            var perms = (0, _util.stringToBytes)(dict.get(\"Perms\"));\n            encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n          }\n\n          if (!encryptionKey && !password) {\n            throw new _util.PasswordException(\"No password given\", _util.PasswordResponses.NEED_PASSWORD);\n          } else if (!encryptionKey && password) {\n            var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n            encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n          }\n\n          if (!encryptionKey) {\n            throw new _util.PasswordException(\"Incorrect Password\", _util.PasswordResponses.INCORRECT_PASSWORD);\n          }\n\n          this.encryptionKey = encryptionKey;\n\n          if (algorithm >= 4) {\n            var cf = dict.get(\"CF\");\n\n            if ((0, _primitives.isDict)(cf)) {\n              cf.suppressEncryption = true;\n            }\n\n            this.cf = cf;\n            this.stmf = dict.get(\"StmF\") || identityName;\n            this.strf = dict.get(\"StrF\") || identityName;\n            this.eff = dict.get(\"EFF\") || this.stmf;\n          }\n        }\n\n        function buildObjectKey(num, gen, encryptionKey, isAes) {\n          var key = new Uint8Array(encryptionKey.length + 9),\n              i,\n              n;\n\n          for (i = 0, n = encryptionKey.length; i < n; ++i) {\n            key[i] = encryptionKey[i];\n          }\n\n          key[i++] = num & 0xff;\n          key[i++] = num >> 8 & 0xff;\n          key[i++] = num >> 16 & 0xff;\n          key[i++] = gen & 0xff;\n          key[i++] = gen >> 8 & 0xff;\n\n          if (isAes) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n          }\n\n          var hash = calculateMD5(key, 0, i);\n          return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n        }\n\n        function buildCipherConstructor(cf, name, num, gen, key) {\n          if (!(0, _primitives.isName)(name)) {\n            throw new _util.FormatError(\"Invalid crypt filter name.\");\n          }\n\n          var cryptFilter = cf.get(name.name);\n          var cfm;\n\n          if (cryptFilter !== null && cryptFilter !== undefined) {\n            cfm = cryptFilter.get(\"CFM\");\n          }\n\n          if (!cfm || cfm.name === \"None\") {\n            return function cipherTransformFactoryBuildCipherConstructorNone() {\n              return new NullCipher();\n            };\n          }\n\n          if (cfm.name === \"V2\") {\n            return function cipherTransformFactoryBuildCipherConstructorV2() {\n              return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n            };\n          }\n\n          if (cfm.name === \"AESV2\") {\n            return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n              return new AES128Cipher(buildObjectKey(num, gen, key, true));\n            };\n          }\n\n          if (cfm.name === \"AESV3\") {\n            return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n              return new AES256Cipher(key);\n            };\n          }\n\n          throw new _util.FormatError(\"Unknown crypto method\");\n        }\n\n        CipherTransformFactory.prototype = {\n          createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n            if (this.algorithm === 4 || this.algorithm === 5) {\n              return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n            }\n\n            var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\n            var cipherConstructor = function buildCipherCipherConstructor() {\n              return new ARCFourCipher(key);\n            };\n\n            return new CipherTransform(cipherConstructor, cipherConstructor);\n          }\n        };\n        return CipherTransformFactory;\n      }();\n\n      exports.CipherTransformFactory = CipherTransformFactory;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ColorSpace = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      function resizeRgbImage(src, dest, w1, h1, w2, h2, alpha01) {\n        var COMPONENTS = 3;\n        alpha01 = alpha01 !== 1 ? 0 : alpha01;\n        var xRatio = w1 / w2;\n        var yRatio = h1 / h2;\n        var newIndex = 0,\n            oldIndex;\n        var xScaled = new Uint16Array(w2);\n        var w1Scanline = w1 * COMPONENTS;\n\n        for (var i = 0; i < w2; i++) {\n          xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n        }\n\n        for (var _i17 = 0; _i17 < h2; _i17++) {\n          var py = Math.floor(_i17 * yRatio) * w1Scanline;\n\n          for (var j = 0; j < w2; j++) {\n            oldIndex = py + xScaled[j];\n            dest[newIndex++] = src[oldIndex++];\n            dest[newIndex++] = src[oldIndex++];\n            dest[newIndex++] = src[oldIndex++];\n            newIndex += alpha01;\n          }\n        }\n      }\n\n      var ColorSpace = /*#__PURE__*/function () {\n        function ColorSpace(name, numComps) {\n          _classCallCheck(this, ColorSpace);\n\n          if (this.constructor === ColorSpace) {\n            (0, _util.unreachable)(\"Cannot initialize ColorSpace.\");\n          }\n\n          this.name = name;\n          this.numComps = numComps;\n        }\n\n        _createClass(ColorSpace, [{\n          key: \"getRgb\",\n          value: function getRgb(src, srcOffset) {\n            var rgb = new Uint8ClampedArray(3);\n            this.getRgbItem(src, srcOffset, rgb, 0);\n            return rgb;\n          }\n        }, {\n          key: \"getRgbItem\",\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\n            (0, _util.unreachable)(\"Should not call ColorSpace.getRgbItem\");\n          }\n        }, {\n          key: \"getRgbBuffer\",\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n            (0, _util.unreachable)(\"Should not call ColorSpace.getRgbBuffer\");\n          }\n        }, {\n          key: \"getOutputLength\",\n          value: function getOutputLength(inputLength, alpha01) {\n            (0, _util.unreachable)(\"Should not call ColorSpace.getOutputLength\");\n          }\n        }, {\n          key: \"isPassthrough\",\n          value: function isPassthrough(bits) {\n            return false;\n          }\n        }, {\n          key: \"isDefaultDecode\",\n          value: function isDefaultDecode(decodeMap, bpc) {\n            return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n          }\n        }, {\n          key: \"fillRgb\",\n          value: function fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n            var count = originalWidth * originalHeight;\n            var rgbBuf = null;\n            var numComponentColors = 1 << bpc;\n            var needsResizing = originalHeight !== height || originalWidth !== width;\n\n            if (this.isPassthrough(bpc)) {\n              rgbBuf = comps;\n            } else if (this.numComps === 1 && count > numComponentColors && this.name !== \"DeviceGray\" && this.name !== \"DeviceRGB\") {\n              var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\n              for (var i = 0; i < numComponentColors; i++) {\n                allColors[i] = i;\n              }\n\n              var colorMap = new Uint8ClampedArray(numComponentColors * 3);\n              this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\n              if (!needsResizing) {\n                var destPos = 0;\n\n                for (var _i18 = 0; _i18 < count; ++_i18) {\n                  var key = comps[_i18] * 3;\n                  dest[destPos++] = colorMap[key];\n                  dest[destPos++] = colorMap[key + 1];\n                  dest[destPos++] = colorMap[key + 2];\n                  destPos += alpha01;\n                }\n              } else {\n                rgbBuf = new Uint8Array(count * 3);\n                var rgbPos = 0;\n\n                for (var _i19 = 0; _i19 < count; ++_i19) {\n                  var _key3 = comps[_i19] * 3;\n\n                  rgbBuf[rgbPos++] = colorMap[_key3];\n                  rgbBuf[rgbPos++] = colorMap[_key3 + 1];\n                  rgbBuf[rgbPos++] = colorMap[_key3 + 2];\n                }\n              }\n            } else {\n              if (!needsResizing) {\n                this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n              } else {\n                rgbBuf = new Uint8ClampedArray(count * 3);\n                this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n              }\n            }\n\n            if (rgbBuf) {\n              if (needsResizing) {\n                resizeRgbImage(rgbBuf, dest, originalWidth, originalHeight, width, height, alpha01);\n              } else {\n                var _destPos = 0,\n                    _rgbPos = 0;\n\n                for (var _i20 = 0, ii = width * actualHeight; _i20 < ii; _i20++) {\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\n                  dest[_destPos++] = rgbBuf[_rgbPos++];\n                  _destPos += alpha01;\n                }\n              }\n            }\n          }\n        }, {\n          key: \"usesZeroToOneRange\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"usesZeroToOneRange\", true);\n          }\n        }], [{\n          key: \"_cache\",\n          value: function _cache(cacheKey, xref, localColorSpaceCache, parsedColorSpace) {\n            if (!localColorSpaceCache) {\n              throw new Error('ColorSpace._cache - expected \"localColorSpaceCache\" argument.');\n            }\n\n            if (!parsedColorSpace) {\n              throw new Error('ColorSpace._cache - expected \"parsedColorSpace\" argument.');\n            }\n\n            var csName, csRef;\n\n            if (cacheKey instanceof _primitives.Ref) {\n              csRef = cacheKey;\n              cacheKey = xref.fetch(cacheKey);\n            }\n\n            if (cacheKey instanceof _primitives.Name) {\n              csName = cacheKey.name;\n            }\n\n            if (csName || csRef) {\n              localColorSpaceCache.set(csName, csRef, parsedColorSpace);\n            }\n          }\n        }, {\n          key: \"getCached\",\n          value: function getCached(cacheKey, xref, localColorSpaceCache) {\n            if (!localColorSpaceCache) {\n              throw new Error('ColorSpace.getCached - expected \"localColorSpaceCache\" argument.');\n            }\n\n            if (cacheKey instanceof _primitives.Ref) {\n              var localColorSpace = localColorSpaceCache.getByRef(cacheKey);\n\n              if (localColorSpace) {\n                return localColorSpace;\n              }\n\n              try {\n                cacheKey = xref.fetch(cacheKey);\n              } catch (ex) {\n                if (ex instanceof _core_utils.MissingDataException) {\n                  throw ex;\n                }\n              }\n            }\n\n            if (cacheKey instanceof _primitives.Name) {\n              var _localColorSpace = localColorSpaceCache.getByName(cacheKey.name);\n\n              if (_localColorSpace) {\n                return _localColorSpace;\n              }\n            }\n\n            return null;\n          }\n        }, {\n          key: \"parseAsync\",\n          value: function () {\n            var _parseAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_ref28) {\n              var cs, xref, _ref28$resources, resources, pdfFunctionFactory, localColorSpaceCache, parsedColorSpace;\n\n              return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                while (1) {\n                  switch (_context12.prev = _context12.next) {\n                    case 0:\n                      cs = _ref28.cs, xref = _ref28.xref, _ref28$resources = _ref28.resources, resources = _ref28$resources === void 0 ? null : _ref28$resources, pdfFunctionFactory = _ref28.pdfFunctionFactory, localColorSpaceCache = _ref28.localColorSpaceCache;\n                      parsedColorSpace = this._parse(cs, xref, resources, pdfFunctionFactory);\n\n                      this._cache(cs, xref, localColorSpaceCache, parsedColorSpace);\n\n                      return _context12.abrupt(\"return\", parsedColorSpace);\n\n                    case 4:\n                    case \"end\":\n                      return _context12.stop();\n                  }\n                }\n              }, _callee12, this);\n            }));\n\n            function parseAsync(_x12) {\n              return _parseAsync.apply(this, arguments);\n            }\n\n            return parseAsync;\n          }()\n        }, {\n          key: \"parse\",\n          value: function parse(_ref29) {\n            var cs = _ref29.cs,\n                xref = _ref29.xref,\n                _ref29$resources = _ref29.resources,\n                resources = _ref29$resources === void 0 ? null : _ref29$resources,\n                pdfFunctionFactory = _ref29.pdfFunctionFactory,\n                localColorSpaceCache = _ref29.localColorSpaceCache;\n            var cachedColorSpace = this.getCached(cs, xref, localColorSpaceCache);\n\n            if (cachedColorSpace) {\n              return cachedColorSpace;\n            }\n\n            var parsedColorSpace = this._parse(cs, xref, resources, pdfFunctionFactory);\n\n            this._cache(cs, xref, localColorSpaceCache, parsedColorSpace);\n\n            return parsedColorSpace;\n          }\n        }, {\n          key: \"_parse\",\n          value: function _parse(cs, xref) {\n            var resources = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var pdfFunctionFactory = arguments.length > 3 ? arguments[3] : undefined;\n            cs = xref.fetchIfRef(cs);\n\n            if ((0, _primitives.isName)(cs)) {\n              switch (cs.name) {\n                case \"DeviceGray\":\n                case \"G\":\n                  return this.singletons.gray;\n\n                case \"DeviceRGB\":\n                case \"RGB\":\n                  return this.singletons.rgb;\n\n                case \"DeviceCMYK\":\n                case \"CMYK\":\n                  return this.singletons.cmyk;\n\n                case \"Pattern\":\n                  return new PatternCS(null);\n\n                default:\n                  if ((0, _primitives.isDict)(resources)) {\n                    var colorSpaces = resources.get(\"ColorSpace\");\n\n                    if ((0, _primitives.isDict)(colorSpaces)) {\n                      var resourcesCS = colorSpaces.get(cs.name);\n\n                      if (resourcesCS) {\n                        if ((0, _primitives.isName)(resourcesCS)) {\n                          return this._parse(resourcesCS, xref, resources, pdfFunctionFactory);\n                        }\n\n                        cs = resourcesCS;\n                        break;\n                      }\n                    }\n                  }\n\n                  throw new _util.FormatError(\"Unrecognized ColorSpace: \".concat(cs.name));\n              }\n            }\n\n            if (Array.isArray(cs)) {\n              var mode = xref.fetchIfRef(cs[0]).name;\n              var params, numComps, baseCS, whitePoint, blackPoint, gamma;\n\n              switch (mode) {\n                case \"DeviceGray\":\n                case \"G\":\n                  return this.singletons.gray;\n\n                case \"DeviceRGB\":\n                case \"RGB\":\n                  return this.singletons.rgb;\n\n                case \"DeviceCMYK\":\n                case \"CMYK\":\n                  return this.singletons.cmyk;\n\n                case \"CalGray\":\n                  params = xref.fetchIfRef(cs[1]);\n                  whitePoint = params.getArray(\"WhitePoint\");\n                  blackPoint = params.getArray(\"BlackPoint\");\n                  gamma = params.get(\"Gamma\");\n                  return new CalGrayCS(whitePoint, blackPoint, gamma);\n\n                case \"CalRGB\":\n                  params = xref.fetchIfRef(cs[1]);\n                  whitePoint = params.getArray(\"WhitePoint\");\n                  blackPoint = params.getArray(\"BlackPoint\");\n                  gamma = params.getArray(\"Gamma\");\n                  var matrix = params.getArray(\"Matrix\");\n                  return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\n                case \"ICCBased\":\n                  var stream = xref.fetchIfRef(cs[1]);\n                  var dict = stream.dict;\n                  numComps = dict.get(\"N\");\n                  var alt = dict.get(\"Alternate\");\n\n                  if (alt) {\n                    var altCS = this._parse(alt, xref, resources, pdfFunctionFactory);\n\n                    if (altCS.numComps === numComps) {\n                      return altCS;\n                    }\n\n                    (0, _util.warn)(\"ICCBased color space: Ignoring incorrect /Alternate entry.\");\n                  }\n\n                  if (numComps === 1) {\n                    return this.singletons.gray;\n                  } else if (numComps === 3) {\n                    return this.singletons.rgb;\n                  } else if (numComps === 4) {\n                    return this.singletons.cmyk;\n                  }\n\n                  break;\n\n                case \"Pattern\":\n                  baseCS = cs[1] || null;\n\n                  if (baseCS) {\n                    baseCS = this._parse(baseCS, xref, resources, pdfFunctionFactory);\n                  }\n\n                  return new PatternCS(baseCS);\n\n                case \"Indexed\":\n                case \"I\":\n                  baseCS = this._parse(cs[1], xref, resources, pdfFunctionFactory);\n                  var hiVal = xref.fetchIfRef(cs[2]) + 1;\n                  var lookup = xref.fetchIfRef(cs[3]);\n                  return new IndexedCS(baseCS, hiVal, lookup);\n\n                case \"Separation\":\n                case \"DeviceN\":\n                  var name = xref.fetchIfRef(cs[1]);\n                  numComps = Array.isArray(name) ? name.length : 1;\n                  baseCS = this._parse(cs[2], xref, resources, pdfFunctionFactory);\n                  var tintFn = pdfFunctionFactory.create(cs[3]);\n                  return new AlternateCS(numComps, baseCS, tintFn);\n\n                case \"Lab\":\n                  params = xref.fetchIfRef(cs[1]);\n                  whitePoint = params.getArray(\"WhitePoint\");\n                  blackPoint = params.getArray(\"BlackPoint\");\n                  var range = params.getArray(\"Range\");\n                  return new LabCS(whitePoint, blackPoint, range);\n\n                default:\n                  throw new _util.FormatError(\"Unimplemented ColorSpace object: \".concat(mode));\n              }\n            }\n\n            throw new _util.FormatError(\"Unrecognized ColorSpace object: \".concat(cs));\n          }\n        }, {\n          key: \"isDefaultDecode\",\n          value: function isDefaultDecode(decode, numComps) {\n            if (!Array.isArray(decode)) {\n              return true;\n            }\n\n            if (numComps * 2 !== decode.length) {\n              (0, _util.warn)(\"The decode map is not the correct length\");\n              return true;\n            }\n\n            for (var i = 0, ii = decode.length; i < ii; i += 2) {\n              if (decode[i] !== 0 || decode[i + 1] !== 1) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n        }, {\n          key: \"singletons\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"singletons\", {\n              get gray() {\n                return (0, _util.shadow)(this, \"gray\", new DeviceGrayCS());\n              },\n\n              get rgb() {\n                return (0, _util.shadow)(this, \"rgb\", new DeviceRgbCS());\n              },\n\n              get cmyk() {\n                return (0, _util.shadow)(this, \"cmyk\", new DeviceCmykCS());\n              }\n\n            });\n          }\n        }]);\n\n        return ColorSpace;\n      }();\n\n      exports.ColorSpace = ColorSpace;\n\n      var AlternateCS = /*#__PURE__*/function (_ColorSpace) {\n        _inherits(AlternateCS, _ColorSpace);\n\n        var _super23 = _createSuper(AlternateCS);\n\n        function AlternateCS(numComps, base, tintFn) {\n          var _this26;\n\n          _classCallCheck(this, AlternateCS);\n\n          _this26 = _super23.call(this, \"Alternate\", numComps);\n          _this26.base = base;\n          _this26.tintFn = tintFn;\n          _this26.tmpBuf = new Float32Array(base.numComps);\n          return _this26;\n        }\n\n        _createClass(AlternateCS, [{\n          key: \"getRgbItem\",\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\n            var tmpBuf = this.tmpBuf;\n            this.tintFn(src, srcOffset, tmpBuf, 0);\n            this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n          }\n        }, {\n          key: \"getRgbBuffer\",\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n            var tintFn = this.tintFn;\n            var base = this.base;\n            var scale = 1 / ((1 << bits) - 1);\n            var baseNumComps = base.numComps;\n            var usesZeroToOneRange = base.usesZeroToOneRange;\n            var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n            var pos = isPassthrough ? destOffset : 0;\n            var baseBuf = isPassthrough ? dest : new Uint8ClampedArray(baseNumComps * count);\n            var numComps = this.numComps;\n            var scaled = new Float32Array(numComps);\n            var tinted = new Float32Array(baseNumComps);\n            var i, j;\n\n            for (i = 0; i < count; i++) {\n              for (j = 0; j < numComps; j++) {\n                scaled[j] = src[srcOffset++] * scale;\n              }\n\n              tintFn(scaled, 0, tinted, 0);\n\n              if (usesZeroToOneRange) {\n                for (j = 0; j < baseNumComps; j++) {\n                  baseBuf[pos++] = tinted[j] * 255;\n                }\n              } else {\n                base.getRgbItem(tinted, 0, baseBuf, pos);\n                pos += baseNumComps;\n              }\n            }\n\n            if (!isPassthrough) {\n              base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n            }\n          }\n        }, {\n          key: \"getOutputLength\",\n          value: function getOutputLength(inputLength, alpha01) {\n            return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n          }\n        }]);\n\n        return AlternateCS;\n      }(ColorSpace);\n\n      var PatternCS = /*#__PURE__*/function (_ColorSpace2) {\n        _inherits(PatternCS, _ColorSpace2);\n\n        var _super24 = _createSuper(PatternCS);\n\n        function PatternCS(baseCS) {\n          var _this27;\n\n          _classCallCheck(this, PatternCS);\n\n          _this27 = _super24.call(this, \"Pattern\", null);\n          _this27.base = baseCS;\n          return _this27;\n        }\n\n        _createClass(PatternCS, [{\n          key: \"isDefaultDecode\",\n          value: function isDefaultDecode(decodeMap, bpc) {\n            (0, _util.unreachable)(\"Should not call PatternCS.isDefaultDecode\");\n          }\n        }]);\n\n        return PatternCS;\n      }(ColorSpace);\n\n      var IndexedCS = /*#__PURE__*/function (_ColorSpace3) {\n        _inherits(IndexedCS, _ColorSpace3);\n\n        var _super25 = _createSuper(IndexedCS);\n\n        function IndexedCS(base, highVal, lookup) {\n          var _this28;\n\n          _classCallCheck(this, IndexedCS);\n\n          _this28 = _super25.call(this, \"Indexed\", 1);\n          _this28.base = base;\n          _this28.highVal = highVal;\n          var length = base.numComps * highVal;\n          _this28.lookup = new Uint8Array(length);\n\n          if ((0, _primitives.isStream)(lookup)) {\n            var bytes = lookup.getBytes(length);\n\n            _this28.lookup.set(bytes);\n          } else if (typeof lookup === \"string\") {\n            for (var i = 0; i < length; ++i) {\n              _this28.lookup[i] = lookup.charCodeAt(i) & 0xff;\n            }\n          } else {\n            throw new _util.FormatError(\"IndexedCS - unrecognized lookup table: \".concat(lookup));\n          }\n\n          return _this28;\n        }\n\n        _createClass(IndexedCS, [{\n          key: \"getRgbItem\",\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\n            var numComps = this.base.numComps;\n            var start = src[srcOffset] * numComps;\n            this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n          }\n        }, {\n          key: \"getRgbBuffer\",\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n            var base = this.base;\n            var numComps = base.numComps;\n            var outputDelta = base.getOutputLength(numComps, alpha01);\n            var lookup = this.lookup;\n\n            for (var i = 0; i < count; ++i) {\n              var lookupPos = src[srcOffset++] * numComps;\n              base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n              destOffset += outputDelta;\n            }\n          }\n        }, {\n          key: \"getOutputLength\",\n          value: function getOutputLength(inputLength, alpha01) {\n            return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n          }\n        }, {\n          key: \"isDefaultDecode\",\n          value: function isDefaultDecode(decodeMap, bpc) {\n            if (!Array.isArray(decodeMap)) {\n              return true;\n            }\n\n            if (decodeMap.length !== 2) {\n              (0, _util.warn)(\"Decode map length is not correct\");\n              return true;\n            }\n\n            if (!Number.isInteger(bpc) || bpc < 1) {\n              (0, _util.warn)(\"Bits per component is not correct\");\n              return true;\n            }\n\n            return decodeMap[0] === 0 && decodeMap[1] === (1 << bpc) - 1;\n          }\n        }]);\n\n        return IndexedCS;\n      }(ColorSpace);\n\n      var DeviceGrayCS = /*#__PURE__*/function (_ColorSpace4) {\n        _inherits(DeviceGrayCS, _ColorSpace4);\n\n        var _super26 = _createSuper(DeviceGrayCS);\n\n        function DeviceGrayCS() {\n          _classCallCheck(this, DeviceGrayCS);\n\n          return _super26.call(this, \"DeviceGray\", 1);\n        }\n\n        _createClass(DeviceGrayCS, [{\n          key: \"getRgbItem\",\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\n            var c = src[srcOffset] * 255;\n            dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n          }\n        }, {\n          key: \"getRgbBuffer\",\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n            var scale = 255 / ((1 << bits) - 1);\n            var j = srcOffset,\n                q = destOffset;\n\n            for (var i = 0; i < count; ++i) {\n              var c = scale * src[j++];\n              dest[q++] = c;\n              dest[q++] = c;\n              dest[q++] = c;\n              q += alpha01;\n            }\n          }\n        }, {\n          key: \"getOutputLength\",\n          value: function getOutputLength(inputLength, alpha01) {\n            return inputLength * (3 + alpha01);\n          }\n        }]);\n\n        return DeviceGrayCS;\n      }(ColorSpace);\n\n      var DeviceRgbCS = /*#__PURE__*/function (_ColorSpace5) {\n        _inherits(DeviceRgbCS, _ColorSpace5);\n\n        var _super27 = _createSuper(DeviceRgbCS);\n\n        function DeviceRgbCS() {\n          _classCallCheck(this, DeviceRgbCS);\n\n          return _super27.call(this, \"DeviceRGB\", 3);\n        }\n\n        _createClass(DeviceRgbCS, [{\n          key: \"getRgbItem\",\n          value: function getRgbItem(src, srcOffset, dest, destOffset) {\n            dest[destOffset] = src[srcOffset] * 255;\n            dest[destOffset + 1] = src[srcOffset + 1] * 255;\n            dest[destOffset + 2] = src[srcOffset + 2] * 255;\n          }\n        }, {\n          key: \"getRgbBuffer\",\n          value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n            if (bits === 8 && alpha01 === 0) {\n              dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n              return;\n            }\n\n            var scale = 255 / ((1 << bits) - 1);\n            var j = srcOffset,\n                q = destOffset;\n\n            for (var i = 0; i < count; ++i) {\n              dest[q++] = scale * src[j++];\n              dest[q++] = scale * src[j++];\n              dest[q++] = scale * src[j++];\n              q += alpha01;\n            }\n          }\n        }, {\n          key: \"getOutputLength\",\n          value: function getOutputLength(inputLength, alpha01) {\n            return inputLength * (3 + alpha01) / 3 | 0;\n          }\n        }, {\n          key: \"isPassthrough\",\n          value: function isPassthrough(bits) {\n            return bits === 8;\n          }\n        }]);\n\n        return DeviceRgbCS;\n      }(ColorSpace);\n\n      var DeviceCmykCS = function DeviceCmykCSClosure() {\n        function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n          var c = src[srcOffset] * srcScale;\n          var m = src[srcOffset + 1] * srcScale;\n          var y = src[srcOffset + 2] * srcScale;\n          var k = src[srcOffset + 3] * srcScale;\n          dest[destOffset] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747);\n          dest[destOffset + 1] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578);\n          dest[destOffset + 2] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367);\n        }\n\n        var DeviceCmykCS = /*#__PURE__*/function (_ColorSpace6) {\n          _inherits(DeviceCmykCS, _ColorSpace6);\n\n          var _super28 = _createSuper(DeviceCmykCS);\n\n          function DeviceCmykCS() {\n            _classCallCheck(this, DeviceCmykCS);\n\n            return _super28.call(this, \"DeviceCMYK\", 4);\n          }\n\n          _createClass(DeviceCmykCS, [{\n            key: \"getRgbItem\",\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\n              convertToRgb(src, srcOffset, 1, dest, destOffset);\n            }\n          }, {\n            key: \"getRgbBuffer\",\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n              var scale = 1 / ((1 << bits) - 1);\n\n              for (var i = 0; i < count; i++) {\n                convertToRgb(src, srcOffset, scale, dest, destOffset);\n                srcOffset += 4;\n                destOffset += 3 + alpha01;\n              }\n            }\n          }, {\n            key: \"getOutputLength\",\n            value: function getOutputLength(inputLength, alpha01) {\n              return inputLength / 4 * (3 + alpha01) | 0;\n            }\n          }]);\n\n          return DeviceCmykCS;\n        }(ColorSpace);\n\n        return DeviceCmykCS;\n      }();\n\n      var CalGrayCS = function CalGrayCSClosure() {\n        function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n          var A = src[srcOffset] * scale;\n          var AG = Math.pow(A, cs.G);\n          var L = cs.YW * AG;\n          var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0);\n          dest[destOffset] = val;\n          dest[destOffset + 1] = val;\n          dest[destOffset + 2] = val;\n        }\n\n        var CalGrayCS = /*#__PURE__*/function (_ColorSpace7) {\n          _inherits(CalGrayCS, _ColorSpace7);\n\n          var _super29 = _createSuper(CalGrayCS);\n\n          function CalGrayCS(whitePoint, blackPoint, gamma) {\n            var _this29;\n\n            _classCallCheck(this, CalGrayCS);\n\n            _this29 = _super29.call(this, \"CalGray\", 1);\n\n            if (!whitePoint) {\n              throw new _util.FormatError(\"WhitePoint missing - required for color space CalGray\");\n            }\n\n            blackPoint = blackPoint || [0, 0, 0];\n            gamma = gamma || 1;\n            _this29.XW = whitePoint[0];\n            _this29.YW = whitePoint[1];\n            _this29.ZW = whitePoint[2];\n            _this29.XB = blackPoint[0];\n            _this29.YB = blackPoint[1];\n            _this29.ZB = blackPoint[2];\n            _this29.G = gamma;\n\n            if (_this29.XW < 0 || _this29.ZW < 0 || _this29.YW !== 1) {\n              throw new _util.FormatError(\"Invalid WhitePoint components for \".concat(_this29.name) + \", no fallback available\");\n            }\n\n            if (_this29.XB < 0 || _this29.YB < 0 || _this29.ZB < 0) {\n              (0, _util.info)(\"Invalid BlackPoint for \".concat(_this29.name, \", falling back to default.\"));\n              _this29.XB = _this29.YB = _this29.ZB = 0;\n            }\n\n            if (_this29.XB !== 0 || _this29.YB !== 0 || _this29.ZB !== 0) {\n              (0, _util.warn)(\"\".concat(_this29.name, \", BlackPoint: XB: \").concat(_this29.XB, \", YB: \").concat(_this29.YB, \", \") + \"ZB: \".concat(_this29.ZB, \", only default values are supported.\"));\n            }\n\n            if (_this29.G < 1) {\n              (0, _util.info)(\"Invalid Gamma: \".concat(_this29.G, \" for \").concat(_this29.name, \", \") + \"falling back to default.\");\n              _this29.G = 1;\n            }\n\n            return _this29;\n          }\n\n          _createClass(CalGrayCS, [{\n            key: \"getRgbItem\",\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\n              convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n            }\n          }, {\n            key: \"getRgbBuffer\",\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n              var scale = 1 / ((1 << bits) - 1);\n\n              for (var i = 0; i < count; ++i) {\n                convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n                srcOffset += 1;\n                destOffset += 3 + alpha01;\n              }\n            }\n          }, {\n            key: \"getOutputLength\",\n            value: function getOutputLength(inputLength, alpha01) {\n              return inputLength * (3 + alpha01);\n            }\n          }]);\n\n          return CalGrayCS;\n        }(ColorSpace);\n\n        return CalGrayCS;\n      }();\n\n      var CalRGBCS = function CalRGBCSClosure() {\n        var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n        var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n        var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n        var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n        var tempNormalizeMatrix = new Float32Array(3);\n        var tempConvertMatrix1 = new Float32Array(3);\n        var tempConvertMatrix2 = new Float32Array(3);\n        var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\n        function matrixProduct(a, b, result) {\n          result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n          result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n          result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n        }\n\n        function convertToFlat(sourceWhitePoint, LMS, result) {\n          result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n          result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n          result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n        }\n\n        function convertToD65(sourceWhitePoint, LMS, result) {\n          var D65X = 0.95047;\n          var D65Y = 1;\n          var D65Z = 1.08883;\n          result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n          result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n          result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n        }\n\n        function sRGBTransferFunction(color) {\n          if (color <= 0.0031308) {\n            return adjustToRange(0, 1, 12.92 * color);\n          }\n\n          if (color >= 0.99554525) {\n            return 1;\n          }\n\n          return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n        }\n\n        function adjustToRange(min, max, value) {\n          return Math.max(min, Math.min(max, value));\n        }\n\n        function decodeL(L) {\n          if (L < 0) {\n            return -decodeL(-L);\n          }\n\n          if (L > 8.0) {\n            return Math.pow((L + 16) / 116, 3);\n          }\n\n          return L * DECODE_L_CONSTANT;\n        }\n\n        function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n          if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n            result[0] = XYZ_Flat[0];\n            result[1] = XYZ_Flat[1];\n            result[2] = XYZ_Flat[2];\n            return;\n          }\n\n          var zeroDecodeL = decodeL(0);\n          var X_DST = zeroDecodeL;\n          var X_SRC = decodeL(sourceBlackPoint[0]);\n          var Y_DST = zeroDecodeL;\n          var Y_SRC = decodeL(sourceBlackPoint[1]);\n          var Z_DST = zeroDecodeL;\n          var Z_SRC = decodeL(sourceBlackPoint[2]);\n          var X_Scale = (1 - X_DST) / (1 - X_SRC);\n          var X_Offset = 1 - X_Scale;\n          var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n          var Y_Offset = 1 - Y_Scale;\n          var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n          var Z_Offset = 1 - Z_Scale;\n          result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n          result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n          result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n        }\n\n        function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n          if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n            result[0] = XYZ_In[0];\n            result[1] = XYZ_In[1];\n            result[2] = XYZ_In[2];\n            return;\n          }\n\n          var LMS = result;\n          matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n          var LMS_Flat = tempNormalizeMatrix;\n          convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n          matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n        }\n\n        function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n          var LMS = result;\n          matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n          var LMS_D65 = tempNormalizeMatrix;\n          convertToD65(sourceWhitePoint, LMS, LMS_D65);\n          matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n        }\n\n        function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n          var A = adjustToRange(0, 1, src[srcOffset] * scale);\n          var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n          var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n          var AGR = A === 1 ? 1 : Math.pow(A, cs.GR);\n          var BGG = B === 1 ? 1 : Math.pow(B, cs.GG);\n          var CGB = C === 1 ? 1 : Math.pow(C, cs.GB);\n          var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n          var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n          var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n          var XYZ = tempConvertMatrix1;\n          XYZ[0] = X;\n          XYZ[1] = Y;\n          XYZ[2] = Z;\n          var XYZ_Flat = tempConvertMatrix2;\n          normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n          var XYZ_Black = tempConvertMatrix1;\n          compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n          var XYZ_D65 = tempConvertMatrix2;\n          normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n          var SRGB = tempConvertMatrix1;\n          matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n          dest[destOffset] = sRGBTransferFunction(SRGB[0]) * 255;\n          dest[destOffset + 1] = sRGBTransferFunction(SRGB[1]) * 255;\n          dest[destOffset + 2] = sRGBTransferFunction(SRGB[2]) * 255;\n        }\n\n        var CalRGBCS = /*#__PURE__*/function (_ColorSpace8) {\n          _inherits(CalRGBCS, _ColorSpace8);\n\n          var _super30 = _createSuper(CalRGBCS);\n\n          function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n            var _this30;\n\n            _classCallCheck(this, CalRGBCS);\n\n            _this30 = _super30.call(this, \"CalRGB\", 3);\n\n            if (!whitePoint) {\n              throw new _util.FormatError(\"WhitePoint missing - required for color space CalRGB\");\n            }\n\n            blackPoint = blackPoint || new Float32Array(3);\n            gamma = gamma || new Float32Array([1, 1, 1]);\n            matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n            var XW = whitePoint[0];\n            var YW = whitePoint[1];\n            var ZW = whitePoint[2];\n            _this30.whitePoint = whitePoint;\n            var XB = blackPoint[0];\n            var YB = blackPoint[1];\n            var ZB = blackPoint[2];\n            _this30.blackPoint = blackPoint;\n            _this30.GR = gamma[0];\n            _this30.GG = gamma[1];\n            _this30.GB = gamma[2];\n            _this30.MXA = matrix[0];\n            _this30.MYA = matrix[1];\n            _this30.MZA = matrix[2];\n            _this30.MXB = matrix[3];\n            _this30.MYB = matrix[4];\n            _this30.MZB = matrix[5];\n            _this30.MXC = matrix[6];\n            _this30.MYC = matrix[7];\n            _this30.MZC = matrix[8];\n\n            if (XW < 0 || ZW < 0 || YW !== 1) {\n              throw new _util.FormatError(\"Invalid WhitePoint components for \".concat(_this30.name) + \", no fallback available\");\n            }\n\n            if (XB < 0 || YB < 0 || ZB < 0) {\n              (0, _util.info)(\"Invalid BlackPoint for \".concat(_this30.name, \" [\").concat(XB, \", \").concat(YB, \", \").concat(ZB, \"], \") + \"falling back to default.\");\n              _this30.blackPoint = new Float32Array(3);\n            }\n\n            if (_this30.GR < 0 || _this30.GG < 0 || _this30.GB < 0) {\n              (0, _util.info)(\"Invalid Gamma [\".concat(_this30.GR, \", \").concat(_this30.GG, \", \").concat(_this30.GB, \"] for \") + \"\".concat(_this30.name, \", falling back to default.\"));\n              _this30.GR = _this30.GG = _this30.GB = 1;\n            }\n\n            return _this30;\n          }\n\n          _createClass(CalRGBCS, [{\n            key: \"getRgbItem\",\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\n              convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n            }\n          }, {\n            key: \"getRgbBuffer\",\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n              var scale = 1 / ((1 << bits) - 1);\n\n              for (var i = 0; i < count; ++i) {\n                convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n                srcOffset += 3;\n                destOffset += 3 + alpha01;\n              }\n            }\n          }, {\n            key: \"getOutputLength\",\n            value: function getOutputLength(inputLength, alpha01) {\n              return inputLength * (3 + alpha01) / 3 | 0;\n            }\n          }]);\n\n          return CalRGBCS;\n        }(ColorSpace);\n\n        return CalRGBCS;\n      }();\n\n      var LabCS = function LabCSClosure() {\n        function fn_g(x) {\n          var result;\n\n          if (x >= 6 / 29) {\n            result = x * x * x;\n          } else {\n            result = 108 / 841 * (x - 4 / 29);\n          }\n\n          return result;\n        }\n\n        function decode(value, high1, low2, high2) {\n          return low2 + value * (high2 - low2) / high1;\n        }\n\n        function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n          var Ls = src[srcOffset];\n          var as = src[srcOffset + 1];\n          var bs = src[srcOffset + 2];\n\n          if (maxVal !== false) {\n            Ls = decode(Ls, maxVal, 0, 100);\n            as = decode(as, maxVal, cs.amin, cs.amax);\n            bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n          }\n\n          if (as > cs.amax) {\n            as = cs.amax;\n          } else if (as < cs.amin) {\n            as = cs.amin;\n          }\n\n          if (bs > cs.bmax) {\n            bs = cs.bmax;\n          } else if (bs < cs.bmin) {\n            bs = cs.bmin;\n          }\n\n          var M = (Ls + 16) / 116;\n          var L = M + as / 500;\n          var N = M - bs / 200;\n          var X = cs.XW * fn_g(L);\n          var Y = cs.YW * fn_g(M);\n          var Z = cs.ZW * fn_g(N);\n          var r, g, b;\n\n          if (cs.ZW < 1) {\n            r = X * 3.1339 + Y * -1.617 + Z * -0.4906;\n            g = X * -0.9785 + Y * 1.916 + Z * 0.0333;\n            b = X * 0.072 + Y * -0.229 + Z * 1.4057;\n          } else {\n            r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n            g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n            b = X * 0.0557 + Y * -0.204 + Z * 1.057;\n          }\n\n          dest[destOffset] = Math.sqrt(r) * 255;\n          dest[destOffset + 1] = Math.sqrt(g) * 255;\n          dest[destOffset + 2] = Math.sqrt(b) * 255;\n        }\n\n        var LabCS = /*#__PURE__*/function (_ColorSpace9) {\n          _inherits(LabCS, _ColorSpace9);\n\n          var _super31 = _createSuper(LabCS);\n\n          function LabCS(whitePoint, blackPoint, range) {\n            var _this31;\n\n            _classCallCheck(this, LabCS);\n\n            _this31 = _super31.call(this, \"Lab\", 3);\n\n            if (!whitePoint) {\n              throw new _util.FormatError(\"WhitePoint missing - required for color space Lab\");\n            }\n\n            blackPoint = blackPoint || [0, 0, 0];\n            range = range || [-100, 100, -100, 100];\n            _this31.XW = whitePoint[0];\n            _this31.YW = whitePoint[1];\n            _this31.ZW = whitePoint[2];\n            _this31.amin = range[0];\n            _this31.amax = range[1];\n            _this31.bmin = range[2];\n            _this31.bmax = range[3];\n            _this31.XB = blackPoint[0];\n            _this31.YB = blackPoint[1];\n            _this31.ZB = blackPoint[2];\n\n            if (_this31.XW < 0 || _this31.ZW < 0 || _this31.YW !== 1) {\n              throw new _util.FormatError(\"Invalid WhitePoint components, no fallback available\");\n            }\n\n            if (_this31.XB < 0 || _this31.YB < 0 || _this31.ZB < 0) {\n              (0, _util.info)(\"Invalid BlackPoint, falling back to default\");\n              _this31.XB = _this31.YB = _this31.ZB = 0;\n            }\n\n            if (_this31.amin > _this31.amax || _this31.bmin > _this31.bmax) {\n              (0, _util.info)(\"Invalid Range, falling back to defaults\");\n              _this31.amin = -100;\n              _this31.amax = 100;\n              _this31.bmin = -100;\n              _this31.bmax = 100;\n            }\n\n            return _this31;\n          }\n\n          _createClass(LabCS, [{\n            key: \"getRgbItem\",\n            value: function getRgbItem(src, srcOffset, dest, destOffset) {\n              convertToRgb(this, src, srcOffset, false, dest, destOffset);\n            }\n          }, {\n            key: \"getRgbBuffer\",\n            value: function getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n              var maxVal = (1 << bits) - 1;\n\n              for (var i = 0; i < count; i++) {\n                convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n                srcOffset += 3;\n                destOffset += 3 + alpha01;\n              }\n            }\n          }, {\n            key: \"getOutputLength\",\n            value: function getOutputLength(inputLength, alpha01) {\n              return inputLength * (3 + alpha01) / 3 | 0;\n            }\n          }, {\n            key: \"isDefaultDecode\",\n            value: function isDefaultDecode(decodeMap, bpc) {\n              return true;\n            }\n          }, {\n            key: \"usesZeroToOneRange\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"usesZeroToOneRange\", false);\n            }\n          }]);\n\n          return LabCS;\n        }(ColorSpace);\n\n        return LabCS;\n      }();\n      /***/\n\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalImageCache = exports.LocalGStateCache = exports.LocalFunctionCache = exports.LocalColorSpaceCache = exports.LocalImageCache = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var BaseLocalCache = /*#__PURE__*/function () {\n        function BaseLocalCache(options) {\n          _classCallCheck(this, BaseLocalCache);\n\n          if (this.constructor === BaseLocalCache) {\n            (0, _util.unreachable)(\"Cannot initialize BaseLocalCache.\");\n          }\n\n          if (!options || !options.onlyRefs) {\n            this._nameRefMap = new Map();\n            this._imageMap = new Map();\n          }\n\n          this._imageCache = new _primitives.RefSetCache();\n        }\n\n        _createClass(BaseLocalCache, [{\n          key: \"getByName\",\n          value: function getByName(name) {\n            var ref = this._nameRefMap.get(name);\n\n            if (ref) {\n              return this.getByRef(ref);\n            }\n\n            return this._imageMap.get(name) || null;\n          }\n        }, {\n          key: \"getByRef\",\n          value: function getByRef(ref) {\n            return this._imageCache.get(ref) || null;\n          }\n        }, {\n          key: \"set\",\n          value: function set(name, ref, data) {\n            (0, _util.unreachable)(\"Abstract method `set` called.\");\n          }\n        }]);\n\n        return BaseLocalCache;\n      }();\n\n      var LocalImageCache = /*#__PURE__*/function (_BaseLocalCache) {\n        _inherits(LocalImageCache, _BaseLocalCache);\n\n        var _super32 = _createSuper(LocalImageCache);\n\n        function LocalImageCache() {\n          _classCallCheck(this, LocalImageCache);\n\n          return _super32.apply(this, arguments);\n        }\n\n        _createClass(LocalImageCache, [{\n          key: \"set\",\n          value: function set(name) {\n            var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var data = arguments.length > 2 ? arguments[2] : undefined;\n\n            if (!name) {\n              throw new Error('LocalImageCache.set - expected \"name\" argument.');\n            }\n\n            if (ref) {\n              if (this._imageCache.has(ref)) {\n                return;\n              }\n\n              this._nameRefMap.set(name, ref);\n\n              this._imageCache.put(ref, data);\n\n              return;\n            }\n\n            if (this._imageMap.has(name)) {\n              return;\n            }\n\n            this._imageMap.set(name, data);\n          }\n        }]);\n\n        return LocalImageCache;\n      }(BaseLocalCache);\n\n      exports.LocalImageCache = LocalImageCache;\n\n      var LocalColorSpaceCache = /*#__PURE__*/function (_BaseLocalCache2) {\n        _inherits(LocalColorSpaceCache, _BaseLocalCache2);\n\n        var _super33 = _createSuper(LocalColorSpaceCache);\n\n        function LocalColorSpaceCache() {\n          _classCallCheck(this, LocalColorSpaceCache);\n\n          return _super33.apply(this, arguments);\n        }\n\n        _createClass(LocalColorSpaceCache, [{\n          key: \"set\",\n          value: function set() {\n            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var data = arguments.length > 2 ? arguments[2] : undefined;\n\n            if (!name && !ref) {\n              throw new Error('LocalColorSpaceCache.set - expected \"name\" and/or \"ref\" argument.');\n            }\n\n            if (ref) {\n              if (this._imageCache.has(ref)) {\n                return;\n              }\n\n              if (name) {\n                this._nameRefMap.set(name, ref);\n              }\n\n              this._imageCache.put(ref, data);\n\n              return;\n            }\n\n            if (this._imageMap.has(name)) {\n              return;\n            }\n\n            this._imageMap.set(name, data);\n          }\n        }]);\n\n        return LocalColorSpaceCache;\n      }(BaseLocalCache);\n\n      exports.LocalColorSpaceCache = LocalColorSpaceCache;\n\n      var LocalFunctionCache = /*#__PURE__*/function (_BaseLocalCache3) {\n        _inherits(LocalFunctionCache, _BaseLocalCache3);\n\n        var _super34 = _createSuper(LocalFunctionCache);\n\n        function LocalFunctionCache(options) {\n          _classCallCheck(this, LocalFunctionCache);\n\n          return _super34.call(this, {\n            onlyRefs: true\n          });\n        }\n\n        _createClass(LocalFunctionCache, [{\n          key: \"getByName\",\n          value: function getByName(name) {\n            (0, _util.unreachable)(\"Should not call `getByName` method.\");\n          }\n        }, {\n          key: \"set\",\n          value: function set() {\n            var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            var ref = arguments.length > 1 ? arguments[1] : undefined;\n            var data = arguments.length > 2 ? arguments[2] : undefined;\n\n            if (!ref) {\n              throw new Error('LocalFunctionCache.set - expected \"ref\" argument.');\n            }\n\n            if (this._imageCache.has(ref)) {\n              return;\n            }\n\n            this._imageCache.put(ref, data);\n          }\n        }]);\n\n        return LocalFunctionCache;\n      }(BaseLocalCache);\n\n      exports.LocalFunctionCache = LocalFunctionCache;\n\n      var LocalGStateCache = /*#__PURE__*/function (_BaseLocalCache4) {\n        _inherits(LocalGStateCache, _BaseLocalCache4);\n\n        var _super35 = _createSuper(LocalGStateCache);\n\n        function LocalGStateCache() {\n          _classCallCheck(this, LocalGStateCache);\n\n          return _super35.apply(this, arguments);\n        }\n\n        _createClass(LocalGStateCache, [{\n          key: \"set\",\n          value: function set(name) {\n            var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            var data = arguments.length > 2 ? arguments[2] : undefined;\n\n            if (!name) {\n              throw new Error('LocalGStateCache.set - expected \"name\" argument.');\n            }\n\n            if (ref) {\n              if (this._imageCache.has(ref)) {\n                return;\n              }\n\n              this._nameRefMap.set(name, ref);\n\n              this._imageCache.put(ref, data);\n\n              return;\n            }\n\n            if (this._imageMap.has(name)) {\n              return;\n            }\n\n            this._imageMap.set(name, data);\n          }\n        }]);\n\n        return LocalGStateCache;\n      }(BaseLocalCache);\n\n      exports.LocalGStateCache = LocalGStateCache;\n\n      var GlobalImageCache = /*#__PURE__*/function () {\n        function GlobalImageCache() {\n          _classCallCheck(this, GlobalImageCache);\n\n          this._refCache = new _primitives.RefSetCache();\n          this._imageCache = new _primitives.RefSetCache();\n        }\n\n        _createClass(GlobalImageCache, [{\n          key: \"shouldCache\",\n          value: function shouldCache(ref, pageIndex) {\n            var pageIndexSet = this._refCache.get(ref);\n\n            var numPages = pageIndexSet ? pageIndexSet.size + (pageIndexSet.has(pageIndex) ? 0 : 1) : 1;\n\n            if (numPages < GlobalImageCache.NUM_PAGES_THRESHOLD) {\n              return false;\n            }\n\n            if (!this._imageCache.has(ref) && this._imageCache.size >= GlobalImageCache.MAX_IMAGES_TO_CACHE) {\n              return false;\n            }\n\n            return true;\n          }\n        }, {\n          key: \"addPageIndex\",\n          value: function addPageIndex(ref, pageIndex) {\n            var pageIndexSet = this._refCache.get(ref);\n\n            if (!pageIndexSet) {\n              pageIndexSet = new Set();\n\n              this._refCache.put(ref, pageIndexSet);\n            }\n\n            pageIndexSet.add(pageIndex);\n          }\n        }, {\n          key: \"getData\",\n          value: function getData(ref, pageIndex) {\n            var pageIndexSet = this._refCache.get(ref);\n\n            if (!pageIndexSet) {\n              return null;\n            }\n\n            if (pageIndexSet.size < GlobalImageCache.NUM_PAGES_THRESHOLD) {\n              return null;\n            }\n\n            if (!this._imageCache.has(ref)) {\n              return null;\n            }\n\n            pageIndexSet.add(pageIndex);\n            return this._imageCache.get(ref);\n          }\n        }, {\n          key: \"setData\",\n          value: function setData(ref, data) {\n            if (!this._refCache.has(ref)) {\n              throw new Error('GlobalImageCache.setData - expected \"addPageIndex\" to have been called.');\n            }\n\n            if (this._imageCache.has(ref)) {\n              return;\n            }\n\n            if (this._imageCache.size >= GlobalImageCache.MAX_IMAGES_TO_CACHE) {\n              (0, _util.info)(\"GlobalImageCache.setData - ignoring image above MAX_IMAGES_TO_CACHE.\");\n              return;\n            }\n\n            this._imageCache.put(ref, data);\n          }\n        }, {\n          key: \"clear\",\n          value: function clear() {\n            var onlyData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!onlyData) {\n              this._refCache.clear();\n            }\n\n            this._imageCache.clear();\n          }\n        }], [{\n          key: \"NUM_PAGES_THRESHOLD\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"NUM_PAGES_THRESHOLD\", 2);\n          }\n        }, {\n          key: \"MAX_IMAGES_TO_CACHE\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"MAX_IMAGES_TO_CACHE\", 10);\n          }\n        }]);\n\n        return GlobalImageCache;\n      }();\n\n      exports.GlobalImageCache = GlobalImageCache;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getQuadPoints = getQuadPoints;\n      exports.MarkupAnnotation = exports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _obj = __w_pdfjs_require__(10);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _colorspace = __w_pdfjs_require__(23);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _operator_list = __w_pdfjs_require__(26);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _writer = __w_pdfjs_require__(27);\n\n      var AnnotationFactory = /*#__PURE__*/function () {\n        function AnnotationFactory() {\n          _classCallCheck(this, AnnotationFactory);\n        }\n\n        _createClass(AnnotationFactory, null, [{\n          key: \"create\",\n          value: function create(xref, ref, pdfManager, idFactory) {\n            var _this32 = this;\n\n            return pdfManager.ensureCatalog(\"acroForm\").then(function (acroForm) {\n              return pdfManager.ensure(_this32, \"_create\", [xref, ref, pdfManager, idFactory, acroForm]);\n            });\n          }\n        }, {\n          key: \"_create\",\n          value: function _create(xref, ref, pdfManager, idFactory, acroForm) {\n            var dict = xref.fetchIfRef(ref);\n\n            if (!(0, _primitives.isDict)(dict)) {\n              return undefined;\n            }\n\n            var id = (0, _primitives.isRef)(ref) ? ref.toString() : \"annot_\".concat(idFactory.createObjId());\n            var subtype = dict.get(\"Subtype\");\n            subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n            var parameters = {\n              xref: xref,\n              ref: ref,\n              dict: dict,\n              subtype: subtype,\n              id: id,\n              pdfManager: pdfManager,\n              acroForm: acroForm instanceof _primitives.Dict ? acroForm : _primitives.Dict.empty\n            };\n\n            switch (subtype) {\n              case \"Link\":\n                return new LinkAnnotation(parameters);\n\n              case \"Text\":\n                return new TextAnnotation(parameters);\n\n              case \"Widget\":\n                var fieldType = (0, _core_utils.getInheritableProperty)({\n                  dict: dict,\n                  key: \"FT\"\n                });\n                fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotation(parameters);\n\n                  case \"Btn\":\n                    return new ButtonWidgetAnnotation(parameters);\n\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotation(parameters);\n                }\n\n                (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + \"falling back to base field type.\");\n                return new WidgetAnnotation(parameters);\n\n              case \"Popup\":\n                return new PopupAnnotation(parameters);\n\n              case \"FreeText\":\n                return new FreeTextAnnotation(parameters);\n\n              case \"Line\":\n                return new LineAnnotation(parameters);\n\n              case \"Square\":\n                return new SquareAnnotation(parameters);\n\n              case \"Circle\":\n                return new CircleAnnotation(parameters);\n\n              case \"PolyLine\":\n                return new PolylineAnnotation(parameters);\n\n              case \"Polygon\":\n                return new PolygonAnnotation(parameters);\n\n              case \"Caret\":\n                return new CaretAnnotation(parameters);\n\n              case \"Ink\":\n                return new InkAnnotation(parameters);\n\n              case \"Highlight\":\n                return new HighlightAnnotation(parameters);\n\n              case \"Underline\":\n                return new UnderlineAnnotation(parameters);\n\n              case \"Squiggly\":\n                return new SquigglyAnnotation(parameters);\n\n              case \"StrikeOut\":\n                return new StrikeOutAnnotation(parameters);\n\n              case \"Stamp\":\n                return new StampAnnotation(parameters);\n\n              case \"FileAttachment\":\n                return new FileAttachmentAnnotation(parameters);\n\n              default:\n                if (!subtype) {\n                  (0, _util.warn)(\"Annotation is missing the required /Subtype.\");\n                } else {\n                  (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + \"falling back to base annotation.\");\n                }\n\n                return new Annotation(parameters);\n            }\n          }\n        }]);\n\n        return AnnotationFactory;\n      }();\n\n      exports.AnnotationFactory = AnnotationFactory;\n\n      function getQuadPoints(dict, rect) {\n        if (!dict.has(\"QuadPoints\")) {\n          return null;\n        }\n\n        var quadPoints = dict.getArray(\"QuadPoints\");\n\n        if (!Array.isArray(quadPoints) || quadPoints.length % 8 > 0) {\n          return null;\n        }\n\n        var quadPointsLists = [];\n\n        for (var i = 0, ii = quadPoints.length / 8; i < ii; i++) {\n          quadPointsLists.push([]);\n\n          for (var j = i * 8, jj = i * 8 + 8; j < jj; j += 2) {\n            var x = quadPoints[j];\n            var y = quadPoints[j + 1];\n\n            if (x < rect[0] || x > rect[2] || y < rect[1] || y > rect[3]) {\n              return null;\n            }\n\n            quadPointsLists[i].push({\n              x: x,\n              y: y\n            });\n          }\n        }\n\n        return quadPointsLists;\n      }\n\n      function getTransformMatrix(rect, bbox, matrix) {\n        var _util$Util$getAxialAl = _util.Util.getAxialAlignedBoundingBox(bbox, matrix),\n            _util$Util$getAxialAl2 = _slicedToArray(_util$Util$getAxialAl, 4),\n            minX = _util$Util$getAxialAl2[0],\n            minY = _util$Util$getAxialAl2[1],\n            maxX = _util$Util$getAxialAl2[2],\n            maxY = _util$Util$getAxialAl2[3];\n\n        if (minX === maxX || minY === maxY) {\n          return [1, 0, 0, 1, rect[0], rect[1]];\n        }\n\n        var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n        var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n        return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n      }\n\n      var Annotation = /*#__PURE__*/function () {\n        function Annotation(params) {\n          _classCallCheck(this, Annotation);\n\n          var dict = params.dict;\n          this.setContents(dict.get(\"Contents\"));\n          this.setModificationDate(dict.get(\"M\"));\n          this.setFlags(dict.get(\"F\"));\n          this.setRectangle(dict.getArray(\"Rect\"));\n          this.setColor(dict.getArray(\"C\"));\n          this.setBorderStyle(dict);\n          this.setAppearance(dict);\n          this.data = {\n            annotationFlags: this.flags,\n            borderStyle: this.borderStyle,\n            color: this.color,\n            contents: this.contents,\n            hasAppearance: !!this.appearance,\n            id: params.id,\n            modificationDate: this.modificationDate,\n            rect: this.rectangle,\n            subtype: params.subtype\n          };\n        }\n\n        _createClass(Annotation, [{\n          key: \"_hasFlag\",\n          value: function _hasFlag(flags, flag) {\n            return !!(flags & flag);\n          }\n        }, {\n          key: \"_isViewable\",\n          value: function _isViewable(flags) {\n            return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n          }\n        }, {\n          key: \"_isPrintable\",\n          value: function _isPrintable(flags) {\n            return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n          }\n        }, {\n          key: \"viewable\",\n          get: function get() {\n            if (this.flags === 0) {\n              return true;\n            }\n\n            return this._isViewable(this.flags);\n          }\n        }, {\n          key: \"printable\",\n          get: function get() {\n            if (this.flags === 0) {\n              return false;\n            }\n\n            return this._isPrintable(this.flags);\n          }\n        }, {\n          key: \"setContents\",\n          value: function setContents(contents) {\n            this.contents = (0, _util.stringToPDFString)(contents || \"\");\n          }\n        }, {\n          key: \"setModificationDate\",\n          value: function setModificationDate(modificationDate) {\n            this.modificationDate = (0, _util.isString)(modificationDate) ? modificationDate : null;\n          }\n        }, {\n          key: \"setFlags\",\n          value: function setFlags(flags) {\n            this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n          }\n        }, {\n          key: \"hasFlag\",\n          value: function hasFlag(flag) {\n            return this._hasFlag(this.flags, flag);\n          }\n        }, {\n          key: \"setRectangle\",\n          value: function setRectangle(rectangle) {\n            if (Array.isArray(rectangle) && rectangle.length === 4) {\n              this.rectangle = _util.Util.normalizeRect(rectangle);\n            } else {\n              this.rectangle = [0, 0, 0, 0];\n            }\n          }\n        }, {\n          key: \"setColor\",\n          value: function setColor(color) {\n            var rgbColor = new Uint8ClampedArray(3);\n\n            if (!Array.isArray(color)) {\n              this.color = rgbColor;\n              return;\n            }\n\n            switch (color.length) {\n              case 0:\n                this.color = null;\n                break;\n\n              case 1:\n                _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\n                this.color = rgbColor;\n                break;\n\n              case 3:\n                _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\n                this.color = rgbColor;\n                break;\n\n              case 4:\n                _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\n                this.color = rgbColor;\n                break;\n\n              default:\n                this.color = rgbColor;\n                break;\n            }\n          }\n        }, {\n          key: \"setBorderStyle\",\n          value: function setBorderStyle(borderStyle) {\n            this.borderStyle = new AnnotationBorderStyle();\n\n            if (!(0, _primitives.isDict)(borderStyle)) {\n              return;\n            }\n\n            if (borderStyle.has(\"BS\")) {\n              var dict = borderStyle.get(\"BS\");\n              var dictType = dict.get(\"Type\");\n\n              if (!dictType || (0, _primitives.isName)(dictType, \"Border\")) {\n                this.borderStyle.setWidth(dict.get(\"W\"), this.rectangle);\n                this.borderStyle.setStyle(dict.get(\"S\"));\n                this.borderStyle.setDashArray(dict.getArray(\"D\"));\n              }\n            } else if (borderStyle.has(\"Border\")) {\n              var array = borderStyle.getArray(\"Border\");\n\n              if (Array.isArray(array) && array.length >= 3) {\n                this.borderStyle.setHorizontalCornerRadius(array[0]);\n                this.borderStyle.setVerticalCornerRadius(array[1]);\n                this.borderStyle.setWidth(array[2], this.rectangle);\n\n                if (array.length === 4) {\n                  this.borderStyle.setDashArray(array[3]);\n                }\n              }\n            } else {\n              this.borderStyle.setWidth(0);\n            }\n          }\n        }, {\n          key: \"setAppearance\",\n          value: function setAppearance(dict) {\n            this.appearance = null;\n            var appearanceStates = dict.get(\"AP\");\n\n            if (!(0, _primitives.isDict)(appearanceStates)) {\n              return;\n            }\n\n            var normalAppearanceState = appearanceStates.get(\"N\");\n\n            if ((0, _primitives.isStream)(normalAppearanceState)) {\n              this.appearance = normalAppearanceState;\n              return;\n            }\n\n            if (!(0, _primitives.isDict)(normalAppearanceState)) {\n              return;\n            }\n\n            var as = dict.get(\"AS\");\n\n            if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n              return;\n            }\n\n            this.appearance = normalAppearanceState.get(as.name);\n          }\n        }, {\n          key: \"loadResources\",\n          value: function loadResources(keys) {\n            return this.appearance.dict.getAsync(\"Resources\").then(function (resources) {\n              if (!resources) {\n                return undefined;\n              }\n\n              var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n              return objectLoader.load().then(function () {\n                return resources;\n              });\n            });\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList(evaluator, task, renderForms, annotationStorage) {\n            if (!this.appearance) {\n              return Promise.resolve(new _operator_list.OperatorList());\n            }\n\n            var appearance = this.appearance;\n            var data = this.data;\n            var appearanceDict = appearance.dict;\n            var resourcesPromise = this.loadResources([\"ExtGState\", \"ColorSpace\", \"Pattern\", \"Shading\", \"XObject\", \"Font\"]);\n            var bbox = appearanceDict.getArray(\"BBox\") || [0, 0, 1, 1];\n            var matrix = appearanceDict.getArray(\"Matrix\") || [1, 0, 0, 1, 0, 0];\n            var transform = getTransformMatrix(data.rect, bbox, matrix);\n            return resourcesPromise.then(function (resources) {\n              var opList = new _operator_list.OperatorList();\n              opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n              return evaluator.getOperatorList({\n                stream: appearance,\n                task: task,\n                resources: resources,\n                operatorList: opList\n              }).then(function () {\n                opList.addOp(_util.OPS.endAnnotation, []);\n                appearance.reset();\n                return opList;\n              });\n            });\n          }\n        }, {\n          key: \"save\",\n          value: function () {\n            var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(evaluator, task, annotationStorage) {\n              return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      return _context13.abrupt(\"return\", null);\n\n                    case 1:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, _callee13);\n            }));\n\n            function save(_x13, _x14, _x15) {\n              return _save.apply(this, arguments);\n            }\n\n            return save;\n          }()\n        }]);\n\n        return Annotation;\n      }();\n\n      exports.Annotation = Annotation;\n\n      var AnnotationBorderStyle = /*#__PURE__*/function () {\n        function AnnotationBorderStyle() {\n          _classCallCheck(this, AnnotationBorderStyle);\n\n          this.width = 1;\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          this.dashArray = [3];\n          this.horizontalCornerRadius = 0;\n          this.verticalCornerRadius = 0;\n        }\n\n        _createClass(AnnotationBorderStyle, [{\n          key: \"setWidth\",\n          value: function setWidth(width) {\n            var rect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 0, 0];\n\n            if ((0, _primitives.isName)(width)) {\n              this.width = 0;\n              return;\n            }\n\n            if (Number.isInteger(width)) {\n              if (width > 0) {\n                var maxWidth = (rect[2] - rect[0]) / 2;\n                var maxHeight = (rect[3] - rect[1]) / 2;\n\n                if (maxWidth > 0 && maxHeight > 0 && (width > maxWidth || width > maxHeight)) {\n                  (0, _util.warn)(\"AnnotationBorderStyle.setWidth - ignoring width: \".concat(width));\n                  width = 1;\n                }\n              }\n\n              this.width = width;\n            }\n          }\n        }, {\n          key: \"setStyle\",\n          value: function setStyle(style) {\n            if (!(0, _primitives.isName)(style)) {\n              return;\n            }\n\n            switch (style.name) {\n              case \"S\":\n                this.style = _util.AnnotationBorderStyleType.SOLID;\n                break;\n\n              case \"D\":\n                this.style = _util.AnnotationBorderStyleType.DASHED;\n                break;\n\n              case \"B\":\n                this.style = _util.AnnotationBorderStyleType.BEVELED;\n                break;\n\n              case \"I\":\n                this.style = _util.AnnotationBorderStyleType.INSET;\n                break;\n\n              case \"U\":\n                this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n                break;\n\n              default:\n                break;\n            }\n          }\n        }, {\n          key: \"setDashArray\",\n          value: function setDashArray(dashArray) {\n            if (Array.isArray(dashArray) && dashArray.length > 0) {\n              var isValid = true;\n              var allZeros = true;\n\n              var _iterator26 = _createForOfIteratorHelper(dashArray),\n                  _step26;\n\n              try {\n                for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                  var element = _step26.value;\n                  var validNumber = +element >= 0;\n\n                  if (!validNumber) {\n                    isValid = false;\n                    break;\n                  } else if (element > 0) {\n                    allZeros = false;\n                  }\n                }\n              } catch (err) {\n                _iterator26.e(err);\n              } finally {\n                _iterator26.f();\n              }\n\n              if (isValid && !allZeros) {\n                this.dashArray = dashArray;\n              } else {\n                this.width = 0;\n              }\n            } else if (dashArray) {\n              this.width = 0;\n            }\n          }\n        }, {\n          key: \"setHorizontalCornerRadius\",\n          value: function setHorizontalCornerRadius(radius) {\n            if (Number.isInteger(radius)) {\n              this.horizontalCornerRadius = radius;\n            }\n          }\n        }, {\n          key: \"setVerticalCornerRadius\",\n          value: function setVerticalCornerRadius(radius) {\n            if (Number.isInteger(radius)) {\n              this.verticalCornerRadius = radius;\n            }\n          }\n        }]);\n\n        return AnnotationBorderStyle;\n      }();\n\n      exports.AnnotationBorderStyle = AnnotationBorderStyle;\n\n      var MarkupAnnotation = /*#__PURE__*/function (_Annotation) {\n        _inherits(MarkupAnnotation, _Annotation);\n\n        var _super36 = _createSuper(MarkupAnnotation);\n\n        function MarkupAnnotation(parameters) {\n          var _this33;\n\n          _classCallCheck(this, MarkupAnnotation);\n\n          _this33 = _super36.call(this, parameters);\n          var dict = parameters.dict;\n\n          if (dict.has(\"IRT\")) {\n            var rawIRT = dict.getRaw(\"IRT\");\n            _this33.data.inReplyTo = (0, _primitives.isRef)(rawIRT) ? rawIRT.toString() : null;\n            var rt = dict.get(\"RT\");\n            _this33.data.replyType = (0, _primitives.isName)(rt) ? rt.name : _util.AnnotationReplyType.REPLY;\n          }\n\n          if (_this33.data.replyType === _util.AnnotationReplyType.GROUP) {\n            var parent = dict.get(\"IRT\");\n            _this33.data.title = (0, _util.stringToPDFString)(parent.get(\"T\") || \"\");\n\n            _this33.setContents(parent.get(\"Contents\"));\n\n            _this33.data.contents = _this33.contents;\n\n            if (!parent.has(\"CreationDate\")) {\n              _this33.data.creationDate = null;\n            } else {\n              _this33.setCreationDate(parent.get(\"CreationDate\"));\n\n              _this33.data.creationDate = _this33.creationDate;\n            }\n\n            if (!parent.has(\"M\")) {\n              _this33.data.modificationDate = null;\n            } else {\n              _this33.setModificationDate(parent.get(\"M\"));\n\n              _this33.data.modificationDate = _this33.modificationDate;\n            }\n\n            _this33.data.hasPopup = parent.has(\"Popup\");\n\n            if (!parent.has(\"C\")) {\n              _this33.data.color = null;\n            } else {\n              _this33.setColor(parent.getArray(\"C\"));\n\n              _this33.data.color = _this33.color;\n            }\n          } else {\n            _this33.data.title = (0, _util.stringToPDFString)(dict.get(\"T\") || \"\");\n\n            _this33.setCreationDate(dict.get(\"CreationDate\"));\n\n            _this33.data.creationDate = _this33.creationDate;\n            _this33.data.hasPopup = dict.has(\"Popup\");\n\n            if (!dict.has(\"C\")) {\n              _this33.data.color = null;\n            }\n          }\n\n          return _this33;\n        }\n\n        _createClass(MarkupAnnotation, [{\n          key: \"setCreationDate\",\n          value: function setCreationDate(creationDate) {\n            this.creationDate = (0, _util.isString)(creationDate) ? creationDate : null;\n          }\n        }]);\n\n        return MarkupAnnotation;\n      }(Annotation);\n\n      exports.MarkupAnnotation = MarkupAnnotation;\n\n      var WidgetAnnotation = /*#__PURE__*/function (_Annotation2) {\n        _inherits(WidgetAnnotation, _Annotation2);\n\n        var _super37 = _createSuper(WidgetAnnotation);\n\n        function WidgetAnnotation(params) {\n          var _this34;\n\n          _classCallCheck(this, WidgetAnnotation);\n\n          _this34 = _super37.call(this, params);\n          var dict = params.dict;\n          var data = _this34.data;\n          _this34.ref = params.ref;\n          data.annotationType = _util.AnnotationType.WIDGET;\n          data.fieldName = _this34._constructFieldName(dict);\n          var fieldValue = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"V\",\n            getArray: true\n          });\n          data.fieldValue = _this34._decodeFormValue(fieldValue);\n          data.alternativeText = (0, _util.stringToPDFString)(dict.get(\"TU\") || \"\");\n          data.defaultAppearance = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"DA\"\n          }) || params.acroForm.get(\"DA\") || \"\";\n          var fieldType = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"FT\"\n          });\n          data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          _this34.fieldResources = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"DR\"\n          }) || params.acroForm.get(\"DR\") || _primitives.Dict.empty;\n          data.fieldFlags = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"Ff\"\n          });\n\n          if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n            data.fieldFlags = 0;\n          }\n\n          data.readOnly = _this34.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n\n          if (data.fieldType === \"Sig\") {\n            data.fieldValue = null;\n\n            _this34.setFlags(_util.AnnotationFlag.HIDDEN);\n          }\n\n          return _this34;\n        }\n\n        _createClass(WidgetAnnotation, [{\n          key: \"_constructFieldName\",\n          value: function _constructFieldName(dict) {\n            if (!dict.has(\"T\") && !dict.has(\"Parent\")) {\n              (0, _util.warn)(\"Unknown field name, falling back to empty field name.\");\n              return \"\";\n            }\n\n            if (!dict.has(\"Parent\")) {\n              return (0, _util.stringToPDFString)(dict.get(\"T\"));\n            }\n\n            var fieldName = [];\n\n            if (dict.has(\"T\")) {\n              fieldName.unshift((0, _util.stringToPDFString)(dict.get(\"T\")));\n            }\n\n            var loopDict = dict;\n\n            while (loopDict.has(\"Parent\")) {\n              loopDict = loopDict.get(\"Parent\");\n\n              if (!(0, _primitives.isDict)(loopDict)) {\n                break;\n              }\n\n              if (loopDict.has(\"T\")) {\n                fieldName.unshift((0, _util.stringToPDFString)(loopDict.get(\"T\")));\n              }\n            }\n\n            return fieldName.join(\".\");\n          }\n        }, {\n          key: \"_decodeFormValue\",\n          value: function _decodeFormValue(formValue) {\n            if (Array.isArray(formValue)) {\n              return formValue.filter(function (item) {\n                return (0, _util.isString)(item);\n              }).map(function (item) {\n                return (0, _util.stringToPDFString)(item);\n              });\n            } else if ((0, _primitives.isName)(formValue)) {\n              return (0, _util.stringToPDFString)(formValue.name);\n            } else if ((0, _util.isString)(formValue)) {\n              return (0, _util.stringToPDFString)(formValue);\n            }\n\n            return null;\n          }\n        }, {\n          key: \"hasFieldFlag\",\n          value: function hasFieldFlag(flag) {\n            return !!(this.data.fieldFlags & flag);\n          }\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList(evaluator, task, renderForms, annotationStorage) {\n            var _this35 = this;\n\n            if (renderForms) {\n              return Promise.resolve(new _operator_list.OperatorList());\n            }\n\n            if (!this._hasText) {\n              return _get(_getPrototypeOf(WidgetAnnotation.prototype), \"getOperatorList\", this).call(this, evaluator, task, renderForms, annotationStorage);\n            }\n\n            return this._getAppearance(evaluator, task, annotationStorage).then(function (content) {\n              if (_this35.appearance && content === null) {\n                return _get(_getPrototypeOf(WidgetAnnotation.prototype), \"getOperatorList\", _this35).call(_this35, evaluator, task, renderForms, annotationStorage);\n              }\n\n              var operatorList = new _operator_list.OperatorList();\n\n              if (!_this35.data.defaultAppearance || content === null) {\n                return operatorList;\n              }\n\n              var matrix = [1, 0, 0, 1, 0, 0];\n              var bbox = [0, 0, _this35.data.rect[2] - _this35.data.rect[0], _this35.data.rect[3] - _this35.data.rect[1]];\n              var transform = getTransformMatrix(_this35.data.rect, bbox, matrix);\n              operatorList.addOp(_util.OPS.beginAnnotation, [_this35.data.rect, transform, matrix]);\n              var stream = new _stream.StringStream(content);\n              return evaluator.getOperatorList({\n                stream: stream,\n                task: task,\n                resources: _this35.fieldResources,\n                operatorList: operatorList\n              }).then(function () {\n                operatorList.addOp(_util.OPS.endAnnotation, []);\n                return operatorList;\n              });\n            });\n          }\n        }, {\n          key: \"save\",\n          value: function () {\n            var _save2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(evaluator, task, annotationStorage) {\n              var appearance, dict, bbox, newRef, AP, value, encrypt, originalTransform, newTransform, appearanceDict, bufferOriginal, bufferNew;\n              return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      if (!(this.data.fieldValue === annotationStorage[this.data.id])) {\n                        _context14.next = 2;\n                        break;\n                      }\n\n                      return _context14.abrupt(\"return\", null);\n\n                    case 2:\n                      _context14.next = 4;\n                      return this._getAppearance(evaluator, task, annotationStorage);\n\n                    case 4:\n                      appearance = _context14.sent;\n\n                      if (!(appearance === null)) {\n                        _context14.next = 7;\n                        break;\n                      }\n\n                      return _context14.abrupt(\"return\", null);\n\n                    case 7:\n                      dict = evaluator.xref.fetchIfRef(this.ref);\n\n                      if ((0, _primitives.isDict)(dict)) {\n                        _context14.next = 10;\n                        break;\n                      }\n\n                      return _context14.abrupt(\"return\", null);\n\n                    case 10:\n                      bbox = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]];\n                      newRef = evaluator.xref.getNewRef();\n                      AP = new _primitives.Dict(evaluator.xref);\n                      AP.set(\"N\", newRef);\n                      value = annotationStorage[this.data.id];\n                      encrypt = evaluator.xref.encrypt;\n                      originalTransform = null;\n                      newTransform = null;\n\n                      if (encrypt) {\n                        originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen);\n                        newTransform = encrypt.createCipherTransform(newRef.num, newRef.gen);\n                        appearance = newTransform.encryptString(appearance);\n                      }\n\n                      dict.set(\"V\", value);\n                      dict.set(\"AP\", AP);\n                      dict.set(\"M\", \"D:\".concat((0, _util.getModificationDate)()));\n                      appearanceDict = new _primitives.Dict(evaluator.xref);\n                      appearanceDict.set(\"Length\", appearance.length);\n                      appearanceDict.set(\"Subtype\", _primitives.Name.get(\"Form\"));\n                      appearanceDict.set(\"Resources\", this.fieldResources);\n                      appearanceDict.set(\"BBox\", bbox);\n                      bufferOriginal = [\"\".concat(this.ref.num, \" \").concat(this.ref.gen, \" obj\\n\")];\n                      (0, _writer.writeDict)(dict, bufferOriginal, originalTransform);\n                      bufferOriginal.push(\"\\nendobj\\n\");\n                      bufferNew = [\"\".concat(newRef.num, \" \").concat(newRef.gen, \" obj\\n\")];\n                      (0, _writer.writeDict)(appearanceDict, bufferNew, newTransform);\n                      bufferNew.push(\" stream\\n\");\n                      bufferNew.push(appearance);\n                      bufferNew.push(\"\\nendstream\\nendobj\\n\");\n                      return _context14.abrupt(\"return\", [{\n                        ref: this.ref,\n                        data: bufferOriginal.join(\"\")\n                      }, {\n                        ref: newRef,\n                        data: bufferNew.join(\"\")\n                      }]);\n\n                    case 36:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14, this);\n            }));\n\n            function save(_x16, _x17, _x18) {\n              return _save2.apply(this, arguments);\n            }\n\n            return save;\n          }()\n        }, {\n          key: \"_getAppearance\",\n          value: function () {\n            var _getAppearance2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(evaluator, task, annotationStorage) {\n              var isPassword, value, defaultPadding, hPadding, totalHeight, totalWidth, fontInfo, _fontInfo, font, fontName, fontSize, descent, vPadding, defaultAppearance, alignment, renderedText;\n\n              return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      isPassword = this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD);\n\n                      if (!(!annotationStorage || isPassword)) {\n                        _context15.next = 3;\n                        break;\n                      }\n\n                      return _context15.abrupt(\"return\", null);\n\n                    case 3:\n                      value = annotationStorage[this.data.id];\n\n                      if (!(value === \"\")) {\n                        _context15.next = 6;\n                        break;\n                      }\n\n                      return _context15.abrupt(\"return\", \"\");\n\n                    case 6:\n                      defaultPadding = 2;\n                      hPadding = defaultPadding;\n                      totalHeight = this.data.rect[3] - this.data.rect[1];\n                      totalWidth = this.data.rect[2] - this.data.rect[0];\n                      _context15.next = 12;\n                      return this._getFontData(evaluator, task);\n\n                    case 12:\n                      fontInfo = _context15.sent;\n                      _fontInfo = _slicedToArray(fontInfo, 2), font = _fontInfo[0], fontName = _fontInfo[1];\n                      fontSize = fontInfo[2];\n                      fontSize = this._computeFontSize(font, fontName, fontSize, totalHeight);\n                      descent = font.descent;\n\n                      if (isNaN(descent)) {\n                        descent = 0;\n                      }\n\n                      vPadding = defaultPadding + Math.abs(descent) * fontSize;\n                      defaultAppearance = this.data.defaultAppearance;\n                      alignment = this.data.textAlignment;\n\n                      if (!this.data.comb) {\n                        _context15.next = 23;\n                        break;\n                      }\n\n                      return _context15.abrupt(\"return\", this._getCombAppearance(defaultAppearance, value, totalWidth, hPadding, vPadding));\n\n                    case 23:\n                      if (!this.data.multiLine) {\n                        _context15.next = 25;\n                        break;\n                      }\n\n                      return _context15.abrupt(\"return\", this._getMultilineAppearance(defaultAppearance, value, font, fontSize, totalWidth, totalHeight, alignment, hPadding, vPadding));\n\n                    case 25:\n                      if (!(alignment === 0 || alignment > 2)) {\n                        _context15.next = 27;\n                        break;\n                      }\n\n                      return _context15.abrupt(\"return\", \"/Tx BMC q BT \" + defaultAppearance + \" 1 0 0 1 \".concat(hPadding, \" \").concat(vPadding, \" Tm (\").concat((0, _util.escapeString)(value), \") Tj\") + \" ET Q EMC\");\n\n                    case 27:\n                      renderedText = this._renderText(value, font, fontSize, totalWidth, alignment, hPadding, vPadding);\n                      return _context15.abrupt(\"return\", \"/Tx BMC q BT \" + defaultAppearance + \" 1 0 0 1 0 0 Tm \".concat(renderedText) + \" ET Q EMC\");\n\n                    case 29:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15, this);\n            }));\n\n            function _getAppearance(_x19, _x20, _x21) {\n              return _getAppearance2.apply(this, arguments);\n            }\n\n            return _getAppearance;\n          }()\n        }, {\n          key: \"_getFontData\",\n          value: function () {\n            var _getFontData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(evaluator, task) {\n              var operatorList, initialState;\n              return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      operatorList = new _operator_list.OperatorList();\n                      initialState = {\n                        fontSize: 0,\n                        font: null,\n                        fontName: null,\n                        clone: function clone() {\n                          return this;\n                        }\n                      };\n                      _context16.next = 4;\n                      return evaluator.getOperatorList({\n                        stream: new _stream.StringStream(this.data.defaultAppearance),\n                        task: task,\n                        resources: this.fieldResources,\n                        operatorList: operatorList,\n                        initialState: initialState\n                      });\n\n                    case 4:\n                      return _context16.abrupt(\"return\", [initialState.font, initialState.fontName, initialState.fontSize]);\n\n                    case 5:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16, this);\n            }));\n\n            function _getFontData(_x22, _x23) {\n              return _getFontData2.apply(this, arguments);\n            }\n\n            return _getFontData;\n          }()\n        }, {\n          key: \"_computeFontSize\",\n          value: function _computeFontSize(font, fontName, fontSize, height) {\n            if (fontSize === null || fontSize === 0) {\n              var em = font.charsToGlyphs(\"M\", true)[0].width / 1000;\n              var capHeight = 0.7 * em;\n              fontSize = Math.max(1, Math.floor(height / (1.5 * capHeight)));\n              var fontRegex = new RegExp(\"/\".concat(fontName, \"\\\\s+[0-9.]+\\\\s+Tf\"));\n\n              if (this.data.defaultAppearance.search(fontRegex) === -1) {\n                fontRegex = new RegExp(\"/\".concat(fontName, \"\\\\s+Tf\"));\n              }\n\n              this.data.defaultAppearance = this.data.defaultAppearance.replace(fontRegex, \"/\".concat(fontName, \" \").concat(fontSize, \" Tf\"));\n            }\n\n            return fontSize;\n          }\n        }, {\n          key: \"_renderText\",\n          value: function _renderText(text, font, fontSize, totalWidth, alignment, hPadding, vPadding) {\n            var glyphs = font.charsToGlyphs(text);\n            var scale = fontSize / 1000;\n            var width = 0;\n\n            var _iterator27 = _createForOfIteratorHelper(glyphs),\n                _step27;\n\n            try {\n              for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n                var glyph = _step27.value;\n                width += glyph.width * scale;\n              }\n            } catch (err) {\n              _iterator27.e(err);\n            } finally {\n              _iterator27.f();\n            }\n\n            var shift;\n\n            if (alignment === 1) {\n              shift = (totalWidth - width) / 2;\n            } else if (alignment === 2) {\n              shift = totalWidth - width - hPadding;\n            } else {\n              shift = hPadding;\n            }\n\n            shift = shift.toFixed(2);\n            vPadding = vPadding.toFixed(2);\n            return \"\".concat(shift, \" \").concat(vPadding, \" Td (\").concat((0, _util.escapeString)(text), \") Tj\");\n          }\n        }]);\n\n        return WidgetAnnotation;\n      }(Annotation);\n\n      var TextWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation) {\n        _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n        var _super38 = _createSuper(TextWidgetAnnotation);\n\n        function TextWidgetAnnotation(params) {\n          var _this36;\n\n          _classCallCheck(this, TextWidgetAnnotation);\n\n          _this36 = _super38.call(this, params);\n          _this36._hasText = true;\n          var dict = params.dict;\n\n          if (!(0, _util.isString)(_this36.data.fieldValue)) {\n            _this36.data.fieldValue = \"\";\n          }\n\n          var alignment = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"Q\"\n          });\n\n          if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n            alignment = null;\n          }\n\n          _this36.data.textAlignment = alignment;\n          var maximumLength = (0, _core_utils.getInheritableProperty)({\n            dict: dict,\n            key: \"MaxLen\"\n          });\n\n          if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n            maximumLength = null;\n          }\n\n          _this36.data.maxLen = maximumLength;\n          _this36.data.multiLine = _this36.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n          _this36.data.comb = _this36.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this36.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this36.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this36.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this36.data.maxLen !== null;\n          return _this36;\n        }\n\n        _createClass(TextWidgetAnnotation, [{\n          key: \"_getCombAppearance\",\n          value: function _getCombAppearance(defaultAppearance, text, width, hPadding, vPadding) {\n            var combWidth = (width / this.data.maxLen).toFixed(2);\n            var buf = [];\n\n            var _iterator28 = _createForOfIteratorHelper(text),\n                _step28;\n\n            try {\n              for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                var character = _step28.value;\n                buf.push(\"(\".concat((0, _util.escapeString)(character), \") Tj\"));\n              }\n            } catch (err) {\n              _iterator28.e(err);\n            } finally {\n              _iterator28.f();\n            }\n\n            var renderedComb = buf.join(\" \".concat(combWidth, \" 0 Td \"));\n            return \"/Tx BMC q BT \" + defaultAppearance + \" 1 0 0 1 \".concat(hPadding, \" \").concat(vPadding, \" Tm \").concat(renderedComb) + \" ET Q EMC\";\n          }\n        }, {\n          key: \"_getMultilineAppearance\",\n          value: function _getMultilineAppearance(defaultAppearance, text, font, fontSize, width, height, alignment, hPadding, vPadding) {\n            var lines = text.split(/\\r\\n|\\r|\\n/);\n            var buf = [];\n            var totalWidth = width - 2 * hPadding;\n\n            var _iterator29 = _createForOfIteratorHelper(lines),\n                _step29;\n\n            try {\n              for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                var line = _step29.value;\n\n                var chunks = this._splitLine(line, font, fontSize, totalWidth);\n\n                var _iterator30 = _createForOfIteratorHelper(chunks),\n                    _step30;\n\n                try {\n                  for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n                    var chunk = _step30.value;\n                    var padding = buf.length === 0 ? hPadding : 0;\n                    buf.push(this._renderText(chunk, font, fontSize, width, alignment, padding, -fontSize));\n                  }\n                } catch (err) {\n                  _iterator30.e(err);\n                } finally {\n                  _iterator30.f();\n                }\n              }\n            } catch (err) {\n              _iterator29.e(err);\n            } finally {\n              _iterator29.f();\n            }\n\n            var renderedText = buf.join(\"\\n\");\n            return \"/Tx BMC q BT \" + defaultAppearance + \" 1 0 0 1 0 \".concat(height, \" Tm \").concat(renderedText) + \" ET Q EMC\";\n          }\n        }, {\n          key: \"_splitLine\",\n          value: function _splitLine(line, font, fontSize, width) {\n            if (line.length <= 1) {\n              return [line];\n            }\n\n            var scale = fontSize / 1000;\n            var whitespace = font.charsToGlyphs(\" \", true)[0].width * scale;\n            var chunks = [];\n            var lastSpacePos = -1,\n                startChunk = 0,\n                currentWidth = 0;\n\n            for (var i = 0, ii = line.length; i < ii; i++) {\n              var character = line.charAt(i);\n\n              if (character === \" \") {\n                if (currentWidth + whitespace > width) {\n                  chunks.push(line.substring(startChunk, i));\n                  startChunk = i;\n                  currentWidth = whitespace;\n                  lastSpacePos = -1;\n                } else {\n                  currentWidth += whitespace;\n                  lastSpacePos = i;\n                }\n              } else {\n                var charWidth = font.charsToGlyphs(character, false)[0].width * scale;\n\n                if (currentWidth + charWidth > width) {\n                  if (lastSpacePos !== -1) {\n                    chunks.push(line.substring(startChunk, lastSpacePos + 1));\n                    startChunk = i = lastSpacePos + 1;\n                    lastSpacePos = -1;\n                    currentWidth = 0;\n                  } else {\n                    chunks.push(line.substring(startChunk, i));\n                    startChunk = i;\n                    currentWidth = charWidth;\n                  }\n                } else {\n                  currentWidth += charWidth;\n                }\n              }\n            }\n\n            if (startChunk < line.length) {\n              chunks.push(line.substring(startChunk, line.length));\n            }\n\n            return chunks;\n          }\n        }]);\n\n        return TextWidgetAnnotation;\n      }(WidgetAnnotation);\n\n      var ButtonWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation2) {\n        _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n        var _super39 = _createSuper(ButtonWidgetAnnotation);\n\n        function ButtonWidgetAnnotation(params) {\n          var _this37;\n\n          _classCallCheck(this, ButtonWidgetAnnotation);\n\n          _this37 = _super39.call(this, params);\n          _this37.checkedAppearance = null;\n          _this37.uncheckedAppearance = null;\n          _this37.data.checkBox = !_this37.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this37.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n          _this37.data.radioButton = _this37.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this37.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n          _this37.data.pushButton = _this37.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\n          if (_this37.data.checkBox) {\n            _this37._processCheckBox(params);\n          } else if (_this37.data.radioButton) {\n            _this37._processRadioButton(params);\n          } else if (_this37.data.pushButton) {\n            _this37._processPushButton(params);\n          } else {\n            (0, _util.warn)(\"Invalid field flags for button widget annotation\");\n          }\n\n          return _this37;\n        }\n\n        _createClass(ButtonWidgetAnnotation, [{\n          key: \"getOperatorList\",\n          value: function getOperatorList(evaluator, task, renderForms, annotationStorage) {\n            if (this.data.pushButton) {\n              return _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), \"getOperatorList\", this).call(this, evaluator, task, false, annotationStorage);\n            }\n\n            if (annotationStorage) {\n              var value = annotationStorage[this.data.id] || false;\n              var appearance;\n\n              if (value) {\n                appearance = this.checkedAppearance;\n              } else {\n                appearance = this.uncheckedAppearance;\n              }\n\n              if (appearance) {\n                var savedAppearance = this.appearance;\n                this.appearance = appearance;\n\n                var operatorList = _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), \"getOperatorList\", this).call(this, evaluator, task, renderForms, annotationStorage);\n\n                this.appearance = savedAppearance;\n                return operatorList;\n              }\n\n              return Promise.resolve(new _operator_list.OperatorList());\n            }\n\n            return _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), \"getOperatorList\", this).call(this, evaluator, task, renderForms, annotationStorage);\n          }\n        }, {\n          key: \"save\",\n          value: function () {\n            var _save3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(evaluator, task, annotationStorage) {\n              return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      if (!this.data.checkBox) {\n                        _context17.next = 2;\n                        break;\n                      }\n\n                      return _context17.abrupt(\"return\", this._saveCheckbox(evaluator, task, annotationStorage));\n\n                    case 2:\n                      if (!this.data.radioButton) {\n                        _context17.next = 4;\n                        break;\n                      }\n\n                      return _context17.abrupt(\"return\", this._saveRadioButton(evaluator, task, annotationStorage));\n\n                    case 4:\n                      return _context17.abrupt(\"return\", _get(_getPrototypeOf(ButtonWidgetAnnotation.prototype), \"save\", this).call(this, evaluator, task, annotationStorage));\n\n                    case 5:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17, this);\n            }));\n\n            function save(_x24, _x25, _x26) {\n              return _save3.apply(this, arguments);\n            }\n\n            return save;\n          }()\n        }, {\n          key: \"_saveCheckbox\",\n          value: function () {\n            var _saveCheckbox2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(evaluator, task, annotationStorage) {\n              var defaultValue, value, dict, name, encrypt, originalTransform, buffer;\n              return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      defaultValue = this.data.fieldValue && this.data.fieldValue !== \"Off\";\n                      value = annotationStorage[this.data.id];\n\n                      if (!(defaultValue === value)) {\n                        _context18.next = 4;\n                        break;\n                      }\n\n                      return _context18.abrupt(\"return\", null);\n\n                    case 4:\n                      dict = evaluator.xref.fetchIfRef(this.ref);\n\n                      if ((0, _primitives.isDict)(dict)) {\n                        _context18.next = 7;\n                        break;\n                      }\n\n                      return _context18.abrupt(\"return\", null);\n\n                    case 7:\n                      name = _primitives.Name.get(value ? this.data.exportValue : \"Off\");\n                      dict.set(\"V\", name);\n                      dict.set(\"AS\", name);\n                      dict.set(\"M\", \"D:\".concat((0, _util.getModificationDate)()));\n                      encrypt = evaluator.xref.encrypt;\n                      originalTransform = null;\n\n                      if (encrypt) {\n                        originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen);\n                      }\n\n                      buffer = [\"\".concat(this.ref.num, \" \").concat(this.ref.gen, \" obj\\n\")];\n                      (0, _writer.writeDict)(dict, buffer, originalTransform);\n                      buffer.push(\"\\nendobj\\n\");\n                      return _context18.abrupt(\"return\", [{\n                        ref: this.ref,\n                        data: buffer.join(\"\")\n                      }]);\n\n                    case 18:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18, this);\n            }));\n\n            function _saveCheckbox(_x27, _x28, _x29) {\n              return _saveCheckbox2.apply(this, arguments);\n            }\n\n            return _saveCheckbox;\n          }()\n        }, {\n          key: \"_saveRadioButton\",\n          value: function () {\n            var _saveRadioButton2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(evaluator, task, annotationStorage) {\n              var defaultValue, value, dict, name, parentBuffer, encrypt, parent, parentTransform, originalTransform, buffer, newRefs;\n              return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      defaultValue = this.data.fieldValue === this.data.buttonValue;\n                      value = annotationStorage[this.data.id];\n\n                      if (!(defaultValue === value)) {\n                        _context19.next = 4;\n                        break;\n                      }\n\n                      return _context19.abrupt(\"return\", null);\n\n                    case 4:\n                      dict = evaluator.xref.fetchIfRef(this.ref);\n\n                      if ((0, _primitives.isDict)(dict)) {\n                        _context19.next = 7;\n                        break;\n                      }\n\n                      return _context19.abrupt(\"return\", null);\n\n                    case 7:\n                      name = _primitives.Name.get(value ? this.data.buttonValue : \"Off\");\n                      parentBuffer = null;\n                      encrypt = evaluator.xref.encrypt;\n\n                      if (value) {\n                        if ((0, _primitives.isRef)(this.parent)) {\n                          parent = evaluator.xref.fetch(this.parent);\n                          parentTransform = null;\n\n                          if (encrypt) {\n                            parentTransform = encrypt.createCipherTransform(this.parent.num, this.parent.gen);\n                          }\n\n                          parent.set(\"V\", name);\n                          parentBuffer = [\"\".concat(this.parent.num, \" \").concat(this.parent.gen, \" obj\\n\")];\n                          (0, _writer.writeDict)(parent, parentBuffer, parentTransform);\n                          parentBuffer.push(\"\\nendobj\\n\");\n                        } else if ((0, _primitives.isDict)(this.parent)) {\n                          this.parent.set(\"V\", name);\n                        }\n                      }\n\n                      dict.set(\"AS\", name);\n                      dict.set(\"M\", \"D:\".concat((0, _util.getModificationDate)()));\n                      originalTransform = null;\n\n                      if (encrypt) {\n                        originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen);\n                      }\n\n                      buffer = [\"\".concat(this.ref.num, \" \").concat(this.ref.gen, \" obj\\n\")];\n                      (0, _writer.writeDict)(dict, buffer, originalTransform);\n                      buffer.push(\"\\nendobj\\n\");\n                      newRefs = [{\n                        ref: this.ref,\n                        data: buffer.join(\"\")\n                      }];\n\n                      if (parentBuffer !== null) {\n                        newRefs.push({\n                          ref: this.parent,\n                          data: parentBuffer.join(\"\")\n                        });\n                      }\n\n                      return _context19.abrupt(\"return\", newRefs);\n\n                    case 21:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19, this);\n            }));\n\n            function _saveRadioButton(_x30, _x31, _x32) {\n              return _saveRadioButton2.apply(this, arguments);\n            }\n\n            return _saveRadioButton;\n          }()\n        }, {\n          key: \"_processCheckBox\",\n          value: function _processCheckBox(params) {\n            var customAppearance = params.dict.get(\"AP\");\n\n            if (!(0, _primitives.isDict)(customAppearance)) {\n              return;\n            }\n\n            var normalAppearance = customAppearance.get(\"N\");\n\n            if (!(0, _primitives.isDict)(normalAppearance)) {\n              return;\n            }\n\n            var exportValues = normalAppearance.getKeys();\n\n            if (!exportValues.includes(\"Off\")) {\n              exportValues.push(\"Off\");\n            }\n\n            if (exportValues.length !== 2) {\n              return;\n            }\n\n            this.data.exportValue = exportValues[0] === \"Off\" ? exportValues[1] : exportValues[0];\n            this.checkedAppearance = normalAppearance.get(this.data.exportValue);\n            this.uncheckedAppearance = normalAppearance.get(\"Off\") || null;\n          }\n        }, {\n          key: \"_processRadioButton\",\n          value: function _processRadioButton(params) {\n            this.data.fieldValue = this.data.buttonValue = null;\n            var fieldParent = params.dict.get(\"Parent\");\n\n            if ((0, _primitives.isDict)(fieldParent) && fieldParent.has(\"V\")) {\n              var fieldParentValue = fieldParent.get(\"V\");\n\n              if ((0, _primitives.isName)(fieldParentValue)) {\n                this.parent = params.dict.getRaw(\"Parent\");\n                this.data.fieldValue = this._decodeFormValue(fieldParentValue);\n              }\n            }\n\n            var appearanceStates = params.dict.get(\"AP\");\n\n            if (!(0, _primitives.isDict)(appearanceStates)) {\n              return;\n            }\n\n            var normalAppearance = appearanceStates.get(\"N\");\n\n            if (!(0, _primitives.isDict)(normalAppearance)) {\n              return;\n            }\n\n            var _iterator31 = _createForOfIteratorHelper(normalAppearance.getKeys()),\n                _step31;\n\n            try {\n              for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n                var key = _step31.value;\n\n                if (key !== \"Off\") {\n                  this.data.buttonValue = key;\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator31.e(err);\n            } finally {\n              _iterator31.f();\n            }\n\n            this.checkedAppearance = normalAppearance.get(this.data.buttonValue);\n            this.uncheckedAppearance = normalAppearance.get(\"Off\") || null;\n          }\n        }, {\n          key: \"_processPushButton\",\n          value: function _processPushButton(params) {\n            if (!params.dict.has(\"A\")) {\n              (0, _util.warn)(\"Push buttons without action dictionaries are not supported\");\n              return;\n            }\n\n            _obj.Catalog.parseDestDictionary({\n              destDict: params.dict,\n              resultObj: this.data,\n              docBaseUrl: params.pdfManager.docBaseUrl\n            });\n          }\n        }]);\n\n        return ButtonWidgetAnnotation;\n      }(WidgetAnnotation);\n\n      var ChoiceWidgetAnnotation = /*#__PURE__*/function (_WidgetAnnotation3) {\n        _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n        var _super40 = _createSuper(ChoiceWidgetAnnotation);\n\n        function ChoiceWidgetAnnotation(params) {\n          var _this38;\n\n          _classCallCheck(this, ChoiceWidgetAnnotation);\n\n          _this38 = _super40.call(this, params);\n          _this38.data.options = [];\n          var options = (0, _core_utils.getInheritableProperty)({\n            dict: params.dict,\n            key: \"Opt\"\n          });\n\n          if (Array.isArray(options)) {\n            var xref = params.xref;\n\n            for (var i = 0, ii = options.length; i < ii; i++) {\n              var option = xref.fetchIfRef(options[i]);\n              var isOptionArray = Array.isArray(option);\n              _this38.data.options[i] = {\n                exportValue: _this38._decodeFormValue(isOptionArray ? xref.fetchIfRef(option[0]) : option),\n                displayValue: _this38._decodeFormValue(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n              };\n            }\n          }\n\n          if ((0, _util.isString)(_this38.data.fieldValue)) {\n            _this38.data.fieldValue = [_this38.data.fieldValue];\n          } else if (!_this38.data.fieldValue) {\n            _this38.data.fieldValue = [];\n          }\n\n          _this38.data.combo = _this38.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n          _this38.data.multiSelect = _this38.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n          _this38._hasText = true;\n          return _this38;\n        }\n\n        return ChoiceWidgetAnnotation;\n      }(WidgetAnnotation);\n\n      var TextAnnotation = /*#__PURE__*/function (_MarkupAnnotation) {\n        _inherits(TextAnnotation, _MarkupAnnotation);\n\n        var _super41 = _createSuper(TextAnnotation);\n\n        function TextAnnotation(parameters) {\n          var _this39;\n\n          _classCallCheck(this, TextAnnotation);\n\n          var DEFAULT_ICON_SIZE = 22;\n          _this39 = _super41.call(this, parameters);\n          var dict = parameters.dict;\n          _this39.data.annotationType = _util.AnnotationType.TEXT;\n\n          if (_this39.data.hasAppearance) {\n            _this39.data.name = \"NoIcon\";\n          } else {\n            _this39.data.rect[1] = _this39.data.rect[3] - DEFAULT_ICON_SIZE;\n            _this39.data.rect[2] = _this39.data.rect[0] + DEFAULT_ICON_SIZE;\n            _this39.data.name = dict.has(\"Name\") ? dict.get(\"Name\").name : \"Note\";\n          }\n\n          if (dict.has(\"State\")) {\n            _this39.data.state = dict.get(\"State\") || null;\n            _this39.data.stateModel = dict.get(\"StateModel\") || null;\n          } else {\n            _this39.data.state = null;\n            _this39.data.stateModel = null;\n          }\n\n          return _this39;\n        }\n\n        return TextAnnotation;\n      }(MarkupAnnotation);\n\n      var LinkAnnotation = /*#__PURE__*/function (_Annotation3) {\n        _inherits(LinkAnnotation, _Annotation3);\n\n        var _super42 = _createSuper(LinkAnnotation);\n\n        function LinkAnnotation(params) {\n          var _this40;\n\n          _classCallCheck(this, LinkAnnotation);\n\n          _this40 = _super42.call(this, params);\n          _this40.data.annotationType = _util.AnnotationType.LINK;\n          var quadPoints = getQuadPoints(params.dict, _this40.rectangle);\n\n          if (quadPoints) {\n            _this40.data.quadPoints = quadPoints;\n          }\n\n          _obj.Catalog.parseDestDictionary({\n            destDict: params.dict,\n            resultObj: _this40.data,\n            docBaseUrl: params.pdfManager.docBaseUrl\n          });\n\n          return _this40;\n        }\n\n        return LinkAnnotation;\n      }(Annotation);\n\n      var PopupAnnotation = /*#__PURE__*/function (_Annotation4) {\n        _inherits(PopupAnnotation, _Annotation4);\n\n        var _super43 = _createSuper(PopupAnnotation);\n\n        function PopupAnnotation(parameters) {\n          var _this41;\n\n          _classCallCheck(this, PopupAnnotation);\n\n          _this41 = _super43.call(this, parameters);\n          _this41.data.annotationType = _util.AnnotationType.POPUP;\n          var parentItem = parameters.dict.get(\"Parent\");\n\n          if (!parentItem) {\n            (0, _util.warn)(\"Popup annotation has a missing or invalid parent annotation.\");\n            return _possibleConstructorReturn(_this41);\n          }\n\n          var parentSubtype = parentItem.get(\"Subtype\");\n          _this41.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n          var rawParent = parameters.dict.getRaw(\"Parent\");\n          _this41.data.parentId = (0, _primitives.isRef)(rawParent) ? rawParent.toString() : null;\n          var rt = parentItem.get(\"RT\");\n\n          if ((0, _primitives.isName)(rt, _util.AnnotationReplyType.GROUP)) {\n            parentItem = parentItem.get(\"IRT\");\n          }\n\n          if (!parentItem.has(\"M\")) {\n            _this41.data.modificationDate = null;\n          } else {\n            _this41.setModificationDate(parentItem.get(\"M\"));\n\n            _this41.data.modificationDate = _this41.modificationDate;\n          }\n\n          if (!parentItem.has(\"C\")) {\n            _this41.data.color = null;\n          } else {\n            _this41.setColor(parentItem.getArray(\"C\"));\n\n            _this41.data.color = _this41.color;\n          }\n\n          if (!_this41.viewable) {\n            var parentFlags = parentItem.get(\"F\");\n\n            if (_this41._isViewable(parentFlags)) {\n              _this41.setFlags(parentFlags);\n            }\n          }\n\n          _this41.data.title = (0, _util.stringToPDFString)(parentItem.get(\"T\") || \"\");\n          _this41.data.contents = (0, _util.stringToPDFString)(parentItem.get(\"Contents\") || \"\");\n          return _this41;\n        }\n\n        return PopupAnnotation;\n      }(Annotation);\n\n      var FreeTextAnnotation = /*#__PURE__*/function (_MarkupAnnotation2) {\n        _inherits(FreeTextAnnotation, _MarkupAnnotation2);\n\n        var _super44 = _createSuper(FreeTextAnnotation);\n\n        function FreeTextAnnotation(parameters) {\n          var _this42;\n\n          _classCallCheck(this, FreeTextAnnotation);\n\n          _this42 = _super44.call(this, parameters);\n          _this42.data.annotationType = _util.AnnotationType.FREETEXT;\n          return _this42;\n        }\n\n        return FreeTextAnnotation;\n      }(MarkupAnnotation);\n\n      var LineAnnotation = /*#__PURE__*/function (_MarkupAnnotation3) {\n        _inherits(LineAnnotation, _MarkupAnnotation3);\n\n        var _super45 = _createSuper(LineAnnotation);\n\n        function LineAnnotation(parameters) {\n          var _this43;\n\n          _classCallCheck(this, LineAnnotation);\n\n          _this43 = _super45.call(this, parameters);\n          _this43.data.annotationType = _util.AnnotationType.LINE;\n          _this43.data.lineCoordinates = _util.Util.normalizeRect(parameters.dict.getArray(\"L\"));\n          return _this43;\n        }\n\n        return LineAnnotation;\n      }(MarkupAnnotation);\n\n      var SquareAnnotation = /*#__PURE__*/function (_MarkupAnnotation4) {\n        _inherits(SquareAnnotation, _MarkupAnnotation4);\n\n        var _super46 = _createSuper(SquareAnnotation);\n\n        function SquareAnnotation(parameters) {\n          var _this44;\n\n          _classCallCheck(this, SquareAnnotation);\n\n          _this44 = _super46.call(this, parameters);\n          _this44.data.annotationType = _util.AnnotationType.SQUARE;\n          return _this44;\n        }\n\n        return SquareAnnotation;\n      }(MarkupAnnotation);\n\n      var CircleAnnotation = /*#__PURE__*/function (_MarkupAnnotation5) {\n        _inherits(CircleAnnotation, _MarkupAnnotation5);\n\n        var _super47 = _createSuper(CircleAnnotation);\n\n        function CircleAnnotation(parameters) {\n          var _this45;\n\n          _classCallCheck(this, CircleAnnotation);\n\n          _this45 = _super47.call(this, parameters);\n          _this45.data.annotationType = _util.AnnotationType.CIRCLE;\n          return _this45;\n        }\n\n        return CircleAnnotation;\n      }(MarkupAnnotation);\n\n      var PolylineAnnotation = /*#__PURE__*/function (_MarkupAnnotation6) {\n        _inherits(PolylineAnnotation, _MarkupAnnotation6);\n\n        var _super48 = _createSuper(PolylineAnnotation);\n\n        function PolylineAnnotation(parameters) {\n          var _this46;\n\n          _classCallCheck(this, PolylineAnnotation);\n\n          _this46 = _super48.call(this, parameters);\n          _this46.data.annotationType = _util.AnnotationType.POLYLINE;\n          var rawVertices = parameters.dict.getArray(\"Vertices\");\n          _this46.data.vertices = [];\n\n          for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n            _this46.data.vertices.push({\n              x: rawVertices[i],\n              y: rawVertices[i + 1]\n            });\n          }\n\n          return _this46;\n        }\n\n        return PolylineAnnotation;\n      }(MarkupAnnotation);\n\n      var PolygonAnnotation = /*#__PURE__*/function (_PolylineAnnotation) {\n        _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n        var _super49 = _createSuper(PolygonAnnotation);\n\n        function PolygonAnnotation(parameters) {\n          var _this47;\n\n          _classCallCheck(this, PolygonAnnotation);\n\n          _this47 = _super49.call(this, parameters);\n          _this47.data.annotationType = _util.AnnotationType.POLYGON;\n          return _this47;\n        }\n\n        return PolygonAnnotation;\n      }(PolylineAnnotation);\n\n      var CaretAnnotation = /*#__PURE__*/function (_MarkupAnnotation7) {\n        _inherits(CaretAnnotation, _MarkupAnnotation7);\n\n        var _super50 = _createSuper(CaretAnnotation);\n\n        function CaretAnnotation(parameters) {\n          var _this48;\n\n          _classCallCheck(this, CaretAnnotation);\n\n          _this48 = _super50.call(this, parameters);\n          _this48.data.annotationType = _util.AnnotationType.CARET;\n          return _this48;\n        }\n\n        return CaretAnnotation;\n      }(MarkupAnnotation);\n\n      var InkAnnotation = /*#__PURE__*/function (_MarkupAnnotation8) {\n        _inherits(InkAnnotation, _MarkupAnnotation8);\n\n        var _super51 = _createSuper(InkAnnotation);\n\n        function InkAnnotation(parameters) {\n          var _this49;\n\n          _classCallCheck(this, InkAnnotation);\n\n          _this49 = _super51.call(this, parameters);\n          _this49.data.annotationType = _util.AnnotationType.INK;\n          var xref = parameters.xref;\n          var originalInkLists = parameters.dict.getArray(\"InkList\");\n          _this49.data.inkLists = [];\n\n          for (var i = 0, ii = originalInkLists.length; i < ii; ++i) {\n            _this49.data.inkLists.push([]);\n\n            for (var j = 0, jj = originalInkLists[i].length; j < jj; j += 2) {\n              _this49.data.inkLists[i].push({\n                x: xref.fetchIfRef(originalInkLists[i][j]),\n                y: xref.fetchIfRef(originalInkLists[i][j + 1])\n              });\n            }\n          }\n\n          return _this49;\n        }\n\n        return InkAnnotation;\n      }(MarkupAnnotation);\n\n      var HighlightAnnotation = /*#__PURE__*/function (_MarkupAnnotation9) {\n        _inherits(HighlightAnnotation, _MarkupAnnotation9);\n\n        var _super52 = _createSuper(HighlightAnnotation);\n\n        function HighlightAnnotation(parameters) {\n          var _this50;\n\n          _classCallCheck(this, HighlightAnnotation);\n\n          _this50 = _super52.call(this, parameters);\n          _this50.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n          var quadPoints = getQuadPoints(parameters.dict, _this50.rectangle);\n\n          if (quadPoints) {\n            _this50.data.quadPoints = quadPoints;\n          }\n\n          return _this50;\n        }\n\n        return HighlightAnnotation;\n      }(MarkupAnnotation);\n\n      var UnderlineAnnotation = /*#__PURE__*/function (_MarkupAnnotation10) {\n        _inherits(UnderlineAnnotation, _MarkupAnnotation10);\n\n        var _super53 = _createSuper(UnderlineAnnotation);\n\n        function UnderlineAnnotation(parameters) {\n          var _this51;\n\n          _classCallCheck(this, UnderlineAnnotation);\n\n          _this51 = _super53.call(this, parameters);\n          _this51.data.annotationType = _util.AnnotationType.UNDERLINE;\n          var quadPoints = getQuadPoints(parameters.dict, _this51.rectangle);\n\n          if (quadPoints) {\n            _this51.data.quadPoints = quadPoints;\n          }\n\n          return _this51;\n        }\n\n        return UnderlineAnnotation;\n      }(MarkupAnnotation);\n\n      var SquigglyAnnotation = /*#__PURE__*/function (_MarkupAnnotation11) {\n        _inherits(SquigglyAnnotation, _MarkupAnnotation11);\n\n        var _super54 = _createSuper(SquigglyAnnotation);\n\n        function SquigglyAnnotation(parameters) {\n          var _this52;\n\n          _classCallCheck(this, SquigglyAnnotation);\n\n          _this52 = _super54.call(this, parameters);\n          _this52.data.annotationType = _util.AnnotationType.SQUIGGLY;\n          var quadPoints = getQuadPoints(parameters.dict, _this52.rectangle);\n\n          if (quadPoints) {\n            _this52.data.quadPoints = quadPoints;\n          }\n\n          return _this52;\n        }\n\n        return SquigglyAnnotation;\n      }(MarkupAnnotation);\n\n      var StrikeOutAnnotation = /*#__PURE__*/function (_MarkupAnnotation12) {\n        _inherits(StrikeOutAnnotation, _MarkupAnnotation12);\n\n        var _super55 = _createSuper(StrikeOutAnnotation);\n\n        function StrikeOutAnnotation(parameters) {\n          var _this53;\n\n          _classCallCheck(this, StrikeOutAnnotation);\n\n          _this53 = _super55.call(this, parameters);\n          _this53.data.annotationType = _util.AnnotationType.STRIKEOUT;\n          var quadPoints = getQuadPoints(parameters.dict, _this53.rectangle);\n\n          if (quadPoints) {\n            _this53.data.quadPoints = quadPoints;\n          }\n\n          return _this53;\n        }\n\n        return StrikeOutAnnotation;\n      }(MarkupAnnotation);\n\n      var StampAnnotation = /*#__PURE__*/function (_MarkupAnnotation13) {\n        _inherits(StampAnnotation, _MarkupAnnotation13);\n\n        var _super56 = _createSuper(StampAnnotation);\n\n        function StampAnnotation(parameters) {\n          var _this54;\n\n          _classCallCheck(this, StampAnnotation);\n\n          _this54 = _super56.call(this, parameters);\n          _this54.data.annotationType = _util.AnnotationType.STAMP;\n          return _this54;\n        }\n\n        return StampAnnotation;\n      }(MarkupAnnotation);\n\n      var FileAttachmentAnnotation = /*#__PURE__*/function (_MarkupAnnotation14) {\n        _inherits(FileAttachmentAnnotation, _MarkupAnnotation14);\n\n        var _super57 = _createSuper(FileAttachmentAnnotation);\n\n        function FileAttachmentAnnotation(parameters) {\n          var _this55;\n\n          _classCallCheck(this, FileAttachmentAnnotation);\n\n          _this55 = _super57.call(this, parameters);\n          var file = new _obj.FileSpec(parameters.dict.get(\"FS\"), parameters.xref);\n          _this55.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n          _this55.data.file = file.serializable;\n          return _this55;\n        }\n\n        return FileAttachmentAnnotation;\n      }(MarkupAnnotation);\n      /***/\n\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.OperatorList = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var QueueOptimizer = function QueueOptimizerClosure() {\n        function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n          var state = parentState;\n\n          for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n            var item = pattern[i];\n            state = state[item] || (state[item] = []);\n          }\n\n          state[pattern[pattern.length - 1]] = {\n            checkFn: checkFn,\n            iterateFn: iterateFn,\n            processFn: processFn\n          };\n        }\n\n        function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n          var iFirstPIMXO = iFirstSave + 2;\n\n          for (var i = 0; i < count; i++) {\n            var arg = argsArray[iFirstPIMXO + 4 * i];\n            var imageMask = arg.length === 1 && arg[0];\n\n            if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n              fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n              continue;\n            }\n\n            break;\n          }\n\n          return count - i;\n        }\n\n        var InitialState = [];\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n          var fnArray = context.fnArray;\n          var iFirstSave = context.iCurr - 3;\n          var pos = (i - iFirstSave) % 4;\n\n          switch (pos) {\n            case 0:\n              return fnArray[i] === _util.OPS.save;\n\n            case 1:\n              return fnArray[i] === _util.OPS.transform;\n\n            case 2:\n              return fnArray[i] === _util.OPS.paintInlineImageXObject;\n\n            case 3:\n              return fnArray[i] === _util.OPS.restore;\n          }\n\n          throw new Error(\"iterateInlineImageGroup - invalid pos: \".concat(pos));\n        }, function foundInlineImageGroup(context, i) {\n          var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n          var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n          var MAX_WIDTH = 1000;\n          var IMAGE_PADDING = 1;\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var curr = context.iCurr;\n          var iFirstSave = curr - 3;\n          var iFirstTransform = curr - 2;\n          var iFirstPIIXO = curr - 1;\n          var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\n          if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n            return i - (i - iFirstSave) % 4;\n          }\n\n          var maxX = 0;\n          var map = [],\n              maxLineHeight = 0;\n          var currentX = IMAGE_PADDING,\n              currentY = IMAGE_PADDING;\n          var q;\n\n          for (q = 0; q < count; q++) {\n            var transform = argsArray[iFirstTransform + (q << 2)];\n            var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\n            if (currentX + img.width > MAX_WIDTH) {\n              maxX = Math.max(maxX, currentX);\n              currentY += maxLineHeight + 2 * IMAGE_PADDING;\n              currentX = 0;\n              maxLineHeight = 0;\n            }\n\n            map.push({\n              transform: transform,\n              x: currentX,\n              y: currentY,\n              w: img.width,\n              h: img.height\n            });\n            currentX += img.width + 2 * IMAGE_PADDING;\n            maxLineHeight = Math.max(maxLineHeight, img.height);\n          }\n\n          var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n          var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n          var imgData = new Uint8ClampedArray(imgWidth * imgHeight * 4);\n          var imgRowSize = imgWidth << 2;\n\n          for (q = 0; q < count; q++) {\n            var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n            var rowSize = map[q].w << 2;\n            var dataOffset = 0;\n            var offset = map[q].x + map[q].y * imgWidth << 2;\n            imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\n            for (var k = 0, kk = map[q].h; k < kk; k++) {\n              imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n              dataOffset += rowSize;\n              offset += imgRowSize;\n            }\n\n            imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\n            while (offset >= 0) {\n              data[offset - 4] = data[offset];\n              data[offset - 3] = data[offset + 1];\n              data[offset - 2] = data[offset + 2];\n              data[offset - 1] = data[offset + 3];\n              data[offset + rowSize] = data[offset + rowSize - 4];\n              data[offset + rowSize + 1] = data[offset + rowSize - 3];\n              data[offset + rowSize + 2] = data[offset + rowSize - 2];\n              data[offset + rowSize + 3] = data[offset + rowSize - 1];\n              offset -= imgRowSize;\n            }\n          }\n\n          fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n          argsArray.splice(iFirstSave, count * 4, [{\n            width: imgWidth,\n            height: imgHeight,\n            kind: _util.ImageKind.RGBA_32BPP,\n            data: imgData\n          }, map]);\n          return iFirstSave + 1;\n        });\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n          var fnArray = context.fnArray;\n          var iFirstSave = context.iCurr - 3;\n          var pos = (i - iFirstSave) % 4;\n\n          switch (pos) {\n            case 0:\n              return fnArray[i] === _util.OPS.save;\n\n            case 1:\n              return fnArray[i] === _util.OPS.transform;\n\n            case 2:\n              return fnArray[i] === _util.OPS.paintImageMaskXObject;\n\n            case 3:\n              return fnArray[i] === _util.OPS.restore;\n          }\n\n          throw new Error(\"iterateImageMaskGroup - invalid pos: \".concat(pos));\n        }, function foundImageMaskGroup(context, i) {\n          var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n          var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n          var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var curr = context.iCurr;\n          var iFirstSave = curr - 3;\n          var iFirstTransform = curr - 2;\n          var iFirstPIMXO = curr - 1;\n          var count = Math.floor((i - iFirstSave) / 4);\n          count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\n          if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n            return i - (i - iFirstSave) % 4;\n          }\n\n          var q;\n          var isSameImage = false;\n          var iTransform, transformArgs;\n          var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n          var firstTransformArg0 = argsArray[iFirstTransform][0],\n              firstTransformArg1 = argsArray[iFirstTransform][1],\n              firstTransformArg2 = argsArray[iFirstTransform][2],\n              firstTransformArg3 = argsArray[iFirstTransform][3];\n\n          if (firstTransformArg1 === firstTransformArg2) {\n            isSameImage = true;\n            iTransform = iFirstTransform + 4;\n            var iPIMXO = iFirstPIMXO + 4;\n\n            for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n              transformArgs = argsArray[iTransform];\n\n              if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== firstTransformArg1 || transformArgs[2] !== firstTransformArg2 || transformArgs[3] !== firstTransformArg3) {\n                if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n                  isSameImage = false;\n                } else {\n                  count = q;\n                }\n\n                break;\n              }\n            }\n          }\n\n          if (isSameImage) {\n            count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n            var positions = new Float32Array(count * 2);\n            iTransform = iFirstTransform;\n\n            for (q = 0; q < count; q++, iTransform += 4) {\n              transformArgs = argsArray[iTransform];\n              positions[q << 1] = transformArgs[4];\n              positions[(q << 1) + 1] = transformArgs[5];\n            }\n\n            fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n            argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg1, firstTransformArg2, firstTransformArg3, positions]);\n          } else {\n            count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n            var images = [];\n\n            for (q = 0; q < count; q++) {\n              transformArgs = argsArray[iFirstTransform + (q << 2)];\n              var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n              images.push({\n                data: maskParams.data,\n                width: maskParams.width,\n                height: maskParams.height,\n                transform: transformArgs\n              });\n            }\n\n            fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n            argsArray.splice(iFirstSave, count * 4, [images]);\n          }\n\n          return iFirstSave + 1;\n        });\n        addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n          var argsArray = context.argsArray;\n          var iFirstTransform = context.iCurr - 2;\n          return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n        }, function iterateImageGroup(context, i) {\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var iFirstSave = context.iCurr - 3;\n          var pos = (i - iFirstSave) % 4;\n\n          switch (pos) {\n            case 0:\n              return fnArray[i] === _util.OPS.save;\n\n            case 1:\n              if (fnArray[i] !== _util.OPS.transform) {\n                return false;\n              }\n\n              var iFirstTransform = context.iCurr - 2;\n              var firstTransformArg0 = argsArray[iFirstTransform][0];\n              var firstTransformArg3 = argsArray[iFirstTransform][3];\n\n              if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n                return false;\n              }\n\n              return true;\n\n            case 2:\n              if (fnArray[i] !== _util.OPS.paintImageXObject) {\n                return false;\n              }\n\n              var iFirstPIXO = context.iCurr - 1;\n              var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\n              if (argsArray[i][0] !== firstPIXOArg0) {\n                return false;\n              }\n\n              return true;\n\n            case 3:\n              return fnArray[i] === _util.OPS.restore;\n          }\n\n          throw new Error(\"iterateImageGroup - invalid pos: \".concat(pos));\n        }, function (context, i) {\n          var MIN_IMAGES_IN_BLOCK = 3;\n          var MAX_IMAGES_IN_BLOCK = 1000;\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var curr = context.iCurr;\n          var iFirstSave = curr - 3;\n          var iFirstTransform = curr - 2;\n          var iFirstPIXO = curr - 1;\n          var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n          var firstTransformArg0 = argsArray[iFirstTransform][0];\n          var firstTransformArg3 = argsArray[iFirstTransform][3];\n          var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n\n          if (count < MIN_IMAGES_IN_BLOCK) {\n            return i - (i - iFirstSave) % 4;\n          }\n\n          var positions = new Float32Array(count * 2);\n          var iTransform = iFirstTransform;\n\n          for (var q = 0; q < count; q++, iTransform += 4) {\n            var transformArgs = argsArray[iTransform];\n            positions[q << 1] = transformArgs[4];\n            positions[(q << 1) + 1] = transformArgs[5];\n          }\n\n          var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n          fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n          argsArray.splice(iFirstSave, count * 4, args);\n          return iFirstSave + 1;\n        });\n        addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function iterateShowTextGroup(context, i) {\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var iFirstSave = context.iCurr - 4;\n          var pos = (i - iFirstSave) % 5;\n\n          switch (pos) {\n            case 0:\n              return fnArray[i] === _util.OPS.beginText;\n\n            case 1:\n              return fnArray[i] === _util.OPS.setFont;\n\n            case 2:\n              return fnArray[i] === _util.OPS.setTextMatrix;\n\n            case 3:\n              if (fnArray[i] !== _util.OPS.showText) {\n                return false;\n              }\n\n              var iFirstSetFont = context.iCurr - 3;\n              var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n              var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\n              if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n                return false;\n              }\n\n              return true;\n\n            case 4:\n              return fnArray[i] === _util.OPS.endText;\n          }\n\n          throw new Error(\"iterateShowTextGroup - invalid pos: \".concat(pos));\n        }, function (context, i) {\n          var MIN_CHARS_IN_BLOCK = 3;\n          var MAX_CHARS_IN_BLOCK = 1000;\n          var fnArray = context.fnArray,\n              argsArray = context.argsArray;\n          var curr = context.iCurr;\n          var iFirstBeginText = curr - 4;\n          var iFirstSetFont = curr - 3;\n          var iFirstSetTextMatrix = curr - 2;\n          var iFirstShowText = curr - 1;\n          var iFirstEndText = curr;\n          var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n          var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n          var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n\n          if (count < MIN_CHARS_IN_BLOCK) {\n            return i - (i - iFirstBeginText) % 5;\n          }\n\n          var iFirst = iFirstBeginText;\n\n          if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n            count++;\n            iFirst -= 5;\n          }\n\n          var iEndText = iFirst + 4;\n\n          for (var q = 1; q < count; q++) {\n            fnArray.splice(iEndText, 3);\n            argsArray.splice(iEndText, 3);\n            iEndText += 2;\n          }\n\n          return iEndText + 1;\n        });\n\n        function QueueOptimizer(queue) {\n          this.queue = queue;\n          this.state = null;\n          this.context = {\n            iCurr: 0,\n            fnArray: queue.fnArray,\n            argsArray: queue.argsArray\n          };\n          this.match = null;\n          this.lastProcessed = 0;\n        }\n\n        QueueOptimizer.prototype = {\n          _optimize: function _optimize() {\n            var fnArray = this.queue.fnArray;\n            var i = this.lastProcessed,\n                ii = fnArray.length;\n            var state = this.state;\n            var match = this.match;\n\n            if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n              this.lastProcessed = ii;\n              return;\n            }\n\n            var context = this.context;\n\n            while (i < ii) {\n              if (match) {\n                var iterate = (0, match.iterateFn)(context, i);\n\n                if (iterate) {\n                  i++;\n                  continue;\n                }\n\n                i = (0, match.processFn)(context, i + 1);\n                ii = fnArray.length;\n                match = null;\n                state = null;\n\n                if (i >= ii) {\n                  break;\n                }\n              }\n\n              state = (state || InitialState)[fnArray[i]];\n\n              if (!state || Array.isArray(state)) {\n                i++;\n                continue;\n              }\n\n              context.iCurr = i;\n              i++;\n\n              if (state.checkFn && !(0, state.checkFn)(context)) {\n                state = null;\n                continue;\n              }\n\n              match = state;\n              state = null;\n            }\n\n            this.state = state;\n            this.match = match;\n            this.lastProcessed = i;\n          },\n          push: function push(fn, args) {\n            this.queue.fnArray.push(fn);\n            this.queue.argsArray.push(args);\n\n            this._optimize();\n          },\n          flush: function flush() {\n            while (this.match) {\n              var length = this.queue.fnArray.length;\n              this.lastProcessed = (0, this.match.processFn)(this.context, length);\n              this.match = null;\n              this.state = null;\n\n              this._optimize();\n            }\n          },\n          reset: function reset() {\n            this.state = null;\n            this.match = null;\n            this.lastProcessed = 0;\n          }\n        };\n        return QueueOptimizer;\n      }();\n\n      var NullOptimizer = function NullOptimizerClosure() {\n        function NullOptimizer(queue) {\n          this.queue = queue;\n        }\n\n        NullOptimizer.prototype = {\n          push: function push(fn, args) {\n            this.queue.fnArray.push(fn);\n            this.queue.argsArray.push(args);\n          },\n          flush: function flush() {},\n          reset: function reset() {}\n        };\n        return NullOptimizer;\n      }();\n\n      var OperatorList = function OperatorListClosure() {\n        var CHUNK_SIZE = 1000;\n        var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\n        function OperatorList(intent, streamSink) {\n          this._streamSink = streamSink;\n          this.fnArray = [];\n          this.argsArray = [];\n\n          if (streamSink && intent !== \"oplist\") {\n            this.optimizer = new QueueOptimizer(this);\n          } else {\n            this.optimizer = new NullOptimizer(this);\n          }\n\n          this.dependencies = new Set();\n          this._totalLength = 0;\n          this.weight = 0;\n          this._resolved = streamSink ? null : Promise.resolve();\n        }\n\n        OperatorList.prototype = {\n          get length() {\n            return this.argsArray.length;\n          },\n\n          get ready() {\n            return this._resolved || this._streamSink.ready;\n          },\n\n          get totalLength() {\n            return this._totalLength + this.length;\n          },\n\n          addOp: function addOp(fn, args) {\n            this.optimizer.push(fn, args);\n            this.weight++;\n\n            if (this._streamSink) {\n              if (this.weight >= CHUNK_SIZE) {\n                this.flush();\n              } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n                this.flush();\n              }\n            }\n          },\n          addDependency: function addDependency(dependency) {\n            if (this.dependencies.has(dependency)) {\n              return;\n            }\n\n            this.dependencies.add(dependency);\n            this.addOp(_util.OPS.dependency, [dependency]);\n          },\n          addDependencies: function addDependencies(dependencies) {\n            var _iterator32 = _createForOfIteratorHelper(dependencies),\n                _step32;\n\n            try {\n              for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n                var dependency = _step32.value;\n                this.addDependency(dependency);\n              }\n            } catch (err) {\n              _iterator32.e(err);\n            } finally {\n              _iterator32.f();\n            }\n          },\n          addOpList: function addOpList(opList) {\n            if (!(opList instanceof OperatorList)) {\n              (0, _util.warn)('addOpList - ignoring invalid \"opList\" parameter.');\n              return;\n            }\n\n            var _iterator33 = _createForOfIteratorHelper(opList.dependencies),\n                _step33;\n\n            try {\n              for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n                var dependency = _step33.value;\n                this.dependencies.add(dependency);\n              }\n            } catch (err) {\n              _iterator33.e(err);\n            } finally {\n              _iterator33.f();\n            }\n\n            for (var i = 0, ii = opList.length; i < ii; i++) {\n              this.addOp(opList.fnArray[i], opList.argsArray[i]);\n            }\n          },\n          getIR: function getIR() {\n            return {\n              fnArray: this.fnArray,\n              argsArray: this.argsArray,\n              length: this.length\n            };\n          },\n\n          get _transfers() {\n            var transfers = [];\n            var fnArray = this.fnArray,\n                argsArray = this.argsArray,\n                length = this.length;\n\n            for (var i = 0; i < length; i++) {\n              switch (fnArray[i]) {\n                case _util.OPS.paintInlineImageXObject:\n                case _util.OPS.paintInlineImageXObjectGroup:\n                case _util.OPS.paintImageMaskXObject:\n                  var arg = argsArray[i][0];\n                  ;\n\n                  if (!arg.cached) {\n                    transfers.push(arg.data.buffer);\n                  }\n\n                  break;\n              }\n            }\n\n            return transfers;\n          },\n\n          flush: function flush() {\n            var lastChunk = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.optimizer.flush();\n            var length = this.length;\n            this._totalLength += length;\n\n            this._streamSink.enqueue({\n              fnArray: this.fnArray,\n              argsArray: this.argsArray,\n              lastChunk: lastChunk,\n              length: length\n            }, 1, this._transfers);\n\n            this.dependencies.clear();\n            this.fnArray.length = 0;\n            this.argsArray.length = 0;\n            this.weight = 0;\n            this.optimizer.reset();\n          }\n        };\n        return OperatorList;\n      }();\n\n      exports.OperatorList = OperatorList;\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.writeDict = writeDict;\n      exports.incrementalUpdate = incrementalUpdate;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _crypto = __w_pdfjs_require__(22);\n\n      function writeDict(dict, buffer, transform) {\n        buffer.push(\"<<\");\n\n        var _iterator34 = _createForOfIteratorHelper(dict.getKeys()),\n            _step34;\n\n        try {\n          for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n            var key = _step34.value;\n            buffer.push(\" /\".concat(key, \" \"));\n            writeValue(dict.getRaw(key), buffer, transform);\n          }\n        } catch (err) {\n          _iterator34.e(err);\n        } finally {\n          _iterator34.f();\n        }\n\n        buffer.push(\">>\");\n      }\n\n      function writeStream(stream, buffer, transform) {\n        writeDict(stream.dict, buffer, transform);\n        buffer.push(\" stream\\n\");\n        var string = (0, _util.bytesToString)(stream.getBytes());\n\n        if (transform !== null) {\n          string = transform.encryptString(string);\n        }\n\n        buffer.push(string);\n        buffer.push(\"\\nendstream\\n\");\n      }\n\n      function writeArray(array, buffer, transform) {\n        buffer.push(\"[\");\n        var first = true;\n\n        var _iterator35 = _createForOfIteratorHelper(array),\n            _step35;\n\n        try {\n          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n            var val = _step35.value;\n\n            if (!first) {\n              buffer.push(\" \");\n            } else {\n              first = false;\n            }\n\n            writeValue(val, buffer, transform);\n          }\n        } catch (err) {\n          _iterator35.e(err);\n        } finally {\n          _iterator35.f();\n        }\n\n        buffer.push(\"]\");\n      }\n\n      function numberToString(value) {\n        if (Number.isInteger(value)) {\n          return value.toString();\n        }\n\n        var roundedValue = Math.round(value * 100);\n\n        if (roundedValue % 100 === 0) {\n          return (roundedValue / 100).toString();\n        }\n\n        if (roundedValue % 10 === 0) {\n          return value.toFixed(1);\n        }\n\n        return value.toFixed(2);\n      }\n\n      function writeValue(value, buffer, transform) {\n        if ((0, _primitives.isName)(value)) {\n          buffer.push(\"/\".concat(value.name));\n        } else if ((0, _primitives.isRef)(value)) {\n          buffer.push(\"\".concat(value.num, \" \").concat(value.gen, \" R\"));\n        } else if (Array.isArray(value)) {\n          writeArray(value, buffer, transform);\n        } else if (typeof value === \"string\") {\n          if (transform !== null) {\n            value = transform.encryptString(value);\n          }\n\n          buffer.push(\"(\".concat((0, _util.escapeString)(value), \")\"));\n        } else if (typeof value === \"number\") {\n          buffer.push(numberToString(value));\n        } else if ((0, _primitives.isDict)(value)) {\n          writeDict(value, buffer, transform);\n        } else if ((0, _primitives.isStream)(value)) {\n          writeStream(value, buffer, transform);\n        }\n      }\n\n      function writeInt(number, size, offset, buffer) {\n        for (var i = size + offset - 1; i > offset - 1; i--) {\n          buffer[i] = number & 0xff;\n          number >>= 8;\n        }\n\n        return offset + size;\n      }\n\n      function writeString(string, offset, buffer) {\n        for (var i = 0, len = string.length; i < len; i++) {\n          buffer[offset + i] = string.charCodeAt(i) & 0xff;\n        }\n      }\n\n      function computeMD5(filesize, xrefInfo) {\n        var time = Math.floor(Date.now() / 1000);\n        var filename = xrefInfo.filename || \"\";\n        var md5Buffer = [time.toString(), filename, filesize.toString()];\n        var md5BufferLen = md5Buffer.reduce(function (a, str) {\n          return a + str.length;\n        }, 0);\n\n        for (var _i21 = 0, _Object$values = Object.values(xrefInfo.info); _i21 < _Object$values.length; _i21++) {\n          var value = _Object$values[_i21];\n          md5Buffer.push(value);\n          md5BufferLen += value.length;\n        }\n\n        var array = new Uint8Array(md5BufferLen);\n        var offset = 0;\n\n        for (var _i22 = 0, _md5Buffer = md5Buffer; _i22 < _md5Buffer.length; _i22++) {\n          var str = _md5Buffer[_i22];\n          writeString(str, offset, array);\n          offset += str.length;\n        }\n\n        return (0, _util.bytesToString)((0, _crypto.calculateMD5)(array));\n      }\n\n      function incrementalUpdate(originalData, xrefInfo, newRefs) {\n        var newXref = new _primitives.Dict(null);\n        var refForXrefTable = xrefInfo.newRef;\n        var buffer, baseOffset;\n        var lastByte = originalData[originalData.length - 1];\n\n        if (lastByte === 0x0a || lastByte === 0x0d) {\n          buffer = [];\n          baseOffset = originalData.length;\n        } else {\n          buffer = [\"\\n\"];\n          baseOffset = originalData.length + 1;\n        }\n\n        newXref.set(\"Size\", refForXrefTable.num + 1);\n        newXref.set(\"Prev\", xrefInfo.startXRef);\n        newXref.set(\"Type\", _primitives.Name.get(\"XRef\"));\n\n        if (xrefInfo.rootRef !== null) {\n          newXref.set(\"Root\", xrefInfo.rootRef);\n        }\n\n        if (xrefInfo.infoRef !== null) {\n          newXref.set(\"Info\", xrefInfo.infoRef);\n        }\n\n        if (xrefInfo.encrypt !== null) {\n          newXref.set(\"Encrypt\", xrefInfo.encrypt);\n        }\n\n        newRefs.push({\n          ref: refForXrefTable,\n          data: \"\"\n        });\n        newRefs = newRefs.sort(function (a, b) {\n          return a.ref.num - b.ref.num;\n        });\n        var xrefTableData = [[0, 1, 0xffff]];\n        var indexes = [0, 1];\n        var maxOffset = 0;\n\n        var _iterator36 = _createForOfIteratorHelper(newRefs),\n            _step36;\n\n        try {\n          for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n            var _step36$value = _step36.value,\n                ref = _step36$value.ref,\n                data = _step36$value.data;\n            maxOffset = Math.max(maxOffset, baseOffset);\n            xrefTableData.push([1, baseOffset, Math.min(ref.gen, 0xffff)]);\n            baseOffset += data.length;\n            indexes.push(ref.num);\n            indexes.push(1);\n            buffer.push(data);\n          }\n        } catch (err) {\n          _iterator36.e(err);\n        } finally {\n          _iterator36.f();\n        }\n\n        newXref.set(\"Index\", indexes);\n\n        if (xrefInfo.fileIds.length !== 0) {\n          var md5 = computeMD5(baseOffset, xrefInfo);\n          newXref.set(\"ID\", [xrefInfo.fileIds[0], md5]);\n        }\n\n        var offsetSize = Math.ceil(Math.log2(maxOffset) / 8);\n        var sizes = [1, offsetSize, 2];\n        var structSize = sizes[0] + sizes[1] + sizes[2];\n        var tableLength = structSize * xrefTableData.length;\n        newXref.set(\"W\", sizes);\n        newXref.set(\"Length\", tableLength);\n        buffer.push(\"\".concat(refForXrefTable.num, \" \").concat(refForXrefTable.gen, \" obj\\n\"));\n        writeDict(newXref, buffer, null);\n        buffer.push(\" stream\\n\");\n        var bufferLen = buffer.reduce(function (a, str) {\n          return a + str.length;\n        }, 0);\n        var footer = \"\\nendstream\\nendobj\\nstartxref\\n\".concat(baseOffset, \"\\n%%EOF\\n\");\n        var array = new Uint8Array(originalData.length + bufferLen + tableLength + footer.length);\n        array.set(originalData);\n        var offset = originalData.length;\n\n        var _iterator37 = _createForOfIteratorHelper(buffer),\n            _step37;\n\n        try {\n          for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n            var str = _step37.value;\n            writeString(str, offset, array);\n            offset += str.length;\n          }\n        } catch (err) {\n          _iterator37.e(err);\n        } finally {\n          _iterator37.f();\n        }\n\n        for (var _i23 = 0, _xrefTableData = xrefTableData; _i23 < _xrefTableData.length; _i23++) {\n          var _xrefTableData$_i = _slicedToArray(_xrefTableData[_i23], 3),\n              type = _xrefTableData$_i[0],\n              objOffset = _xrefTableData$_i[1],\n              gen = _xrefTableData$_i[2];\n\n          offset = writeInt(type, sizes[0], offset, array);\n          offset = writeInt(objOffset, sizes[1], offset, array);\n          offset = writeInt(gen, sizes[2], offset, array);\n        }\n\n        writeString(footer, offset, array);\n        return array;\n      }\n      /***/\n\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PartialEvaluator = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _cmap = __w_pdfjs_require__(29);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _fonts = __w_pdfjs_require__(30);\n\n      var _encodings = __w_pdfjs_require__(33);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _unicode = __w_pdfjs_require__(36);\n\n      var _standard_fonts = __w_pdfjs_require__(35);\n\n      var _pattern = __w_pdfjs_require__(39);\n\n      var _function = __w_pdfjs_require__(40);\n\n      var _parser = __w_pdfjs_require__(11);\n\n      var _image_utils = __w_pdfjs_require__(24);\n\n      var _bidi = __w_pdfjs_require__(42);\n\n      var _colorspace = __w_pdfjs_require__(23);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _glyphlist = __w_pdfjs_require__(34);\n\n      var _metrics = __w_pdfjs_require__(43);\n\n      var _murmurhash = __w_pdfjs_require__(44);\n\n      var _operator_list = __w_pdfjs_require__(26);\n\n      var _image = __w_pdfjs_require__(45);\n\n      var DefaultPartialEvaluatorOptions = Object.freeze({\n        maxImageSize: -1,\n        disableFontFace: false,\n        ignoreErrors: false,\n        isEvalSupported: true,\n        fontExtraProperties: false\n      });\n      var PatternType = {\n        TILING: 1,\n        SHADING: 2\n      };\n      var deferred = Promise.resolve();\n\n      function normalizeBlendMode(value) {\n        var parsingArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (Array.isArray(value)) {\n          for (var i = 0, ii = value.length; i < ii; i++) {\n            var maybeBM = normalizeBlendMode(value[i], true);\n\n            if (maybeBM) {\n              return maybeBM;\n            }\n          }\n\n          (0, _util.warn)(\"Unsupported blend mode Array: \".concat(value));\n          return \"source-over\";\n        }\n\n        if (!(0, _primitives.isName)(value)) {\n          if (parsingArray) {\n            return null;\n          }\n\n          return \"source-over\";\n        }\n\n        switch (value.name) {\n          case \"Normal\":\n          case \"Compatible\":\n            return \"source-over\";\n\n          case \"Multiply\":\n            return \"multiply\";\n\n          case \"Screen\":\n            return \"screen\";\n\n          case \"Overlay\":\n            return \"overlay\";\n\n          case \"Darken\":\n            return \"darken\";\n\n          case \"Lighten\":\n            return \"lighten\";\n\n          case \"ColorDodge\":\n            return \"color-dodge\";\n\n          case \"ColorBurn\":\n            return \"color-burn\";\n\n          case \"HardLight\":\n            return \"hard-light\";\n\n          case \"SoftLight\":\n            return \"soft-light\";\n\n          case \"Difference\":\n            return \"difference\";\n\n          case \"Exclusion\":\n            return \"exclusion\";\n\n          case \"Hue\":\n            return \"hue\";\n\n          case \"Saturation\":\n            return \"saturation\";\n\n          case \"Color\":\n            return \"color\";\n\n          case \"Luminosity\":\n            return \"luminosity\";\n        }\n\n        if (parsingArray) {\n          return null;\n        }\n\n        (0, _util.warn)(\"Unsupported blend mode: \".concat(value.name));\n        return \"source-over\";\n      }\n\n      var TimeSlotManager = /*#__PURE__*/function () {\n        function TimeSlotManager() {\n          _classCallCheck(this, TimeSlotManager);\n\n          this.reset();\n        }\n\n        _createClass(TimeSlotManager, [{\n          key: \"check\",\n          value: function check() {\n            if (++this.checked < TimeSlotManager.CHECK_TIME_EVERY) {\n              return false;\n            }\n\n            this.checked = 0;\n            return this.endTime <= Date.now();\n          }\n        }, {\n          key: \"reset\",\n          value: function reset() {\n            this.endTime = Date.now() + TimeSlotManager.TIME_SLOT_DURATION_MS;\n            this.checked = 0;\n          }\n        }], [{\n          key: \"TIME_SLOT_DURATION_MS\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"TIME_SLOT_DURATION_MS\", 20);\n          }\n        }, {\n          key: \"CHECK_TIME_EVERY\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"CHECK_TIME_EVERY\", 100);\n          }\n        }]);\n\n        return TimeSlotManager;\n      }();\n\n      var PartialEvaluator = /*#__PURE__*/function () {\n        function PartialEvaluator(_ref30) {\n          var xref = _ref30.xref,\n              handler = _ref30.handler,\n              pageIndex = _ref30.pageIndex,\n              idFactory = _ref30.idFactory,\n              fontCache = _ref30.fontCache,\n              builtInCMapCache = _ref30.builtInCMapCache,\n              globalImageCache = _ref30.globalImageCache,\n              _ref30$options = _ref30.options,\n              options = _ref30$options === void 0 ? null : _ref30$options;\n\n          _classCallCheck(this, PartialEvaluator);\n\n          this.xref = xref;\n          this.handler = handler;\n          this.pageIndex = pageIndex;\n          this.idFactory = idFactory;\n          this.fontCache = fontCache;\n          this.builtInCMapCache = builtInCMapCache;\n          this.globalImageCache = globalImageCache;\n          this.options = options || DefaultPartialEvaluatorOptions;\n          this.parsingType3Font = false;\n          this._fetchBuiltInCMapBound = this.fetchBuiltInCMap.bind(this);\n        }\n\n        _createClass(PartialEvaluator, [{\n          key: \"_pdfFunctionFactory\",\n          get: function get() {\n            var pdfFunctionFactory = new _function.PDFFunctionFactory({\n              xref: this.xref,\n              isEvalSupported: this.options.isEvalSupported\n            });\n            return (0, _util.shadow)(this, \"_pdfFunctionFactory\", pdfFunctionFactory);\n          }\n        }, {\n          key: \"clone\",\n          value: function clone() {\n            var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n            var newEvaluator = Object.create(this);\n            newEvaluator.options = newOptions;\n            return newEvaluator;\n          }\n        }, {\n          key: \"hasBlendModes\",\n          value: function hasBlendModes(resources) {\n            if (!(resources instanceof _primitives.Dict)) {\n              return false;\n            }\n\n            var processed = new _primitives.RefSet();\n\n            if (resources.objId) {\n              processed.put(resources.objId);\n            }\n\n            var nodes = [resources],\n                xref = this.xref;\n\n            while (nodes.length) {\n              var node = nodes.shift();\n              var graphicStates = node.get(\"ExtGState\");\n\n              if (graphicStates instanceof _primitives.Dict) {\n                var _iterator38 = _createForOfIteratorHelper(graphicStates.getRawValues()),\n                    _step38;\n\n                try {\n                  for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n                    var graphicState = _step38.value;\n\n                    if (graphicState instanceof _primitives.Ref) {\n                      if (processed.has(graphicState)) {\n                        continue;\n                      }\n\n                      try {\n                        graphicState = xref.fetch(graphicState);\n                      } catch (ex) {\n                        if (ex instanceof _core_utils.MissingDataException) {\n                          throw ex;\n                        }\n\n                        processed.put(graphicState);\n                        (0, _util.info)(\"hasBlendModes - ignoring ExtGState: \\\"\".concat(ex, \"\\\".\"));\n                        continue;\n                      }\n                    }\n\n                    if (!(graphicState instanceof _primitives.Dict)) {\n                      continue;\n                    }\n\n                    if (graphicState.objId) {\n                      processed.put(graphicState.objId);\n                    }\n\n                    var bm = graphicState.get(\"BM\");\n\n                    if (bm instanceof _primitives.Name) {\n                      if (bm.name !== \"Normal\") {\n                        return true;\n                      }\n\n                      continue;\n                    }\n\n                    if (bm !== undefined && Array.isArray(bm)) {\n                      var _iterator39 = _createForOfIteratorHelper(bm),\n                          _step39;\n\n                      try {\n                        for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n                          var element = _step39.value;\n\n                          if (element instanceof _primitives.Name && element.name !== \"Normal\") {\n                            return true;\n                          }\n                        }\n                      } catch (err) {\n                        _iterator39.e(err);\n                      } finally {\n                        _iterator39.f();\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _iterator38.e(err);\n                } finally {\n                  _iterator38.f();\n                }\n              }\n\n              var xObjects = node.get(\"XObject\");\n\n              if (!(xObjects instanceof _primitives.Dict)) {\n                continue;\n              }\n\n              var _iterator40 = _createForOfIteratorHelper(xObjects.getRawValues()),\n                  _step40;\n\n              try {\n                for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n                  var xObject = _step40.value;\n\n                  if (xObject instanceof _primitives.Ref) {\n                    if (processed.has(xObject)) {\n                      continue;\n                    }\n\n                    try {\n                      xObject = xref.fetch(xObject);\n                    } catch (ex) {\n                      if (ex instanceof _core_utils.MissingDataException) {\n                        throw ex;\n                      }\n\n                      processed.put(xObject);\n                      (0, _util.info)(\"hasBlendModes - ignoring XObject: \\\"\".concat(ex, \"\\\".\"));\n                      continue;\n                    }\n                  }\n\n                  if (!(0, _primitives.isStream)(xObject)) {\n                    continue;\n                  }\n\n                  if (xObject.dict.objId) {\n                    processed.put(xObject.dict.objId);\n                  }\n\n                  var xResources = xObject.dict.get(\"Resources\");\n\n                  if (!(xResources instanceof _primitives.Dict)) {\n                    continue;\n                  }\n\n                  if (xResources.objId && processed.has(xResources.objId)) {\n                    continue;\n                  }\n\n                  nodes.push(xResources);\n\n                  if (xResources.objId) {\n                    processed.put(xResources.objId);\n                  }\n                }\n              } catch (err) {\n                _iterator40.e(err);\n              } finally {\n                _iterator40.f();\n              }\n            }\n\n            return false;\n          }\n        }, {\n          key: \"fetchBuiltInCMap\",\n          value: function () {\n            var _fetchBuiltInCMap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(name) {\n              var cachedData, readableStream, reader, data;\n              return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n                while (1) {\n                  switch (_context20.prev = _context20.next) {\n                    case 0:\n                      cachedData = this.builtInCMapCache.get(name);\n\n                      if (!cachedData) {\n                        _context20.next = 3;\n                        break;\n                      }\n\n                      return _context20.abrupt(\"return\", cachedData);\n\n                    case 3:\n                      readableStream = this.handler.sendWithStream(\"FetchBuiltInCMap\", {\n                        name: name\n                      });\n                      reader = readableStream.getReader();\n                      _context20.next = 7;\n                      return new Promise(function (resolve, reject) {\n                        function pump() {\n                          reader.read().then(function (_ref31) {\n                            var value = _ref31.value,\n                                done = _ref31.done;\n\n                            if (done) {\n                              return;\n                            }\n\n                            resolve(value);\n                            pump();\n                          }, reject);\n                        }\n\n                        pump();\n                      });\n\n                    case 7:\n                      data = _context20.sent;\n\n                      if (data.compressionType !== _util.CMapCompressionType.NONE) {\n                        this.builtInCMapCache.set(name, data);\n                      }\n\n                      return _context20.abrupt(\"return\", data);\n\n                    case 10:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }\n              }, _callee20, this);\n            }));\n\n            function fetchBuiltInCMap(_x33) {\n              return _fetchBuiltInCMap.apply(this, arguments);\n            }\n\n            return fetchBuiltInCMap;\n          }()\n        }, {\n          key: \"buildFormXObject\",\n          value: function () {\n            var _buildFormXObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(resources, xobj, smask, operatorList, task, initialState, localColorSpaceCache) {\n              var dict, matrix, bbox, optionalContent, group, groupOptions, groupSubtype, colorSpace, cs, cachedColorSpace;\n              return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n                while (1) {\n                  switch (_context21.prev = _context21.next) {\n                    case 0:\n                      dict = xobj.dict;\n                      matrix = dict.getArray(\"Matrix\");\n                      bbox = dict.getArray(\"BBox\");\n\n                      if (Array.isArray(bbox) && bbox.length === 4) {\n                        bbox = _util.Util.normalizeRect(bbox);\n                      } else {\n                        bbox = null;\n                      }\n\n                      optionalContent = null;\n\n                      if (!dict.has(\"OC\")) {\n                        _context21.next = 10;\n                        break;\n                      }\n\n                      _context21.next = 8;\n                      return this.parseMarkedContentProps(dict.get(\"OC\"), resources);\n\n                    case 8:\n                      optionalContent = _context21.sent;\n                      operatorList.addOp(_util.OPS.beginMarkedContentProps, [\"OC\", optionalContent]);\n\n                    case 10:\n                      group = dict.get(\"Group\");\n\n                      if (!group) {\n                        _context21.next = 30;\n                        break;\n                      }\n\n                      groupOptions = {\n                        matrix: matrix,\n                        bbox: bbox,\n                        smask: smask,\n                        isolated: false,\n                        knockout: false\n                      };\n                      groupSubtype = group.get(\"S\");\n                      colorSpace = null;\n\n                      if (!(0, _primitives.isName)(groupSubtype, \"Transparency\")) {\n                        _context21.next = 28;\n                        break;\n                      }\n\n                      groupOptions.isolated = group.get(\"I\") || false;\n                      groupOptions.knockout = group.get(\"K\") || false;\n\n                      if (!group.has(\"CS\")) {\n                        _context21.next = 28;\n                        break;\n                      }\n\n                      cs = group.getRaw(\"CS\");\n                      cachedColorSpace = _colorspace.ColorSpace.getCached(cs, this.xref, localColorSpaceCache);\n\n                      if (!cachedColorSpace) {\n                        _context21.next = 25;\n                        break;\n                      }\n\n                      colorSpace = cachedColorSpace;\n                      _context21.next = 28;\n                      break;\n\n                    case 25:\n                      _context21.next = 27;\n                      return this.parseColorSpace({\n                        cs: cs,\n                        resources: resources,\n                        localColorSpaceCache: localColorSpaceCache\n                      });\n\n                    case 27:\n                      colorSpace = _context21.sent;\n\n                    case 28:\n                      if (smask && smask.backdrop) {\n                        colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n                        smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n                      }\n\n                      operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n\n                    case 30:\n                      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n                      return _context21.abrupt(\"return\", this.getOperatorList({\n                        stream: xobj,\n                        task: task,\n                        resources: dict.get(\"Resources\") || resources,\n                        operatorList: operatorList,\n                        initialState: initialState\n                      }).then(function () {\n                        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n\n                        if (group) {\n                          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n                        }\n\n                        if (optionalContent) {\n                          operatorList.addOp(_util.OPS.endMarkedContent, []);\n                        }\n                      }));\n\n                    case 32:\n                    case \"end\":\n                      return _context21.stop();\n                  }\n                }\n              }, _callee21, this);\n            }));\n\n            function buildFormXObject(_x34, _x35, _x36, _x37, _x38, _x39, _x40) {\n              return _buildFormXObject.apply(this, arguments);\n            }\n\n            return buildFormXObject;\n          }()\n        }, {\n          key: \"_sendImgData\",\n          value: function _sendImgData(objId, imgData) {\n            var cacheGlobally = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var transfers = imgData ? [imgData.data.buffer] : null;\n\n            if (this.parsingType3Font || cacheGlobally) {\n              return this.handler.send(\"commonobj\", [objId, \"Image\", imgData], transfers);\n            }\n\n            return this.handler.send(\"obj\", [objId, this.pageIndex, \"Image\", imgData], transfers);\n          }\n        }, {\n          key: \"buildPaintImageXObject\",\n          value: function () {\n            var _buildPaintImageXObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(_ref32) {\n              var _this56 = this;\n\n              var resources, image, _ref32$isInline, isInline, operatorList, cacheKey, localImageCache, localColorSpaceCache, dict, imageRef, w, h, maxImageSize, imageMask, imgData, args, width, height, bitStrideLength, imgArray, decode, softMask, mask, SMALL_IMAGE_DIMENSIONS, imageObj, objId, cacheGlobally;\n\n              return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n                while (1) {\n                  switch (_context22.prev = _context22.next) {\n                    case 0:\n                      resources = _ref32.resources, image = _ref32.image, _ref32$isInline = _ref32.isInline, isInline = _ref32$isInline === void 0 ? false : _ref32$isInline, operatorList = _ref32.operatorList, cacheKey = _ref32.cacheKey, localImageCache = _ref32.localImageCache, localColorSpaceCache = _ref32.localColorSpaceCache;\n                      dict = image.dict;\n                      imageRef = dict.objId;\n                      w = dict.get(\"Width\", \"W\");\n                      h = dict.get(\"Height\", \"H\");\n\n                      if (!(!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h)))) {\n                        _context22.next = 8;\n                        break;\n                      }\n\n                      (0, _util.warn)(\"Image dimensions are missing, or not numbers.\");\n                      return _context22.abrupt(\"return\", undefined);\n\n                    case 8:\n                      maxImageSize = this.options.maxImageSize;\n\n                      if (!(maxImageSize !== -1 && w * h > maxImageSize)) {\n                        _context22.next = 12;\n                        break;\n                      }\n\n                      (0, _util.warn)(\"Image exceeded maximum allowed size and was removed.\");\n                      return _context22.abrupt(\"return\", undefined);\n\n                    case 12:\n                      imageMask = dict.get(\"ImageMask\", \"IM\") || false;\n\n                      if (!imageMask) {\n                        _context22.next = 25;\n                        break;\n                      }\n\n                      width = dict.get(\"Width\", \"W\");\n                      height = dict.get(\"Height\", \"H\");\n                      bitStrideLength = width + 7 >> 3;\n                      imgArray = image.getBytes(bitStrideLength * height, true);\n                      decode = dict.getArray(\"Decode\", \"D\");\n                      imgData = _image.PDFImage.createMask({\n                        imgArray: imgArray,\n                        width: width,\n                        height: height,\n                        imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n                        inverseDecode: !!decode && decode[0] > 0\n                      });\n                      imgData.cached = !!cacheKey;\n                      args = [imgData];\n                      operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n\n                      if (cacheKey) {\n                        localImageCache.set(cacheKey, imageRef, {\n                          fn: _util.OPS.paintImageMaskXObject,\n                          args: args\n                        });\n                      }\n\n                      return _context22.abrupt(\"return\", undefined);\n\n                    case 25:\n                      softMask = dict.get(\"SMask\", \"SM\") || false;\n                      mask = dict.get(\"Mask\") || false;\n                      SMALL_IMAGE_DIMENSIONS = 200;\n\n                      if (!(isInline && !softMask && !mask && w + h < SMALL_IMAGE_DIMENSIONS)) {\n                        _context22.next = 33;\n                        break;\n                      }\n\n                      imageObj = new _image.PDFImage({\n                        xref: this.xref,\n                        res: resources,\n                        image: image,\n                        isInline: isInline,\n                        pdfFunctionFactory: this._pdfFunctionFactory,\n                        localColorSpaceCache: localColorSpaceCache\n                      });\n                      imgData = imageObj.createImageData(true);\n                      operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n                      return _context22.abrupt(\"return\", undefined);\n\n                    case 33:\n                      objId = \"img_\".concat(this.idFactory.createObjId()), cacheGlobally = false;\n\n                      if (this.parsingType3Font) {\n                        objId = \"\".concat(this.idFactory.getDocId(), \"_type3_\").concat(objId);\n                      } else if (imageRef) {\n                        cacheGlobally = this.globalImageCache.shouldCache(imageRef, this.pageIndex);\n\n                        if (cacheGlobally) {\n                          objId = \"\".concat(this.idFactory.getDocId(), \"_\").concat(objId);\n                        }\n                      }\n\n                      operatorList.addDependency(objId);\n                      args = [objId, w, h];\n\n                      _image.PDFImage.buildImage({\n                        xref: this.xref,\n                        res: resources,\n                        image: image,\n                        isInline: isInline,\n                        pdfFunctionFactory: this._pdfFunctionFactory,\n                        localColorSpaceCache: localColorSpaceCache\n                      }).then(function (imageObj) {\n                        imgData = imageObj.createImageData(false);\n                        return _this56._sendImgData(objId, imgData, cacheGlobally);\n                      }).catch(function (reason) {\n                        (0, _util.warn)(\"Unable to decode image \\\"\".concat(objId, \"\\\": \\\"\").concat(reason, \"\\\".\"));\n                        return _this56._sendImgData(objId, null, cacheGlobally);\n                      });\n\n                      operatorList.addOp(_util.OPS.paintImageXObject, args);\n\n                      if (cacheKey) {\n                        localImageCache.set(cacheKey, imageRef, {\n                          fn: _util.OPS.paintImageXObject,\n                          args: args\n                        });\n\n                        if (imageRef) {\n                          (0, _util.assert)(!isInline, \"Cannot cache an inline image globally.\");\n                          this.globalImageCache.addPageIndex(imageRef, this.pageIndex);\n\n                          if (cacheGlobally) {\n                            this.globalImageCache.setData(imageRef, {\n                              objId: objId,\n                              fn: _util.OPS.paintImageXObject,\n                              args: args\n                            });\n                          }\n                        }\n                      }\n\n                      return _context22.abrupt(\"return\", undefined);\n\n                    case 41:\n                    case \"end\":\n                      return _context22.stop();\n                  }\n                }\n              }, _callee22, this);\n            }));\n\n            function buildPaintImageXObject(_x41) {\n              return _buildPaintImageXObject.apply(this, arguments);\n            }\n\n            return buildPaintImageXObject;\n          }()\n        }, {\n          key: \"handleSMask\",\n          value: function handleSMask(smask, resources, operatorList, task, stateManager, localColorSpaceCache) {\n            var smaskContent = smask.get(\"G\");\n            var smaskOptions = {\n              subtype: smask.get(\"S\").name,\n              backdrop: smask.get(\"BC\")\n            };\n            var transferObj = smask.get(\"TR\");\n\n            if ((0, _function.isPDFFunction)(transferObj)) {\n              var transferFn = this._pdfFunctionFactory.create(transferObj);\n\n              var transferMap = new Uint8Array(256);\n              var tmp = new Float32Array(1);\n\n              for (var i = 0; i < 256; i++) {\n                tmp[0] = i / 255;\n                transferFn(tmp, 0, tmp, 0);\n                transferMap[i] = tmp[0] * 255 | 0;\n              }\n\n              smaskOptions.transferMap = transferMap;\n            }\n\n            return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone(), localColorSpaceCache);\n          }\n        }, {\n          key: \"handleTransferFunction\",\n          value: function handleTransferFunction(tr) {\n            var transferArray;\n\n            if (Array.isArray(tr)) {\n              transferArray = tr;\n            } else if ((0, _function.isPDFFunction)(tr)) {\n              transferArray = [tr];\n            } else {\n              return null;\n            }\n\n            var transferMaps = [];\n            var numFns = 0,\n                numEffectfulFns = 0;\n\n            var _iterator41 = _createForOfIteratorHelper(transferArray),\n                _step41;\n\n            try {\n              for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n                var entry = _step41.value;\n                var transferObj = this.xref.fetchIfRef(entry);\n                numFns++;\n\n                if ((0, _primitives.isName)(transferObj, \"Identity\")) {\n                  transferMaps.push(null);\n                  continue;\n                } else if (!(0, _function.isPDFFunction)(transferObj)) {\n                  return null;\n                }\n\n                var transferFn = this._pdfFunctionFactory.create(transferObj);\n\n                var transferMap = new Uint8Array(256),\n                    tmp = new Float32Array(1);\n\n                for (var j = 0; j < 256; j++) {\n                  tmp[0] = j / 255;\n                  transferFn(tmp, 0, tmp, 0);\n                  transferMap[j] = tmp[0] * 255 | 0;\n                }\n\n                transferMaps.push(transferMap);\n                numEffectfulFns++;\n              }\n            } catch (err) {\n              _iterator41.e(err);\n            } finally {\n              _iterator41.f();\n            }\n\n            if (!(numFns === 1 || numFns === 4)) {\n              return null;\n            }\n\n            if (numEffectfulFns === 0) {\n              return null;\n            }\n\n            return transferMaps;\n          }\n        }, {\n          key: \"handleTilingType\",\n          value: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n            var _this57 = this;\n\n            var tilingOpList = new _operator_list.OperatorList();\n\n            var patternResources = _primitives.Dict.merge({\n              xref: this.xref,\n              dictArray: [patternDict.get(\"Resources\"), resources]\n            });\n\n            return this.getOperatorList({\n              stream: pattern,\n              task: task,\n              resources: patternResources,\n              operatorList: tilingOpList\n            }).then(function () {\n              return (0, _pattern.getTilingPatternIR)({\n                fnArray: tilingOpList.fnArray,\n                argsArray: tilingOpList.argsArray\n              }, patternDict, args);\n            }).then(function (tilingPatternIR) {\n              operatorList.addDependencies(tilingOpList.dependencies);\n              operatorList.addOp(fn, tilingPatternIR);\n            }, function (reason) {\n              if (reason instanceof _util.AbortException) {\n                return;\n              }\n\n              if (_this57.options.ignoreErrors) {\n                _this57.handler.send(\"UnsupportedFeature\", {\n                  featureId: _util.UNSUPPORTED_FEATURES.errorTilingPattern\n                });\n\n                (0, _util.warn)(\"handleTilingType - ignoring pattern: \\\"\".concat(reason, \"\\\".\"));\n                return;\n              }\n\n              throw reason;\n            });\n          }\n        }, {\n          key: \"handleSetFont\",\n          value: function handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n            var _this58 = this;\n\n            var fontName,\n                fontSize = 0;\n\n            if (fontArgs) {\n              fontArgs = fontArgs.slice();\n              fontName = fontArgs[0].name;\n              fontSize = fontArgs[1];\n            }\n\n            return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n              if (!translated.font.isType3Font) {\n                return translated;\n              }\n\n              return translated.loadType3Data(_this58, resources, task).then(function () {\n                operatorList.addDependencies(translated.type3Dependencies);\n                return translated;\n              }).catch(function (reason) {\n                _this58.handler.send(\"UnsupportedFeature\", {\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadType3\n                });\n\n                return new TranslatedFont({\n                  loadedName: \"g_font_error\",\n                  font: new _fonts.ErrorFont(\"Type3 font load error: \".concat(reason)),\n                  dict: translated.font,\n                  extraProperties: _this58.options.fontExtraProperties\n                });\n              });\n            }).then(function (translated) {\n              state.font = translated.font;\n              state.fontSize = fontSize;\n              state.fontName = fontName;\n              translated.send(_this58.handler);\n              return translated.loadedName;\n            });\n          }\n        }, {\n          key: \"handleText\",\n          value: function handleText(chars, state) {\n            var font = state.font;\n            var glyphs = font.charsToGlyphs(chars);\n\n            if (font.data) {\n              var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n\n              if (isAddToPathSet || state.fillColorSpace.name === \"Pattern\" || font.disableFontFace || this.options.disableFontFace) {\n                PartialEvaluator.buildFontPaths(font, glyphs, this.handler);\n              }\n            }\n\n            return glyphs;\n          }\n        }, {\n          key: \"ensureStateFont\",\n          value: function ensureStateFont(state) {\n            if (state.font) {\n              return;\n            }\n\n            var reason = new _util.FormatError(\"Missing setFont (Tf) operator before text rendering operator.\");\n\n            if (this.options.ignoreErrors) {\n              this.handler.send(\"UnsupportedFeature\", {\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontState\n              });\n              (0, _util.warn)(\"ensureStateFont: \\\"\".concat(reason, \"\\\".\"));\n              return;\n            }\n\n            throw reason;\n          }\n        }, {\n          key: \"setGState\",\n          value: function () {\n            var _setGState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(_ref33) {\n              var _this59 = this;\n\n              var resources, gState, operatorList, cacheKey, task, stateManager, localGStateCache, localColorSpaceCache, gStateRef, isSimpleGState, gStateObj, gStateKeys, promise, _loop3, i, ii;\n\n              return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n                while (1) {\n                  switch (_context23.prev = _context23.next) {\n                    case 0:\n                      resources = _ref33.resources, gState = _ref33.gState, operatorList = _ref33.operatorList, cacheKey = _ref33.cacheKey, task = _ref33.task, stateManager = _ref33.stateManager, localGStateCache = _ref33.localGStateCache, localColorSpaceCache = _ref33.localColorSpaceCache;\n                      gStateRef = gState.objId;\n                      isSimpleGState = true;\n                      gStateObj = [];\n                      gStateKeys = gState.getKeys();\n                      promise = Promise.resolve();\n\n                      _loop3 = function _loop3() {\n                        var key = gStateKeys[i];\n                        var value = gState.get(key);\n\n                        switch (key) {\n                          case \"Type\":\n                            break;\n\n                          case \"LW\":\n                          case \"LC\":\n                          case \"LJ\":\n                          case \"ML\":\n                          case \"D\":\n                          case \"RI\":\n                          case \"FL\":\n                          case \"CA\":\n                          case \"ca\":\n                            gStateObj.push([key, value]);\n                            break;\n\n                          case \"Font\":\n                            isSimpleGState = false;\n                            promise = promise.then(function () {\n                              return _this59.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                                operatorList.addDependency(loadedName);\n                                gStateObj.push([key, [loadedName, value[1]]]);\n                              });\n                            });\n                            break;\n\n                          case \"BM\":\n                            gStateObj.push([key, normalizeBlendMode(value)]);\n                            break;\n\n                          case \"SMask\":\n                            if ((0, _primitives.isName)(value, \"None\")) {\n                              gStateObj.push([key, false]);\n                              break;\n                            }\n\n                            if ((0, _primitives.isDict)(value)) {\n                              isSimpleGState = false;\n                              promise = promise.then(function () {\n                                return _this59.handleSMask(value, resources, operatorList, task, stateManager, localColorSpaceCache);\n                              });\n                              gStateObj.push([key, true]);\n                            } else {\n                              (0, _util.warn)(\"Unsupported SMask type\");\n                            }\n\n                            break;\n\n                          case \"TR\":\n                            var transferMaps = _this59.handleTransferFunction(value);\n\n                            gStateObj.push([key, transferMaps]);\n                            break;\n\n                          case \"OP\":\n                          case \"op\":\n                          case \"OPM\":\n                          case \"BG\":\n                          case \"BG2\":\n                          case \"UCR\":\n                          case \"UCR2\":\n                          case \"TR2\":\n                          case \"HT\":\n                          case \"SM\":\n                          case \"SA\":\n                          case \"AIS\":\n                          case \"TK\":\n                            (0, _util.info)(\"graphic state operator \" + key);\n                            break;\n\n                          default:\n                            (0, _util.info)(\"Unknown graphic state operator \" + key);\n                            break;\n                        }\n                      };\n\n                      for (i = 0, ii = gStateKeys.length; i < ii; i++) {\n                        _loop3();\n                      }\n\n                      return _context23.abrupt(\"return\", promise.then(function () {\n                        if (gStateObj.length > 0) {\n                          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n                        }\n\n                        if (isSimpleGState) {\n                          localGStateCache.set(cacheKey, gStateRef, gStateObj);\n                        }\n                      }));\n\n                    case 9:\n                    case \"end\":\n                      return _context23.stop();\n                  }\n                }\n              }, _callee23);\n            }));\n\n            function setGState(_x42) {\n              return _setGState.apply(this, arguments);\n            }\n\n            return setGState;\n          }()\n        }, {\n          key: \"loadFont\",\n          value: function loadFont(fontName, font, resources) {\n            var _this60 = this;\n\n            var errorFont = function errorFont() {\n              return Promise.resolve(new TranslatedFont({\n                loadedName: \"g_font_error\",\n                font: new _fonts.ErrorFont(\"Font \\\"\".concat(fontName, \"\\\" is not available.\")),\n                dict: font,\n                extraProperties: _this60.options.fontExtraProperties\n              }));\n            };\n\n            var fontRef,\n                xref = this.xref;\n\n            if (font) {\n              if (!(0, _primitives.isRef)(font)) {\n                throw new _util.FormatError('The \"font\" object should be a reference.');\n              }\n\n              fontRef = font;\n            } else {\n              var fontRes = resources.get(\"Font\");\n\n              if (fontRes) {\n                fontRef = fontRes.getRaw(fontName);\n              }\n            }\n\n            if (!fontRef) {\n              var partialMsg = \"Font \\\"\".concat(fontName || font && font.toString(), \"\\\" is not available\");\n\n              if (!this.options.ignoreErrors && !this.parsingType3Font) {\n                (0, _util.warn)(\"\".concat(partialMsg, \".\"));\n                return errorFont();\n              }\n\n              this.handler.send(\"UnsupportedFeature\", {\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontMissing\n              });\n              (0, _util.warn)(\"\".concat(partialMsg, \" -- attempting to fallback to a default font.\"));\n              fontRef = PartialEvaluator.fallbackFontDict;\n            }\n\n            if (this.fontCache.has(fontRef)) {\n              return this.fontCache.get(fontRef);\n            }\n\n            font = xref.fetchIfRef(fontRef);\n\n            if (!(0, _primitives.isDict)(font)) {\n              return errorFont();\n            }\n\n            if (font.translated) {\n              return font.translated;\n            }\n\n            var fontCapability = (0, _util.createPromiseCapability)();\n            var preEvaluatedFont = this.preEvaluateFont(font);\n            var descriptor = preEvaluatedFont.descriptor,\n                hash = preEvaluatedFont.hash;\n            var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n                fontID;\n\n            if (fontRefIsRef) {\n              fontID = \"f\".concat(fontRef.toString());\n            }\n\n            if (hash && (0, _primitives.isDict)(descriptor)) {\n              if (!descriptor.fontAliases) {\n                descriptor.fontAliases = Object.create(null);\n              }\n\n              var fontAliases = descriptor.fontAliases;\n\n              if (fontAliases[hash]) {\n                var aliasFontRef = fontAliases[hash].aliasRef;\n\n                if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n                  this.fontCache.putAlias(fontRef, aliasFontRef);\n                  return this.fontCache.get(fontRef);\n                }\n              } else {\n                fontAliases[hash] = {\n                  fontID: this.idFactory.createFontId()\n                };\n              }\n\n              if (fontRefIsRef) {\n                fontAliases[hash].aliasRef = fontRef;\n              }\n\n              fontID = fontAliases[hash].fontID;\n            }\n\n            if (fontRefIsRef) {\n              this.fontCache.put(fontRef, fontCapability.promise);\n            } else {\n              if (!fontID) {\n                fontID = this.idFactory.createFontId();\n              }\n\n              this.fontCache.put(\"id_\".concat(fontID), fontCapability.promise);\n            }\n\n            (0, _util.assert)(fontID && fontID.startsWith(\"f\"), 'The \"fontID\" must be (correctly) defined.');\n            font.loadedName = \"\".concat(this.idFactory.getDocId(), \"_\").concat(fontID);\n            font.translated = fontCapability.promise;\n            var translatedPromise;\n\n            try {\n              translatedPromise = this.translateFont(preEvaluatedFont);\n            } catch (e) {\n              translatedPromise = Promise.reject(e);\n            }\n\n            translatedPromise.then(function (translatedFont) {\n              if (translatedFont.fontType !== undefined) {\n                var xrefFontStats = xref.stats.fontTypes;\n                xrefFontStats[translatedFont.fontType] = true;\n              }\n\n              fontCapability.resolve(new TranslatedFont({\n                loadedName: font.loadedName,\n                font: translatedFont,\n                dict: font,\n                extraProperties: _this60.options.fontExtraProperties\n              }));\n            }).catch(function (reason) {\n              _this60.handler.send(\"UnsupportedFeature\", {\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontTranslate\n              });\n\n              try {\n                var fontFile3 = descriptor && descriptor.get(\"FontFile3\");\n                var subtype = fontFile3 && fontFile3.get(\"Subtype\");\n                var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n                var xrefFontStats = xref.stats.fontTypes;\n                xrefFontStats[fontType] = true;\n              } catch (ex) {}\n\n              fontCapability.resolve(new TranslatedFont({\n                loadedName: font.loadedName,\n                font: new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason),\n                dict: font,\n                extraProperties: _this60.options.fontExtraProperties\n              }));\n            });\n            return fontCapability.promise;\n          }\n        }, {\n          key: \"buildPath\",\n          value: function buildPath(operatorList, fn, args) {\n            var parsingText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            var lastIndex = operatorList.length - 1;\n\n            if (!args) {\n              args = [];\n            }\n\n            if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n              if (parsingText) {\n                (0, _util.warn)(\"Encountered path operator \\\"\".concat(fn, \"\\\" inside of a text object.\"));\n                operatorList.addOp(_util.OPS.save, null);\n              }\n\n              operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n\n              if (parsingText) {\n                operatorList.addOp(_util.OPS.restore, null);\n              }\n            } else {\n              var opArgs = operatorList.argsArray[lastIndex];\n              opArgs[0].push(fn);\n              Array.prototype.push.apply(opArgs[1], args);\n            }\n          }\n        }, {\n          key: \"parseColorSpace\",\n          value: function parseColorSpace(_ref34) {\n            var _this61 = this;\n\n            var cs = _ref34.cs,\n                resources = _ref34.resources,\n                localColorSpaceCache = _ref34.localColorSpaceCache;\n            return _colorspace.ColorSpace.parseAsync({\n              cs: cs,\n              xref: this.xref,\n              resources: resources,\n              pdfFunctionFactory: this._pdfFunctionFactory,\n              localColorSpaceCache: localColorSpaceCache\n            }).catch(function (reason) {\n              if (reason instanceof _util.AbortException) {\n                return null;\n              }\n\n              if (_this61.options.ignoreErrors) {\n                _this61.handler.send(\"UnsupportedFeature\", {\n                  featureId: _util.UNSUPPORTED_FEATURES.errorColorSpace\n                });\n\n                (0, _util.warn)(\"parseColorSpace - ignoring ColorSpace: \\\"\".concat(reason, \"\\\".\"));\n                return null;\n              }\n\n              throw reason;\n            });\n          }\n        }, {\n          key: \"handleColorN\",\n          value: function () {\n            var _handleColorN = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(operatorList, fn, args, cs, patterns, resources, task, localColorSpaceCache) {\n              var patternName, pattern, dict, typeNum, color, shading, matrix;\n              return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n                while (1) {\n                  switch (_context24.prev = _context24.next) {\n                    case 0:\n                      patternName = args[args.length - 1];\n\n                      if (!((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name)))) {\n                        _context24.next = 16;\n                        break;\n                      }\n\n                      dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n                      typeNum = dict.get(\"PatternType\");\n\n                      if (!(typeNum === PatternType.TILING)) {\n                        _context24.next = 9;\n                        break;\n                      }\n\n                      color = cs.base ? cs.base.getRgb(args, 0) : null;\n                      return _context24.abrupt(\"return\", this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task));\n\n                    case 9:\n                      if (!(typeNum === PatternType.SHADING)) {\n                        _context24.next = 15;\n                        break;\n                      }\n\n                      shading = dict.get(\"Shading\");\n                      matrix = dict.getArray(\"Matrix\");\n                      pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this._pdfFunctionFactory, localColorSpaceCache);\n                      operatorList.addOp(fn, pattern.getIR());\n                      return _context24.abrupt(\"return\", undefined);\n\n                    case 15:\n                      throw new _util.FormatError(\"Unknown PatternType: \".concat(typeNum));\n\n                    case 16:\n                      throw new _util.FormatError(\"Unknown PatternName: \".concat(patternName));\n\n                    case 17:\n                    case \"end\":\n                      return _context24.stop();\n                  }\n                }\n              }, _callee24, this);\n            }));\n\n            function handleColorN(_x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50) {\n              return _handleColorN.apply(this, arguments);\n            }\n\n            return handleColorN;\n          }()\n        }, {\n          key: \"parseMarkedContentProps\",\n          value: function () {\n            var _parseMarkedContentProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(contentProperties, resources) {\n              var optionalContent, properties, optionalContentType, optionalContentGroups, groupIds, expression;\n              return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n                while (1) {\n                  switch (_context25.prev = _context25.next) {\n                    case 0:\n                      if (!(0, _primitives.isName)(contentProperties)) {\n                        _context25.next = 5;\n                        break;\n                      }\n\n                      properties = resources.get(\"Properties\");\n                      optionalContent = properties.get(contentProperties.name);\n                      _context25.next = 10;\n                      break;\n\n                    case 5:\n                      if (!(0, _primitives.isDict)(contentProperties)) {\n                        _context25.next = 9;\n                        break;\n                      }\n\n                      optionalContent = contentProperties;\n                      _context25.next = 10;\n                      break;\n\n                    case 9:\n                      throw new _util.FormatError(\"Optional content properties malformed.\");\n\n                    case 10:\n                      optionalContentType = optionalContent.get(\"Type\").name;\n\n                      if (!(optionalContentType === \"OCG\")) {\n                        _context25.next = 15;\n                        break;\n                      }\n\n                      return _context25.abrupt(\"return\", {\n                        type: optionalContentType,\n                        id: optionalContent.objId\n                      });\n\n                    case 15:\n                      if (!(optionalContentType === \"OCMD\")) {\n                        _context25.next = 27;\n                        break;\n                      }\n\n                      optionalContentGroups = optionalContent.get(\"OCGs\");\n\n                      if (!(Array.isArray(optionalContentGroups) || (0, _primitives.isDict)(optionalContentGroups))) {\n                        _context25.next = 25;\n                        break;\n                      }\n\n                      groupIds = [];\n\n                      if (Array.isArray(optionalContentGroups)) {\n                        optionalContent.get(\"OCGs\").forEach(function (ocg) {\n                          groupIds.push(ocg.toString());\n                        });\n                      } else {\n                        groupIds.push(optionalContentGroups.objId);\n                      }\n\n                      expression = null;\n\n                      if (optionalContent.get(\"VE\")) {\n                        expression = true;\n                      }\n\n                      return _context25.abrupt(\"return\", {\n                        type: optionalContentType,\n                        ids: groupIds,\n                        policy: (0, _primitives.isName)(optionalContent.get(\"P\")) ? optionalContent.get(\"P\").name : null,\n                        expression: expression\n                      });\n\n                    case 25:\n                      if (!(0, _primitives.isRef)(optionalContentGroups)) {\n                        _context25.next = 27;\n                        break;\n                      }\n\n                      return _context25.abrupt(\"return\", {\n                        type: optionalContentType,\n                        id: optionalContentGroups.toString()\n                      });\n\n                    case 27:\n                      return _context25.abrupt(\"return\", null);\n\n                    case 28:\n                    case \"end\":\n                      return _context25.stop();\n                  }\n                }\n              }, _callee25);\n            }));\n\n            function parseMarkedContentProps(_x51, _x52) {\n              return _parseMarkedContentProps.apply(this, arguments);\n            }\n\n            return parseMarkedContentProps;\n          }()\n        }, {\n          key: \"getOperatorList\",\n          value: function getOperatorList(_ref35) {\n            var _this62 = this;\n\n            var stream = _ref35.stream,\n                task = _ref35.task,\n                resources = _ref35.resources,\n                operatorList = _ref35.operatorList,\n                _ref35$initialState = _ref35.initialState,\n                initialState = _ref35$initialState === void 0 ? null : _ref35$initialState;\n            resources = resources || _primitives.Dict.empty;\n            initialState = initialState || new EvalState();\n\n            if (!operatorList) {\n              throw new Error('getOperatorList: missing \"operatorList\" parameter');\n            }\n\n            var self = this;\n            var xref = this.xref;\n            var parsingText = false;\n            var localImageCache = new _image_utils.LocalImageCache();\n            var localColorSpaceCache = new _image_utils.LocalColorSpaceCache();\n            var localGStateCache = new _image_utils.LocalGStateCache();\n\n            var xobjs = resources.get(\"XObject\") || _primitives.Dict.empty;\n\n            var patterns = resources.get(\"Pattern\") || _primitives.Dict.empty;\n\n            var stateManager = new StateManager(initialState);\n            var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n            var timeSlotManager = new TimeSlotManager();\n\n            function closePendingRestoreOPS(argument) {\n              for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n                operatorList.addOp(_util.OPS.restore, []);\n              }\n            }\n\n            return new Promise(function promiseBody(resolve, reject) {\n              var next = function next(promise) {\n                Promise.all([promise, operatorList.ready]).then(function () {\n                  try {\n                    promiseBody(resolve, reject);\n                  } catch (ex) {\n                    reject(ex);\n                  }\n                }, reject);\n              };\n\n              task.ensureNotTerminated();\n              timeSlotManager.reset();\n              var stop,\n                  operation = {},\n                  i,\n                  ii,\n                  cs,\n                  name;\n\n              while (!(stop = timeSlotManager.check())) {\n                operation.args = null;\n\n                if (!preprocessor.read(operation)) {\n                  break;\n                }\n\n                var args = operation.args;\n                var fn = operation.fn;\n\n                switch (fn | 0) {\n                  case _util.OPS.paintXObject:\n                    name = args[0].name;\n\n                    if (name) {\n                      var localImage = localImageCache.getByName(name);\n\n                      if (localImage) {\n                        operatorList.addOp(localImage.fn, localImage.args);\n                        args = null;\n                        continue;\n                      }\n                    }\n\n                    next(new Promise(function (resolveXObject, rejectXObject) {\n                      if (!name) {\n                        throw new _util.FormatError(\"XObject must be referred to by name.\");\n                      }\n\n                      var xobj = xobjs.getRaw(name);\n\n                      if (xobj instanceof _primitives.Ref) {\n                        var _localImage = localImageCache.getByRef(xobj);\n\n                        if (_localImage) {\n                          operatorList.addOp(_localImage.fn, _localImage.args);\n                          resolveXObject();\n                          return;\n                        }\n\n                        var globalImage = self.globalImageCache.getData(xobj, self.pageIndex);\n\n                        if (globalImage) {\n                          operatorList.addDependency(globalImage.objId);\n                          operatorList.addOp(globalImage.fn, globalImage.args);\n                          resolveXObject();\n                          return;\n                        }\n\n                        xobj = xref.fetch(xobj);\n                      }\n\n                      if (!(0, _primitives.isStream)(xobj)) {\n                        throw new _util.FormatError(\"XObject should be a stream\");\n                      }\n\n                      var type = xobj.dict.get(\"Subtype\");\n\n                      if (!(0, _primitives.isName)(type)) {\n                        throw new _util.FormatError(\"XObject should have a Name subtype\");\n                      }\n\n                      if (type.name === \"Form\") {\n                        stateManager.save();\n                        self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone(), localColorSpaceCache).then(function () {\n                          stateManager.restore();\n                          resolveXObject();\n                        }, rejectXObject);\n                        return;\n                      } else if (type.name === \"Image\") {\n                        self.buildPaintImageXObject({\n                          resources: resources,\n                          image: xobj,\n                          operatorList: operatorList,\n                          cacheKey: name,\n                          localImageCache: localImageCache,\n                          localColorSpaceCache: localColorSpaceCache\n                        }).then(resolveXObject, rejectXObject);\n                        return;\n                      } else if (type.name === \"PS\") {\n                        (0, _util.info)(\"Ignored XObject subtype PS\");\n                      } else {\n                        throw new _util.FormatError(\"Unhandled XObject subtype \".concat(type.name));\n                      }\n\n                      resolveXObject();\n                    }).catch(function (reason) {\n                      if (reason instanceof _util.AbortException) {\n                        return;\n                      }\n\n                      if (self.options.ignoreErrors) {\n                        self.handler.send(\"UnsupportedFeature\", {\n                          featureId: _util.UNSUPPORTED_FEATURES.errorXObject\n                        });\n                        (0, _util.warn)(\"getOperatorList - ignoring XObject: \\\"\".concat(reason, \"\\\".\"));\n                        return;\n                      }\n\n                      throw reason;\n                    }));\n                    return;\n\n                  case _util.OPS.setFont:\n                    var fontSize = args[1];\n                    next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                      operatorList.addDependency(loadedName);\n                      operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n                    }));\n                    return;\n\n                  case _util.OPS.beginText:\n                    parsingText = true;\n                    break;\n\n                  case _util.OPS.endText:\n                    parsingText = false;\n                    break;\n\n                  case _util.OPS.endInlineImage:\n                    var cacheKey = args[0].cacheKey;\n\n                    if (cacheKey) {\n                      var _localImage2 = localImageCache.getByName(cacheKey);\n\n                      if (_localImage2) {\n                        operatorList.addOp(_localImage2.fn, _localImage2.args);\n                        args = null;\n                        continue;\n                      }\n                    }\n\n                    next(self.buildPaintImageXObject({\n                      resources: resources,\n                      image: args[0],\n                      isInline: true,\n                      operatorList: operatorList,\n                      cacheKey: cacheKey,\n                      localImageCache: localImageCache,\n                      localColorSpaceCache: localColorSpaceCache\n                    }));\n                    return;\n\n                  case _util.OPS.showText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    args[0] = self.handleText(args[0], stateManager.state);\n                    break;\n\n                  case _util.OPS.showSpacedText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    var arr = args[0];\n                    var combinedGlyphs = [];\n                    var arrLength = arr.length;\n                    var state = stateManager.state;\n\n                    for (i = 0; i < arrLength; ++i) {\n                      var arrItem = arr[i];\n\n                      if ((0, _util.isString)(arrItem)) {\n                        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                      } else if ((0, _util.isNum)(arrItem)) {\n                        combinedGlyphs.push(arrItem);\n                      }\n                    }\n\n                    args[0] = combinedGlyphs;\n                    fn = _util.OPS.showText;\n                    break;\n\n                  case _util.OPS.nextLineShowText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    operatorList.addOp(_util.OPS.nextLine);\n                    args[0] = self.handleText(args[0], stateManager.state);\n                    fn = _util.OPS.showText;\n                    break;\n\n                  case _util.OPS.nextLineSetSpacingShowText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    operatorList.addOp(_util.OPS.nextLine);\n                    operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n                    operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n                    args[0] = self.handleText(args[0], stateManager.state);\n                    fn = _util.OPS.showText;\n                    break;\n\n                  case _util.OPS.setTextRenderingMode:\n                    stateManager.state.textRenderingMode = args[0];\n                    break;\n\n                  case _util.OPS.setFillColorSpace:\n                    {\n                      var cachedColorSpace = _colorspace.ColorSpace.getCached(args[0], xref, localColorSpaceCache);\n\n                      if (cachedColorSpace) {\n                        stateManager.state.fillColorSpace = cachedColorSpace;\n                        continue;\n                      }\n\n                      next(self.parseColorSpace({\n                        cs: args[0],\n                        resources: resources,\n                        localColorSpaceCache: localColorSpaceCache\n                      }).then(function (colorSpace) {\n                        if (colorSpace) {\n                          stateManager.state.fillColorSpace = colorSpace;\n                        }\n                      }));\n                      return;\n                    }\n\n                  case _util.OPS.setStrokeColorSpace:\n                    {\n                      var _cachedColorSpace = _colorspace.ColorSpace.getCached(args[0], xref, localColorSpaceCache);\n\n                      if (_cachedColorSpace) {\n                        stateManager.state.strokeColorSpace = _cachedColorSpace;\n                        continue;\n                      }\n\n                      next(self.parseColorSpace({\n                        cs: args[0],\n                        resources: resources,\n                        localColorSpaceCache: localColorSpaceCache\n                      }).then(function (colorSpace) {\n                        if (colorSpace) {\n                          stateManager.state.strokeColorSpace = colorSpace;\n                        }\n                      }));\n                      return;\n                    }\n\n                  case _util.OPS.setFillColor:\n                    cs = stateManager.state.fillColorSpace;\n                    args = cs.getRgb(args, 0);\n                    fn = _util.OPS.setFillRGBColor;\n                    break;\n\n                  case _util.OPS.setStrokeColor:\n                    cs = stateManager.state.strokeColorSpace;\n                    args = cs.getRgb(args, 0);\n                    fn = _util.OPS.setStrokeRGBColor;\n                    break;\n\n                  case _util.OPS.setFillGray:\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n                    args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n                    fn = _util.OPS.setFillRGBColor;\n                    break;\n\n                  case _util.OPS.setStrokeGray:\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n                    args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n                    fn = _util.OPS.setStrokeRGBColor;\n                    break;\n\n                  case _util.OPS.setFillCMYKColor:\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n                    args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n                    fn = _util.OPS.setFillRGBColor;\n                    break;\n\n                  case _util.OPS.setStrokeCMYKColor:\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n                    args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n                    fn = _util.OPS.setStrokeRGBColor;\n                    break;\n\n                  case _util.OPS.setFillRGBColor:\n                    stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n                    args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n                    break;\n\n                  case _util.OPS.setStrokeRGBColor:\n                    stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n                    args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n                    break;\n\n                  case _util.OPS.setFillColorN:\n                    cs = stateManager.state.fillColorSpace;\n\n                    if (cs.name === \"Pattern\") {\n                      next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task, localColorSpaceCache));\n                      return;\n                    }\n\n                    args = cs.getRgb(args, 0);\n                    fn = _util.OPS.setFillRGBColor;\n                    break;\n\n                  case _util.OPS.setStrokeColorN:\n                    cs = stateManager.state.strokeColorSpace;\n\n                    if (cs.name === \"Pattern\") {\n                      next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task, localColorSpaceCache));\n                      return;\n                    }\n\n                    args = cs.getRgb(args, 0);\n                    fn = _util.OPS.setStrokeRGBColor;\n                    break;\n\n                  case _util.OPS.shadingFill:\n                    var shadingRes = resources.get(\"Shading\");\n\n                    if (!shadingRes) {\n                      throw new _util.FormatError(\"No shading resource found\");\n                    }\n\n                    var shading = shadingRes.get(args[0].name);\n\n                    if (!shading) {\n                      throw new _util.FormatError(\"No shading object found\");\n                    }\n\n                    var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self._pdfFunctionFactory, localColorSpaceCache);\n\n                    var patternIR = shadingFill.getIR();\n                    args = [patternIR];\n                    fn = _util.OPS.shadingFill;\n                    break;\n\n                  case _util.OPS.setGState:\n                    name = args[0].name;\n\n                    if (name) {\n                      var localGStateObj = localGStateCache.getByName(name);\n\n                      if (localGStateObj) {\n                        if (localGStateObj.length > 0) {\n                          operatorList.addOp(_util.OPS.setGState, [localGStateObj]);\n                        }\n\n                        args = null;\n                        continue;\n                      }\n                    }\n\n                    next(new Promise(function (resolveGState, rejectGState) {\n                      if (!name) {\n                        throw new _util.FormatError(\"GState must be referred to by name.\");\n                      }\n\n                      var extGState = resources.get(\"ExtGState\");\n\n                      if (!(extGState instanceof _primitives.Dict)) {\n                        throw new _util.FormatError(\"ExtGState should be a dictionary.\");\n                      }\n\n                      var gState = extGState.get(name);\n\n                      if (!(gState instanceof _primitives.Dict)) {\n                        throw new _util.FormatError(\"GState should be a dictionary.\");\n                      }\n\n                      self.setGState({\n                        resources: resources,\n                        gState: gState,\n                        operatorList: operatorList,\n                        cacheKey: name,\n                        task: task,\n                        stateManager: stateManager,\n                        localGStateCache: localGStateCache,\n                        localColorSpaceCache: localColorSpaceCache\n                      }).then(resolveGState, rejectGState);\n                    }).catch(function (reason) {\n                      if (reason instanceof _util.AbortException) {\n                        return;\n                      }\n\n                      if (self.options.ignoreErrors) {\n                        self.handler.send(\"UnsupportedFeature\", {\n                          featureId: _util.UNSUPPORTED_FEATURES.errorExtGState\n                        });\n                        (0, _util.warn)(\"getOperatorList - ignoring ExtGState: \\\"\".concat(reason, \"\\\".\"));\n                        return;\n                      }\n\n                      throw reason;\n                    }));\n                    return;\n\n                  case _util.OPS.moveTo:\n                  case _util.OPS.lineTo:\n                  case _util.OPS.curveTo:\n                  case _util.OPS.curveTo2:\n                  case _util.OPS.curveTo3:\n                  case _util.OPS.closePath:\n                  case _util.OPS.rectangle:\n                    self.buildPath(operatorList, fn, args, parsingText);\n                    continue;\n\n                  case _util.OPS.markPoint:\n                  case _util.OPS.markPointProps:\n                  case _util.OPS.beginCompat:\n                  case _util.OPS.endCompat:\n                    continue;\n\n                  case _util.OPS.beginMarkedContentProps:\n                    if (!(0, _primitives.isName)(args[0])) {\n                      (0, _util.warn)(\"Expected name for beginMarkedContentProps arg0=\".concat(args[0]));\n                      continue;\n                    }\n\n                    if (args[0].name === \"OC\") {\n                      next(self.parseMarkedContentProps(args[1], resources).then(function (data) {\n                        operatorList.addOp(_util.OPS.beginMarkedContentProps, [\"OC\", data]);\n                      }).catch(function (reason) {\n                        if (reason instanceof _util.AbortException) {\n                          return;\n                        }\n\n                        if (self.options.ignoreErrors) {\n                          self.handler.send(\"UnsupportedFeature\", {\n                            featureId: _util.UNSUPPORTED_FEATURES.errorMarkedContent\n                          });\n                          (0, _util.warn)(\"getOperatorList - ignoring beginMarkedContentProps: \\\"\".concat(reason, \"\\\".\"));\n                          return;\n                        }\n\n                        throw reason;\n                      }));\n                      return;\n                    }\n\n                    args = [args[0].name];\n                    break;\n\n                  case _util.OPS.beginMarkedContent:\n                  case _util.OPS.endMarkedContent:\n                  default:\n                    if (args !== null) {\n                      for (i = 0, ii = args.length; i < ii; i++) {\n                        if (args[i] instanceof _primitives.Dict) {\n                          break;\n                        }\n                      }\n\n                      if (i < ii) {\n                        (0, _util.warn)(\"getOperatorList - ignoring operator: \" + fn);\n                        continue;\n                      }\n                    }\n\n                }\n\n                operatorList.addOp(fn, args);\n              }\n\n              if (stop) {\n                next(deferred);\n                return;\n              }\n\n              closePendingRestoreOPS();\n              resolve();\n            }).catch(function (reason) {\n              if (reason instanceof _util.AbortException) {\n                return;\n              }\n\n              if (_this62.options.ignoreErrors) {\n                _this62.handler.send(\"UnsupportedFeature\", {\n                  featureId: _util.UNSUPPORTED_FEATURES.errorOperatorList\n                });\n\n                (0, _util.warn)(\"getOperatorList - ignoring errors during \\\"\".concat(task.name, \"\\\" \") + \"task: \\\"\".concat(reason, \"\\\".\"));\n                closePendingRestoreOPS();\n                return;\n              }\n\n              throw reason;\n            });\n          }\n        }, {\n          key: \"getTextContent\",\n          value: function getTextContent(_ref36) {\n            var _this63 = this;\n\n            var stream = _ref36.stream,\n                task = _ref36.task,\n                resources = _ref36.resources,\n                _ref36$stateManager = _ref36.stateManager,\n                stateManager = _ref36$stateManager === void 0 ? null : _ref36$stateManager,\n                _ref36$normalizeWhite = _ref36.normalizeWhitespace,\n                normalizeWhitespace = _ref36$normalizeWhite === void 0 ? false : _ref36$normalizeWhite,\n                _ref36$combineTextIte = _ref36.combineTextItems,\n                combineTextItems = _ref36$combineTextIte === void 0 ? false : _ref36$combineTextIte,\n                sink = _ref36.sink,\n                _ref36$seenStyles = _ref36.seenStyles,\n                seenStyles = _ref36$seenStyles === void 0 ? Object.create(null) : _ref36$seenStyles;\n            resources = resources || _primitives.Dict.empty;\n            stateManager = stateManager || new StateManager(new TextState());\n            var WhitespaceRegexp = /\\s/g;\n            var textContent = {\n              items: [],\n              styles: Object.create(null)\n            };\n            var textContentItem = {\n              initialized: false,\n              str: [],\n              width: 0,\n              height: 0,\n              vertical: false,\n              lastAdvanceWidth: 0,\n              lastAdvanceHeight: 0,\n              textAdvanceScale: 0,\n              spaceWidth: 0,\n              fakeSpaceMin: Infinity,\n              fakeMultiSpaceMin: Infinity,\n              fakeMultiSpaceMax: -0,\n              textRunBreakAllowed: false,\n              transform: null,\n              fontName: null\n            };\n            var SPACE_FACTOR = 0.3;\n            var MULTI_SPACE_FACTOR = 1.5;\n            var MULTI_SPACE_FACTOR_MAX = 4;\n            var self = this;\n            var xref = this.xref;\n            var xobjs = null;\n            var emptyXObjectCache = new _image_utils.LocalImageCache();\n            var emptyGStateCache = new _image_utils.LocalGStateCache();\n            var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n            var textState;\n\n            function ensureTextContentItem() {\n              if (textContentItem.initialized) {\n                return textContentItem;\n              }\n\n              var font = textState.font;\n\n              if (!(font.loadedName in seenStyles)) {\n                seenStyles[font.loadedName] = true;\n                textContent.styles[font.loadedName] = {\n                  fontFamily: font.fallbackName,\n                  ascent: font.ascent,\n                  descent: font.descent,\n                  vertical: font.vertical\n                };\n              }\n\n              textContentItem.fontName = font.loadedName;\n              var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n\n              if (font.isType3Font && textState.fontSize <= 1 && !(0, _util.isArrayEqual)(textState.fontMatrix, _util.FONT_IDENTITY_MATRIX)) {\n                var glyphHeight = font.bbox[3] - font.bbox[1];\n\n                if (glyphHeight > 0) {\n                  tsm[3] *= glyphHeight * textState.fontMatrix[3];\n                }\n              }\n\n              var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n\n              textContentItem.transform = trm;\n\n              if (!font.vertical) {\n                textContentItem.width = 0;\n                textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n                textContentItem.vertical = false;\n              } else {\n                textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n                textContentItem.height = 0;\n                textContentItem.vertical = true;\n              }\n\n              var a = textState.textLineMatrix[0];\n              var b = textState.textLineMatrix[1];\n              var scaleLineX = Math.sqrt(a * a + b * b);\n              a = textState.ctm[0];\n              b = textState.ctm[1];\n              var scaleCtmX = Math.sqrt(a * a + b * b);\n              textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n              textContentItem.lastAdvanceWidth = 0;\n              textContentItem.lastAdvanceHeight = 0;\n              var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\n              if (spaceWidth) {\n                textContentItem.spaceWidth = spaceWidth;\n                textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n                textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n                textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n                textContentItem.textRunBreakAllowed = !font.isMonospace;\n              } else {\n                textContentItem.spaceWidth = 0;\n                textContentItem.fakeSpaceMin = Infinity;\n                textContentItem.fakeMultiSpaceMin = Infinity;\n                textContentItem.fakeMultiSpaceMax = 0;\n                textContentItem.textRunBreakAllowed = false;\n              }\n\n              textContentItem.initialized = true;\n              return textContentItem;\n            }\n\n            function replaceWhitespace(str) {\n              var i = 0,\n                  ii = str.length,\n                  code;\n\n              while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7f) {\n                i++;\n              }\n\n              return i < ii ? str.replace(WhitespaceRegexp, \" \") : str;\n            }\n\n            function runBidiTransform(textChunk) {\n              var str = textChunk.str.join(\"\");\n              var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n              return {\n                str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n                dir: bidiResult.dir,\n                width: textChunk.width,\n                height: textChunk.height,\n                transform: textChunk.transform,\n                fontName: textChunk.fontName\n              };\n            }\n\n            function handleSetFont(fontName, fontRef) {\n              return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n                textState.font = translated.font;\n                textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n              });\n            }\n\n            function buildTextContentItem(chars) {\n              var font = textState.font;\n              var textChunk = ensureTextContentItem();\n              var width = 0;\n              var height = 0;\n              var glyphs = font.charsToGlyphs(chars);\n\n              for (var i = 0; i < glyphs.length; i++) {\n                var glyph = glyphs[i];\n                var glyphWidth = null;\n\n                if (font.vertical && glyph.vmetric) {\n                  glyphWidth = glyph.vmetric[0];\n                } else {\n                  glyphWidth = glyph.width;\n                }\n\n                var glyphUnicode = glyph.unicode;\n                var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n\n                if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n                  glyphUnicode = NormalizedUnicodes[glyphUnicode];\n                }\n\n                glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n                var charSpacing = textState.charSpacing;\n\n                if (glyph.isSpace) {\n                  var wordSpacing = textState.wordSpacing;\n                  charSpacing += wordSpacing;\n\n                  if (wordSpacing > 0) {\n                    addFakeSpaces(wordSpacing, textChunk.str);\n                  }\n                }\n\n                var tx = 0;\n                var ty = 0;\n\n                if (!font.vertical) {\n                  var w0 = glyphWidth * textState.fontMatrix[0];\n                  tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n                  width += tx;\n                } else {\n                  var w1 = glyphWidth * textState.fontMatrix[0];\n                  ty = w1 * textState.fontSize + charSpacing;\n                  height += ty;\n                }\n\n                textState.translateTextMatrix(tx, ty);\n                textChunk.str.push(glyphUnicode);\n              }\n\n              if (!font.vertical) {\n                textChunk.lastAdvanceWidth = width;\n                textChunk.width += width;\n              } else {\n                textChunk.lastAdvanceHeight = height;\n                textChunk.height += Math.abs(height);\n              }\n\n              return textChunk;\n            }\n\n            function addFakeSpaces(width, strBuf) {\n              if (width < textContentItem.fakeSpaceMin) {\n                return;\n              }\n\n              if (width < textContentItem.fakeMultiSpaceMin) {\n                strBuf.push(\" \");\n                return;\n              }\n\n              var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\n              while (fakeSpaces-- > 0) {\n                strBuf.push(\" \");\n              }\n            }\n\n            function flushTextContentItem() {\n              if (!textContentItem.initialized) {\n                return;\n              }\n\n              if (!textContentItem.vertical) {\n                textContentItem.width *= textContentItem.textAdvanceScale;\n              } else {\n                textContentItem.height *= textContentItem.textAdvanceScale;\n              }\n\n              textContent.items.push(runBidiTransform(textContentItem));\n              textContentItem.initialized = false;\n              textContentItem.str.length = 0;\n            }\n\n            function enqueueChunk() {\n              var length = textContent.items.length;\n\n              if (length > 0) {\n                sink.enqueue(textContent, length);\n                textContent.items = [];\n                textContent.styles = Object.create(null);\n              }\n            }\n\n            var timeSlotManager = new TimeSlotManager();\n            return new Promise(function promiseBody(resolve, reject) {\n              var next = function next(promise) {\n                enqueueChunk();\n                Promise.all([promise, sink.ready]).then(function () {\n                  try {\n                    promiseBody(resolve, reject);\n                  } catch (ex) {\n                    reject(ex);\n                  }\n                }, reject);\n              };\n\n              task.ensureNotTerminated();\n              timeSlotManager.reset();\n              var stop,\n                  operation = {},\n                  args = [];\n\n              while (!(stop = timeSlotManager.check())) {\n                args.length = 0;\n                operation.args = args;\n\n                if (!preprocessor.read(operation)) {\n                  break;\n                }\n\n                textState = stateManager.state;\n                var fn = operation.fn;\n                args = operation.args;\n                var advance, diff;\n\n                switch (fn | 0) {\n                  case _util.OPS.setFont:\n                    var fontNameArg = args[0].name,\n                        fontSizeArg = args[1];\n\n                    if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                      break;\n                    }\n\n                    flushTextContentItem();\n                    textState.fontName = fontNameArg;\n                    textState.fontSize = fontSizeArg;\n                    next(handleSetFont(fontNameArg, null));\n                    return;\n\n                  case _util.OPS.setTextRise:\n                    flushTextContentItem();\n                    textState.textRise = args[0];\n                    break;\n\n                  case _util.OPS.setHScale:\n                    flushTextContentItem();\n                    textState.textHScale = args[0] / 100;\n                    break;\n\n                  case _util.OPS.setLeading:\n                    flushTextContentItem();\n                    textState.leading = args[0];\n                    break;\n\n                  case _util.OPS.moveText:\n                    var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n                    advance = args[0] - args[1];\n\n                    if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                      textState.translateTextLineMatrix(args[0], args[1]);\n                      textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                      textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                      diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                      addFakeSpaces(diff, textContentItem.str);\n                      break;\n                    }\n\n                    flushTextContentItem();\n                    textState.translateTextLineMatrix(args[0], args[1]);\n                    textState.textMatrix = textState.textLineMatrix.slice();\n                    break;\n\n                  case _util.OPS.setLeadingMoveText:\n                    flushTextContentItem();\n                    textState.leading = -args[1];\n                    textState.translateTextLineMatrix(args[0], args[1]);\n                    textState.textMatrix = textState.textLineMatrix.slice();\n                    break;\n\n                  case _util.OPS.nextLine:\n                    flushTextContentItem();\n                    textState.carriageReturn();\n                    break;\n\n                  case _util.OPS.setTextMatrix:\n                    advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\n                    if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                      textState.translateTextLineMatrix(advance.width, advance.height);\n                      textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                      textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                      diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                      addFakeSpaces(diff, textContentItem.str);\n                      break;\n                    }\n\n                    flushTextContentItem();\n                    textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n\n                  case _util.OPS.setCharSpacing:\n                    textState.charSpacing = args[0];\n                    break;\n\n                  case _util.OPS.setWordSpacing:\n                    textState.wordSpacing = args[0];\n                    break;\n\n                  case _util.OPS.beginText:\n                    flushTextContentItem();\n                    textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n                    textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n                    break;\n\n                  case _util.OPS.showSpacedText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    var items = args[0];\n                    var offset;\n\n                    for (var j = 0, jj = items.length; j < jj; j++) {\n                      if (typeof items[j] === \"string\") {\n                        buildTextContentItem(items[j]);\n                      } else if ((0, _util.isNum)(items[j])) {\n                        ensureTextContentItem();\n                        advance = items[j] * textState.fontSize / 1000;\n                        var breakTextRun = false;\n\n                        if (textState.font.vertical) {\n                          offset = advance;\n                          textState.translateTextMatrix(0, offset);\n                          breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\n                          if (!breakTextRun) {\n                            textContentItem.height += offset;\n                          }\n                        } else {\n                          advance = -advance;\n                          offset = advance * textState.textHScale;\n                          textState.translateTextMatrix(offset, 0);\n                          breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\n                          if (!breakTextRun) {\n                            textContentItem.width += offset;\n                          }\n                        }\n\n                        if (breakTextRun) {\n                          flushTextContentItem();\n                        } else if (advance > 0) {\n                          addFakeSpaces(advance, textContentItem.str);\n                        }\n                      }\n                    }\n\n                    break;\n\n                  case _util.OPS.showText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    buildTextContentItem(args[0]);\n                    break;\n\n                  case _util.OPS.nextLineShowText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    flushTextContentItem();\n                    textState.carriageReturn();\n                    buildTextContentItem(args[0]);\n                    break;\n\n                  case _util.OPS.nextLineSetSpacingShowText:\n                    if (!stateManager.state.font) {\n                      self.ensureStateFont(stateManager.state);\n                      continue;\n                    }\n\n                    flushTextContentItem();\n                    textState.wordSpacing = args[0];\n                    textState.charSpacing = args[1];\n                    textState.carriageReturn();\n                    buildTextContentItem(args[2]);\n                    break;\n\n                  case _util.OPS.paintXObject:\n                    flushTextContentItem();\n\n                    if (!xobjs) {\n                      xobjs = resources.get(\"XObject\") || _primitives.Dict.empty;\n                    }\n\n                    var name = args[0].name;\n\n                    if (name && emptyXObjectCache.getByName(name)) {\n                      break;\n                    }\n\n                    next(new Promise(function (resolveXObject, rejectXObject) {\n                      if (!name) {\n                        throw new _util.FormatError(\"XObject must be referred to by name.\");\n                      }\n\n                      var xobj = xobjs.getRaw(name);\n\n                      if (xobj instanceof _primitives.Ref) {\n                        if (emptyXObjectCache.getByRef(xobj)) {\n                          resolveXObject();\n                          return;\n                        }\n\n                        xobj = xref.fetch(xobj);\n                      }\n\n                      if (!(0, _primitives.isStream)(xobj)) {\n                        throw new _util.FormatError(\"XObject should be a stream\");\n                      }\n\n                      var type = xobj.dict.get(\"Subtype\");\n\n                      if (!(0, _primitives.isName)(type)) {\n                        throw new _util.FormatError(\"XObject should have a Name subtype\");\n                      }\n\n                      if (type.name !== \"Form\") {\n                        emptyXObjectCache.set(name, xobj.dict.objId, true);\n                        resolveXObject();\n                        return;\n                      }\n\n                      var currentState = stateManager.state.clone();\n                      var xObjStateManager = new StateManager(currentState);\n                      var matrix = xobj.dict.getArray(\"Matrix\");\n\n                      if (Array.isArray(matrix) && matrix.length === 6) {\n                        xObjStateManager.transform(matrix);\n                      }\n\n                      enqueueChunk();\n                      var sinkWrapper = {\n                        enqueueInvoked: false,\n                        enqueue: function enqueue(chunk, size) {\n                          this.enqueueInvoked = true;\n                          sink.enqueue(chunk, size);\n                        },\n\n                        get desiredSize() {\n                          return sink.desiredSize;\n                        },\n\n                        get ready() {\n                          return sink.ready;\n                        }\n\n                      };\n                      self.getTextContent({\n                        stream: xobj,\n                        task: task,\n                        resources: xobj.dict.get(\"Resources\") || resources,\n                        stateManager: xObjStateManager,\n                        normalizeWhitespace: normalizeWhitespace,\n                        combineTextItems: combineTextItems,\n                        sink: sinkWrapper,\n                        seenStyles: seenStyles\n                      }).then(function () {\n                        if (!sinkWrapper.enqueueInvoked) {\n                          emptyXObjectCache.set(name, xobj.dict.objId, true);\n                        }\n\n                        resolveXObject();\n                      }, rejectXObject);\n                    }).catch(function (reason) {\n                      if (reason instanceof _util.AbortException) {\n                        return;\n                      }\n\n                      if (self.options.ignoreErrors) {\n                        (0, _util.warn)(\"getTextContent - ignoring XObject: \\\"\".concat(reason, \"\\\".\"));\n                        return;\n                      }\n\n                      throw reason;\n                    }));\n                    return;\n\n                  case _util.OPS.setGState:\n                    name = args[0].name;\n\n                    if (name && emptyGStateCache.getByName(name)) {\n                      break;\n                    }\n\n                    next(new Promise(function (resolveGState, rejectGState) {\n                      if (!name) {\n                        throw new _util.FormatError(\"GState must be referred to by name.\");\n                      }\n\n                      var extGState = resources.get(\"ExtGState\");\n\n                      if (!(extGState instanceof _primitives.Dict)) {\n                        throw new _util.FormatError(\"ExtGState should be a dictionary.\");\n                      }\n\n                      var gState = extGState.get(name);\n\n                      if (!(gState instanceof _primitives.Dict)) {\n                        throw new _util.FormatError(\"GState should be a dictionary.\");\n                      }\n\n                      var gStateFont = gState.get(\"Font\");\n\n                      if (!gStateFont) {\n                        emptyGStateCache.set(name, gState.objId, true);\n                        resolveGState();\n                        return;\n                      }\n\n                      flushTextContentItem();\n                      textState.fontName = null;\n                      textState.fontSize = gStateFont[1];\n                      handleSetFont(null, gStateFont[0]).then(resolveGState, rejectGState);\n                    }).catch(function (reason) {\n                      if (reason instanceof _util.AbortException) {\n                        return;\n                      }\n\n                      if (self.options.ignoreErrors) {\n                        (0, _util.warn)(\"getTextContent - ignoring ExtGState: \\\"\".concat(reason, \"\\\".\"));\n                        return;\n                      }\n\n                      throw reason;\n                    }));\n                    return;\n                }\n\n                if (textContent.items.length >= sink.desiredSize) {\n                  stop = true;\n                  break;\n                }\n              }\n\n              if (stop) {\n                next(deferred);\n                return;\n              }\n\n              flushTextContentItem();\n              enqueueChunk();\n              resolve();\n            }).catch(function (reason) {\n              if (reason instanceof _util.AbortException) {\n                return;\n              }\n\n              if (_this63.options.ignoreErrors) {\n                (0, _util.warn)(\"getTextContent - ignoring errors during \\\"\".concat(task.name, \"\\\" \") + \"task: \\\"\".concat(reason, \"\\\".\"));\n                flushTextContentItem();\n                enqueueChunk();\n                return;\n              }\n\n              throw reason;\n            });\n          }\n        }, {\n          key: \"extractDataStructures\",\n          value: function extractDataStructures(dict, baseDict, properties) {\n            var _this64 = this;\n\n            var xref = this.xref;\n            var cidToGidBytes;\n            var toUnicode = dict.get(\"ToUnicode\") || baseDict.get(\"ToUnicode\");\n            var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\n            if (properties.composite) {\n              var cidSystemInfo = dict.get(\"CIDSystemInfo\");\n\n              if ((0, _primitives.isDict)(cidSystemInfo)) {\n                properties.cidSystemInfo = {\n                  registry: (0, _util.stringToPDFString)(cidSystemInfo.get(\"Registry\")),\n                  ordering: (0, _util.stringToPDFString)(cidSystemInfo.get(\"Ordering\")),\n                  supplement: cidSystemInfo.get(\"Supplement\")\n                };\n              }\n\n              var cidToGidMap = dict.get(\"CIDToGIDMap\");\n\n              if ((0, _primitives.isStream)(cidToGidMap)) {\n                cidToGidBytes = cidToGidMap.getBytes();\n              }\n            }\n\n            var differences = [];\n            var baseEncodingName = null;\n            var encoding;\n\n            if (dict.has(\"Encoding\")) {\n              encoding = dict.get(\"Encoding\");\n\n              if ((0, _primitives.isDict)(encoding)) {\n                baseEncodingName = encoding.get(\"BaseEncoding\");\n                baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n\n                if (encoding.has(\"Differences\")) {\n                  var diffEncoding = encoding.get(\"Differences\");\n                  var index = 0;\n\n                  for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n                    var data = xref.fetchIfRef(diffEncoding[j]);\n\n                    if ((0, _util.isNum)(data)) {\n                      index = data;\n                    } else if ((0, _primitives.isName)(data)) {\n                      differences[index++] = data.name;\n                    } else {\n                      throw new _util.FormatError(\"Invalid entry in 'Differences' array: \".concat(data));\n                    }\n                  }\n                }\n              } else if ((0, _primitives.isName)(encoding)) {\n                baseEncodingName = encoding.name;\n              } else {\n                throw new _util.FormatError(\"Encoding is not a Name nor a Dict\");\n              }\n\n              if (baseEncodingName !== \"MacRomanEncoding\" && baseEncodingName !== \"MacExpertEncoding\" && baseEncodingName !== \"WinAnsiEncoding\") {\n                baseEncodingName = null;\n              }\n            }\n\n            if (baseEncodingName) {\n              properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n            } else {\n              var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n              var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n              encoding = _encodings.StandardEncoding;\n\n              if (properties.type === \"TrueType\" && !isNonsymbolicFont) {\n                encoding = _encodings.WinAnsiEncoding;\n              }\n\n              if (isSymbolicFont) {\n                encoding = _encodings.MacRomanEncoding;\n\n                if (!properties.file) {\n                  if (/Symbol/i.test(properties.name)) {\n                    encoding = _encodings.SymbolSetEncoding;\n                  } else if (/Dingbats|Wingdings/i.test(properties.name)) {\n                    encoding = _encodings.ZapfDingbatsEncoding;\n                  }\n                }\n              }\n\n              properties.defaultEncoding = encoding;\n            }\n\n            properties.differences = differences;\n            properties.baseEncodingName = baseEncodingName;\n            properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n            properties.dict = dict;\n            return toUnicodePromise.then(function (readToUnicode) {\n              properties.toUnicode = readToUnicode;\n              return _this64.buildToUnicode(properties);\n            }).then(function (builtToUnicode) {\n              properties.toUnicode = builtToUnicode;\n\n              if (cidToGidBytes) {\n                properties.cidToGidMap = _this64.readCidToGidMap(cidToGidBytes, builtToUnicode);\n              }\n\n              return properties;\n            });\n          }\n        }, {\n          key: \"_buildSimpleFontToUnicode\",\n          value: function _buildSimpleFontToUnicode(properties) {\n            var forceGlyphs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            (0, _util.assert)(!properties.composite, \"Must be a simple font.\");\n            var toUnicode = [];\n            var encoding = properties.defaultEncoding.slice();\n            var baseEncodingName = properties.baseEncodingName;\n            var differences = properties.differences;\n\n            for (var charcode in differences) {\n              var glyphName = differences[charcode];\n\n              if (glyphName === \".notdef\") {\n                continue;\n              }\n\n              encoding[charcode] = glyphName;\n            }\n\n            var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\n            for (var _charcode in encoding) {\n              var _glyphName = encoding[_charcode];\n\n              if (_glyphName === \"\") {\n                continue;\n              } else if (glyphsUnicodeMap[_glyphName] === undefined) {\n                var code = 0;\n\n                switch (_glyphName[0]) {\n                  case \"G\":\n                    if (_glyphName.length === 3) {\n                      code = parseInt(_glyphName.substring(1), 16);\n                    }\n\n                    break;\n\n                  case \"g\":\n                    if (_glyphName.length === 5) {\n                      code = parseInt(_glyphName.substring(1), 16);\n                    }\n\n                    break;\n\n                  case \"C\":\n                  case \"c\":\n                    if (_glyphName.length >= 3 && _glyphName.length <= 4) {\n                      var codeStr = _glyphName.substring(1);\n\n                      if (forceGlyphs) {\n                        code = parseInt(codeStr, 16);\n                        break;\n                      }\n\n                      code = +codeStr;\n\n                      if (Number.isNaN(code) && Number.isInteger(parseInt(codeStr, 16))) {\n                        return this._buildSimpleFontToUnicode(properties, true);\n                      }\n                    }\n\n                    break;\n\n                  default:\n                    var unicode = (0, _unicode.getUnicodeForGlyph)(_glyphName, glyphsUnicodeMap);\n\n                    if (unicode !== -1) {\n                      code = unicode;\n                    }\n\n                }\n\n                if (code > 0 && code <= 0x10ffff && Number.isInteger(code)) {\n                  if (baseEncodingName && code === +_charcode) {\n                    var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n\n                    if (baseEncoding && (_glyphName = baseEncoding[_charcode])) {\n                      toUnicode[_charcode] = String.fromCharCode(glyphsUnicodeMap[_glyphName]);\n                      continue;\n                    }\n                  }\n\n                  toUnicode[_charcode] = String.fromCodePoint(code);\n                }\n\n                continue;\n              }\n\n              toUnicode[_charcode] = String.fromCharCode(glyphsUnicodeMap[_glyphName]);\n            }\n\n            return new _fonts.ToUnicodeMap(toUnicode);\n          }\n        }, {\n          key: \"buildToUnicode\",\n          value: function buildToUnicode(properties) {\n            properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\n            if (properties.hasIncludedToUnicodeMap) {\n              if (!properties.composite && properties.hasEncoding) {\n                properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n              }\n\n              return Promise.resolve(properties.toUnicode);\n            }\n\n            if (!properties.composite) {\n              return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n            }\n\n            if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === \"Adobe\" && (properties.cidSystemInfo.ordering === \"GB1\" || properties.cidSystemInfo.ordering === \"CNS1\" || properties.cidSystemInfo.ordering === \"Japan1\" || properties.cidSystemInfo.ordering === \"Korea1\"))) {\n              var registry = properties.cidSystemInfo.registry;\n              var ordering = properties.cidSystemInfo.ordering;\n\n              var ucs2CMapName = _primitives.Name.get(registry + \"-\" + ordering + \"-UCS2\");\n\n              return _cmap.CMapFactory.create({\n                encoding: ucs2CMapName,\n                fetchBuiltInCMap: this._fetchBuiltInCMapBound,\n                useCMap: null\n              }).then(function (ucs2CMap) {\n                var cMap = properties.cMap;\n                var toUnicode = [];\n                cMap.forEach(function (charcode, cid) {\n                  if (cid > 0xffff) {\n                    throw new _util.FormatError(\"Max size of CID is 65,535\");\n                  }\n\n                  var ucs2 = ucs2CMap.lookup(cid);\n\n                  if (ucs2) {\n                    toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n                  }\n                });\n                return new _fonts.ToUnicodeMap(toUnicode);\n              });\n            }\n\n            return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n          }\n        }, {\n          key: \"readToUnicode\",\n          value: function readToUnicode(toUnicode) {\n            var _this65 = this;\n\n            var cmapObj = toUnicode;\n\n            if ((0, _primitives.isName)(cmapObj)) {\n              return _cmap.CMapFactory.create({\n                encoding: cmapObj,\n                fetchBuiltInCMap: this._fetchBuiltInCMapBound,\n                useCMap: null\n              }).then(function (cmap) {\n                if (cmap instanceof _cmap.IdentityCMap) {\n                  return new _fonts.IdentityToUnicodeMap(0, 0xffff);\n                }\n\n                return new _fonts.ToUnicodeMap(cmap.getMap());\n              });\n            } else if ((0, _primitives.isStream)(cmapObj)) {\n              return _cmap.CMapFactory.create({\n                encoding: cmapObj,\n                fetchBuiltInCMap: this._fetchBuiltInCMapBound,\n                useCMap: null\n              }).then(function (cmap) {\n                if (cmap instanceof _cmap.IdentityCMap) {\n                  return new _fonts.IdentityToUnicodeMap(0, 0xffff);\n                }\n\n                var map = new Array(cmap.length);\n                cmap.forEach(function (charCode, token) {\n                  var str = [];\n\n                  for (var k = 0; k < token.length; k += 2) {\n                    var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\n                    if ((w1 & 0xf800) !== 0xd800) {\n                      str.push(w1);\n                      continue;\n                    }\n\n                    k += 2;\n                    var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n                    str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n                  }\n\n                  map[charCode] = String.fromCodePoint.apply(String, str);\n                });\n                return new _fonts.ToUnicodeMap(map);\n              }, function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return null;\n                }\n\n                if (_this65.options.ignoreErrors) {\n                  _this65.handler.send(\"UnsupportedFeature\", {\n                    featureId: _util.UNSUPPORTED_FEATURES.errorFontToUnicode\n                  });\n\n                  (0, _util.warn)(\"readToUnicode - ignoring ToUnicode data: \\\"\".concat(reason, \"\\\".\"));\n                  return null;\n                }\n\n                throw reason;\n              });\n            }\n\n            return Promise.resolve(null);\n          }\n        }, {\n          key: \"readCidToGidMap\",\n          value: function readCidToGidMap(glyphsData, toUnicode) {\n            var result = [];\n\n            for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n              var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n              var code = j >> 1;\n\n              if (glyphID === 0 && !toUnicode.has(code)) {\n                continue;\n              }\n\n              result[code] = glyphID;\n            }\n\n            return result;\n          }\n        }, {\n          key: \"extractWidths\",\n          value: function extractWidths(dict, descriptor, properties) {\n            var xref = this.xref;\n            var glyphsWidths = [];\n            var defaultWidth = 0;\n            var glyphsVMetrics = [];\n            var defaultVMetrics;\n            var i, ii, j, jj, start, code, widths;\n\n            if (properties.composite) {\n              defaultWidth = dict.has(\"DW\") ? dict.get(\"DW\") : 1000;\n              widths = dict.get(\"W\");\n\n              if (widths) {\n                for (i = 0, ii = widths.length; i < ii; i++) {\n                  start = xref.fetchIfRef(widths[i++]);\n                  code = xref.fetchIfRef(widths[i]);\n\n                  if (Array.isArray(code)) {\n                    for (j = 0, jj = code.length; j < jj; j++) {\n                      glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n                    }\n                  } else {\n                    var width = xref.fetchIfRef(widths[++i]);\n\n                    for (j = start; j <= code; j++) {\n                      glyphsWidths[j] = width;\n                    }\n                  }\n                }\n              }\n\n              if (properties.vertical) {\n                var vmetrics = dict.getArray(\"DW2\") || [880, -1000];\n                defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n                vmetrics = dict.get(\"W2\");\n\n                if (vmetrics) {\n                  for (i = 0, ii = vmetrics.length; i < ii; i++) {\n                    start = xref.fetchIfRef(vmetrics[i++]);\n                    code = xref.fetchIfRef(vmetrics[i]);\n\n                    if (Array.isArray(code)) {\n                      for (j = 0, jj = code.length; j < jj; j++) {\n                        glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                      }\n                    } else {\n                      var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n\n                      for (j = start; j <= code; j++) {\n                        glyphsVMetrics[j] = vmetric;\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              var firstChar = properties.firstChar;\n              widths = dict.get(\"Widths\");\n\n              if (widths) {\n                j = firstChar;\n\n                for (i = 0, ii = widths.length; i < ii; i++) {\n                  glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n                }\n\n                defaultWidth = parseFloat(descriptor.get(\"MissingWidth\")) || 0;\n              } else {\n                var baseFontName = dict.get(\"BaseFont\");\n\n                if ((0, _primitives.isName)(baseFontName)) {\n                  var metrics = this.getBaseFontMetrics(baseFontName.name);\n                  glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n                  defaultWidth = metrics.defaultWidth;\n                }\n              }\n            }\n\n            var isMonospace = true;\n            var firstWidth = defaultWidth;\n\n            for (var glyph in glyphsWidths) {\n              var glyphWidth = glyphsWidths[glyph];\n\n              if (!glyphWidth) {\n                continue;\n              }\n\n              if (!firstWidth) {\n                firstWidth = glyphWidth;\n                continue;\n              }\n\n              if (firstWidth !== glyphWidth) {\n                isMonospace = false;\n                break;\n              }\n            }\n\n            if (isMonospace) {\n              properties.flags |= _fonts.FontFlags.FixedPitch;\n            }\n\n            properties.defaultWidth = defaultWidth;\n            properties.widths = glyphsWidths;\n            properties.defaultVMetrics = defaultVMetrics;\n            properties.vmetrics = glyphsVMetrics;\n          }\n        }, {\n          key: \"isSerifFont\",\n          value: function isSerifFont(baseFontName) {\n            var fontNameWoStyle = baseFontName.split(\"-\")[0];\n            return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n          }\n        }, {\n          key: \"getBaseFontMetrics\",\n          value: function getBaseFontMetrics(name) {\n            var defaultWidth = 0;\n            var widths = [];\n            var monospace = false;\n            var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n            var lookupName = stdFontMap[name] || name;\n            var Metrics = (0, _metrics.getMetrics)();\n\n            if (!(lookupName in Metrics)) {\n              if (this.isSerifFont(name)) {\n                lookupName = \"Times-Roman\";\n              } else {\n                lookupName = \"Helvetica\";\n              }\n            }\n\n            var glyphWidths = Metrics[lookupName];\n\n            if ((0, _util.isNum)(glyphWidths)) {\n              defaultWidth = glyphWidths;\n              monospace = true;\n            } else {\n              widths = glyphWidths();\n            }\n\n            return {\n              defaultWidth: defaultWidth,\n              monospace: monospace,\n              widths: widths\n            };\n          }\n        }, {\n          key: \"buildCharCodeToWidth\",\n          value: function buildCharCodeToWidth(widthsByGlyphName, properties) {\n            var widths = Object.create(null);\n            var differences = properties.differences;\n            var encoding = properties.defaultEncoding;\n\n            for (var charCode = 0; charCode < 256; charCode++) {\n              if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n                widths[charCode] = widthsByGlyphName[differences[charCode]];\n                continue;\n              }\n\n              if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n                widths[charCode] = widthsByGlyphName[encoding[charCode]];\n                continue;\n              }\n            }\n\n            return widths;\n          }\n        }, {\n          key: \"preEvaluateFont\",\n          value: function preEvaluateFont(dict) {\n            var baseDict = dict;\n            var type = dict.get(\"Subtype\");\n\n            if (!(0, _primitives.isName)(type)) {\n              throw new _util.FormatError(\"invalid font Subtype\");\n            }\n\n            var composite = false;\n            var uint8array;\n\n            if (type.name === \"Type0\") {\n              var df = dict.get(\"DescendantFonts\");\n\n              if (!df) {\n                throw new _util.FormatError(\"Descendant fonts are not specified\");\n              }\n\n              dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n              type = dict.get(\"Subtype\");\n\n              if (!(0, _primitives.isName)(type)) {\n                throw new _util.FormatError(\"invalid font Subtype\");\n              }\n\n              composite = true;\n            }\n\n            var descriptor = dict.get(\"FontDescriptor\");\n\n            if (descriptor) {\n              var hash = new _murmurhash.MurmurHash3_64();\n              var encoding = baseDict.getRaw(\"Encoding\");\n\n              if ((0, _primitives.isName)(encoding)) {\n                hash.update(encoding.name);\n              } else if ((0, _primitives.isRef)(encoding)) {\n                hash.update(encoding.toString());\n              } else if ((0, _primitives.isDict)(encoding)) {\n                var _iterator42 = _createForOfIteratorHelper(encoding.getRawValues()),\n                    _step42;\n\n                try {\n                  for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n                    var entry = _step42.value;\n\n                    if ((0, _primitives.isName)(entry)) {\n                      hash.update(entry.name);\n                    } else if ((0, _primitives.isRef)(entry)) {\n                      hash.update(entry.toString());\n                    } else if (Array.isArray(entry)) {\n                      var diffLength = entry.length,\n                          diffBuf = new Array(diffLength);\n\n                      for (var j = 0; j < diffLength; j++) {\n                        var diffEntry = entry[j];\n\n                        if ((0, _primitives.isName)(diffEntry)) {\n                          diffBuf[j] = diffEntry.name;\n                        } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                          diffBuf[j] = diffEntry.toString();\n                        }\n                      }\n\n                      hash.update(diffBuf.join());\n                    }\n                  }\n                } catch (err) {\n                  _iterator42.e(err);\n                } finally {\n                  _iterator42.f();\n                }\n              }\n\n              var firstChar = dict.get(\"FirstChar\") || 0;\n              var lastChar = dict.get(\"LastChar\") || (composite ? 0xffff : 0xff);\n              hash.update(\"\".concat(firstChar, \"-\").concat(lastChar));\n              var toUnicode = dict.get(\"ToUnicode\") || baseDict.get(\"ToUnicode\");\n\n              if ((0, _primitives.isStream)(toUnicode)) {\n                var stream = toUnicode.str || toUnicode;\n                uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n                hash.update(uint8array);\n              } else if ((0, _primitives.isName)(toUnicode)) {\n                hash.update(toUnicode.name);\n              }\n\n              var widths = dict.get(\"Widths\") || baseDict.get(\"Widths\");\n\n              if (widths) {\n                uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n                hash.update(uint8array);\n              }\n            }\n\n            return {\n              descriptor: descriptor,\n              dict: dict,\n              baseDict: baseDict,\n              composite: composite,\n              type: type.name,\n              hash: hash ? hash.hexdigest() : \"\"\n            };\n          }\n        }, {\n          key: \"translateFont\",\n          value: function translateFont(preEvaluatedFont) {\n            var _this66 = this;\n\n            var baseDict = preEvaluatedFont.baseDict;\n            var dict = preEvaluatedFont.dict;\n            var composite = preEvaluatedFont.composite;\n            var descriptor = preEvaluatedFont.descriptor;\n            var type = preEvaluatedFont.type;\n            var maxCharIndex = composite ? 0xffff : 0xff;\n            var properties;\n            var firstChar = dict.get(\"FirstChar\") || 0;\n            var lastChar = dict.get(\"LastChar\") || maxCharIndex;\n\n            if (!descriptor) {\n              if (type === \"Type3\") {\n                descriptor = new _primitives.Dict(null);\n                descriptor.set(\"FontName\", _primitives.Name.get(type));\n                descriptor.set(\"FontBBox\", dict.getArray(\"FontBBox\") || [0, 0, 0, 0]);\n              } else {\n                var baseFontName = dict.get(\"BaseFont\");\n\n                if (!(0, _primitives.isName)(baseFontName)) {\n                  throw new _util.FormatError(\"Base font is not specified\");\n                }\n\n                baseFontName = baseFontName.name.replace(/[,_]/g, \"-\");\n                var metrics = this.getBaseFontMetrics(baseFontName);\n                var fontNameWoStyle = baseFontName.split(\"-\")[0];\n                var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n                properties = {\n                  type: type,\n                  name: baseFontName,\n                  widths: metrics.widths,\n                  defaultWidth: metrics.defaultWidth,\n                  flags: flags,\n                  firstChar: firstChar,\n                  lastChar: lastChar\n                };\n                var widths = dict.get(\"Widths\");\n                return this.extractDataStructures(dict, dict, properties).then(function (newProperties) {\n                  if (widths) {\n                    var glyphWidths = [];\n                    var j = firstChar;\n\n                    for (var _i24 = 0, ii = widths.length; _i24 < ii; _i24++) {\n                      glyphWidths[j++] = _this66.xref.fetchIfRef(widths[_i24]);\n                    }\n\n                    newProperties.widths = glyphWidths;\n                  } else {\n                    newProperties.widths = _this66.buildCharCodeToWidth(metrics.widths, newProperties);\n                  }\n\n                  return new _fonts.Font(baseFontName, null, newProperties);\n                });\n              }\n            }\n\n            var fontName = descriptor.get(\"FontName\");\n            var baseFont = dict.get(\"BaseFont\");\n\n            if ((0, _util.isString)(fontName)) {\n              fontName = _primitives.Name.get(fontName);\n            }\n\n            if ((0, _util.isString)(baseFont)) {\n              baseFont = _primitives.Name.get(baseFont);\n            }\n\n            if (type !== \"Type3\") {\n              var fontNameStr = fontName && fontName.name;\n              var baseFontStr = baseFont && baseFont.name;\n\n              if (fontNameStr !== baseFontStr) {\n                (0, _util.info)(\"The FontDescriptor's FontName is \\\"\".concat(fontNameStr, \"\\\" but \") + \"should be the same as the Font's BaseFont \\\"\".concat(baseFontStr, \"\\\".\"));\n\n                if (fontNameStr && baseFontStr && baseFontStr.startsWith(fontNameStr)) {\n                  fontName = baseFont;\n                }\n              }\n            }\n\n            fontName = fontName || baseFont;\n\n            if (!(0, _primitives.isName)(fontName)) {\n              throw new _util.FormatError(\"invalid font name\");\n            }\n\n            var fontFile = descriptor.get(\"FontFile\", \"FontFile2\", \"FontFile3\");\n\n            if (fontFile) {\n              if (fontFile.dict) {\n                var subtype = fontFile.dict.get(\"Subtype\");\n\n                if (subtype) {\n                  subtype = subtype.name;\n                }\n\n                var length1 = fontFile.dict.get(\"Length1\");\n                var length2 = fontFile.dict.get(\"Length2\");\n                var length3 = fontFile.dict.get(\"Length3\");\n              }\n            }\n\n            properties = {\n              type: type,\n              name: fontName.name,\n              subtype: subtype,\n              file: fontFile,\n              length1: length1,\n              length2: length2,\n              length3: length3,\n              loadedName: baseDict.loadedName,\n              composite: composite,\n              fixedPitch: false,\n              fontMatrix: dict.getArray(\"FontMatrix\") || _util.FONT_IDENTITY_MATRIX,\n              firstChar: firstChar || 0,\n              lastChar: lastChar || maxCharIndex,\n              bbox: descriptor.getArray(\"FontBBox\"),\n              ascent: descriptor.get(\"Ascent\"),\n              descent: descriptor.get(\"Descent\"),\n              xHeight: descriptor.get(\"XHeight\"),\n              capHeight: descriptor.get(\"CapHeight\"),\n              flags: descriptor.get(\"Flags\"),\n              italicAngle: descriptor.get(\"ItalicAngle\"),\n              isType3Font: false\n            };\n            var cMapPromise;\n\n            if (composite) {\n              var cidEncoding = baseDict.get(\"Encoding\");\n\n              if ((0, _primitives.isName)(cidEncoding)) {\n                properties.cidEncoding = cidEncoding.name;\n              }\n\n              cMapPromise = _cmap.CMapFactory.create({\n                encoding: cidEncoding,\n                fetchBuiltInCMap: this._fetchBuiltInCMapBound,\n                useCMap: null\n              }).then(function (cMap) {\n                properties.cMap = cMap;\n                properties.vertical = properties.cMap.vertical;\n              });\n            } else {\n              cMapPromise = Promise.resolve(undefined);\n            }\n\n            return cMapPromise.then(function () {\n              return _this66.extractDataStructures(dict, baseDict, properties);\n            }).then(function (newProperties) {\n              _this66.extractWidths(dict, descriptor, newProperties);\n\n              if (type === \"Type3\") {\n                newProperties.isType3Font = true;\n              }\n\n              return new _fonts.Font(fontName.name, fontFile, newProperties);\n            });\n          }\n        }], [{\n          key: \"buildFontPaths\",\n          value: function buildFontPaths(font, glyphs, handler) {\n            function buildPath(fontChar) {\n              if (font.renderer.hasBuiltPath(fontChar)) {\n                return;\n              }\n\n              handler.send(\"commonobj\", [\"\".concat(font.loadedName, \"_path_\").concat(fontChar), \"FontPath\", font.renderer.getPathJs(fontChar)]);\n            }\n\n            var _iterator43 = _createForOfIteratorHelper(glyphs),\n                _step43;\n\n            try {\n              for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n                var glyph = _step43.value;\n                buildPath(glyph.fontChar);\n                var accent = glyph.accent;\n\n                if (accent && accent.fontChar) {\n                  buildPath(accent.fontChar);\n                }\n              }\n            } catch (err) {\n              _iterator43.e(err);\n            } finally {\n              _iterator43.f();\n            }\n          }\n        }, {\n          key: \"fallbackFontDict\",\n          get: function get() {\n            var dict = new _primitives.Dict();\n            dict.set(\"BaseFont\", _primitives.Name.get(\"PDFJS-FallbackFont\"));\n            dict.set(\"Type\", _primitives.Name.get(\"FallbackType\"));\n            dict.set(\"Subtype\", _primitives.Name.get(\"FallbackType\"));\n            dict.set(\"Encoding\", _primitives.Name.get(\"WinAnsiEncoding\"));\n            return (0, _util.shadow)(this, \"fallbackFontDict\", dict);\n          }\n        }]);\n\n        return PartialEvaluator;\n      }();\n\n      exports.PartialEvaluator = PartialEvaluator;\n\n      var TranslatedFont = /*#__PURE__*/function () {\n        function TranslatedFont(_ref37) {\n          var loadedName = _ref37.loadedName,\n              font = _ref37.font,\n              dict = _ref37.dict,\n              _ref37$extraPropertie = _ref37.extraProperties,\n              extraProperties = _ref37$extraPropertie === void 0 ? false : _ref37$extraPropertie;\n\n          _classCallCheck(this, TranslatedFont);\n\n          this.loadedName = loadedName;\n          this.font = font;\n          this.dict = dict;\n          this._extraProperties = extraProperties;\n          this.type3Loaded = null;\n          this.type3Dependencies = font.isType3Font ? new Set() : null;\n          this.sent = false;\n        }\n\n        _createClass(TranslatedFont, [{\n          key: \"send\",\n          value: function send(handler) {\n            if (this.sent) {\n              return;\n            }\n\n            this.sent = true;\n            handler.send(\"commonobj\", [this.loadedName, \"Font\", this.font.exportData(this._extraProperties)]);\n          }\n        }, {\n          key: \"fallback\",\n          value: function fallback(handler) {\n            if (!this.font.data) {\n              return;\n            }\n\n            this.font.disableFontFace = true;\n            var glyphs = this.font.glyphCacheValues;\n            PartialEvaluator.buildFontPaths(this.font, glyphs, handler);\n          }\n        }, {\n          key: \"loadType3Data\",\n          value: function loadType3Data(evaluator, resources, task) {\n            if (this.type3Loaded) {\n              return this.type3Loaded;\n            }\n\n            if (!this.font.isType3Font) {\n              throw new Error(\"Must be a Type3 font.\");\n            }\n\n            var type3Options = Object.create(evaluator.options);\n            type3Options.ignoreErrors = false;\n            var type3Evaluator = evaluator.clone(type3Options);\n            type3Evaluator.parsingType3Font = true;\n            var translatedFont = this.font,\n                type3Dependencies = this.type3Dependencies;\n            var loadCharProcsPromise = Promise.resolve();\n            var charProcs = this.dict.get(\"CharProcs\");\n            var fontResources = this.dict.get(\"Resources\") || resources;\n            var charProcOperatorList = Object.create(null);\n\n            var _iterator44 = _createForOfIteratorHelper(charProcs.getKeys()),\n                _step44;\n\n            try {\n              var _loop4 = function _loop4() {\n                var key = _step44.value;\n                loadCharProcsPromise = loadCharProcsPromise.then(function () {\n                  var glyphStream = charProcs.get(key);\n                  var operatorList = new _operator_list.OperatorList();\n                  return type3Evaluator.getOperatorList({\n                    stream: glyphStream,\n                    task: task,\n                    resources: fontResources,\n                    operatorList: operatorList\n                  }).then(function () {\n                    charProcOperatorList[key] = operatorList.getIR();\n\n                    var _iterator45 = _createForOfIteratorHelper(operatorList.dependencies),\n                        _step45;\n\n                    try {\n                      for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n                        var dependency = _step45.value;\n                        type3Dependencies.add(dependency);\n                      }\n                    } catch (err) {\n                      _iterator45.e(err);\n                    } finally {\n                      _iterator45.f();\n                    }\n                  }).catch(function (reason) {\n                    (0, _util.warn)(\"Type3 font resource \\\"\".concat(key, \"\\\" is not available.\"));\n                    var dummyOperatorList = new _operator_list.OperatorList();\n                    charProcOperatorList[key] = dummyOperatorList.getIR();\n                  });\n                });\n              };\n\n              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                _loop4();\n              }\n            } catch (err) {\n              _iterator44.e(err);\n            } finally {\n              _iterator44.f();\n            }\n\n            this.type3Loaded = loadCharProcsPromise.then(function () {\n              translatedFont.charProcOperatorList = charProcOperatorList;\n            });\n            return this.type3Loaded;\n          }\n        }]);\n\n        return TranslatedFont;\n      }();\n\n      var StateManager = /*#__PURE__*/function () {\n        function StateManager(initialState) {\n          _classCallCheck(this, StateManager);\n\n          this.state = initialState;\n          this.stateStack = [];\n        }\n\n        _createClass(StateManager, [{\n          key: \"save\",\n          value: function save() {\n            var old = this.state;\n            this.stateStack.push(this.state);\n            this.state = old.clone();\n          }\n        }, {\n          key: \"restore\",\n          value: function restore() {\n            var prev = this.stateStack.pop();\n\n            if (prev) {\n              this.state = prev;\n            }\n          }\n        }, {\n          key: \"transform\",\n          value: function transform(args) {\n            this.state.ctm = _util.Util.transform(this.state.ctm, args);\n          }\n        }]);\n\n        return StateManager;\n      }();\n\n      var TextState = /*#__PURE__*/function () {\n        function TextState() {\n          _classCallCheck(this, TextState);\n\n          this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n          this.fontName = null;\n          this.fontSize = 0;\n          this.font = null;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.textMatrix = _util.IDENTITY_MATRIX.slice();\n          this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.leading = 0;\n          this.textHScale = 1;\n          this.textRise = 0;\n        }\n\n        _createClass(TextState, [{\n          key: \"setTextMatrix\",\n          value: function setTextMatrix(a, b, c, d, e, f) {\n            var m = this.textMatrix;\n            m[0] = a;\n            m[1] = b;\n            m[2] = c;\n            m[3] = d;\n            m[4] = e;\n            m[5] = f;\n          }\n        }, {\n          key: \"setTextLineMatrix\",\n          value: function setTextLineMatrix(a, b, c, d, e, f) {\n            var m = this.textLineMatrix;\n            m[0] = a;\n            m[1] = b;\n            m[2] = c;\n            m[3] = d;\n            m[4] = e;\n            m[5] = f;\n          }\n        }, {\n          key: \"translateTextMatrix\",\n          value: function translateTextMatrix(x, y) {\n            var m = this.textMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n          }\n        }, {\n          key: \"translateTextLineMatrix\",\n          value: function translateTextLineMatrix(x, y) {\n            var m = this.textLineMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n          }\n        }, {\n          key: \"calcTextLineMatrixAdvance\",\n          value: function calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n            var font = this.font;\n\n            if (!font) {\n              return null;\n            }\n\n            var m = this.textLineMatrix;\n\n            if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n              return null;\n            }\n\n            var txDiff = e - m[4],\n                tyDiff = f - m[5];\n\n            if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n              return null;\n            }\n\n            var tx,\n                ty,\n                denominator = a * d - b * c;\n\n            if (font.vertical) {\n              tx = -tyDiff * c / denominator;\n              ty = tyDiff * a / denominator;\n            } else {\n              tx = txDiff * d / denominator;\n              ty = -txDiff * b / denominator;\n            }\n\n            return {\n              width: tx,\n              height: ty,\n              value: font.vertical ? ty : tx\n            };\n          }\n        }, {\n          key: \"calcRenderMatrix\",\n          value: function calcRenderMatrix(ctm) {\n            var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n            return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n          }\n        }, {\n          key: \"carriageReturn\",\n          value: function carriageReturn() {\n            this.translateTextLineMatrix(0, -this.leading);\n            this.textMatrix = this.textLineMatrix.slice();\n          }\n        }, {\n          key: \"clone\",\n          value: function clone() {\n            var clone = Object.create(this);\n            clone.textMatrix = this.textMatrix.slice();\n            clone.textLineMatrix = this.textLineMatrix.slice();\n            clone.fontMatrix = this.fontMatrix.slice();\n            return clone;\n          }\n        }]);\n\n        return TextState;\n      }();\n\n      var EvalState = /*#__PURE__*/function () {\n        function EvalState() {\n          _classCallCheck(this, EvalState);\n\n          this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n          this.font = null;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n          this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n        }\n\n        _createClass(EvalState, [{\n          key: \"clone\",\n          value: function clone() {\n            return Object.create(this);\n          }\n        }]);\n\n        return EvalState;\n      }();\n\n      var EvaluatorPreprocessor = /*#__PURE__*/function () {\n        function EvaluatorPreprocessor(stream, xref, stateManager) {\n          _classCallCheck(this, EvaluatorPreprocessor);\n\n          this.parser = new _parser.Parser({\n            lexer: new _parser.Lexer(stream, EvaluatorPreprocessor.opMap),\n            xref: xref\n          });\n          this.stateManager = stateManager;\n          this.nonProcessedArgs = [];\n          this._numInvalidPathOPS = 0;\n        }\n\n        _createClass(EvaluatorPreprocessor, [{\n          key: \"savedStatesDepth\",\n          get: function get() {\n            return this.stateManager.stateStack.length;\n          }\n        }, {\n          key: \"read\",\n          value: function read(operation) {\n            var args = operation.args;\n\n            while (true) {\n              var obj = this.parser.getObj();\n\n              if (obj instanceof _primitives.Cmd) {\n                var cmd = obj.cmd;\n                var opSpec = EvaluatorPreprocessor.opMap[cmd];\n\n                if (!opSpec) {\n                  (0, _util.warn)(\"Unknown command \\\"\".concat(cmd, \"\\\".\"));\n                  continue;\n                }\n\n                var fn = opSpec.id;\n                var numArgs = opSpec.numArgs;\n                var argsLength = args !== null ? args.length : 0;\n\n                if (!opSpec.variableArgs) {\n                  if (argsLength !== numArgs) {\n                    var nonProcessedArgs = this.nonProcessedArgs;\n\n                    while (argsLength > numArgs) {\n                      nonProcessedArgs.push(args.shift());\n                      argsLength--;\n                    }\n\n                    while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                      if (args === null) {\n                        args = [];\n                      }\n\n                      args.unshift(nonProcessedArgs.pop());\n                      argsLength++;\n                    }\n                  }\n\n                  if (argsLength < numArgs) {\n                    var partialMsg = \"command \".concat(cmd, \": expected \").concat(numArgs, \" args, \") + \"but received \".concat(argsLength, \" args.\");\n\n                    if (fn >= _util.OPS.moveTo && fn <= _util.OPS.endPath && ++this._numInvalidPathOPS > EvaluatorPreprocessor.MAX_INVALID_PATH_OPS) {\n                      throw new _util.FormatError(\"Invalid \".concat(partialMsg));\n                    }\n\n                    (0, _util.warn)(\"Skipping \".concat(partialMsg));\n\n                    if (args !== null) {\n                      args.length = 0;\n                    }\n\n                    continue;\n                  }\n                } else if (argsLength > numArgs) {\n                  (0, _util.info)(\"Command \".concat(cmd, \": expected [0, \").concat(numArgs, \"] args, \") + \"but received \".concat(argsLength, \" args.\"));\n                }\n\n                this.preprocessCommand(fn, args);\n                operation.fn = fn;\n                operation.args = args;\n                return true;\n              }\n\n              if (obj === _primitives.EOF) {\n                return false;\n              }\n\n              if (obj !== null) {\n                if (args === null) {\n                  args = [];\n                }\n\n                args.push(obj);\n\n                if (args.length > 33) {\n                  throw new _util.FormatError(\"Too many arguments\");\n                }\n              }\n            }\n          }\n        }, {\n          key: \"preprocessCommand\",\n          value: function preprocessCommand(fn, args) {\n            switch (fn | 0) {\n              case _util.OPS.save:\n                this.stateManager.save();\n                break;\n\n              case _util.OPS.restore:\n                this.stateManager.restore();\n                break;\n\n              case _util.OPS.transform:\n                this.stateManager.transform(args);\n                break;\n            }\n          }\n        }], [{\n          key: \"opMap\",\n          get: function get() {\n            var getOPMap = (0, _core_utils.getLookupTableFactory)(function (t) {\n              t.w = {\n                id: _util.OPS.setLineWidth,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.J = {\n                id: _util.OPS.setLineCap,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.j = {\n                id: _util.OPS.setLineJoin,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.M = {\n                id: _util.OPS.setMiterLimit,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.d = {\n                id: _util.OPS.setDash,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.ri = {\n                id: _util.OPS.setRenderingIntent,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.i = {\n                id: _util.OPS.setFlatness,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.gs = {\n                id: _util.OPS.setGState,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.q = {\n                id: _util.OPS.save,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.Q = {\n                id: _util.OPS.restore,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.cm = {\n                id: _util.OPS.transform,\n                numArgs: 6,\n                variableArgs: false\n              };\n              t.m = {\n                id: _util.OPS.moveTo,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.l = {\n                id: _util.OPS.lineTo,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.c = {\n                id: _util.OPS.curveTo,\n                numArgs: 6,\n                variableArgs: false\n              };\n              t.v = {\n                id: _util.OPS.curveTo2,\n                numArgs: 4,\n                variableArgs: false\n              };\n              t.y = {\n                id: _util.OPS.curveTo3,\n                numArgs: 4,\n                variableArgs: false\n              };\n              t.h = {\n                id: _util.OPS.closePath,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.re = {\n                id: _util.OPS.rectangle,\n                numArgs: 4,\n                variableArgs: false\n              };\n              t.S = {\n                id: _util.OPS.stroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.s = {\n                id: _util.OPS.closeStroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.f = {\n                id: _util.OPS.fill,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.F = {\n                id: _util.OPS.fill,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t[\"f*\"] = {\n                id: _util.OPS.eoFill,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.B = {\n                id: _util.OPS.fillStroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t[\"B*\"] = {\n                id: _util.OPS.eoFillStroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.b = {\n                id: _util.OPS.closeFillStroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t[\"b*\"] = {\n                id: _util.OPS.closeEOFillStroke,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.n = {\n                id: _util.OPS.endPath,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.W = {\n                id: _util.OPS.clip,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t[\"W*\"] = {\n                id: _util.OPS.eoClip,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.BT = {\n                id: _util.OPS.beginText,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.ET = {\n                id: _util.OPS.endText,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.Tc = {\n                id: _util.OPS.setCharSpacing,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Tw = {\n                id: _util.OPS.setWordSpacing,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Tz = {\n                id: _util.OPS.setHScale,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.TL = {\n                id: _util.OPS.setLeading,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Tf = {\n                id: _util.OPS.setFont,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.Tr = {\n                id: _util.OPS.setTextRenderingMode,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Ts = {\n                id: _util.OPS.setTextRise,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Td = {\n                id: _util.OPS.moveText,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.TD = {\n                id: _util.OPS.setLeadingMoveText,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.Tm = {\n                id: _util.OPS.setTextMatrix,\n                numArgs: 6,\n                variableArgs: false\n              };\n              t[\"T*\"] = {\n                id: _util.OPS.nextLine,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.Tj = {\n                id: _util.OPS.showText,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.TJ = {\n                id: _util.OPS.showSpacedText,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t[\"'\"] = {\n                id: _util.OPS.nextLineShowText,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t['\"'] = {\n                id: _util.OPS.nextLineSetSpacingShowText,\n                numArgs: 3,\n                variableArgs: false\n              };\n              t.d0 = {\n                id: _util.OPS.setCharWidth,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.d1 = {\n                id: _util.OPS.setCharWidthAndBounds,\n                numArgs: 6,\n                variableArgs: false\n              };\n              t.CS = {\n                id: _util.OPS.setStrokeColorSpace,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.cs = {\n                id: _util.OPS.setFillColorSpace,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.SC = {\n                id: _util.OPS.setStrokeColor,\n                numArgs: 4,\n                variableArgs: true\n              };\n              t.SCN = {\n                id: _util.OPS.setStrokeColorN,\n                numArgs: 33,\n                variableArgs: true\n              };\n              t.sc = {\n                id: _util.OPS.setFillColor,\n                numArgs: 4,\n                variableArgs: true\n              };\n              t.scn = {\n                id: _util.OPS.setFillColorN,\n                numArgs: 33,\n                variableArgs: true\n              };\n              t.G = {\n                id: _util.OPS.setStrokeGray,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.g = {\n                id: _util.OPS.setFillGray,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.RG = {\n                id: _util.OPS.setStrokeRGBColor,\n                numArgs: 3,\n                variableArgs: false\n              };\n              t.rg = {\n                id: _util.OPS.setFillRGBColor,\n                numArgs: 3,\n                variableArgs: false\n              };\n              t.K = {\n                id: _util.OPS.setStrokeCMYKColor,\n                numArgs: 4,\n                variableArgs: false\n              };\n              t.k = {\n                id: _util.OPS.setFillCMYKColor,\n                numArgs: 4,\n                variableArgs: false\n              };\n              t.sh = {\n                id: _util.OPS.shadingFill,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.BI = {\n                id: _util.OPS.beginInlineImage,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.ID = {\n                id: _util.OPS.beginImageData,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.EI = {\n                id: _util.OPS.endInlineImage,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.Do = {\n                id: _util.OPS.paintXObject,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.MP = {\n                id: _util.OPS.markPoint,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.DP = {\n                id: _util.OPS.markPointProps,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.BMC = {\n                id: _util.OPS.beginMarkedContent,\n                numArgs: 1,\n                variableArgs: false\n              };\n              t.BDC = {\n                id: _util.OPS.beginMarkedContentProps,\n                numArgs: 2,\n                variableArgs: false\n              };\n              t.EMC = {\n                id: _util.OPS.endMarkedContent,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.BX = {\n                id: _util.OPS.beginCompat,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.EX = {\n                id: _util.OPS.endCompat,\n                numArgs: 0,\n                variableArgs: false\n              };\n              t.BM = null;\n              t.BD = null;\n              t.true = null;\n              t.fa = null;\n              t.fal = null;\n              t.fals = null;\n              t.false = null;\n              t.nu = null;\n              t.nul = null;\n              t.null = null;\n            });\n            return (0, _util.shadow)(this, \"opMap\", getOPMap());\n          }\n        }, {\n          key: \"MAX_INVALID_PATH_OPS\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"MAX_INVALID_PATH_OPS\", 20);\n          }\n        }]);\n\n        return EvaluatorPreprocessor;\n      }();\n      /***/\n\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CMapFactory = exports.IdentityCMap = exports.CMap = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _parser = __w_pdfjs_require__(11);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var BUILT_IN_CMAPS = [\"Adobe-GB1-UCS2\", \"Adobe-CNS1-UCS2\", \"Adobe-Japan1-UCS2\", \"Adobe-Korea1-UCS2\", \"78-EUC-H\", \"78-EUC-V\", \"78-H\", \"78-RKSJ-H\", \"78-RKSJ-V\", \"78-V\", \"78ms-RKSJ-H\", \"78ms-RKSJ-V\", \"83pv-RKSJ-H\", \"90ms-RKSJ-H\", \"90ms-RKSJ-V\", \"90msp-RKSJ-H\", \"90msp-RKSJ-V\", \"90pv-RKSJ-H\", \"90pv-RKSJ-V\", \"Add-H\", \"Add-RKSJ-H\", \"Add-RKSJ-V\", \"Add-V\", \"Adobe-CNS1-0\", \"Adobe-CNS1-1\", \"Adobe-CNS1-2\", \"Adobe-CNS1-3\", \"Adobe-CNS1-4\", \"Adobe-CNS1-5\", \"Adobe-CNS1-6\", \"Adobe-GB1-0\", \"Adobe-GB1-1\", \"Adobe-GB1-2\", \"Adobe-GB1-3\", \"Adobe-GB1-4\", \"Adobe-GB1-5\", \"Adobe-Japan1-0\", \"Adobe-Japan1-1\", \"Adobe-Japan1-2\", \"Adobe-Japan1-3\", \"Adobe-Japan1-4\", \"Adobe-Japan1-5\", \"Adobe-Japan1-6\", \"Adobe-Korea1-0\", \"Adobe-Korea1-1\", \"Adobe-Korea1-2\", \"B5-H\", \"B5-V\", \"B5pc-H\", \"B5pc-V\", \"CNS-EUC-H\", \"CNS-EUC-V\", \"CNS1-H\", \"CNS1-V\", \"CNS2-H\", \"CNS2-V\", \"ETHK-B5-H\", \"ETHK-B5-V\", \"ETen-B5-H\", \"ETen-B5-V\", \"ETenms-B5-H\", \"ETenms-B5-V\", \"EUC-H\", \"EUC-V\", \"Ext-H\", \"Ext-RKSJ-H\", \"Ext-RKSJ-V\", \"Ext-V\", \"GB-EUC-H\", \"GB-EUC-V\", \"GB-H\", \"GB-V\", \"GBK-EUC-H\", \"GBK-EUC-V\", \"GBK2K-H\", \"GBK2K-V\", \"GBKp-EUC-H\", \"GBKp-EUC-V\", \"GBT-EUC-H\", \"GBT-EUC-V\", \"GBT-H\", \"GBT-V\", \"GBTpc-EUC-H\", \"GBTpc-EUC-V\", \"GBpc-EUC-H\", \"GBpc-EUC-V\", \"H\", \"HKdla-B5-H\", \"HKdla-B5-V\", \"HKdlb-B5-H\", \"HKdlb-B5-V\", \"HKgccs-B5-H\", \"HKgccs-B5-V\", \"HKm314-B5-H\", \"HKm314-B5-V\", \"HKm471-B5-H\", \"HKm471-B5-V\", \"HKscs-B5-H\", \"HKscs-B5-V\", \"Hankaku\", \"Hiragana\", \"KSC-EUC-H\", \"KSC-EUC-V\", \"KSC-H\", \"KSC-Johab-H\", \"KSC-Johab-V\", \"KSC-V\", \"KSCms-UHC-H\", \"KSCms-UHC-HW-H\", \"KSCms-UHC-HW-V\", \"KSCms-UHC-V\", \"KSCpc-EUC-H\", \"KSCpc-EUC-V\", \"Katakana\", \"NWP-H\", \"NWP-V\", \"RKSJ-H\", \"RKSJ-V\", \"Roman\", \"UniCNS-UCS2-H\", \"UniCNS-UCS2-V\", \"UniCNS-UTF16-H\", \"UniCNS-UTF16-V\", \"UniCNS-UTF32-H\", \"UniCNS-UTF32-V\", \"UniCNS-UTF8-H\", \"UniCNS-UTF8-V\", \"UniGB-UCS2-H\", \"UniGB-UCS2-V\", \"UniGB-UTF16-H\", \"UniGB-UTF16-V\", \"UniGB-UTF32-H\", \"UniGB-UTF32-V\", \"UniGB-UTF8-H\", \"UniGB-UTF8-V\", \"UniJIS-UCS2-H\", \"UniJIS-UCS2-HW-H\", \"UniJIS-UCS2-HW-V\", \"UniJIS-UCS2-V\", \"UniJIS-UTF16-H\", \"UniJIS-UTF16-V\", \"UniJIS-UTF32-H\", \"UniJIS-UTF32-V\", \"UniJIS-UTF8-H\", \"UniJIS-UTF8-V\", \"UniJIS2004-UTF16-H\", \"UniJIS2004-UTF16-V\", \"UniJIS2004-UTF32-H\", \"UniJIS2004-UTF32-V\", \"UniJIS2004-UTF8-H\", \"UniJIS2004-UTF8-V\", \"UniJISPro-UCS2-HW-V\", \"UniJISPro-UCS2-V\", \"UniJISPro-UTF8-V\", \"UniJISX0213-UTF32-H\", \"UniJISX0213-UTF32-V\", \"UniJISX02132004-UTF32-H\", \"UniJISX02132004-UTF32-V\", \"UniKS-UCS2-H\", \"UniKS-UCS2-V\", \"UniKS-UTF16-H\", \"UniKS-UTF16-V\", \"UniKS-UTF32-H\", \"UniKS-UTF32-V\", \"UniKS-UTF8-H\", \"UniKS-UTF8-V\", \"V\", \"WP-Symbol\"];\n      var MAX_MAP_RANGE = Math.pow(2, 24) - 1;\n\n      var CMap = /*#__PURE__*/function () {\n        function CMap() {\n          var builtInCMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          _classCallCheck(this, CMap);\n\n          this.codespaceRanges = [[], [], [], []];\n          this.numCodespaceRanges = 0;\n          this._map = [];\n          this.name = \"\";\n          this.vertical = false;\n          this.useCMap = null;\n          this.builtInCMap = builtInCMap;\n        }\n\n        _createClass(CMap, [{\n          key: \"addCodespaceRange\",\n          value: function addCodespaceRange(n, low, high) {\n            this.codespaceRanges[n - 1].push(low, high);\n            this.numCodespaceRanges++;\n          }\n        }, {\n          key: \"mapCidRange\",\n          value: function mapCidRange(low, high, dstLow) {\n            if (high - low > MAX_MAP_RANGE) {\n              throw new Error(\"mapCidRange - ignoring data above MAX_MAP_RANGE.\");\n            }\n\n            while (low <= high) {\n              this._map[low++] = dstLow++;\n            }\n          }\n        }, {\n          key: \"mapBfRange\",\n          value: function mapBfRange(low, high, dstLow) {\n            if (high - low > MAX_MAP_RANGE) {\n              throw new Error(\"mapBfRange - ignoring data above MAX_MAP_RANGE.\");\n            }\n\n            var lastByte = dstLow.length - 1;\n\n            while (low <= high) {\n              this._map[low++] = dstLow;\n              dstLow = dstLow.substring(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n            }\n          }\n        }, {\n          key: \"mapBfRangeToArray\",\n          value: function mapBfRangeToArray(low, high, array) {\n            if (high - low > MAX_MAP_RANGE) {\n              throw new Error(\"mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.\");\n            }\n\n            var ii = array.length;\n            var i = 0;\n\n            while (low <= high && i < ii) {\n              this._map[low] = array[i++];\n              ++low;\n            }\n          }\n        }, {\n          key: \"mapOne\",\n          value: function mapOne(src, dst) {\n            this._map[src] = dst;\n          }\n        }, {\n          key: \"lookup\",\n          value: function lookup(code) {\n            return this._map[code];\n          }\n        }, {\n          key: \"contains\",\n          value: function contains(code) {\n            return this._map[code] !== undefined;\n          }\n        }, {\n          key: \"forEach\",\n          value: function forEach(callback) {\n            var map = this._map;\n            var length = map.length;\n\n            if (length <= 0x10000) {\n              for (var _i25 = 0; _i25 < length; _i25++) {\n                if (map[_i25] !== undefined) {\n                  callback(_i25, map[_i25]);\n                }\n              }\n            } else {\n              for (var _i26 in map) {\n                callback(_i26, map[_i26]);\n              }\n            }\n          }\n        }, {\n          key: \"charCodeOf\",\n          value: function charCodeOf(value) {\n            var map = this._map;\n\n            if (map.length <= 0x10000) {\n              return map.indexOf(value);\n            }\n\n            for (var charCode in map) {\n              if (map[charCode] === value) {\n                return charCode | 0;\n              }\n            }\n\n            return -1;\n          }\n        }, {\n          key: \"getMap\",\n          value: function getMap() {\n            return this._map;\n          }\n        }, {\n          key: \"readCharCode\",\n          value: function readCharCode(str, offset, out) {\n            var c = 0;\n            var codespaceRanges = this.codespaceRanges;\n\n            for (var n = 0, nn = codespaceRanges.length; n < nn; n++) {\n              c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n              var codespaceRange = codespaceRanges[n];\n\n              for (var k = 0, kk = codespaceRange.length; k < kk;) {\n                var low = codespaceRange[k++];\n                var high = codespaceRange[k++];\n\n                if (c >= low && c <= high) {\n                  out.charcode = c;\n                  out.length = n + 1;\n                  return;\n                }\n              }\n            }\n\n            out.charcode = 0;\n            out.length = 1;\n          }\n        }, {\n          key: \"length\",\n          get: function get() {\n            return this._map.length;\n          }\n        }, {\n          key: \"isIdentityCMap\",\n          get: function get() {\n            if (!(this.name === \"Identity-H\" || this.name === \"Identity-V\")) {\n              return false;\n            }\n\n            if (this._map.length !== 0x10000) {\n              return false;\n            }\n\n            for (var _i27 = 0; _i27 < 0x10000; _i27++) {\n              if (this._map[_i27] !== _i27) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n        }]);\n\n        return CMap;\n      }();\n\n      exports.CMap = CMap;\n\n      var IdentityCMap = /*#__PURE__*/function (_CMap) {\n        _inherits(IdentityCMap, _CMap);\n\n        var _super58 = _createSuper(IdentityCMap);\n\n        function IdentityCMap(vertical, n) {\n          var _this67;\n\n          _classCallCheck(this, IdentityCMap);\n\n          _this67 = _super58.call(this);\n          _this67.vertical = vertical;\n\n          _this67.addCodespaceRange(n, 0, 0xffff);\n\n          return _this67;\n        }\n\n        _createClass(IdentityCMap, [{\n          key: \"mapCidRange\",\n          value: function mapCidRange(low, high, dstLow) {\n            (0, _util.unreachable)(\"should not call mapCidRange\");\n          }\n        }, {\n          key: \"mapBfRange\",\n          value: function mapBfRange(low, high, dstLow) {\n            (0, _util.unreachable)(\"should not call mapBfRange\");\n          }\n        }, {\n          key: \"mapBfRangeToArray\",\n          value: function mapBfRangeToArray(low, high, array) {\n            (0, _util.unreachable)(\"should not call mapBfRangeToArray\");\n          }\n        }, {\n          key: \"mapOne\",\n          value: function mapOne(src, dst) {\n            (0, _util.unreachable)(\"should not call mapCidOne\");\n          }\n        }, {\n          key: \"lookup\",\n          value: function lookup(code) {\n            return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n          }\n        }, {\n          key: \"contains\",\n          value: function contains(code) {\n            return Number.isInteger(code) && code <= 0xffff;\n          }\n        }, {\n          key: \"forEach\",\n          value: function forEach(callback) {\n            for (var _i28 = 0; _i28 <= 0xffff; _i28++) {\n              callback(_i28, _i28);\n            }\n          }\n        }, {\n          key: \"charCodeOf\",\n          value: function charCodeOf(value) {\n            return Number.isInteger(value) && value <= 0xffff ? value : -1;\n          }\n        }, {\n          key: \"getMap\",\n          value: function getMap() {\n            var map = new Array(0x10000);\n\n            for (var _i29 = 0; _i29 <= 0xffff; _i29++) {\n              map[_i29] = _i29;\n            }\n\n            return map;\n          }\n        }, {\n          key: \"length\",\n          get: function get() {\n            return 0x10000;\n          }\n        }, {\n          key: \"isIdentityCMap\",\n          get: function get() {\n            (0, _util.unreachable)(\"should not access .isIdentityCMap\");\n          }\n        }]);\n\n        return IdentityCMap;\n      }(CMap);\n\n      exports.IdentityCMap = IdentityCMap;\n\n      var BinaryCMapReader = function BinaryCMapReaderClosure() {\n        function hexToInt(a, size) {\n          var n = 0;\n\n          for (var i = 0; i <= size; i++) {\n            n = n << 8 | a[i];\n          }\n\n          return n >>> 0;\n        }\n\n        function hexToStr(a, size) {\n          if (size === 1) {\n            return String.fromCharCode(a[0], a[1]);\n          }\n\n          if (size === 3) {\n            return String.fromCharCode(a[0], a[1], a[2], a[3]);\n          }\n\n          return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n        }\n\n        function addHex(a, b, size) {\n          var c = 0;\n\n          for (var i = size; i >= 0; i--) {\n            c += a[i] + b[i];\n            a[i] = c & 255;\n            c >>= 8;\n          }\n        }\n\n        function incHex(a, size) {\n          var c = 1;\n\n          for (var i = size; i >= 0 && c > 0; i--) {\n            c += a[i];\n            a[i] = c & 255;\n            c >>= 8;\n          }\n        }\n\n        var MAX_NUM_SIZE = 16;\n        var MAX_ENCODED_NUM_SIZE = 19;\n\n        function BinaryCMapStream(data) {\n          this.buffer = data;\n          this.pos = 0;\n          this.end = data.length;\n          this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n        }\n\n        BinaryCMapStream.prototype = {\n          readByte: function readByte() {\n            if (this.pos >= this.end) {\n              return -1;\n            }\n\n            return this.buffer[this.pos++];\n          },\n          readNumber: function readNumber() {\n            var n = 0;\n            var last;\n\n            do {\n              var b = this.readByte();\n\n              if (b < 0) {\n                throw new _util.FormatError(\"unexpected EOF in bcmap\");\n              }\n\n              last = !(b & 0x80);\n              n = n << 7 | b & 0x7f;\n            } while (!last);\n\n            return n;\n          },\n          readSigned: function readSigned() {\n            var n = this.readNumber();\n            return n & 1 ? ~(n >>> 1) : n >>> 1;\n          },\n          readHex: function readHex(num, size) {\n            num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n            this.pos += size + 1;\n          },\n          readHexNumber: function readHexNumber(num, size) {\n            var last;\n            var stack = this.tmpBuf,\n                sp = 0;\n\n            do {\n              var b = this.readByte();\n\n              if (b < 0) {\n                throw new _util.FormatError(\"unexpected EOF in bcmap\");\n              }\n\n              last = !(b & 0x80);\n              stack[sp++] = b & 0x7f;\n            } while (!last);\n\n            var i = size,\n                buffer = 0,\n                bufferSize = 0;\n\n            while (i >= 0) {\n              while (bufferSize < 8 && stack.length > 0) {\n                buffer = stack[--sp] << bufferSize | buffer;\n                bufferSize += 7;\n              }\n\n              num[i] = buffer & 255;\n              i--;\n              buffer >>= 8;\n              bufferSize -= 8;\n            }\n          },\n          readHexSigned: function readHexSigned(num, size) {\n            this.readHexNumber(num, size);\n            var sign = num[size] & 1 ? 255 : 0;\n            var c = 0;\n\n            for (var i = 0; i <= size; i++) {\n              c = (c & 1) << 8 | num[i];\n              num[i] = c >> 1 ^ sign;\n            }\n          },\n          readString: function readString() {\n            var len = this.readNumber();\n            var s = \"\";\n\n            for (var i = 0; i < len; i++) {\n              s += String.fromCharCode(this.readNumber());\n            }\n\n            return s;\n          }\n        };\n\n        function processBinaryCMap(data, cMap, extend) {\n          return new Promise(function (resolve, reject) {\n            var stream = new BinaryCMapStream(data);\n            var header = stream.readByte();\n            cMap.vertical = !!(header & 1);\n            var useCMap = null;\n            var start = new Uint8Array(MAX_NUM_SIZE);\n            var end = new Uint8Array(MAX_NUM_SIZE);\n            var char = new Uint8Array(MAX_NUM_SIZE);\n            var charCode = new Uint8Array(MAX_NUM_SIZE);\n            var tmp = new Uint8Array(MAX_NUM_SIZE);\n            var code;\n            var b;\n\n            while ((b = stream.readByte()) >= 0) {\n              var type = b >> 5;\n\n              if (type === 7) {\n                switch (b & 0x1f) {\n                  case 0:\n                    stream.readString();\n                    break;\n\n                  case 1:\n                    useCMap = stream.readString();\n                    break;\n                }\n\n                continue;\n              }\n\n              var sequence = !!(b & 0x10);\n              var dataSize = b & 15;\n\n              if (dataSize + 1 > MAX_NUM_SIZE) {\n                throw new Error(\"processBinaryCMap: Invalid dataSize.\");\n              }\n\n              var ucs2DataSize = 1;\n              var subitemsCount = stream.readNumber();\n              var i;\n\n              switch (type) {\n                case 0:\n                  stream.readHex(start, dataSize);\n                  stream.readHexNumber(end, dataSize);\n                  addHex(end, start, dataSize);\n                  cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(end, dataSize);\n                    stream.readHexNumber(start, dataSize);\n                    addHex(start, end, dataSize);\n                    stream.readHexNumber(end, dataSize);\n                    addHex(end, start, dataSize);\n                    cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n                  }\n\n                  break;\n\n                case 1:\n                  stream.readHex(start, dataSize);\n                  stream.readHexNumber(end, dataSize);\n                  addHex(end, start, dataSize);\n                  stream.readNumber();\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(end, dataSize);\n                    stream.readHexNumber(start, dataSize);\n                    addHex(start, end, dataSize);\n                    stream.readHexNumber(end, dataSize);\n                    addHex(end, start, dataSize);\n                    stream.readNumber();\n                  }\n\n                  break;\n\n                case 2:\n                  stream.readHex(char, dataSize);\n                  code = stream.readNumber();\n                  cMap.mapOne(hexToInt(char, dataSize), code);\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(char, dataSize);\n\n                    if (!sequence) {\n                      stream.readHexNumber(tmp, dataSize);\n                      addHex(char, tmp, dataSize);\n                    }\n\n                    code = stream.readSigned() + (code + 1);\n                    cMap.mapOne(hexToInt(char, dataSize), code);\n                  }\n\n                  break;\n\n                case 3:\n                  stream.readHex(start, dataSize);\n                  stream.readHexNumber(end, dataSize);\n                  addHex(end, start, dataSize);\n                  code = stream.readNumber();\n                  cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(end, dataSize);\n\n                    if (!sequence) {\n                      stream.readHexNumber(start, dataSize);\n                      addHex(start, end, dataSize);\n                    } else {\n                      start.set(end);\n                    }\n\n                    stream.readHexNumber(end, dataSize);\n                    addHex(end, start, dataSize);\n                    code = stream.readNumber();\n                    cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n                  }\n\n                  break;\n\n                case 4:\n                  stream.readHex(char, ucs2DataSize);\n                  stream.readHex(charCode, dataSize);\n                  cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(char, ucs2DataSize);\n\n                    if (!sequence) {\n                      stream.readHexNumber(tmp, ucs2DataSize);\n                      addHex(char, tmp, ucs2DataSize);\n                    }\n\n                    incHex(charCode, dataSize);\n                    stream.readHexSigned(tmp, dataSize);\n                    addHex(charCode, tmp, dataSize);\n                    cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n                  }\n\n                  break;\n\n                case 5:\n                  stream.readHex(start, ucs2DataSize);\n                  stream.readHexNumber(end, ucs2DataSize);\n                  addHex(end, start, ucs2DataSize);\n                  stream.readHex(charCode, dataSize);\n                  cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\n                  for (i = 1; i < subitemsCount; i++) {\n                    incHex(end, ucs2DataSize);\n\n                    if (!sequence) {\n                      stream.readHexNumber(start, ucs2DataSize);\n                      addHex(start, end, ucs2DataSize);\n                    } else {\n                      start.set(end);\n                    }\n\n                    stream.readHexNumber(end, ucs2DataSize);\n                    addHex(end, start, ucs2DataSize);\n                    stream.readHex(charCode, dataSize);\n                    cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n                  }\n\n                  break;\n\n                default:\n                  reject(new Error(\"processBinaryCMap: Unknown type: \" + type));\n                  return;\n              }\n            }\n\n            if (useCMap) {\n              resolve(extend(useCMap));\n              return;\n            }\n\n            resolve(cMap);\n          });\n        }\n\n        function BinaryCMapReader() {}\n\n        BinaryCMapReader.prototype = {\n          process: processBinaryCMap\n        };\n        return BinaryCMapReader;\n      }();\n\n      var CMapFactory = function CMapFactoryClosure() {\n        function strToInt(str) {\n          var a = 0;\n\n          for (var i = 0; i < str.length; i++) {\n            a = a << 8 | str.charCodeAt(i);\n          }\n\n          return a >>> 0;\n        }\n\n        function expectString(obj) {\n          if (!(0, _util.isString)(obj)) {\n            throw new _util.FormatError(\"Malformed CMap: expected string.\");\n          }\n        }\n\n        function expectInt(obj) {\n          if (!Number.isInteger(obj)) {\n            throw new _util.FormatError(\"Malformed CMap: expected int.\");\n          }\n        }\n\n        function parseBfChar(cMap, lexer) {\n          while (true) {\n            var obj = lexer.getObj();\n\n            if ((0, _primitives.isEOF)(obj)) {\n              break;\n            }\n\n            if ((0, _primitives.isCmd)(obj, \"endbfchar\")) {\n              return;\n            }\n\n            expectString(obj);\n            var src = strToInt(obj);\n            obj = lexer.getObj();\n            expectString(obj);\n            var dst = obj;\n            cMap.mapOne(src, dst);\n          }\n        }\n\n        function parseBfRange(cMap, lexer) {\n          while (true) {\n            var obj = lexer.getObj();\n\n            if ((0, _primitives.isEOF)(obj)) {\n              break;\n            }\n\n            if ((0, _primitives.isCmd)(obj, \"endbfrange\")) {\n              return;\n            }\n\n            expectString(obj);\n            var low = strToInt(obj);\n            obj = lexer.getObj();\n            expectString(obj);\n            var high = strToInt(obj);\n            obj = lexer.getObj();\n\n            if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n              var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n              cMap.mapBfRange(low, high, dstLow);\n            } else if ((0, _primitives.isCmd)(obj, \"[\")) {\n              obj = lexer.getObj();\n              var array = [];\n\n              while (!(0, _primitives.isCmd)(obj, \"]\") && !(0, _primitives.isEOF)(obj)) {\n                array.push(obj);\n                obj = lexer.getObj();\n              }\n\n              cMap.mapBfRangeToArray(low, high, array);\n            } else {\n              break;\n            }\n          }\n\n          throw new _util.FormatError(\"Invalid bf range.\");\n        }\n\n        function parseCidChar(cMap, lexer) {\n          while (true) {\n            var obj = lexer.getObj();\n\n            if ((0, _primitives.isEOF)(obj)) {\n              break;\n            }\n\n            if ((0, _primitives.isCmd)(obj, \"endcidchar\")) {\n              return;\n            }\n\n            expectString(obj);\n            var src = strToInt(obj);\n            obj = lexer.getObj();\n            expectInt(obj);\n            var dst = obj;\n            cMap.mapOne(src, dst);\n          }\n        }\n\n        function parseCidRange(cMap, lexer) {\n          while (true) {\n            var obj = lexer.getObj();\n\n            if ((0, _primitives.isEOF)(obj)) {\n              break;\n            }\n\n            if ((0, _primitives.isCmd)(obj, \"endcidrange\")) {\n              return;\n            }\n\n            expectString(obj);\n            var low = strToInt(obj);\n            obj = lexer.getObj();\n            expectString(obj);\n            var high = strToInt(obj);\n            obj = lexer.getObj();\n            expectInt(obj);\n            var dstLow = obj;\n            cMap.mapCidRange(low, high, dstLow);\n          }\n        }\n\n        function parseCodespaceRange(cMap, lexer) {\n          while (true) {\n            var obj = lexer.getObj();\n\n            if ((0, _primitives.isEOF)(obj)) {\n              break;\n            }\n\n            if ((0, _primitives.isCmd)(obj, \"endcodespacerange\")) {\n              return;\n            }\n\n            if (!(0, _util.isString)(obj)) {\n              break;\n            }\n\n            var low = strToInt(obj);\n            obj = lexer.getObj();\n\n            if (!(0, _util.isString)(obj)) {\n              break;\n            }\n\n            var high = strToInt(obj);\n            cMap.addCodespaceRange(obj.length, low, high);\n          }\n\n          throw new _util.FormatError(\"Invalid codespace range.\");\n        }\n\n        function parseWMode(cMap, lexer) {\n          var obj = lexer.getObj();\n\n          if (Number.isInteger(obj)) {\n            cMap.vertical = !!obj;\n          }\n        }\n\n        function parseCMapName(cMap, lexer) {\n          var obj = lexer.getObj();\n\n          if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n            cMap.name = obj.name;\n          }\n        }\n\n        function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n          var previous;\n          var embeddedUseCMap;\n\n          objLoop: while (true) {\n            try {\n              var obj = lexer.getObj();\n\n              if ((0, _primitives.isEOF)(obj)) {\n                break;\n              } else if ((0, _primitives.isName)(obj)) {\n                if (obj.name === \"WMode\") {\n                  parseWMode(cMap, lexer);\n                } else if (obj.name === \"CMapName\") {\n                  parseCMapName(cMap, lexer);\n                }\n\n                previous = obj;\n              } else if ((0, _primitives.isCmd)(obj)) {\n                switch (obj.cmd) {\n                  case \"endcmap\":\n                    break objLoop;\n\n                  case \"usecmap\":\n                    if ((0, _primitives.isName)(previous)) {\n                      embeddedUseCMap = previous.name;\n                    }\n\n                    break;\n\n                  case \"begincodespacerange\":\n                    parseCodespaceRange(cMap, lexer);\n                    break;\n\n                  case \"beginbfchar\":\n                    parseBfChar(cMap, lexer);\n                    break;\n\n                  case \"begincidchar\":\n                    parseCidChar(cMap, lexer);\n                    break;\n\n                  case \"beginbfrange\":\n                    parseBfRange(cMap, lexer);\n                    break;\n\n                  case \"begincidrange\":\n                    parseCidRange(cMap, lexer);\n                    break;\n                }\n              }\n            } catch (ex) {\n              if (ex instanceof _core_utils.MissingDataException) {\n                throw ex;\n              }\n\n              (0, _util.warn)(\"Invalid cMap data: \" + ex);\n              continue;\n            }\n          }\n\n          if (!useCMap && embeddedUseCMap) {\n            useCMap = embeddedUseCMap;\n          }\n\n          if (useCMap) {\n            return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n          }\n\n          return Promise.resolve(cMap);\n        }\n\n        function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n          return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n            cMap.useCMap = newCMap;\n\n            if (cMap.numCodespaceRanges === 0) {\n              var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\n              for (var i = 0; i < useCodespaceRanges.length; i++) {\n                cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n              }\n\n              cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n            }\n\n            cMap.useCMap.forEach(function (key, value) {\n              if (!cMap.contains(key)) {\n                cMap.mapOne(key, cMap.useCMap.lookup(key));\n              }\n            });\n            return cMap;\n          });\n        }\n\n        function createBuiltInCMap(name, fetchBuiltInCMap) {\n          if (name === \"Identity-H\") {\n            return Promise.resolve(new IdentityCMap(false, 2));\n          } else if (name === \"Identity-V\") {\n            return Promise.resolve(new IdentityCMap(true, 2));\n          }\n\n          if (!BUILT_IN_CMAPS.includes(name)) {\n            return Promise.reject(new Error(\"Unknown CMap name: \" + name));\n          }\n\n          if (!fetchBuiltInCMap) {\n            return Promise.reject(new Error(\"Built-in CMap parameters are not provided.\"));\n          }\n\n          return fetchBuiltInCMap(name).then(function (data) {\n            var cMapData = data.cMapData,\n                compressionType = data.compressionType;\n            var cMap = new CMap(true);\n\n            if (compressionType === _util.CMapCompressionType.BINARY) {\n              return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n                return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n              });\n            }\n\n            if (compressionType === _util.CMapCompressionType.NONE) {\n              var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n              return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n            }\n\n            return Promise.reject(new Error(\"TODO: Only BINARY/NONE CMap compression is currently supported.\"));\n          });\n        }\n\n        return {\n          create: function create(params) {\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n              var encoding, fetchBuiltInCMap, useCMap, cMap, lexer;\n              return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n                while (1) {\n                  switch (_context26.prev = _context26.next) {\n                    case 0:\n                      encoding = params.encoding;\n                      fetchBuiltInCMap = params.fetchBuiltInCMap;\n                      useCMap = params.useCMap;\n\n                      if (!(0, _primitives.isName)(encoding)) {\n                        _context26.next = 7;\n                        break;\n                      }\n\n                      return _context26.abrupt(\"return\", createBuiltInCMap(encoding.name, fetchBuiltInCMap));\n\n                    case 7:\n                      if (!(0, _primitives.isStream)(encoding)) {\n                        _context26.next = 11;\n                        break;\n                      }\n\n                      cMap = new CMap();\n                      lexer = new _parser.Lexer(encoding);\n                      return _context26.abrupt(\"return\", parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n                        if (parsedCMap.isIdentityCMap) {\n                          return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n                        }\n\n                        return parsedCMap;\n                      }));\n\n                    case 11:\n                      throw new Error(\"Encoding required.\");\n\n                    case 12:\n                    case \"end\":\n                      return _context26.stop();\n                  }\n                }\n              }, _callee26);\n            }))();\n          }\n        };\n      }();\n\n      exports.CMapFactory = CMapFactory;\n      /***/\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFontType = getFontType;\n      exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.SEAC_ANALYSIS_ENABLED = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _cff_parser = __w_pdfjs_require__(31);\n\n      var _glyphlist = __w_pdfjs_require__(34);\n\n      var _encodings = __w_pdfjs_require__(33);\n\n      var _standard_fonts = __w_pdfjs_require__(35);\n\n      var _unicode = __w_pdfjs_require__(36);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _font_renderer = __w_pdfjs_require__(37);\n\n      var _cmap = __w_pdfjs_require__(29);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _type1_parser = __w_pdfjs_require__(38);\n\n      var PRIVATE_USE_AREAS = [[0xe000, 0xf8ff], [0x100000, 0x10fffd]];\n      var PDF_GLYPH_SPACE_UNITS = 1000;\n      var SEAC_ANALYSIS_ENABLED = true;\n      exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\n      var EXPORT_DATA_PROPERTIES = [\"ascent\", \"bbox\", \"black\", \"bold\", \"charProcOperatorList\", \"composite\", \"data\", \"defaultVMetrics\", \"defaultWidth\", \"descent\", \"fallbackName\", \"fontMatrix\", \"fontType\", \"isMonospace\", \"isSerifFont\", \"isType3Font\", \"italic\", \"loadedName\", \"mimetype\", \"missingFile\", \"name\", \"remeasure\", \"subtype\", \"type\", \"vertical\"];\n      var EXPORT_DATA_EXTRA_PROPERTIES = [\"cMap\", \"defaultEncoding\", \"differences\", \"isSymbolicFont\", \"seacMap\", \"toFontChar\", \"toUnicode\", \"vmetrics\", \"widths\"];\n      var FontFlags = {\n        FixedPitch: 1,\n        Serif: 2,\n        Symbolic: 4,\n        Script: 8,\n        Nonsymbolic: 32,\n        Italic: 64,\n        AllCap: 65536,\n        SmallCap: 131072,\n        ForceBold: 262144\n      };\n      exports.FontFlags = FontFlags;\n      var MacStandardGlyphOrdering = [\".notdef\", \".null\", \"nonmarkingreturn\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"nonbreakingspace\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"Lslash\", \"lslash\", \"Scaron\", \"scaron\", \"Zcaron\", \"zcaron\", \"brokenbar\", \"Eth\", \"eth\", \"Yacute\", \"yacute\", \"Thorn\", \"thorn\", \"minus\", \"multiply\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"onehalf\", \"onequarter\", \"threequarters\", \"franc\", \"Gbreve\", \"gbreve\", \"Idotaccent\", \"Scedilla\", \"scedilla\", \"Cacute\", \"cacute\", \"Ccaron\", \"ccaron\", \"dcroat\"];\n\n      function adjustWidths(properties) {\n        if (!properties.fontMatrix) {\n          return;\n        }\n\n        if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n          return;\n        }\n\n        var scale = 0.001 / properties.fontMatrix[0];\n        var glyphsWidths = properties.widths;\n\n        for (var glyph in glyphsWidths) {\n          glyphsWidths[glyph] *= scale;\n        }\n\n        properties.defaultWidth *= scale;\n      }\n\n      function adjustToUnicode(properties, builtInEncoding) {\n        if (properties.hasIncludedToUnicodeMap) {\n          return;\n        }\n\n        if (properties.hasEncoding) {\n          return;\n        }\n\n        if (builtInEncoding === properties.defaultEncoding) {\n          return;\n        }\n\n        if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n          return;\n        }\n\n        var toUnicode = [],\n            glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\n        for (var charCode in builtInEncoding) {\n          var glyphName = builtInEncoding[charCode];\n          var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\n          if (unicode !== -1) {\n            toUnicode[charCode] = String.fromCharCode(unicode);\n          }\n        }\n\n        properties.toUnicode.amend(toUnicode);\n      }\n\n      function getFontType(type, subtype) {\n        switch (type) {\n          case \"Type1\":\n            return subtype === \"Type1C\" ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n\n          case \"CIDFontType0\":\n            return subtype === \"CIDFontType0C\" ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n\n          case \"OpenType\":\n            return _util.FontType.OPENTYPE;\n\n          case \"TrueType\":\n            return _util.FontType.TRUETYPE;\n\n          case \"CIDFontType2\":\n            return _util.FontType.CIDFONTTYPE2;\n\n          case \"MMType1\":\n            return _util.FontType.MMTYPE1;\n\n          case \"Type0\":\n            return _util.FontType.TYPE0;\n\n          default:\n            return _util.FontType.UNKNOWN;\n        }\n      }\n\n      function recoverGlyphName(name, glyphsUnicodeMap) {\n        if (glyphsUnicodeMap[name] !== undefined) {\n          return name;\n        }\n\n        var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n\n        if (unicode !== -1) {\n          for (var key in glyphsUnicodeMap) {\n            if (glyphsUnicodeMap[key] === unicode) {\n              return key;\n            }\n          }\n        }\n\n        (0, _util.info)(\"Unable to recover a standard glyph name for: \" + name);\n        return name;\n      }\n\n      var Glyph = function GlyphClosure() {\n        function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n          this.fontChar = fontChar;\n          this.unicode = unicode;\n          this.accent = accent;\n          this.width = width;\n          this.vmetric = vmetric;\n          this.operatorListId = operatorListId;\n          this.isSpace = isSpace;\n          this.isInFont = isInFont;\n        }\n\n        Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n          return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n        };\n\n        return Glyph;\n      }();\n\n      var ToUnicodeMap = function ToUnicodeMapClosure() {\n        function ToUnicodeMap() {\n          var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          this._map = cmap;\n        }\n\n        ToUnicodeMap.prototype = {\n          get length() {\n            return this._map.length;\n          },\n\n          forEach: function forEach(callback) {\n            for (var charCode in this._map) {\n              callback(charCode, this._map[charCode].charCodeAt(0));\n            }\n          },\n          has: function has(i) {\n            return this._map[i] !== undefined;\n          },\n          get: function get(i) {\n            return this._map[i];\n          },\n          charCodeOf: function charCodeOf(value) {\n            var map = this._map;\n\n            if (map.length <= 0x10000) {\n              return map.indexOf(value);\n            }\n\n            for (var charCode in map) {\n              if (map[charCode] === value) {\n                return charCode | 0;\n              }\n            }\n\n            return -1;\n          },\n          amend: function amend(map) {\n            for (var charCode in map) {\n              this._map[charCode] = map[charCode];\n            }\n          }\n        };\n        return ToUnicodeMap;\n      }();\n\n      exports.ToUnicodeMap = ToUnicodeMap;\n\n      var IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n        function IdentityToUnicodeMap(firstChar, lastChar) {\n          this.firstChar = firstChar;\n          this.lastChar = lastChar;\n        }\n\n        IdentityToUnicodeMap.prototype = {\n          get length() {\n            return this.lastChar + 1 - this.firstChar;\n          },\n\n          forEach: function forEach(callback) {\n            for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n              callback(i, i);\n            }\n          },\n          has: function has(i) {\n            return this.firstChar <= i && i <= this.lastChar;\n          },\n          get: function get(i) {\n            if (this.firstChar <= i && i <= this.lastChar) {\n              return String.fromCharCode(i);\n            }\n\n            return undefined;\n          },\n          charCodeOf: function charCodeOf(v) {\n            return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n          },\n          amend: function amend(map) {\n            (0, _util.unreachable)(\"Should not call amend()\");\n          }\n        };\n        return IdentityToUnicodeMap;\n      }();\n\n      exports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\n      var OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n        function writeInt16(dest, offset, num) {\n          dest[offset] = num >> 8 & 0xff;\n          dest[offset + 1] = num & 0xff;\n        }\n\n        function writeInt32(dest, offset, num) {\n          dest[offset] = num >> 24 & 0xff;\n          dest[offset + 1] = num >> 16 & 0xff;\n          dest[offset + 2] = num >> 8 & 0xff;\n          dest[offset + 3] = num & 0xff;\n        }\n\n        function writeData(dest, offset, data) {\n          var i, ii;\n\n          if (data instanceof Uint8Array) {\n            dest.set(data, offset);\n          } else if (typeof data === \"string\") {\n            for (i = 0, ii = data.length; i < ii; i++) {\n              dest[offset++] = data.charCodeAt(i) & 0xff;\n            }\n          } else {\n            for (i = 0, ii = data.length; i < ii; i++) {\n              dest[offset++] = data[i] & 0xff;\n            }\n          }\n        }\n\n        function OpenTypeFileBuilder(sfnt) {\n          this.sfnt = sfnt;\n          this.tables = Object.create(null);\n        }\n\n        OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n          var maxPower2 = 1,\n              log2 = 0;\n\n          while ((maxPower2 ^ entriesCount) > maxPower2) {\n            maxPower2 <<= 1;\n            log2++;\n          }\n\n          var searchRange = maxPower2 * entrySize;\n          return {\n            range: searchRange,\n            entry: log2,\n            rangeShift: entrySize * entriesCount - searchRange\n          };\n        };\n\n        var OTF_HEADER_SIZE = 12;\n        var OTF_TABLE_ENTRY_SIZE = 16;\n        OpenTypeFileBuilder.prototype = {\n          toArray: function OpenTypeFileBuilder_toArray() {\n            var sfnt = this.sfnt;\n            var tables = this.tables;\n            var tablesNames = Object.keys(tables);\n            tablesNames.sort();\n            var numTables = tablesNames.length;\n            var i, j, jj, table, tableName;\n            var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n            var tableOffsets = [offset];\n\n            for (i = 0; i < numTables; i++) {\n              table = tables[tablesNames[i]];\n              var paddedLength = (table.length + 3 & ~3) >>> 0;\n              offset += paddedLength;\n              tableOffsets.push(offset);\n            }\n\n            var file = new Uint8Array(offset);\n\n            for (i = 0; i < numTables; i++) {\n              table = tables[tablesNames[i]];\n              writeData(file, tableOffsets[i], table);\n            }\n\n            if (sfnt === \"true\") {\n              sfnt = (0, _util.string32)(0x00010000);\n            }\n\n            file[0] = sfnt.charCodeAt(0) & 0xff;\n            file[1] = sfnt.charCodeAt(1) & 0xff;\n            file[2] = sfnt.charCodeAt(2) & 0xff;\n            file[3] = sfnt.charCodeAt(3) & 0xff;\n            writeInt16(file, 4, numTables);\n            var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n            writeInt16(file, 6, searchParams.range);\n            writeInt16(file, 8, searchParams.entry);\n            writeInt16(file, 10, searchParams.rangeShift);\n            offset = OTF_HEADER_SIZE;\n\n            for (i = 0; i < numTables; i++) {\n              tableName = tablesNames[i];\n              file[offset] = tableName.charCodeAt(0) & 0xff;\n              file[offset + 1] = tableName.charCodeAt(1) & 0xff;\n              file[offset + 2] = tableName.charCodeAt(2) & 0xff;\n              file[offset + 3] = tableName.charCodeAt(3) & 0xff;\n              var checksum = 0;\n\n              for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n                var quad = (0, _core_utils.readUint32)(file, j);\n                checksum = checksum + quad >>> 0;\n              }\n\n              writeInt32(file, offset + 4, checksum);\n              writeInt32(file, offset + 8, tableOffsets[i]);\n              writeInt32(file, offset + 12, tables[tableName].length);\n              offset += OTF_TABLE_ENTRY_SIZE;\n            }\n\n            return file;\n          },\n          addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n            if (tag in this.tables) {\n              throw new Error(\"Table \" + tag + \" already exists\");\n            }\n\n            this.tables[tag] = data;\n          }\n        };\n        return OpenTypeFileBuilder;\n      }();\n\n      var Font = function FontClosure() {\n        function Font(name, file, properties) {\n          var charCode;\n          this.name = name;\n          this.loadedName = properties.loadedName;\n          this.isType3Font = properties.isType3Font;\n          this.missingFile = false;\n          this.glyphCache = Object.create(null);\n          this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n          this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n          this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n          var type = properties.type;\n          var subtype = properties.subtype;\n          this.type = type;\n          this.subtype = subtype;\n          var fallbackName = \"sans-serif\";\n\n          if (this.isMonospace) {\n            fallbackName = \"monospace\";\n          } else if (this.isSerifFont) {\n            fallbackName = \"serif\";\n          }\n\n          this.fallbackName = fallbackName;\n          this.differences = properties.differences;\n          this.widths = properties.widths;\n          this.defaultWidth = properties.defaultWidth;\n          this.composite = properties.composite;\n          this.cMap = properties.cMap;\n          this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n          this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n          this.fontMatrix = properties.fontMatrix;\n          this.bbox = properties.bbox;\n          this.defaultEncoding = properties.defaultEncoding;\n          this.toUnicode = properties.toUnicode;\n          this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n          this.toFontChar = [];\n\n          if (properties.type === \"Type3\") {\n            for (charCode = 0; charCode < 256; charCode++) {\n              this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n            }\n\n            this.fontType = _util.FontType.TYPE3;\n            return;\n          }\n\n          this.cidEncoding = properties.cidEncoding;\n          this.vertical = !!properties.vertical;\n\n          if (this.vertical) {\n            this.vmetrics = properties.vmetrics;\n            this.defaultVMetrics = properties.defaultVMetrics;\n          }\n\n          if (!file || file.isEmpty) {\n            if (file) {\n              (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + \")\");\n            }\n\n            this.fallbackToSystemFont();\n            return;\n          }\n\n          var _getFontFileType = getFontFileType(file, properties);\n\n          var _getFontFileType2 = _slicedToArray(_getFontFileType, 2);\n\n          type = _getFontFileType2[0];\n          subtype = _getFontFileType2[1];\n\n          if (type !== this.type || subtype !== this.subtype) {\n            (0, _util.info)(\"Inconsistent font file Type/SubType, expected: \" + \"\".concat(this.type, \"/\").concat(this.subtype, \" but found: \").concat(type, \"/\").concat(subtype, \".\"));\n          }\n\n          try {\n            var data;\n\n            switch (type) {\n              case \"MMType1\":\n                (0, _util.info)(\"MMType1 font (\" + name + \"), falling back to Type1.\");\n\n              case \"Type1\":\n              case \"CIDFontType0\":\n                this.mimetype = \"font/opentype\";\n                var cff = subtype === \"Type1C\" || subtype === \"CIDFontType0C\" ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n                adjustWidths(properties);\n                data = this.convert(name, cff, properties);\n                break;\n\n              case \"OpenType\":\n              case \"TrueType\":\n              case \"CIDFontType2\":\n                this.mimetype = \"font/opentype\";\n                data = this.checkAndRepair(name, file, properties);\n\n                if (this.isOpenType) {\n                  adjustWidths(properties);\n                  type = \"OpenType\";\n                }\n\n                break;\n\n              default:\n                throw new _util.FormatError(\"Font \".concat(type, \" is not supported\"));\n            }\n          } catch (e) {\n            (0, _util.warn)(e);\n            this.fallbackToSystemFont();\n            return;\n          }\n\n          this.data = data;\n          this.fontType = getFontType(type, subtype);\n          this.fontMatrix = properties.fontMatrix;\n          this.widths = properties.widths;\n          this.defaultWidth = properties.defaultWidth;\n          this.toUnicode = properties.toUnicode;\n          this.seacMap = properties.seacMap;\n        }\n\n        function int16(b0, b1) {\n          return (b0 << 8) + b1;\n        }\n\n        function writeSignedInt16(bytes, index, value) {\n          bytes[index + 1] = value;\n          bytes[index] = value >>> 8;\n        }\n\n        function signedInt16(b0, b1) {\n          var value = (b0 << 8) + b1;\n          return value & 1 << 15 ? value - 0x10000 : value;\n        }\n\n        function int32(b0, b1, b2, b3) {\n          return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n        }\n\n        function string16(value) {\n          return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n        }\n\n        function safeString16(value) {\n          if (value > 0x7fff) {\n            value = 0x7fff;\n          } else if (value < -0x8000) {\n            value = -0x8000;\n          }\n\n          return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n        }\n\n        function isTrueTypeFile(file) {\n          var header = file.peekBytes(4);\n          return (0, _core_utils.readUint32)(header, 0) === 0x00010000 || (0, _util.bytesToString)(header) === \"true\";\n        }\n\n        function isTrueTypeCollectionFile(file) {\n          var header = file.peekBytes(4);\n          return (0, _util.bytesToString)(header) === \"ttcf\";\n        }\n\n        function isOpenTypeFile(file) {\n          var header = file.peekBytes(4);\n          return (0, _util.bytesToString)(header) === \"OTTO\";\n        }\n\n        function isType1File(file) {\n          var header = file.peekBytes(2);\n\n          if (header[0] === 0x25 && header[1] === 0x21) {\n            return true;\n          }\n\n          if (header[0] === 0x80 && header[1] === 0x01) {\n            return true;\n          }\n\n          return false;\n        }\n\n        function isCFFFile(file) {\n          var header = file.peekBytes(4);\n\n          if (header[0] >= 1 && header[3] >= 1 && header[3] <= 4) {\n            return true;\n          }\n\n          return false;\n        }\n\n        function getFontFileType(file, _ref38) {\n          var type = _ref38.type,\n              subtype = _ref38.subtype,\n              composite = _ref38.composite;\n          var fileType, fileSubtype;\n\n          if (isTrueTypeFile(file) || isTrueTypeCollectionFile(file)) {\n            if (composite) {\n              fileType = \"CIDFontType2\";\n            } else {\n              fileType = \"TrueType\";\n            }\n          } else if (isOpenTypeFile(file)) {\n            if (composite) {\n              fileType = \"CIDFontType2\";\n            } else {\n              fileType = \"OpenType\";\n            }\n          } else if (isType1File(file)) {\n            if (composite) {\n              fileType = \"CIDFontType0\";\n            } else {\n              fileType = type === \"MMType1\" ? \"MMType1\" : \"Type1\";\n            }\n          } else if (isCFFFile(file)) {\n            if (composite) {\n              fileType = \"CIDFontType0\";\n              fileSubtype = \"CIDFontType0C\";\n            } else {\n              fileType = type === \"MMType1\" ? \"MMType1\" : \"Type1\";\n              fileSubtype = \"Type1C\";\n            }\n          } else {\n            (0, _util.warn)(\"getFontFileType: Unable to detect correct font file Type/Subtype.\");\n            fileType = type;\n            fileSubtype = subtype;\n          }\n\n          return [fileType, fileSubtype];\n        }\n\n        function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n          var toFontChar = [],\n              unicode;\n\n          for (var i = 0, ii = encoding.length; i < ii; i++) {\n            unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n\n            if (unicode !== -1) {\n              toFontChar[i] = unicode;\n            }\n          }\n\n          for (var charCode in differences) {\n            unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n\n            if (unicode !== -1) {\n              toFontChar[+charCode] = unicode;\n            }\n          }\n\n          return toFontChar;\n        }\n\n        function adjustMapping(charCodeToGlyphId, hasGlyph, newGlyphZeroId) {\n          var newMap = Object.create(null);\n          var toFontChar = [];\n          var privateUseAreaIndex = 0;\n          var nextAvailableFontCharCode = PRIVATE_USE_AREAS[privateUseAreaIndex][0];\n          var privateUseOffetEnd = PRIVATE_USE_AREAS[privateUseAreaIndex][1];\n\n          for (var originalCharCode in charCodeToGlyphId) {\n            originalCharCode |= 0;\n            var glyphId = charCodeToGlyphId[originalCharCode];\n\n            if (!hasGlyph(glyphId)) {\n              continue;\n            }\n\n            if (nextAvailableFontCharCode > privateUseOffetEnd) {\n              privateUseAreaIndex++;\n\n              if (privateUseAreaIndex >= PRIVATE_USE_AREAS.length) {\n                (0, _util.warn)(\"Ran out of space in font private use area.\");\n                break;\n              }\n\n              nextAvailableFontCharCode = PRIVATE_USE_AREAS[privateUseAreaIndex][0];\n              privateUseOffetEnd = PRIVATE_USE_AREAS[privateUseAreaIndex][1];\n            }\n\n            var fontCharCode = nextAvailableFontCharCode++;\n\n            if (glyphId === 0) {\n              glyphId = newGlyphZeroId;\n            }\n\n            newMap[fontCharCode] = glyphId;\n            toFontChar[originalCharCode] = fontCharCode;\n          }\n\n          return {\n            toFontChar: toFontChar,\n            charCodeToGlyphId: newMap,\n            nextAvailableFontCharCode: nextAvailableFontCharCode\n          };\n        }\n\n        function getRanges(glyphs, numGlyphs) {\n          var codes = [];\n\n          for (var charCode in glyphs) {\n            if (glyphs[charCode] >= numGlyphs) {\n              continue;\n            }\n\n            codes.push({\n              fontCharCode: charCode | 0,\n              glyphId: glyphs[charCode]\n            });\n          }\n\n          if (codes.length === 0) {\n            codes.push({\n              fontCharCode: 0,\n              glyphId: 0\n            });\n          }\n\n          codes.sort(function fontGetRangesSort(a, b) {\n            return a.fontCharCode - b.fontCharCode;\n          });\n          var ranges = [];\n          var length = codes.length;\n\n          for (var n = 0; n < length;) {\n            var start = codes[n].fontCharCode;\n            var codeIndices = [codes[n].glyphId];\n            ++n;\n            var end = start;\n\n            while (n < length && end + 1 === codes[n].fontCharCode) {\n              codeIndices.push(codes[n].glyphId);\n              ++end;\n              ++n;\n\n              if (end === 0xffff) {\n                break;\n              }\n            }\n\n            ranges.push([start, end, codeIndices]);\n          }\n\n          return ranges;\n        }\n\n        function createCmapTable(glyphs, numGlyphs) {\n          var ranges = getRanges(glyphs, numGlyphs);\n          var numTables = ranges[ranges.length - 1][1] > 0xffff ? 2 : 1;\n          var cmap = \"\\x00\\x00\" + string16(numTables) + \"\\x00\\x03\" + \"\\x00\\x01\" + (0, _util.string32)(4 + numTables * 8);\n          var i, ii, j, jj;\n\n          for (i = ranges.length - 1; i >= 0; --i) {\n            if (ranges[i][0] <= 0xffff) {\n              break;\n            }\n          }\n\n          var bmpLength = i + 1;\n\n          if (ranges[i][0] < 0xffff && ranges[i][1] === 0xffff) {\n            ranges[i][1] = 0xfffe;\n          }\n\n          var trailingRangesCount = ranges[i][1] < 0xffff ? 1 : 0;\n          var segCount = bmpLength + trailingRangesCount;\n          var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n          var startCount = \"\";\n          var endCount = \"\";\n          var idDeltas = \"\";\n          var idRangeOffsets = \"\";\n          var glyphsIds = \"\";\n          var bias = 0;\n          var range, start, end, codes;\n\n          for (i = 0, ii = bmpLength; i < ii; i++) {\n            range = ranges[i];\n            start = range[0];\n            end = range[1];\n            startCount += string16(start);\n            endCount += string16(end);\n            codes = range[2];\n            var contiguous = true;\n\n            for (j = 1, jj = codes.length; j < jj; ++j) {\n              if (codes[j] !== codes[j - 1] + 1) {\n                contiguous = false;\n                break;\n              }\n            }\n\n            if (!contiguous) {\n              var offset = (segCount - i) * 2 + bias * 2;\n              bias += end - start + 1;\n              idDeltas += string16(0);\n              idRangeOffsets += string16(offset);\n\n              for (j = 0, jj = codes.length; j < jj; ++j) {\n                glyphsIds += string16(codes[j]);\n              }\n            } else {\n              var startCode = codes[0];\n              idDeltas += string16(startCode - start & 0xffff);\n              idRangeOffsets += string16(0);\n            }\n          }\n\n          if (trailingRangesCount > 0) {\n            endCount += \"\\xFF\\xFF\";\n            startCount += \"\\xFF\\xFF\";\n            idDeltas += \"\\x00\\x01\";\n            idRangeOffsets += \"\\x00\\x00\";\n          }\n\n          var format314 = \"\\x00\\x00\" + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + \"\\x00\\x00\" + startCount + idDeltas + idRangeOffsets + glyphsIds;\n          var format31012 = \"\";\n          var header31012 = \"\";\n\n          if (numTables > 1) {\n            cmap += \"\\x00\\x03\" + \"\\x00\\x0A\" + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n            format31012 = \"\";\n\n            for (i = 0, ii = ranges.length; i < ii; i++) {\n              range = ranges[i];\n              start = range[0];\n              codes = range[2];\n              var code = codes[0];\n\n              for (j = 1, jj = codes.length; j < jj; ++j) {\n                if (codes[j] !== codes[j - 1] + 1) {\n                  end = range[0] + j - 1;\n                  format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n                  start = end + 1;\n                  code = codes[j];\n                }\n              }\n\n              format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n            }\n\n            header31012 = \"\\x00\\x0C\" + \"\\x00\\x00\" + (0, _util.string32)(format31012.length + 16) + \"\\x00\\x00\\x00\\x00\" + (0, _util.string32)(format31012.length / 12);\n          }\n\n          return cmap + \"\\x00\\x04\" + string16(format314.length + 4) + format314 + header31012 + format31012;\n        }\n\n        function validateOS2Table(os2, file) {\n          file.pos = (file.start || 0) + os2.offset;\n          var version = file.getUint16();\n          file.skip(60);\n          var selection = file.getUint16();\n\n          if (version < 4 && selection & 0x0300) {\n            return false;\n          }\n\n          var firstChar = file.getUint16();\n          var lastChar = file.getUint16();\n\n          if (firstChar > lastChar) {\n            return false;\n          }\n\n          file.skip(6);\n          var usWinAscent = file.getUint16();\n\n          if (usWinAscent === 0) {\n            return false;\n          }\n\n          os2.data[8] = os2.data[9] = 0;\n          return true;\n        }\n\n        function createOS2Table(properties, charstrings, override) {\n          override = override || {\n            unitsPerEm: 0,\n            yMax: 0,\n            yMin: 0,\n            ascent: 0,\n            descent: 0\n          };\n          var ulUnicodeRange1 = 0;\n          var ulUnicodeRange2 = 0;\n          var ulUnicodeRange3 = 0;\n          var ulUnicodeRange4 = 0;\n          var firstCharIndex = null;\n          var lastCharIndex = 0;\n\n          if (charstrings) {\n            for (var code in charstrings) {\n              code |= 0;\n\n              if (firstCharIndex > code || !firstCharIndex) {\n                firstCharIndex = code;\n              }\n\n              if (lastCharIndex < code) {\n                lastCharIndex = code;\n              }\n\n              var position = (0, _unicode.getUnicodeRangeFor)(code);\n\n              if (position < 32) {\n                ulUnicodeRange1 |= 1 << position;\n              } else if (position < 64) {\n                ulUnicodeRange2 |= 1 << position - 32;\n              } else if (position < 96) {\n                ulUnicodeRange3 |= 1 << position - 64;\n              } else if (position < 123) {\n                ulUnicodeRange4 |= 1 << position - 96;\n              } else {\n                throw new _util.FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\");\n              }\n            }\n\n            if (lastCharIndex > 0xffff) {\n              lastCharIndex = 0xffff;\n            }\n          } else {\n            firstCharIndex = 0;\n            lastCharIndex = 255;\n          }\n\n          var bbox = properties.bbox || [0, 0, 0, 0];\n          var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n          var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n          var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n          var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\n          if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n            typoDescent = -typoDescent;\n          }\n\n          var winAscent = override.yMax || typoAscent;\n          var winDescent = -override.yMin || -typoDescent;\n          return \"\\x00\\x03\" + \"\\x02\\x24\" + \"\\x01\\xF4\" + \"\\x00\\x05\" + \"\\x00\\x00\" + \"\\x02\\x8A\" + \"\\x02\\xBB\" + \"\\x00\\x00\" + \"\\x00\\x8C\" + \"\\x02\\x8A\" + \"\\x02\\xBB\" + \"\\x00\\x00\" + \"\\x01\\xDF\" + \"\\x00\\x31\" + \"\\x01\\x02\" + \"\\x00\\x00\" + \"\\x00\\x00\\x06\" + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + \"\\x00\\x00\\x00\\x00\\x00\\x00\" + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + \"\\x2A\\x32\\x31\\x2A\" + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + \"\\x00\\x64\" + string16(winAscent) + string16(winDescent) + \"\\x00\\x00\\x00\\x00\" + \"\\x00\\x00\\x00\\x00\" + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + \"\\x00\\x03\";\n        }\n\n        function createPostTable(properties) {\n          var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n          return \"\\x00\\x03\\x00\\x00\" + (0, _util.string32)(angle) + \"\\x00\\x00\" + \"\\x00\\x00\" + (0, _util.string32)(properties.fixedPitch) + \"\\x00\\x00\\x00\\x00\" + \"\\x00\\x00\\x00\\x00\" + \"\\x00\\x00\\x00\\x00\" + \"\\x00\\x00\\x00\\x00\";\n        }\n\n        function createNameTable(name, proto) {\n          if (!proto) {\n            proto = [[], []];\n          }\n\n          var strings = [proto[0][0] || \"Original licence\", proto[0][1] || name, proto[0][2] || \"Unknown\", proto[0][3] || \"uniqueID\", proto[0][4] || name, proto[0][5] || \"Version 0.11\", proto[0][6] || \"\", proto[0][7] || \"Unknown\", proto[0][8] || \"Unknown\", proto[0][9] || \"Unknown\"];\n          var stringsUnicode = [];\n          var i, ii, j, jj, str;\n\n          for (i = 0, ii = strings.length; i < ii; i++) {\n            str = proto[1][i] || strings[i];\n            var strBufUnicode = [];\n\n            for (j = 0, jj = str.length; j < jj; j++) {\n              strBufUnicode.push(string16(str.charCodeAt(j)));\n            }\n\n            stringsUnicode.push(strBufUnicode.join(\"\"));\n          }\n\n          var names = [strings, stringsUnicode];\n          var platforms = [\"\\x00\\x01\", \"\\x00\\x03\"];\n          var encodings = [\"\\x00\\x00\", \"\\x00\\x01\"];\n          var languages = [\"\\x00\\x00\", \"\\x04\\x09\"];\n          var namesRecordCount = strings.length * platforms.length;\n          var nameTable = \"\\x00\\x00\" + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n          var strOffset = 0;\n\n          for (i = 0, ii = platforms.length; i < ii; i++) {\n            var strs = names[i];\n\n            for (j = 0, jj = strs.length; j < jj; j++) {\n              str = strs[j];\n              var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n              nameTable += nameRecord;\n              strOffset += str.length;\n            }\n          }\n\n          nameTable += strings.join(\"\") + stringsUnicode.join(\"\");\n          return nameTable;\n        }\n\n        Font.prototype = {\n          name: null,\n          font: null,\n          mimetype: null,\n          disableFontFace: false,\n\n          get renderer() {\n            var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\n            return (0, _util.shadow)(this, \"renderer\", renderer);\n          },\n\n          exportData: function exportData() {\n            var extraProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var exportDataProperties = extraProperties ? [].concat(EXPORT_DATA_PROPERTIES, EXPORT_DATA_EXTRA_PROPERTIES) : EXPORT_DATA_PROPERTIES;\n            var data = Object.create(null);\n            var property, value;\n\n            var _iterator46 = _createForOfIteratorHelper(exportDataProperties),\n                _step46;\n\n            try {\n              for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n                property = _step46.value;\n                value = this[property];\n\n                if (value !== undefined) {\n                  data[property] = value;\n                }\n              }\n            } catch (err) {\n              _iterator46.e(err);\n            } finally {\n              _iterator46.f();\n            }\n\n            return data;\n          },\n          fallbackToSystemFont: function Font_fallbackToSystemFont() {\n            var _this68 = this;\n\n            this.missingFile = true;\n            var name = this.name;\n            var type = this.type;\n            var subtype = this.subtype;\n            var fontName = name.replace(/[,_]/g, \"-\").replace(/\\s/g, \"\");\n            var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n                nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n            var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n            fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n            this.bold = fontName.search(/bold/gi) !== -1;\n            this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n            this.black = name.search(/Black/g) !== -1;\n            this.remeasure = Object.keys(this.widths).length > 0;\n\n            if (isStandardFont && type === \"CIDFontType2\" && this.cidEncoding.startsWith(\"Identity-\")) {\n              var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n              var map = [];\n\n              for (var charCode in GlyphMapForStandardFonts) {\n                map[+charCode] = GlyphMapForStandardFonts[charCode];\n              }\n\n              if (/Arial-?Black/i.test(name)) {\n                var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n\n                for (var _charCode in SupplementalGlyphMapForArialBlack) {\n                  map[+_charCode] = SupplementalGlyphMapForArialBlack[_charCode];\n                }\n              } else if (/Calibri/i.test(name)) {\n                var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n\n                for (var _charCode2 in SupplementalGlyphMapForCalibri) {\n                  map[+_charCode2] = SupplementalGlyphMapForCalibri[_charCode2];\n                }\n              }\n\n              var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\n              if (!isIdentityUnicode) {\n                this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n                  map[+charCode] = unicodeCharCode;\n                });\n              }\n\n              this.toFontChar = map;\n              this.toUnicode = new ToUnicodeMap(map);\n            } else if (/Symbol/i.test(fontName)) {\n              this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n            } else if (/Dingbats/i.test(fontName)) {\n              if (/Wingdings/i.test(name)) {\n                (0, _util.warn)(\"Non-embedded Wingdings font, falling back to ZapfDingbats.\");\n              }\n\n              this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n            } else if (isStandardFont) {\n              this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n            } else {\n              var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n              var _map = [];\n              this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n                if (!_this68.composite) {\n                  var glyphName = _this68.differences[charCode] || _this68.defaultEncoding[charCode];\n                  var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\n                  if (unicode !== -1) {\n                    unicodeCharCode = unicode;\n                  }\n                }\n\n                _map[+charCode] = unicodeCharCode;\n              });\n\n              if (this.composite && this.toUnicode instanceof IdentityToUnicodeMap) {\n                if (/Verdana/i.test(name)) {\n                  var _GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n\n                  for (var _charCode3 in _GlyphMapForStandardFonts) {\n                    _map[+_charCode3] = _GlyphMapForStandardFonts[_charCode3];\n                  }\n                }\n              }\n\n              this.toFontChar = _map;\n            }\n\n            this.loadedName = fontName.split(\"-\")[0];\n            this.fontType = getFontType(type, subtype);\n          },\n          checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n            var VALID_TABLES = [\"OS/2\", \"cmap\", \"head\", \"hhea\", \"hmtx\", \"maxp\", \"name\", \"post\", \"loca\", \"glyf\", \"fpgm\", \"prep\", \"cvt \", \"CFF \"];\n\n            function readTables(file, numTables) {\n              var tables = Object.create(null);\n              tables[\"OS/2\"] = null;\n              tables.cmap = null;\n              tables.head = null;\n              tables.hhea = null;\n              tables.hmtx = null;\n              tables.maxp = null;\n              tables.name = null;\n              tables.post = null;\n\n              for (var _i30 = 0; _i30 < numTables; _i30++) {\n                var table = readTableEntry(file);\n\n                if (!VALID_TABLES.includes(table.tag)) {\n                  continue;\n                }\n\n                if (table.length === 0) {\n                  continue;\n                }\n\n                tables[table.tag] = table;\n              }\n\n              return tables;\n            }\n\n            function readTableEntry(file) {\n              var tag = (0, _util.bytesToString)(file.getBytes(4));\n              var checksum = file.getInt32() >>> 0;\n              var offset = file.getInt32() >>> 0;\n              var length = file.getInt32() >>> 0;\n              var previousPosition = file.pos;\n              file.pos = file.start ? file.start : 0;\n              file.skip(offset);\n              var data = file.getBytes(length);\n              file.pos = previousPosition;\n\n              if (tag === \"head\") {\n                data[8] = data[9] = data[10] = data[11] = 0;\n                data[17] |= 0x20;\n              }\n\n              return {\n                tag: tag,\n                checksum: checksum,\n                length: length,\n                offset: offset,\n                data: data\n              };\n            }\n\n            function readOpenTypeHeader(ttf) {\n              return {\n                version: (0, _util.bytesToString)(ttf.getBytes(4)),\n                numTables: ttf.getUint16(),\n                searchRange: ttf.getUint16(),\n                entrySelector: ttf.getUint16(),\n                rangeShift: ttf.getUint16()\n              };\n            }\n\n            function readTrueTypeCollectionHeader(ttc) {\n              var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n              (0, _util.assert)(ttcTag === \"ttcf\", \"Must be a TrueType Collection font.\");\n              var majorVersion = ttc.getUint16();\n              var minorVersion = ttc.getUint16();\n              var numFonts = ttc.getInt32() >>> 0;\n              var offsetTable = [];\n\n              for (var _i31 = 0; _i31 < numFonts; _i31++) {\n                offsetTable.push(ttc.getInt32() >>> 0);\n              }\n\n              var header = {\n                ttcTag: ttcTag,\n                majorVersion: majorVersion,\n                minorVersion: minorVersion,\n                numFonts: numFonts,\n                offsetTable: offsetTable\n              };\n\n              switch (majorVersion) {\n                case 1:\n                  return header;\n\n                case 2:\n                  header.dsigTag = ttc.getInt32() >>> 0;\n                  header.dsigLength = ttc.getInt32() >>> 0;\n                  header.dsigOffset = ttc.getInt32() >>> 0;\n                  return header;\n              }\n\n              throw new _util.FormatError(\"Invalid TrueType Collection majorVersion: \".concat(majorVersion, \".\"));\n            }\n\n            function readTrueTypeCollectionData(ttc, fontName) {\n              var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n                  numFonts = _readTrueTypeCollecti.numFonts,\n                  offsetTable = _readTrueTypeCollecti.offsetTable;\n\n              for (var _i32 = 0; _i32 < numFonts; _i32++) {\n                ttc.pos = (ttc.start || 0) + offsetTable[_i32];\n                var potentialHeader = readOpenTypeHeader(ttc);\n                var potentialTables = readTables(ttc, potentialHeader.numTables);\n\n                if (!potentialTables.name) {\n                  throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n                }\n\n                var nameTable = readNameTable(potentialTables.name);\n\n                for (var j = 0, jj = nameTable.length; j < jj; j++) {\n                  for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n                    var nameEntry = nameTable[j][k];\n\n                    if (nameEntry && nameEntry.replace(/\\s/g, \"\") === fontName) {\n                      return {\n                        header: potentialHeader,\n                        tables: potentialTables\n                      };\n                    }\n                  }\n                }\n              }\n\n              throw new _util.FormatError(\"TrueType Collection does not contain \\\"\".concat(fontName, \"\\\" font.\"));\n            }\n\n            function readCmapTable(cmap, file, isSymbolicFont, hasEncoding) {\n              if (!cmap) {\n                (0, _util.warn)(\"No cmap table available.\");\n                return {\n                  platformId: -1,\n                  encodingId: -1,\n                  mappings: [],\n                  hasShortCmap: false\n                };\n              }\n\n              var segment;\n              var start = (file.start ? file.start : 0) + cmap.offset;\n              file.pos = start;\n              file.skip(2);\n              var numTables = file.getUint16();\n              var potentialTable;\n              var canBreak = false;\n\n              for (var i = 0; i < numTables; i++) {\n                var platformId = file.getUint16();\n                var encodingId = file.getUint16();\n                var offset = file.getInt32() >>> 0;\n                var useTable = false;\n\n                if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n                  continue;\n                }\n\n                if (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 3)) {\n                  useTable = true;\n                } else if (platformId === 1 && encodingId === 0) {\n                  useTable = true;\n                } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n                  useTable = true;\n\n                  if (!isSymbolicFont) {\n                    canBreak = true;\n                  }\n                } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n                  useTable = true;\n                  canBreak = true;\n                }\n\n                if (useTable) {\n                  potentialTable = {\n                    platformId: platformId,\n                    encodingId: encodingId,\n                    offset: offset\n                  };\n                }\n\n                if (canBreak) {\n                  break;\n                }\n              }\n\n              if (potentialTable) {\n                file.pos = start + potentialTable.offset;\n              }\n\n              if (!potentialTable || file.peekByte() === -1) {\n                (0, _util.warn)(\"Could not find a preferred cmap table.\");\n                return {\n                  platformId: -1,\n                  encodingId: -1,\n                  mappings: [],\n                  hasShortCmap: false\n                };\n              }\n\n              var format = file.getUint16();\n              file.skip(2 + 2);\n              var hasShortCmap = false;\n              var mappings = [];\n              var j, glyphId;\n\n              if (format === 0) {\n                for (j = 0; j < 256; j++) {\n                  var index = file.getByte();\n\n                  if (!index) {\n                    continue;\n                  }\n\n                  mappings.push({\n                    charCode: j,\n                    glyphId: index\n                  });\n                }\n\n                hasShortCmap = true;\n              } else if (format === 4) {\n                var segCount = file.getUint16() >> 1;\n                file.skip(6);\n                var segIndex,\n                    segments = [];\n\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\n                  segments.push({\n                    end: file.getUint16()\n                  });\n                }\n\n                file.skip(2);\n\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\n                  segments[segIndex].start = file.getUint16();\n                }\n\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\n                  segments[segIndex].delta = file.getUint16();\n                }\n\n                var offsetsCount = 0;\n\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\n                  segment = segments[segIndex];\n                  var rangeOffset = file.getUint16();\n\n                  if (!rangeOffset) {\n                    segment.offsetIndex = -1;\n                    continue;\n                  }\n\n                  var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n                  segment.offsetIndex = offsetIndex;\n                  offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n                }\n\n                var offsets = [];\n\n                for (j = 0; j < offsetsCount; j++) {\n                  offsets.push(file.getUint16());\n                }\n\n                for (segIndex = 0; segIndex < segCount; segIndex++) {\n                  segment = segments[segIndex];\n                  start = segment.start;\n                  var end = segment.end;\n                  var delta = segment.delta;\n                  offsetIndex = segment.offsetIndex;\n\n                  for (j = start; j <= end; j++) {\n                    if (j === 0xffff) {\n                      continue;\n                    }\n\n                    glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n                    glyphId = glyphId + delta & 0xffff;\n                    mappings.push({\n                      charCode: j,\n                      glyphId: glyphId\n                    });\n                  }\n                }\n              } else if (format === 6) {\n                var firstCode = file.getUint16();\n                var entryCount = file.getUint16();\n\n                for (j = 0; j < entryCount; j++) {\n                  glyphId = file.getUint16();\n                  var charCode = firstCode + j;\n                  mappings.push({\n                    charCode: charCode,\n                    glyphId: glyphId\n                  });\n                }\n              } else {\n                (0, _util.warn)(\"cmap table has unsupported format: \" + format);\n                return {\n                  platformId: -1,\n                  encodingId: -1,\n                  mappings: [],\n                  hasShortCmap: false\n                };\n              }\n\n              mappings.sort(function (a, b) {\n                return a.charCode - b.charCode;\n              });\n\n              for (i = 1; i < mappings.length; i++) {\n                if (mappings[i - 1].charCode === mappings[i].charCode) {\n                  mappings.splice(i, 1);\n                  i--;\n                }\n              }\n\n              return {\n                platformId: potentialTable.platformId,\n                encodingId: potentialTable.encodingId,\n                mappings: mappings,\n                hasShortCmap: hasShortCmap\n              };\n            }\n\n            function sanitizeMetrics(file, header, metrics, numGlyphs, dupFirstEntry) {\n              if (!header) {\n                if (metrics) {\n                  metrics.data = null;\n                }\n\n                return;\n              }\n\n              file.pos = (file.start ? file.start : 0) + header.offset;\n              file.pos += 4;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 2;\n              file.pos += 8;\n              file.pos += 2;\n              var numOfMetrics = file.getUint16();\n\n              if (numOfMetrics > numGlyphs) {\n                (0, _util.info)(\"The numOfMetrics (\" + numOfMetrics + \") should not be \" + \"greater than the numGlyphs (\" + numGlyphs + \")\");\n                numOfMetrics = numGlyphs;\n                header.data[34] = (numOfMetrics & 0xff00) >> 8;\n                header.data[35] = numOfMetrics & 0x00ff;\n              }\n\n              var numOfSidebearings = numGlyphs - numOfMetrics;\n              var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\n              if (numMissing > 0) {\n                var entries = new Uint8Array(metrics.length + numMissing * 2);\n                entries.set(metrics.data);\n\n                if (dupFirstEntry) {\n                  entries[metrics.length] = metrics.data[2];\n                  entries[metrics.length + 1] = metrics.data[3];\n                }\n\n                metrics.data = entries;\n              }\n            }\n\n            function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n              var glyphProfile = {\n                length: 0,\n                sizeOfInstructions: 0\n              };\n\n              if (sourceEnd - sourceStart <= 12) {\n                return glyphProfile;\n              }\n\n              var glyf = source.subarray(sourceStart, sourceEnd);\n              var contoursCount = signedInt16(glyf[0], glyf[1]);\n\n              if (contoursCount < 0) {\n                contoursCount = -1;\n                writeSignedInt16(glyf, 0, contoursCount);\n                dest.set(glyf, destStart);\n                glyphProfile.length = glyf.length;\n                return glyphProfile;\n              }\n\n              var i,\n                  j = 10,\n                  flagsCount = 0;\n\n              for (i = 0; i < contoursCount; i++) {\n                var endPoint = glyf[j] << 8 | glyf[j + 1];\n                flagsCount = endPoint + 1;\n                j += 2;\n              }\n\n              var instructionsStart = j;\n              var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n              glyphProfile.sizeOfInstructions = instructionsLength;\n              j += 2 + instructionsLength;\n              var instructionsEnd = j;\n              var coordinatesLength = 0;\n\n              for (i = 0; i < flagsCount; i++) {\n                var flag = glyf[j++];\n\n                if (flag & 0xc0) {\n                  glyf[j - 1] = flag & 0x3f;\n                }\n\n                var xLength = 2;\n\n                if (flag & 2) {\n                  xLength = 1;\n                } else if (flag & 16) {\n                  xLength = 0;\n                }\n\n                var yLength = 2;\n\n                if (flag & 4) {\n                  yLength = 1;\n                } else if (flag & 32) {\n                  yLength = 0;\n                }\n\n                var xyLength = xLength + yLength;\n                coordinatesLength += xyLength;\n\n                if (flag & 8) {\n                  var repeat = glyf[j++];\n                  i += repeat;\n                  coordinatesLength += repeat * xyLength;\n                }\n              }\n\n              if (coordinatesLength === 0) {\n                return glyphProfile;\n              }\n\n              var glyphDataLength = j + coordinatesLength;\n\n              if (glyphDataLength > glyf.length) {\n                return glyphProfile;\n              }\n\n              if (!hintsValid && instructionsLength > 0) {\n                dest.set(glyf.subarray(0, instructionsStart), destStart);\n                dest.set([0, 0], destStart + instructionsStart);\n                dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n                glyphDataLength -= instructionsLength;\n\n                if (glyf.length - glyphDataLength > 3) {\n                  glyphDataLength = glyphDataLength + 3 & ~3;\n                }\n\n                glyphProfile.length = glyphDataLength;\n                return glyphProfile;\n              }\n\n              if (glyf.length - glyphDataLength > 3) {\n                glyphDataLength = glyphDataLength + 3 & ~3;\n                dest.set(glyf.subarray(0, glyphDataLength), destStart);\n                glyphProfile.length = glyphDataLength;\n                return glyphProfile;\n              }\n\n              dest.set(glyf, destStart);\n              glyphProfile.length = glyf.length;\n              return glyphProfile;\n            }\n\n            function sanitizeHead(head, numGlyphs, locaLength) {\n              var data = head.data;\n              var version = int32(data[0], data[1], data[2], data[3]);\n\n              if (version >> 16 !== 1) {\n                (0, _util.info)(\"Attempting to fix invalid version in head table: \" + version);\n                data[0] = 0;\n                data[1] = 1;\n                data[2] = 0;\n                data[3] = 0;\n              }\n\n              var indexToLocFormat = int16(data[50], data[51]);\n\n              if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n                (0, _util.info)(\"Attempting to fix invalid indexToLocFormat in head table: \" + indexToLocFormat);\n                var numGlyphsPlusOne = numGlyphs + 1;\n\n                if (locaLength === numGlyphsPlusOne << 1) {\n                  data[50] = 0;\n                  data[51] = 0;\n                } else if (locaLength === numGlyphsPlusOne << 2) {\n                  data[50] = 0;\n                  data[51] = 1;\n                } else {\n                  throw new _util.FormatError(\"Could not fix indexToLocFormat: \" + indexToLocFormat);\n                }\n              }\n            }\n\n            function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n              var itemSize, itemDecode, itemEncode;\n\n              if (isGlyphLocationsLong) {\n                itemSize = 4;\n\n                itemDecode = function fontItemDecodeLong(data, offset) {\n                  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n                };\n\n                itemEncode = function fontItemEncodeLong(data, offset, value) {\n                  data[offset] = value >>> 24 & 0xff;\n                  data[offset + 1] = value >> 16 & 0xff;\n                  data[offset + 2] = value >> 8 & 0xff;\n                  data[offset + 3] = value & 0xff;\n                };\n              } else {\n                itemSize = 2;\n\n                itemDecode = function fontItemDecode(data, offset) {\n                  return data[offset] << 9 | data[offset + 1] << 1;\n                };\n\n                itemEncode = function fontItemEncode(data, offset, value) {\n                  data[offset] = value >> 9 & 0xff;\n                  data[offset + 1] = value >> 1 & 0xff;\n                };\n              }\n\n              var numGlyphsOut = dupFirstEntry ? numGlyphs + 1 : numGlyphs;\n              var locaDataSize = itemSize * (1 + numGlyphsOut);\n              var locaData = new Uint8Array(locaDataSize);\n              locaData.set(loca.data.subarray(0, locaDataSize));\n              loca.data = locaData;\n              var oldGlyfData = glyf.data;\n              var oldGlyfDataLength = oldGlyfData.length;\n              var newGlyfData = new Uint8Array(oldGlyfDataLength);\n              var i, j;\n              var locaEntries = [];\n\n              for (i = 0, j = 0; i < numGlyphs + 1; i++, j += itemSize) {\n                var offset = itemDecode(locaData, j);\n\n                if (offset > oldGlyfDataLength) {\n                  offset = oldGlyfDataLength;\n                }\n\n                locaEntries.push({\n                  index: i,\n                  offset: offset,\n                  endOffset: 0\n                });\n              }\n\n              locaEntries.sort(function (a, b) {\n                return a.offset - b.offset;\n              });\n\n              for (i = 0; i < numGlyphs; i++) {\n                locaEntries[i].endOffset = locaEntries[i + 1].offset;\n              }\n\n              locaEntries.sort(function (a, b) {\n                return a.index - b.index;\n              });\n              var missingGlyphs = Object.create(null);\n              var writeOffset = 0;\n              itemEncode(locaData, 0, writeOffset);\n\n              for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n                var glyphProfile = sanitizeGlyph(oldGlyfData, locaEntries[i].offset, locaEntries[i].endOffset, newGlyfData, writeOffset, hintsValid);\n                var newLength = glyphProfile.length;\n\n                if (newLength === 0) {\n                  missingGlyphs[i] = true;\n                }\n\n                if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n                  maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n                }\n\n                writeOffset += newLength;\n                itemEncode(locaData, j, writeOffset);\n              }\n\n              if (writeOffset === 0) {\n                var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n\n                for (i = 0, j = itemSize; i < numGlyphsOut; i++, j += itemSize) {\n                  itemEncode(locaData, j, simpleGlyph.length);\n                }\n\n                glyf.data = simpleGlyph;\n              } else if (dupFirstEntry) {\n                var firstEntryLength = itemDecode(locaData, itemSize);\n\n                if (newGlyfData.length > firstEntryLength + writeOffset) {\n                  glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n                } else {\n                  glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n                  glyf.data.set(newGlyfData.subarray(0, writeOffset));\n                }\n\n                glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n                itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n              } else {\n                glyf.data = newGlyfData.subarray(0, writeOffset);\n              }\n\n              return {\n                missingGlyphs: missingGlyphs,\n                maxSizeOfInstructions: maxSizeOfInstructions\n              };\n            }\n\n            function readPostScriptTable(post, propertiesObj, maxpNumGlyphs) {\n              var start = (font.start ? font.start : 0) + post.offset;\n              font.pos = start;\n              var length = post.length,\n                  end = start + length;\n              var version = font.getInt32();\n              font.skip(28);\n              var glyphNames;\n              var valid = true;\n              var i;\n\n              switch (version) {\n                case 0x00010000:\n                  glyphNames = MacStandardGlyphOrdering;\n                  break;\n\n                case 0x00020000:\n                  var numGlyphs = font.getUint16();\n\n                  if (numGlyphs !== maxpNumGlyphs) {\n                    valid = false;\n                    break;\n                  }\n\n                  var glyphNameIndexes = [];\n\n                  for (i = 0; i < numGlyphs; ++i) {\n                    var index = font.getUint16();\n\n                    if (index >= 32768) {\n                      valid = false;\n                      break;\n                    }\n\n                    glyphNameIndexes.push(index);\n                  }\n\n                  if (!valid) {\n                    break;\n                  }\n\n                  var customNames = [];\n                  var strBuf = [];\n\n                  while (font.pos < end) {\n                    var stringLength = font.getByte();\n                    strBuf.length = stringLength;\n\n                    for (i = 0; i < stringLength; ++i) {\n                      strBuf[i] = String.fromCharCode(font.getByte());\n                    }\n\n                    customNames.push(strBuf.join(\"\"));\n                  }\n\n                  glyphNames = [];\n\n                  for (i = 0; i < numGlyphs; ++i) {\n                    var j = glyphNameIndexes[i];\n\n                    if (j < 258) {\n                      glyphNames.push(MacStandardGlyphOrdering[j]);\n                      continue;\n                    }\n\n                    glyphNames.push(customNames[j - 258]);\n                  }\n\n                  break;\n\n                case 0x00030000:\n                  break;\n\n                default:\n                  (0, _util.warn)(\"Unknown/unsupported post table version \" + version);\n                  valid = false;\n\n                  if (propertiesObj.defaultEncoding) {\n                    glyphNames = propertiesObj.defaultEncoding;\n                  }\n\n                  break;\n              }\n\n              propertiesObj.glyphNames = glyphNames;\n              return valid;\n            }\n\n            function readNameTable(nameTable) {\n              var start = (font.start ? font.start : 0) + nameTable.offset;\n              font.pos = start;\n              var names = [[], []];\n              var length = nameTable.length,\n                  end = start + length;\n              var format = font.getUint16();\n              var FORMAT_0_HEADER_LENGTH = 6;\n\n              if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n                return names;\n              }\n\n              var numRecords = font.getUint16();\n              var stringsStart = font.getUint16();\n              var records = [];\n              var NAME_RECORD_LENGTH = 12;\n              var i, ii;\n\n              for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n                var r = {\n                  platform: font.getUint16(),\n                  encoding: font.getUint16(),\n                  language: font.getUint16(),\n                  name: font.getUint16(),\n                  length: font.getUint16(),\n                  offset: font.getUint16()\n                };\n\n                if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n                  records.push(r);\n                }\n              }\n\n              for (i = 0, ii = records.length; i < ii; i++) {\n                var record = records[i];\n\n                if (record.length <= 0) {\n                  continue;\n                }\n\n                var pos = start + stringsStart + record.offset;\n\n                if (pos + record.length > end) {\n                  continue;\n                }\n\n                font.pos = pos;\n                var nameIndex = record.name;\n\n                if (record.encoding) {\n                  var str = \"\";\n\n                  for (var j = 0, jj = record.length; j < jj; j += 2) {\n                    str += String.fromCharCode(font.getUint16());\n                  }\n\n                  names[1][nameIndex] = str;\n                } else {\n                  names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n                }\n              }\n\n              return names;\n            }\n\n            var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n\n            function sanitizeTTProgram(table, ttContext) {\n              var data = table.data;\n              var i = 0,\n                  j,\n                  n,\n                  b,\n                  funcId,\n                  pc,\n                  lastEndf = 0,\n                  lastDeff = 0;\n              var stack = [];\n              var callstack = [];\n              var functionsCalled = [];\n              var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n              var inFDEF = false,\n                  ifLevel = 0,\n                  inELSE = 0;\n\n              for (var ii = data.length; i < ii;) {\n                var op = data[i++];\n\n                if (op === 0x40) {\n                  n = data[i++];\n\n                  if (inFDEF || inELSE) {\n                    i += n;\n                  } else {\n                    for (j = 0; j < n; j++) {\n                      stack.push(data[i++]);\n                    }\n                  }\n                } else if (op === 0x41) {\n                  n = data[i++];\n\n                  if (inFDEF || inELSE) {\n                    i += n * 2;\n                  } else {\n                    for (j = 0; j < n; j++) {\n                      b = data[i++];\n                      stack.push(b << 8 | data[i++]);\n                    }\n                  }\n                } else if ((op & 0xf8) === 0xb0) {\n                  n = op - 0xb0 + 1;\n\n                  if (inFDEF || inELSE) {\n                    i += n;\n                  } else {\n                    for (j = 0; j < n; j++) {\n                      stack.push(data[i++]);\n                    }\n                  }\n                } else if ((op & 0xf8) === 0xb8) {\n                  n = op - 0xb8 + 1;\n\n                  if (inFDEF || inELSE) {\n                    i += n * 2;\n                  } else {\n                    for (j = 0; j < n; j++) {\n                      b = data[i++];\n                      stack.push(b << 8 | data[i++]);\n                    }\n                  }\n                } else if (op === 0x2b && !tooComplexToFollowFunctions) {\n                  if (!inFDEF && !inELSE) {\n                    funcId = stack[stack.length - 1];\n\n                    if (isNaN(funcId)) {\n                      (0, _util.info)(\"TT: CALL empty stack (or invalid entry).\");\n                    } else {\n                      ttContext.functionsUsed[funcId] = true;\n\n                      if (funcId in ttContext.functionsStackDeltas) {\n                        var newStackLength = stack.length + ttContext.functionsStackDeltas[funcId];\n\n                        if (newStackLength < 0) {\n                          (0, _util.warn)(\"TT: CALL invalid functions stack delta.\");\n                          ttContext.hintsValid = false;\n                          return;\n                        }\n\n                        stack.length = newStackLength;\n                      } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                        callstack.push({\n                          data: data,\n                          i: i,\n                          stackTop: stack.length - 1\n                        });\n                        functionsCalled.push(funcId);\n                        pc = ttContext.functionsDefined[funcId];\n\n                        if (!pc) {\n                          (0, _util.warn)(\"TT: CALL non-existent function\");\n                          ttContext.hintsValid = false;\n                          return;\n                        }\n\n                        data = pc.data;\n                        i = pc.i;\n                      }\n                    }\n                  }\n                } else if (op === 0x2c && !tooComplexToFollowFunctions) {\n                  if (inFDEF || inELSE) {\n                    (0, _util.warn)(\"TT: nested FDEFs not allowed\");\n                    tooComplexToFollowFunctions = true;\n                  }\n\n                  inFDEF = true;\n                  lastDeff = i;\n                  funcId = stack.pop();\n                  ttContext.functionsDefined[funcId] = {\n                    data: data,\n                    i: i\n                  };\n                } else if (op === 0x2d) {\n                  if (inFDEF) {\n                    inFDEF = false;\n                    lastEndf = i;\n                  } else {\n                    pc = callstack.pop();\n\n                    if (!pc) {\n                      (0, _util.warn)(\"TT: ENDF bad stack\");\n                      ttContext.hintsValid = false;\n                      return;\n                    }\n\n                    funcId = functionsCalled.pop();\n                    data = pc.data;\n                    i = pc.i;\n                    ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n                  }\n                } else if (op === 0x89) {\n                  if (inFDEF || inELSE) {\n                    (0, _util.warn)(\"TT: nested IDEFs not allowed\");\n                    tooComplexToFollowFunctions = true;\n                  }\n\n                  inFDEF = true;\n                  lastDeff = i;\n                } else if (op === 0x58) {\n                  ++ifLevel;\n                } else if (op === 0x1b) {\n                  inELSE = ifLevel;\n                } else if (op === 0x59) {\n                  if (inELSE === ifLevel) {\n                    inELSE = 0;\n                  }\n\n                  --ifLevel;\n                } else if (op === 0x1c) {\n                  if (!inFDEF && !inELSE) {\n                    var offset = stack[stack.length - 1];\n\n                    if (offset > 0) {\n                      i += offset - 1;\n                    }\n                  }\n                }\n\n                if (!inFDEF && !inELSE) {\n                  var stackDelta = 0;\n\n                  if (op <= 0x8e) {\n                    stackDelta = TTOpsStackDeltas[op];\n                  } else if (op >= 0xc0 && op <= 0xdf) {\n                    stackDelta = -1;\n                  } else if (op >= 0xe0) {\n                    stackDelta = -2;\n                  }\n\n                  if (op >= 0x71 && op <= 0x75) {\n                    n = stack.pop();\n\n                    if (!isNaN(n)) {\n                      stackDelta = -n * 2;\n                    }\n                  }\n\n                  while (stackDelta < 0 && stack.length > 0) {\n                    stack.pop();\n                    stackDelta++;\n                  }\n\n                  while (stackDelta > 0) {\n                    stack.push(NaN);\n                    stackDelta--;\n                  }\n                }\n              }\n\n              ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n              var content = [data];\n\n              if (i > data.length) {\n                content.push(new Uint8Array(i - data.length));\n              }\n\n              if (lastDeff > lastEndf) {\n                (0, _util.warn)(\"TT: complementing a missing function tail\");\n                content.push(new Uint8Array([0x22, 0x2d]));\n              }\n\n              foldTTTable(table, content);\n            }\n\n            function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n              if (ttContext.tooComplexToFollowFunctions) {\n                return;\n              }\n\n              if (ttContext.functionsDefined.length > maxFunctionDefs) {\n                (0, _util.warn)(\"TT: more functions defined than expected\");\n                ttContext.hintsValid = false;\n                return;\n              }\n\n              for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n                if (j > maxFunctionDefs) {\n                  (0, _util.warn)(\"TT: invalid function id: \" + j);\n                  ttContext.hintsValid = false;\n                  return;\n                }\n\n                if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n                  (0, _util.warn)(\"TT: undefined function: \" + j);\n                  ttContext.hintsValid = false;\n                  return;\n                }\n              }\n            }\n\n            function foldTTTable(table, content) {\n              if (content.length > 1) {\n                var newLength = 0;\n                var j, jj;\n\n                for (j = 0, jj = content.length; j < jj; j++) {\n                  newLength += content[j].length;\n                }\n\n                newLength = newLength + 3 & ~3;\n                var result = new Uint8Array(newLength);\n                var pos = 0;\n\n                for (j = 0, jj = content.length; j < jj; j++) {\n                  result.set(content[j], pos);\n                  pos += content[j].length;\n                }\n\n                table.data = result;\n                table.length = newLength;\n              }\n            }\n\n            function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n              var ttContext = {\n                functionsDefined: [],\n                functionsUsed: [],\n                functionsStackDeltas: [],\n                tooComplexToFollowFunctions: false,\n                hintsValid: true\n              };\n\n              if (fpgm) {\n                sanitizeTTProgram(fpgm, ttContext);\n              }\n\n              if (prep) {\n                sanitizeTTProgram(prep, ttContext);\n              }\n\n              if (fpgm) {\n                checkInvalidFunctions(ttContext, maxFunctionDefs);\n              }\n\n              if (cvt && cvt.length & 1) {\n                var cvtData = new Uint8Array(cvt.length + 1);\n                cvtData.set(cvt.data);\n                cvt.data = cvtData;\n              }\n\n              return ttContext.hintsValid;\n            }\n\n            font = new _stream.Stream(new Uint8Array(font.getBytes()));\n            var header, tables;\n\n            if (isTrueTypeCollectionFile(font)) {\n              var ttcData = readTrueTypeCollectionData(font, this.name);\n              header = ttcData.header;\n              tables = ttcData.tables;\n            } else {\n              header = readOpenTypeHeader(font);\n              tables = readTables(font, header.numTables);\n            }\n\n            var cff, cffFile;\n            var isTrueType = !tables[\"CFF \"];\n\n            if (!isTrueType) {\n              var isComposite = properties.composite && ((properties.cidToGidMap || []).length > 0 || !(properties.cMap instanceof _cmap.IdentityCMap));\n\n              if (header.version === \"OTTO\" && !isComposite || !tables.head || !tables.hhea || !tables.maxp || !tables.post) {\n                cffFile = new _stream.Stream(tables[\"CFF \"].data);\n                cff = new CFFFont(cffFile, properties);\n                adjustWidths(properties);\n                return this.convert(name, cff, properties);\n              }\n\n              delete tables.glyf;\n              delete tables.loca;\n              delete tables.fpgm;\n              delete tables.prep;\n              delete tables[\"cvt \"];\n              this.isOpenType = true;\n            } else {\n              if (!tables.loca) {\n                throw new _util.FormatError('Required \"loca\" table is not found');\n              }\n\n              if (!tables.glyf) {\n                (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n                tables.glyf = {\n                  tag: \"glyf\",\n                  data: new Uint8Array(0)\n                };\n              }\n\n              this.isOpenType = false;\n            }\n\n            if (!tables.maxp) {\n              throw new _util.FormatError('Required \"maxp\" table is not found');\n            }\n\n            font.pos = (font.start || 0) + tables.maxp.offset;\n            var version = font.getInt32();\n            var numGlyphs = font.getUint16();\n            var numGlyphsOut = numGlyphs + 1;\n            var dupFirstEntry = true;\n\n            if (numGlyphsOut > 0xffff) {\n              dupFirstEntry = false;\n              numGlyphsOut = numGlyphs;\n              (0, _util.warn)(\"Not enough space in glyfs to duplicate first glyph.\");\n            }\n\n            var maxFunctionDefs = 0;\n            var maxSizeOfInstructions = 0;\n\n            if (version >= 0x00010000 && tables.maxp.length >= 22) {\n              font.pos += 8;\n              var maxZones = font.getUint16();\n\n              if (maxZones > 2) {\n                tables.maxp.data[14] = 0;\n                tables.maxp.data[15] = 2;\n              }\n\n              font.pos += 4;\n              maxFunctionDefs = font.getUint16();\n              font.pos += 4;\n              maxSizeOfInstructions = font.getUint16();\n            }\n\n            tables.maxp.data[4] = numGlyphsOut >> 8;\n            tables.maxp.data[5] = numGlyphsOut & 255;\n            var hintsValid = sanitizeTTPrograms(tables.fpgm, tables.prep, tables[\"cvt \"], maxFunctionDefs);\n\n            if (!hintsValid) {\n              delete tables.fpgm;\n              delete tables.prep;\n              delete tables[\"cvt \"];\n            }\n\n            sanitizeMetrics(font, tables.hhea, tables.hmtx, numGlyphsOut, dupFirstEntry);\n\n            if (!tables.head) {\n              throw new _util.FormatError('Required \"head\" table is not found');\n            }\n\n            sanitizeHead(tables.head, numGlyphs, isTrueType ? tables.loca.length : 0);\n            var missingGlyphs = Object.create(null);\n\n            if (isTrueType) {\n              var isGlyphLocationsLong = int16(tables.head.data[50], tables.head.data[51]);\n              var glyphsInfo = sanitizeGlyphLocations(tables.loca, tables.glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n              missingGlyphs = glyphsInfo.missingGlyphs;\n\n              if (version >= 0x00010000 && tables.maxp.length >= 22) {\n                tables.maxp.data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n                tables.maxp.data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n              }\n            }\n\n            if (!tables.hhea) {\n              throw new _util.FormatError('Required \"hhea\" table is not found');\n            }\n\n            if (tables.hhea.data[10] === 0 && tables.hhea.data[11] === 0) {\n              tables.hhea.data[10] = 0xff;\n              tables.hhea.data[11] = 0xff;\n            }\n\n            var metricsOverride = {\n              unitsPerEm: int16(tables.head.data[18], tables.head.data[19]),\n              yMax: int16(tables.head.data[42], tables.head.data[43]),\n              yMin: signedInt16(tables.head.data[38], tables.head.data[39]),\n              ascent: int16(tables.hhea.data[4], tables.hhea.data[5]),\n              descent: signedInt16(tables.hhea.data[6], tables.hhea.data[7])\n            };\n            this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n            this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\n            if (tables.post) {\n              readPostScriptTable(tables.post, properties, numGlyphs);\n            }\n\n            tables.post = {\n              tag: \"post\",\n              data: createPostTable(properties)\n            };\n            var charCodeToGlyphId = [];\n\n            function hasGlyph(glyphId) {\n              return !missingGlyphs[glyphId];\n            }\n\n            if (properties.composite) {\n              var cidToGidMap = properties.cidToGidMap || [];\n              var isCidToGidMapEmpty = cidToGidMap.length === 0;\n              properties.cMap.forEach(function (charCode, cid) {\n                if (cid > 0xffff) {\n                  throw new _util.FormatError(\"Max size of CID is 65,535\");\n                }\n\n                var glyphId = -1;\n\n                if (isCidToGidMapEmpty) {\n                  glyphId = cid;\n                } else if (cidToGidMap[cid] !== undefined) {\n                  glyphId = cidToGidMap[cid];\n                }\n\n                if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n                  charCodeToGlyphId[charCode] = glyphId;\n                }\n              });\n            } else {\n              var cmapTable = readCmapTable(tables.cmap, font, this.isSymbolicFont, properties.hasEncoding);\n              var cmapPlatformId = cmapTable.platformId;\n              var cmapEncodingId = cmapTable.encodingId;\n              var cmapMappings = cmapTable.mappings;\n              var cmapMappingsLength = cmapMappings.length;\n              var baseEncoding = [];\n\n              if (properties.hasEncoding && (properties.baseEncodingName === \"MacRomanEncoding\" || properties.baseEncodingName === \"WinAnsiEncoding\")) {\n                baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n              }\n\n              if (properties.hasEncoding && !this.isSymbolicFont && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0)) {\n                var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\n                for (var charCode = 0; charCode < 256; charCode++) {\n                  var glyphName, standardGlyphName;\n\n                  if (this.differences && charCode in this.differences) {\n                    glyphName = this.differences[charCode];\n                  } else if (charCode in baseEncoding && baseEncoding[charCode] !== \"\") {\n                    glyphName = baseEncoding[charCode];\n                  } else {\n                    glyphName = _encodings.StandardEncoding[charCode];\n                  }\n\n                  if (!glyphName) {\n                    continue;\n                  }\n\n                  standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n                  var unicodeOrCharCode;\n\n                  if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n                    unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n                  } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n                    unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n                  }\n\n                  for (var _i33 = 0; _i33 < cmapMappingsLength; ++_i33) {\n                    if (cmapMappings[_i33].charCode !== unicodeOrCharCode) {\n                      continue;\n                    }\n\n                    charCodeToGlyphId[charCode] = cmapMappings[_i33].glyphId;\n                    break;\n                  }\n                }\n              } else if (cmapPlatformId === 0) {\n                for (var _i34 = 0; _i34 < cmapMappingsLength; ++_i34) {\n                  charCodeToGlyphId[cmapMappings[_i34].charCode] = cmapMappings[_i34].glyphId;\n                }\n              } else {\n                for (var _i35 = 0; _i35 < cmapMappingsLength; ++_i35) {\n                  var _charCode4 = cmapMappings[_i35].charCode;\n\n                  if (cmapPlatformId === 3 && _charCode4 >= 0xf000 && _charCode4 <= 0xf0ff) {\n                    _charCode4 &= 0xff;\n                  }\n\n                  charCodeToGlyphId[_charCode4] = cmapMappings[_i35].glyphId;\n                }\n              }\n\n              if (properties.glyphNames && baseEncoding.length) {\n                for (var _i36 = 0; _i36 < 256; ++_i36) {\n                  if (charCodeToGlyphId[_i36] === undefined && baseEncoding[_i36]) {\n                    glyphName = baseEncoding[_i36];\n                    var glyphId = properties.glyphNames.indexOf(glyphName);\n\n                    if (glyphId > 0 && hasGlyph(glyphId)) {\n                      charCodeToGlyphId[_i36] = glyphId;\n                    }\n                  }\n                }\n              }\n            }\n\n            if (charCodeToGlyphId.length === 0) {\n              charCodeToGlyphId[0] = 0;\n            }\n\n            var glyphZeroId = numGlyphsOut - 1;\n\n            if (!dupFirstEntry) {\n              glyphZeroId = 0;\n            }\n\n            var newMapping = adjustMapping(charCodeToGlyphId, hasGlyph, glyphZeroId);\n            this.toFontChar = newMapping.toFontChar;\n            tables.cmap = {\n              tag: \"cmap\",\n              data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphsOut)\n            };\n\n            if (!tables[\"OS/2\"] || !validateOS2Table(tables[\"OS/2\"], font)) {\n              tables[\"OS/2\"] = {\n                tag: \"OS/2\",\n                data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n              };\n            }\n\n            if (!isTrueType) {\n              try {\n                cffFile = new _stream.Stream(tables[\"CFF \"].data);\n                var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n                cff = parser.parse();\n                cff.duplicateFirstGlyph();\n                var compiler = new _cff_parser.CFFCompiler(cff);\n                tables[\"CFF \"].data = compiler.compile();\n              } catch (e) {\n                (0, _util.warn)(\"Failed to compile font \" + properties.loadedName);\n              }\n            }\n\n            if (!tables.name) {\n              tables.name = {\n                tag: \"name\",\n                data: createNameTable(this.name)\n              };\n            } else {\n              var namePrototype = readNameTable(tables.name);\n              tables.name.data = createNameTable(name, namePrototype);\n            }\n\n            var builder = new OpenTypeFileBuilder(header.version);\n\n            for (var tableTag in tables) {\n              builder.addTable(tableTag, tables[tableTag].data);\n            }\n\n            return builder.toArray();\n          },\n          convert: function Font_convert(fontName, font, properties) {\n            properties.fixedPitch = false;\n\n            if (properties.builtInEncoding) {\n              adjustToUnicode(properties, properties.builtInEncoding);\n            }\n\n            var glyphZeroId = 1;\n\n            if (font instanceof CFFFont) {\n              glyphZeroId = font.numGlyphs - 1;\n            }\n\n            var mapping = font.getGlyphMapping(properties);\n            var newMapping = adjustMapping(mapping, font.hasGlyphId.bind(font), glyphZeroId);\n            this.toFontChar = newMapping.toFontChar;\n            var numGlyphs = font.numGlyphs;\n\n            function getCharCodes(charCodeToGlyphId, glyphId) {\n              var charCodes = null;\n\n              for (var charCode in charCodeToGlyphId) {\n                if (glyphId === charCodeToGlyphId[charCode]) {\n                  if (!charCodes) {\n                    charCodes = [];\n                  }\n\n                  charCodes.push(charCode | 0);\n                }\n              }\n\n              return charCodes;\n            }\n\n            function createCharCode(charCodeToGlyphId, glyphId) {\n              for (var charCode in charCodeToGlyphId) {\n                if (glyphId === charCodeToGlyphId[charCode]) {\n                  return charCode | 0;\n                }\n              }\n\n              newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n              return newMapping.nextAvailableFontCharCode++;\n            }\n\n            var seacs = font.seacs;\n\n            if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n              var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n              var charset = font.getCharset();\n              var seacMap = Object.create(null);\n\n              for (var glyphId in seacs) {\n                glyphId |= 0;\n                var seac = seacs[glyphId];\n                var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n                var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n                var baseGlyphId = charset.indexOf(baseGlyphName);\n                var accentGlyphId = charset.indexOf(accentGlyphName);\n\n                if (baseGlyphId < 0 || accentGlyphId < 0) {\n                  continue;\n                }\n\n                var accentOffset = {\n                  x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n                  y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n                };\n                var charCodes = getCharCodes(mapping, glyphId);\n\n                if (!charCodes) {\n                  continue;\n                }\n\n                for (var _i37 = 0, ii = charCodes.length; _i37 < ii; _i37++) {\n                  var charCode = charCodes[_i37];\n                  var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n                  var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n                  var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n                  seacMap[charCode] = {\n                    baseFontCharCode: baseFontCharCode,\n                    accentFontCharCode: accentFontCharCode,\n                    accentOffset: accentOffset\n                  };\n                }\n              }\n\n              properties.seacMap = seacMap;\n            }\n\n            var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n            var builder = new OpenTypeFileBuilder(\"\\x4F\\x54\\x54\\x4F\");\n            builder.addTable(\"CFF \", font.data);\n            builder.addTable(\"OS/2\", createOS2Table(properties, newMapping.charCodeToGlyphId));\n            builder.addTable(\"cmap\", createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n            builder.addTable(\"head\", \"\\x00\\x01\\x00\\x00\" + \"\\x00\\x00\\x10\\x00\" + \"\\x00\\x00\\x00\\x00\" + \"\\x5F\\x0F\\x3C\\xF5\" + \"\\x00\\x00\" + safeString16(unitsPerEm) + \"\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27\" + \"\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27\" + \"\\x00\\x00\" + safeString16(properties.descent) + \"\\x0F\\xFF\" + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + \"\\x00\\x11\" + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\");\n            builder.addTable(\"hhea\", \"\\x00\\x01\\x00\\x00\" + safeString16(properties.ascent) + safeString16(properties.descent) + \"\\x00\\x00\" + \"\\xFF\\xFF\" + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\" + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\" + \"\\x00\\x00\" + string16(numGlyphs));\n            builder.addTable(\"hmtx\", function fontFieldsHmtx() {\n              var charstrings = font.charstrings;\n              var cffWidths = font.cff ? font.cff.widths : null;\n              var hmtx = \"\\x00\\x00\\x00\\x00\";\n\n              for (var _i38 = 1, _ii4 = numGlyphs; _i38 < _ii4; _i38++) {\n                var width = 0;\n\n                if (charstrings) {\n                  var charstring = charstrings[_i38 - 1];\n                  width = \"width\" in charstring ? charstring.width : 0;\n                } else if (cffWidths) {\n                  width = Math.ceil(cffWidths[_i38] || 0);\n                }\n\n                hmtx += string16(width) + string16(0);\n              }\n\n              return hmtx;\n            }());\n            builder.addTable(\"maxp\", \"\\x00\\x00\\x50\\x00\" + string16(numGlyphs));\n            builder.addTable(\"name\", createNameTable(fontName));\n            builder.addTable(\"post\", createPostTable(properties));\n            return builder.toArray();\n          },\n\n          get spaceWidth() {\n            var possibleSpaceReplacements = [\"space\", \"minus\", \"one\", \"i\", \"I\"];\n            var width;\n\n            for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n              var glyphName = possibleSpaceReplacements[i];\n\n              if (glyphName in this.widths) {\n                width = this.widths[glyphName];\n                break;\n              }\n\n              var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n              var glyphUnicode = glyphsUnicodeMap[glyphName];\n              var charcode = 0;\n\n              if (this.composite && this.cMap.contains(glyphUnicode)) {\n                charcode = this.cMap.lookup(glyphUnicode);\n              }\n\n              if (!charcode && this.toUnicode) {\n                charcode = this.toUnicode.charCodeOf(glyphUnicode);\n              }\n\n              if (charcode <= 0) {\n                charcode = glyphUnicode;\n              }\n\n              width = this.widths[charcode];\n\n              if (width) {\n                break;\n              }\n            }\n\n            width = width || this.defaultWidth;\n            return (0, _util.shadow)(this, \"spaceWidth\", width);\n          },\n\n          charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n            var fontCharCode, width, operatorListId;\n            var widthCode = charcode;\n\n            if (this.cMap && this.cMap.contains(charcode)) {\n              widthCode = this.cMap.lookup(charcode);\n            }\n\n            width = this.widths[widthCode];\n            width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n            var vmetric = this.vmetrics && this.vmetrics[widthCode];\n            var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n\n            if (typeof unicode === \"number\") {\n              unicode = String.fromCharCode(unicode);\n            }\n\n            var isInFont = (charcode in this.toFontChar);\n            fontCharCode = this.toFontChar[charcode] || charcode;\n\n            if (this.missingFile) {\n              var glyphName = this.differences[charcode] || this.defaultEncoding[charcode];\n\n              if ((glyphName === \".notdef\" || glyphName === \"\") && this.type === \"Type1\") {\n                fontCharCode = 0x20;\n              }\n\n              fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n            }\n\n            if (this.isType3Font) {\n              operatorListId = fontCharCode;\n            }\n\n            var accent = null;\n\n            if (this.seacMap && this.seacMap[charcode]) {\n              isInFont = true;\n              var seac = this.seacMap[charcode];\n              fontCharCode = seac.baseFontCharCode;\n              accent = {\n                fontChar: String.fromCodePoint(seac.accentFontCharCode),\n                offset: seac.accentOffset\n              };\n            }\n\n            var fontChar = \"\";\n\n            if (typeof fontCharCode === \"number\") {\n              if (fontCharCode <= 0x10ffff) {\n                fontChar = String.fromCodePoint(fontCharCode);\n              } else {\n                (0, _util.warn)(\"charToGlyph - invalid fontCharCode: \".concat(fontCharCode));\n              }\n            }\n\n            var glyph = this.glyphCache[charcode];\n\n            if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n              glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n              this.glyphCache[charcode] = glyph;\n            }\n\n            return glyph;\n          },\n          charsToGlyphs: function Font_charsToGlyphs(chars) {\n            var charsCache = this.charsCache;\n            var glyphs, glyph, charcode;\n\n            if (charsCache) {\n              glyphs = charsCache[chars];\n\n              if (glyphs) {\n                return glyphs;\n              }\n            }\n\n            if (!charsCache) {\n              charsCache = this.charsCache = Object.create(null);\n            }\n\n            glyphs = [];\n            var charsCacheKey = chars;\n            var i = 0,\n                ii;\n\n            if (this.cMap) {\n              var c = Object.create(null);\n\n              while (i < chars.length) {\n                this.cMap.readCharCode(chars, i, c);\n                charcode = c.charcode;\n                var length = c.length;\n                i += length;\n                var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n                glyph = this.charToGlyph(charcode, isSpace);\n                glyphs.push(glyph);\n              }\n            } else {\n              for (i = 0, ii = chars.length; i < ii; ++i) {\n                charcode = chars.charCodeAt(i);\n                glyph = this.charToGlyph(charcode, charcode === 0x20);\n                glyphs.push(glyph);\n              }\n            }\n\n            return charsCache[charsCacheKey] = glyphs;\n          },\n\n          get glyphCacheValues() {\n            return Object.values(this.glyphCache);\n          }\n\n        };\n        return Font;\n      }();\n\n      exports.Font = Font;\n\n      var ErrorFont = function ErrorFontClosure() {\n        function ErrorFont(error) {\n          this.error = error;\n          this.loadedName = \"g_font_error\";\n          this.missingFile = true;\n        }\n\n        ErrorFont.prototype = {\n          charsToGlyphs: function ErrorFont_charsToGlyphs() {\n            return [];\n          },\n          exportData: function exportData() {\n            var extraProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return {\n              error: this.error\n            };\n          }\n        };\n        return ErrorFont;\n      }();\n\n      exports.ErrorFont = ErrorFont;\n\n      function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n        var charCodeToGlyphId = Object.create(null);\n        var glyphId, charCode, baseEncoding;\n        var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\n        if (properties.baseEncodingName) {\n          baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\n          for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n            glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\n            if (glyphId >= 0) {\n              charCodeToGlyphId[charCode] = glyphId;\n            } else {\n              charCodeToGlyphId[charCode] = 0;\n            }\n          }\n        } else if (isSymbolicFont) {\n          for (charCode in builtInEncoding) {\n            charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n          }\n        } else {\n          baseEncoding = _encodings.StandardEncoding;\n\n          for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n            glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\n            if (glyphId >= 0) {\n              charCodeToGlyphId[charCode] = glyphId;\n            } else {\n              charCodeToGlyphId[charCode] = 0;\n            }\n          }\n        }\n\n        var differences = properties.differences,\n            glyphsUnicodeMap;\n\n        if (differences) {\n          for (charCode in differences) {\n            var glyphName = differences[charCode];\n            glyphId = glyphNames.indexOf(glyphName);\n\n            if (glyphId === -1) {\n              if (!glyphsUnicodeMap) {\n                glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n              }\n\n              var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\n              if (standardGlyphName !== glyphName) {\n                glyphId = glyphNames.indexOf(standardGlyphName);\n              }\n            }\n\n            if (glyphId >= 0) {\n              charCodeToGlyphId[charCode] = glyphId;\n            } else {\n              charCodeToGlyphId[charCode] = 0;\n            }\n          }\n        }\n\n        return charCodeToGlyphId;\n      }\n\n      var Type1Font = function Type1FontClosure() {\n        function findBlock(streamBytes, signature, startIndex) {\n          var streamBytesLength = streamBytes.length;\n          var signatureLength = signature.length;\n          var scanLength = streamBytesLength - signatureLength;\n          var i = startIndex,\n              j,\n              found = false;\n\n          while (i < scanLength) {\n            j = 0;\n\n            while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n              j++;\n            }\n\n            if (j >= signatureLength) {\n              i += j;\n\n              while (i < streamBytesLength && (0, _core_utils.isWhiteSpace)(streamBytes[i])) {\n                i++;\n              }\n\n              found = true;\n              break;\n            }\n\n            i++;\n          }\n\n          return {\n            found: found,\n            length: i\n          };\n        }\n\n        function getHeaderBlock(stream, suggestedLength) {\n          var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n          var streamStartPos = stream.pos;\n          var headerBytes, headerBytesLength, block;\n\n          try {\n            headerBytes = stream.getBytes(suggestedLength);\n            headerBytesLength = headerBytes.length;\n          } catch (ex) {\n            if (ex instanceof _core_utils.MissingDataException) {\n              throw ex;\n            }\n          }\n\n          if (headerBytesLength === suggestedLength) {\n            block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\n            if (block.found && block.length === suggestedLength) {\n              return {\n                stream: new _stream.Stream(headerBytes),\n                length: suggestedLength\n              };\n            }\n          }\n\n          (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n          stream.pos = streamStartPos;\n          var SCAN_BLOCK_LENGTH = 2048;\n          var actualLength;\n\n          while (true) {\n            var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n            block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\n            if (block.length === 0) {\n              break;\n            }\n\n            stream.pos += block.length;\n\n            if (block.found) {\n              actualLength = stream.pos - streamStartPos;\n              break;\n            }\n          }\n\n          stream.pos = streamStartPos;\n\n          if (actualLength) {\n            return {\n              stream: new _stream.Stream(stream.getBytes(actualLength)),\n              length: actualLength\n            };\n          }\n\n          (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n          return {\n            stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n            length: suggestedLength\n          };\n        }\n\n        function getEexecBlock(stream, suggestedLength) {\n          var eexecBytes = stream.getBytes();\n          return {\n            stream: new _stream.Stream(eexecBytes),\n            length: eexecBytes.length\n          };\n        }\n\n        function Type1Font(name, file, properties) {\n          var PFB_HEADER_SIZE = 6;\n          var headerBlockLength = properties.length1;\n          var eexecBlockLength = properties.length2;\n          var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n          var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\n          if (pfbHeaderPresent) {\n            file.skip(PFB_HEADER_SIZE);\n            headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n          }\n\n          var headerBlock = getHeaderBlock(file, headerBlockLength);\n          var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n          headerBlockParser.extractFontHeader(properties);\n\n          if (pfbHeaderPresent) {\n            pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n            eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n          }\n\n          var eexecBlock = getEexecBlock(file, eexecBlockLength);\n          var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n          var data = eexecBlockParser.extractFontProgram(properties);\n\n          for (var key in data.properties) {\n            properties[key] = data.properties[key];\n          }\n\n          var charstrings = data.charstrings;\n          var type2Charstrings = this.getType2Charstrings(charstrings);\n          var subrs = this.getType2Subrs(data.subrs);\n          this.charstrings = charstrings;\n          this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n          this.seacs = this.getSeacs(data.charstrings);\n        }\n\n        Type1Font.prototype = {\n          get numGlyphs() {\n            return this.charstrings.length + 1;\n          },\n\n          getCharset: function Type1Font_getCharset() {\n            var charset = [\".notdef\"];\n            var charstrings = this.charstrings;\n\n            for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n              charset.push(charstrings[glyphId].glyphName);\n            }\n\n            return charset;\n          },\n          getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n            var charstrings = this.charstrings;\n\n            if (properties.composite) {\n              var charCodeToGlyphId = Object.create(null);\n\n              for (var _glyphId = 0, charstringsLen = charstrings.length; _glyphId < charstringsLen; _glyphId++) {\n                var _charCode5 = properties.cMap.charCodeOf(_glyphId);\n\n                charCodeToGlyphId[_charCode5] = _glyphId + 1;\n              }\n\n              return charCodeToGlyphId;\n            }\n\n            var glyphNames = [\".notdef\"],\n                glyphId;\n\n            for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n              glyphNames.push(charstrings[glyphId].glyphName);\n            }\n\n            var encoding = properties.builtInEncoding;\n\n            if (encoding) {\n              var builtInEncoding = Object.create(null);\n\n              for (var charCode in encoding) {\n                glyphId = glyphNames.indexOf(encoding[charCode]);\n\n                if (glyphId >= 0) {\n                  builtInEncoding[charCode] = glyphId;\n                }\n              }\n            }\n\n            return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n          },\n          hasGlyphId: function Type1Font_hasGlyphID(id) {\n            if (id < 0 || id >= this.numGlyphs) {\n              return false;\n            }\n\n            if (id === 0) {\n              return true;\n            }\n\n            var glyph = this.charstrings[id - 1];\n            return glyph.charstring.length > 0;\n          },\n          getSeacs: function Type1Font_getSeacs(charstrings) {\n            var i, ii;\n            var seacMap = [];\n\n            for (i = 0, ii = charstrings.length; i < ii; i++) {\n              var charstring = charstrings[i];\n\n              if (charstring.seac) {\n                seacMap[i + 1] = charstring.seac;\n              }\n            }\n\n            return seacMap;\n          },\n          getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n            var type2Charstrings = [];\n\n            for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n              type2Charstrings.push(type1Charstrings[i].charstring);\n            }\n\n            return type2Charstrings;\n          },\n          getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n            var bias = 0;\n            var count = type1Subrs.length;\n\n            if (count < 1133) {\n              bias = 107;\n            } else if (count < 33769) {\n              bias = 1131;\n            } else {\n              bias = 32768;\n            }\n\n            var type2Subrs = [];\n            var i;\n\n            for (i = 0; i < bias; i++) {\n              type2Subrs.push([0x0b]);\n            }\n\n            for (i = 0; i < count; i++) {\n              type2Subrs.push(type1Subrs[i]);\n            }\n\n            return type2Subrs;\n          },\n          wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n            var cff = new _cff_parser.CFF();\n            cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n            cff.names = [name];\n            var topDict = new _cff_parser.CFFTopDict();\n            topDict.setByName(\"version\", 391);\n            topDict.setByName(\"Notice\", 392);\n            topDict.setByName(\"FullName\", 393);\n            topDict.setByName(\"FamilyName\", 394);\n            topDict.setByName(\"Weight\", 395);\n            topDict.setByName(\"Encoding\", null);\n            topDict.setByName(\"FontMatrix\", properties.fontMatrix);\n            topDict.setByName(\"FontBBox\", properties.bbox);\n            topDict.setByName(\"charset\", null);\n            topDict.setByName(\"CharStrings\", null);\n            topDict.setByName(\"Private\", null);\n            cff.topDict = topDict;\n            var strings = new _cff_parser.CFFStrings();\n            strings.add(\"Version 0.11\");\n            strings.add(\"See original notice\");\n            strings.add(name);\n            strings.add(name);\n            strings.add(\"Medium\");\n            cff.strings = strings;\n            cff.globalSubrIndex = new _cff_parser.CFFIndex();\n            var count = glyphs.length;\n            var charsetArray = [\".notdef\"];\n            var i, ii;\n\n            for (i = 0; i < count; i++) {\n              var glyphName = charstrings[i].glyphName;\n\n              var index = _cff_parser.CFFStandardStrings.indexOf(glyphName);\n\n              if (index === -1) {\n                strings.add(glyphName);\n              }\n\n              charsetArray.push(glyphName);\n            }\n\n            cff.charset = new _cff_parser.CFFCharset(false, 0, charsetArray);\n            var charStringsIndex = new _cff_parser.CFFIndex();\n            charStringsIndex.add([0x8b, 0x0e]);\n\n            for (i = 0; i < count; i++) {\n              charStringsIndex.add(glyphs[i]);\n            }\n\n            cff.charStrings = charStringsIndex;\n            var privateDict = new _cff_parser.CFFPrivateDict();\n            privateDict.setByName(\"Subrs\", null);\n            var fields = [\"BlueValues\", \"OtherBlues\", \"FamilyBlues\", \"FamilyOtherBlues\", \"StemSnapH\", \"StemSnapV\", \"BlueShift\", \"BlueFuzz\", \"BlueScale\", \"LanguageGroup\", \"ExpansionFactor\", \"ForceBold\", \"StdHW\", \"StdVW\"];\n\n            for (i = 0, ii = fields.length; i < ii; i++) {\n              var field = fields[i];\n\n              if (!(field in properties.privateData)) {\n                continue;\n              }\n\n              var value = properties.privateData[field];\n\n              if (Array.isArray(value)) {\n                for (var j = value.length - 1; j > 0; j--) {\n                  value[j] -= value[j - 1];\n                }\n              }\n\n              privateDict.setByName(field, value);\n            }\n\n            cff.topDict.privateDict = privateDict;\n            var subrIndex = new _cff_parser.CFFIndex();\n\n            for (i = 0, ii = subrs.length; i < ii; i++) {\n              subrIndex.add(subrs[i]);\n            }\n\n            privateDict.subrsIndex = subrIndex;\n            var compiler = new _cff_parser.CFFCompiler(cff);\n            return compiler.compile();\n          }\n        };\n        return Type1Font;\n      }();\n\n      var CFFFont = function CFFFontClosure() {\n        function CFFFont(file, properties) {\n          this.properties = properties;\n          var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n          this.cff = parser.parse();\n          this.cff.duplicateFirstGlyph();\n          var compiler = new _cff_parser.CFFCompiler(this.cff);\n          this.seacs = this.cff.seacs;\n\n          try {\n            this.data = compiler.compile();\n          } catch (e) {\n            (0, _util.warn)(\"Failed to compile font \" + properties.loadedName);\n            this.data = file;\n          }\n        }\n\n        CFFFont.prototype = {\n          get numGlyphs() {\n            return this.cff.charStrings.count;\n          },\n\n          getCharset: function CFFFont_getCharset() {\n            return this.cff.charset.charset;\n          },\n          getGlyphMapping: function CFFFont_getGlyphMapping() {\n            var cff = this.cff;\n            var properties = this.properties;\n            var charsets = cff.charset.charset;\n            var charCodeToGlyphId;\n            var glyphId;\n\n            if (properties.composite) {\n              charCodeToGlyphId = Object.create(null);\n              var charCode;\n\n              if (cff.isCIDFont) {\n                for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n                  var cid = charsets[glyphId];\n                  charCode = properties.cMap.charCodeOf(cid);\n                  charCodeToGlyphId[charCode] = glyphId;\n                }\n              } else {\n                for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n                  charCode = properties.cMap.charCodeOf(glyphId);\n                  charCodeToGlyphId[charCode] = glyphId;\n                }\n              }\n\n              return charCodeToGlyphId;\n            }\n\n            var encoding = cff.encoding ? cff.encoding.encoding : null;\n            charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n            return charCodeToGlyphId;\n          },\n          hasGlyphId: function CFFFont_hasGlyphID(id) {\n            return this.cff.hasGlyphId(id);\n          }\n        };\n        return CFFFont;\n      }();\n      /***/\n\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CFFFDSelect = exports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _charsets = __w_pdfjs_require__(32);\n\n      var _encodings = __w_pdfjs_require__(33);\n\n      var MAX_SUBR_NESTING = 10;\n      var CFFStandardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n      exports.CFFStandardStrings = CFFStandardStrings;\n      var NUM_STANDARD_CFF_STRINGS = 391;\n\n      var CFFParser = function CFFParserClosure() {\n        var CharstringValidationData = [null, {\n          id: \"hstem\",\n          min: 2,\n          stackClearing: true,\n          stem: true\n        }, null, {\n          id: \"vstem\",\n          min: 2,\n          stackClearing: true,\n          stem: true\n        }, {\n          id: \"vmoveto\",\n          min: 1,\n          stackClearing: true\n        }, {\n          id: \"rlineto\",\n          min: 2,\n          resetStack: true\n        }, {\n          id: \"hlineto\",\n          min: 1,\n          resetStack: true\n        }, {\n          id: \"vlineto\",\n          min: 1,\n          resetStack: true\n        }, {\n          id: \"rrcurveto\",\n          min: 6,\n          resetStack: true\n        }, null, {\n          id: \"callsubr\",\n          min: 1,\n          undefStack: true\n        }, {\n          id: \"return\",\n          min: 0,\n          undefStack: true\n        }, null, null, {\n          id: \"endchar\",\n          min: 0,\n          stackClearing: true\n        }, null, null, null, {\n          id: \"hstemhm\",\n          min: 2,\n          stackClearing: true,\n          stem: true\n        }, {\n          id: \"hintmask\",\n          min: 0,\n          stackClearing: true\n        }, {\n          id: \"cntrmask\",\n          min: 0,\n          stackClearing: true\n        }, {\n          id: \"rmoveto\",\n          min: 2,\n          stackClearing: true\n        }, {\n          id: \"hmoveto\",\n          min: 1,\n          stackClearing: true\n        }, {\n          id: \"vstemhm\",\n          min: 2,\n          stackClearing: true,\n          stem: true\n        }, {\n          id: \"rcurveline\",\n          min: 8,\n          resetStack: true\n        }, {\n          id: \"rlinecurve\",\n          min: 8,\n          resetStack: true\n        }, {\n          id: \"vvcurveto\",\n          min: 4,\n          resetStack: true\n        }, {\n          id: \"hhcurveto\",\n          min: 4,\n          resetStack: true\n        }, null, {\n          id: \"callgsubr\",\n          min: 1,\n          undefStack: true\n        }, {\n          id: \"vhcurveto\",\n          min: 4,\n          resetStack: true\n        }, {\n          id: \"hvcurveto\",\n          min: 4,\n          resetStack: true\n        }];\n        var CharstringValidationData12 = [null, null, null, {\n          id: \"and\",\n          min: 2,\n          stackDelta: -1\n        }, {\n          id: \"or\",\n          min: 2,\n          stackDelta: -1\n        }, {\n          id: \"not\",\n          min: 1,\n          stackDelta: 0\n        }, null, null, null, {\n          id: \"abs\",\n          min: 1,\n          stackDelta: 0\n        }, {\n          id: \"add\",\n          min: 2,\n          stackDelta: -1,\n          stackFn: function stack_div(stack, index) {\n            stack[index - 2] = stack[index - 2] + stack[index - 1];\n          }\n        }, {\n          id: \"sub\",\n          min: 2,\n          stackDelta: -1,\n          stackFn: function stack_div(stack, index) {\n            stack[index - 2] = stack[index - 2] - stack[index - 1];\n          }\n        }, {\n          id: \"div\",\n          min: 2,\n          stackDelta: -1,\n          stackFn: function stack_div(stack, index) {\n            stack[index - 2] = stack[index - 2] / stack[index - 1];\n          }\n        }, null, {\n          id: \"neg\",\n          min: 1,\n          stackDelta: 0,\n          stackFn: function stack_div(stack, index) {\n            stack[index - 1] = -stack[index - 1];\n          }\n        }, {\n          id: \"eq\",\n          min: 2,\n          stackDelta: -1\n        }, null, null, {\n          id: \"drop\",\n          min: 1,\n          stackDelta: -1\n        }, null, {\n          id: \"put\",\n          min: 2,\n          stackDelta: -2\n        }, {\n          id: \"get\",\n          min: 1,\n          stackDelta: 0\n        }, {\n          id: \"ifelse\",\n          min: 4,\n          stackDelta: -3\n        }, {\n          id: \"random\",\n          min: 0,\n          stackDelta: 1\n        }, {\n          id: \"mul\",\n          min: 2,\n          stackDelta: -1,\n          stackFn: function stack_div(stack, index) {\n            stack[index - 2] = stack[index - 2] * stack[index - 1];\n          }\n        }, null, {\n          id: \"sqrt\",\n          min: 1,\n          stackDelta: 0\n        }, {\n          id: \"dup\",\n          min: 1,\n          stackDelta: 1\n        }, {\n          id: \"exch\",\n          min: 2,\n          stackDelta: 0\n        }, {\n          id: \"index\",\n          min: 2,\n          stackDelta: 0\n        }, {\n          id: \"roll\",\n          min: 3,\n          stackDelta: -2\n        }, null, null, null, {\n          id: \"hflex\",\n          min: 7,\n          resetStack: true\n        }, {\n          id: \"flex\",\n          min: 13,\n          resetStack: true\n        }, {\n          id: \"hflex1\",\n          min: 9,\n          resetStack: true\n        }, {\n          id: \"flex1\",\n          min: 11,\n          resetStack: true\n        }];\n\n        var CFFParser = /*#__PURE__*/function () {\n          function CFFParser(file, properties, seacAnalysisEnabled) {\n            _classCallCheck(this, CFFParser);\n\n            this.bytes = file.getBytes();\n            this.properties = properties;\n            this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n          }\n\n          _createClass(CFFParser, [{\n            key: \"parse\",\n            value: function parse() {\n              var properties = this.properties;\n              var cff = new CFF();\n              this.cff = cff;\n              var header = this.parseHeader();\n              var nameIndex = this.parseIndex(header.endPos);\n              var topDictIndex = this.parseIndex(nameIndex.endPos);\n              var stringIndex = this.parseIndex(topDictIndex.endPos);\n              var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n              var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n              var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n              cff.header = header.obj;\n              cff.names = this.parseNameIndex(nameIndex.obj);\n              cff.strings = this.parseStringIndex(stringIndex.obj);\n              cff.topDict = topDict;\n              cff.globalSubrIndex = globalSubrIndex.obj;\n              this.parsePrivateDict(cff.topDict);\n              cff.isCIDFont = topDict.hasName(\"ROS\");\n              var charStringOffset = topDict.getByName(\"CharStrings\");\n              var charStringIndex = this.parseIndex(charStringOffset).obj;\n              var fontMatrix = topDict.getByName(\"FontMatrix\");\n\n              if (fontMatrix) {\n                properties.fontMatrix = fontMatrix;\n              }\n\n              var fontBBox = topDict.getByName(\"FontBBox\");\n\n              if (fontBBox) {\n                properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n                properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n                properties.ascentScaled = true;\n              }\n\n              var charset, encoding;\n\n              if (cff.isCIDFont) {\n                var fdArrayIndex = this.parseIndex(topDict.getByName(\"FDArray\")).obj;\n\n                for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n                  var dictRaw = fdArrayIndex.get(i);\n                  var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n                  this.parsePrivateDict(fontDict);\n                  cff.fdArray.push(fontDict);\n                }\n\n                encoding = null;\n                charset = this.parseCharsets(topDict.getByName(\"charset\"), charStringIndex.count, cff.strings, true);\n                cff.fdSelect = this.parseFDSelect(topDict.getByName(\"FDSelect\"), charStringIndex.count);\n              } else {\n                charset = this.parseCharsets(topDict.getByName(\"charset\"), charStringIndex.count, cff.strings, false);\n                encoding = this.parseEncoding(topDict.getByName(\"Encoding\"), properties, cff.strings, charset.charset);\n              }\n\n              cff.charset = charset;\n              cff.encoding = encoding;\n              var charStringsAndSeacs = this.parseCharStrings({\n                charStrings: charStringIndex,\n                localSubrIndex: topDict.privateDict.subrsIndex,\n                globalSubrIndex: globalSubrIndex.obj,\n                fdSelect: cff.fdSelect,\n                fdArray: cff.fdArray,\n                privateDict: topDict.privateDict\n              });\n              cff.charStrings = charStringsAndSeacs.charStrings;\n              cff.seacs = charStringsAndSeacs.seacs;\n              cff.widths = charStringsAndSeacs.widths;\n              return cff;\n            }\n          }, {\n            key: \"parseHeader\",\n            value: function parseHeader() {\n              var bytes = this.bytes;\n              var bytesLength = bytes.length;\n              var offset = 0;\n\n              while (offset < bytesLength && bytes[offset] !== 1) {\n                ++offset;\n              }\n\n              if (offset >= bytesLength) {\n                throw new _util.FormatError(\"Invalid CFF header\");\n              }\n\n              if (offset !== 0) {\n                (0, _util.info)(\"cff data is shifted\");\n                bytes = bytes.subarray(offset);\n                this.bytes = bytes;\n              }\n\n              var major = bytes[0];\n              var minor = bytes[1];\n              var hdrSize = bytes[2];\n              var offSize = bytes[3];\n              var header = new CFFHeader(major, minor, hdrSize, offSize);\n              return {\n                obj: header,\n                endPos: hdrSize\n              };\n            }\n          }, {\n            key: \"parseDict\",\n            value: function parseDict(dict) {\n              var pos = 0;\n\n              function parseOperand() {\n                var value = dict[pos++];\n\n                if (value === 30) {\n                  return parseFloatOperand();\n                } else if (value === 28) {\n                  value = dict[pos++];\n                  value = (value << 24 | dict[pos++] << 16) >> 16;\n                  return value;\n                } else if (value === 29) {\n                  value = dict[pos++];\n                  value = value << 8 | dict[pos++];\n                  value = value << 8 | dict[pos++];\n                  value = value << 8 | dict[pos++];\n                  return value;\n                } else if (value >= 32 && value <= 246) {\n                  return value - 139;\n                } else if (value >= 247 && value <= 250) {\n                  return (value - 247) * 256 + dict[pos++] + 108;\n                } else if (value >= 251 && value <= 254) {\n                  return -((value - 251) * 256) - dict[pos++] - 108;\n                }\n\n                (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n                return NaN;\n              }\n\n              function parseFloatOperand() {\n                var str = \"\";\n                var eof = 15;\n                var lookup = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"E\", \"E-\", null, \"-\"];\n                var length = dict.length;\n\n                while (pos < length) {\n                  var b = dict[pos++];\n                  var b1 = b >> 4;\n                  var b2 = b & 15;\n\n                  if (b1 === eof) {\n                    break;\n                  }\n\n                  str += lookup[b1];\n\n                  if (b2 === eof) {\n                    break;\n                  }\n\n                  str += lookup[b2];\n                }\n\n                return parseFloat(str);\n              }\n\n              var operands = [];\n              var entries = [];\n              pos = 0;\n              var end = dict.length;\n\n              while (pos < end) {\n                var b = dict[pos];\n\n                if (b <= 21) {\n                  if (b === 12) {\n                    b = b << 8 | dict[++pos];\n                  }\n\n                  entries.push([b, operands]);\n                  operands = [];\n                  ++pos;\n                } else {\n                  operands.push(parseOperand());\n                }\n              }\n\n              return entries;\n            }\n          }, {\n            key: \"parseIndex\",\n            value: function parseIndex(pos) {\n              var cffIndex = new CFFIndex();\n              var bytes = this.bytes;\n              var count = bytes[pos++] << 8 | bytes[pos++];\n              var offsets = [];\n              var end = pos;\n              var i, ii;\n\n              if (count !== 0) {\n                var offsetSize = bytes[pos++];\n                var startPos = pos + (count + 1) * offsetSize - 1;\n\n                for (i = 0, ii = count + 1; i < ii; ++i) {\n                  var offset = 0;\n\n                  for (var j = 0; j < offsetSize; ++j) {\n                    offset <<= 8;\n                    offset += bytes[pos++];\n                  }\n\n                  offsets.push(startPos + offset);\n                }\n\n                end = offsets[count];\n              }\n\n              for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n                var offsetStart = offsets[i];\n                var offsetEnd = offsets[i + 1];\n                cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n              }\n\n              return {\n                obj: cffIndex,\n                endPos: end\n              };\n            }\n          }, {\n            key: \"parseNameIndex\",\n            value: function parseNameIndex(index) {\n              var names = [];\n\n              for (var i = 0, ii = index.count; i < ii; ++i) {\n                var name = index.get(i);\n                names.push((0, _util.bytesToString)(name));\n              }\n\n              return names;\n            }\n          }, {\n            key: \"parseStringIndex\",\n            value: function parseStringIndex(index) {\n              var strings = new CFFStrings();\n\n              for (var i = 0, ii = index.count; i < ii; ++i) {\n                var data = index.get(i);\n                strings.add((0, _util.bytesToString)(data));\n              }\n\n              return strings;\n            }\n          }, {\n            key: \"createDict\",\n            value: function createDict(Type, dict, strings) {\n              var cffDict = new Type(strings);\n\n              for (var i = 0, ii = dict.length; i < ii; ++i) {\n                var pair = dict[i];\n                var key = pair[0];\n                var value = pair[1];\n                cffDict.setByKey(key, value);\n              }\n\n              return cffDict;\n            }\n          }, {\n            key: \"parseCharString\",\n            value: function parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n              if (!data || state.callDepth > MAX_SUBR_NESTING) {\n                return false;\n              }\n\n              var stackSize = state.stackSize;\n              var stack = state.stack;\n              var length = data.length;\n\n              for (var j = 0; j < length;) {\n                var value = data[j++];\n                var validationCommand = null;\n\n                if (value === 12) {\n                  var q = data[j++];\n\n                  if (q === 0) {\n                    data[j - 2] = 139;\n                    data[j - 1] = 22;\n                    stackSize = 0;\n                  } else {\n                    validationCommand = CharstringValidationData12[q];\n                  }\n                } else if (value === 28) {\n                  stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n                  j += 2;\n                  stackSize++;\n                } else if (value === 14) {\n                  if (stackSize >= 4) {\n                    stackSize -= 4;\n\n                    if (this.seacAnalysisEnabled) {\n                      state.seac = stack.slice(stackSize, stackSize + 4);\n                      return false;\n                    }\n                  }\n\n                  validationCommand = CharstringValidationData[value];\n                } else if (value >= 32 && value <= 246) {\n                  stack[stackSize] = value - 139;\n                  stackSize++;\n                } else if (value >= 247 && value <= 254) {\n                  stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n                  j++;\n                  stackSize++;\n                } else if (value === 255) {\n                  stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n                  j += 4;\n                  stackSize++;\n                } else if (value === 19 || value === 20) {\n                  state.hints += stackSize >> 1;\n                  j += state.hints + 7 >> 3;\n                  stackSize %= 2;\n                  validationCommand = CharstringValidationData[value];\n                } else if (value === 10 || value === 29) {\n                  var subrsIndex;\n\n                  if (value === 10) {\n                    subrsIndex = localSubrIndex;\n                  } else {\n                    subrsIndex = globalSubrIndex;\n                  }\n\n                  if (!subrsIndex) {\n                    validationCommand = CharstringValidationData[value];\n                    (0, _util.warn)(\"Missing subrsIndex for \" + validationCommand.id);\n                    return false;\n                  }\n\n                  var bias = 32768;\n\n                  if (subrsIndex.count < 1240) {\n                    bias = 107;\n                  } else if (subrsIndex.count < 33900) {\n                    bias = 1131;\n                  }\n\n                  var subrNumber = stack[--stackSize] + bias;\n\n                  if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n                    validationCommand = CharstringValidationData[value];\n                    (0, _util.warn)(\"Out of bounds subrIndex for \" + validationCommand.id);\n                    return false;\n                  }\n\n                  state.stackSize = stackSize;\n                  state.callDepth++;\n                  var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\n                  if (!valid) {\n                    return false;\n                  }\n\n                  state.callDepth--;\n                  stackSize = state.stackSize;\n                  continue;\n                } else if (value === 11) {\n                  state.stackSize = stackSize;\n                  return true;\n                } else {\n                  validationCommand = CharstringValidationData[value];\n                }\n\n                if (validationCommand) {\n                  if (validationCommand.stem) {\n                    state.hints += stackSize >> 1;\n\n                    if (value === 3 || value === 23) {\n                      state.hasVStems = true;\n                    } else if (state.hasVStems && (value === 1 || value === 18)) {\n                      (0, _util.warn)(\"CFF stem hints are in wrong order\");\n                      data[j - 1] = value === 1 ? 3 : 23;\n                    }\n                  }\n\n                  if (\"min\" in validationCommand) {\n                    if (!state.undefStack && stackSize < validationCommand.min) {\n                      (0, _util.warn)(\"Not enough parameters for \" + validationCommand.id + \"; actual: \" + stackSize + \", expected: \" + validationCommand.min);\n                      return false;\n                    }\n                  }\n\n                  if (state.firstStackClearing && validationCommand.stackClearing) {\n                    state.firstStackClearing = false;\n                    stackSize -= validationCommand.min;\n\n                    if (stackSize >= 2 && validationCommand.stem) {\n                      stackSize %= 2;\n                    } else if (stackSize > 1) {\n                      (0, _util.warn)(\"Found too many parameters for stack-clearing command\");\n                    }\n\n                    if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n                      state.width = stack[stackSize - 1];\n                    }\n                  }\n\n                  if (\"stackDelta\" in validationCommand) {\n                    if (\"stackFn\" in validationCommand) {\n                      validationCommand.stackFn(stack, stackSize);\n                    }\n\n                    stackSize += validationCommand.stackDelta;\n                  } else if (validationCommand.stackClearing) {\n                    stackSize = 0;\n                  } else if (validationCommand.resetStack) {\n                    stackSize = 0;\n                    state.undefStack = false;\n                  } else if (validationCommand.undefStack) {\n                    stackSize = 0;\n                    state.undefStack = true;\n                    state.firstStackClearing = false;\n                  }\n                }\n              }\n\n              state.stackSize = stackSize;\n              return true;\n            }\n          }, {\n            key: \"parseCharStrings\",\n            value: function parseCharStrings(_ref39) {\n              var charStrings = _ref39.charStrings,\n                  localSubrIndex = _ref39.localSubrIndex,\n                  globalSubrIndex = _ref39.globalSubrIndex,\n                  fdSelect = _ref39.fdSelect,\n                  fdArray = _ref39.fdArray,\n                  privateDict = _ref39.privateDict;\n              var seacs = [];\n              var widths = [];\n              var count = charStrings.count;\n\n              for (var i = 0; i < count; i++) {\n                var charstring = charStrings.get(i);\n                var state = {\n                  callDepth: 0,\n                  stackSize: 0,\n                  stack: [],\n                  undefStack: true,\n                  hints: 0,\n                  firstStackClearing: true,\n                  seac: null,\n                  width: null,\n                  hasVStems: false\n                };\n                var valid = true;\n                var localSubrToUse = null;\n                var privateDictToUse = privateDict;\n\n                if (fdSelect && fdArray.length) {\n                  var fdIndex = fdSelect.getFDIndex(i);\n\n                  if (fdIndex === -1) {\n                    (0, _util.warn)(\"Glyph index is not in fd select.\");\n                    valid = false;\n                  }\n\n                  if (fdIndex >= fdArray.length) {\n                    (0, _util.warn)(\"Invalid fd index for glyph index.\");\n                    valid = false;\n                  }\n\n                  if (valid) {\n                    privateDictToUse = fdArray[fdIndex].privateDict;\n                    localSubrToUse = privateDictToUse.subrsIndex;\n                  }\n                } else if (localSubrIndex) {\n                  localSubrToUse = localSubrIndex;\n                }\n\n                if (valid) {\n                  valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n                }\n\n                if (state.width !== null) {\n                  var nominalWidth = privateDictToUse.getByName(\"nominalWidthX\");\n                  widths[i] = nominalWidth + state.width;\n                } else {\n                  var defaultWidth = privateDictToUse.getByName(\"defaultWidthX\");\n                  widths[i] = defaultWidth;\n                }\n\n                if (state.seac !== null) {\n                  seacs[i] = state.seac;\n                }\n\n                if (!valid) {\n                  charStrings.set(i, new Uint8Array([14]));\n                }\n              }\n\n              return {\n                charStrings: charStrings,\n                seacs: seacs,\n                widths: widths\n              };\n            }\n          }, {\n            key: \"emptyPrivateDictionary\",\n            value: function emptyPrivateDictionary(parentDict) {\n              var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n              parentDict.setByKey(18, [0, 0]);\n              parentDict.privateDict = privateDict;\n            }\n          }, {\n            key: \"parsePrivateDict\",\n            value: function parsePrivateDict(parentDict) {\n              if (!parentDict.hasName(\"Private\")) {\n                this.emptyPrivateDictionary(parentDict);\n                return;\n              }\n\n              var privateOffset = parentDict.getByName(\"Private\");\n\n              if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n                parentDict.removeByName(\"Private\");\n                return;\n              }\n\n              var size = privateOffset[0];\n              var offset = privateOffset[1];\n\n              if (size === 0 || offset >= this.bytes.length) {\n                this.emptyPrivateDictionary(parentDict);\n                return;\n              }\n\n              var privateDictEnd = offset + size;\n              var dictData = this.bytes.subarray(offset, privateDictEnd);\n              var dict = this.parseDict(dictData);\n              var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n              parentDict.privateDict = privateDict;\n\n              if (!privateDict.getByName(\"Subrs\")) {\n                return;\n              }\n\n              var subrsOffset = privateDict.getByName(\"Subrs\");\n              var relativeOffset = offset + subrsOffset;\n\n              if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n                this.emptyPrivateDictionary(parentDict);\n                return;\n              }\n\n              var subrsIndex = this.parseIndex(relativeOffset);\n              privateDict.subrsIndex = subrsIndex.obj;\n            }\n          }, {\n            key: \"parseCharsets\",\n            value: function parseCharsets(pos, length, strings, cid) {\n              if (pos === 0) {\n                return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n              } else if (pos === 1) {\n                return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n              } else if (pos === 2) {\n                return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n              }\n\n              var bytes = this.bytes;\n              var start = pos;\n              var format = bytes[pos++];\n              var charset = [cid ? 0 : \".notdef\"];\n              var id, count, i;\n              length -= 1;\n\n              switch (format) {\n                case 0:\n                  for (i = 0; i < length; i++) {\n                    id = bytes[pos++] << 8 | bytes[pos++];\n                    charset.push(cid ? id : strings.get(id));\n                  }\n\n                  break;\n\n                case 1:\n                  while (charset.length <= length) {\n                    id = bytes[pos++] << 8 | bytes[pos++];\n                    count = bytes[pos++];\n\n                    for (i = 0; i <= count; i++) {\n                      charset.push(cid ? id++ : strings.get(id++));\n                    }\n                  }\n\n                  break;\n\n                case 2:\n                  while (charset.length <= length) {\n                    id = bytes[pos++] << 8 | bytes[pos++];\n                    count = bytes[pos++] << 8 | bytes[pos++];\n\n                    for (i = 0; i <= count; i++) {\n                      charset.push(cid ? id++ : strings.get(id++));\n                    }\n                  }\n\n                  break;\n\n                default:\n                  throw new _util.FormatError(\"Unknown charset format\");\n              }\n\n              var end = pos;\n              var raw = bytes.subarray(start, end);\n              return new CFFCharset(false, format, charset, raw);\n            }\n          }, {\n            key: \"parseEncoding\",\n            value: function parseEncoding(pos, properties, strings, charset) {\n              var encoding = Object.create(null);\n              var bytes = this.bytes;\n              var predefined = false;\n              var format, i, ii;\n              var raw = null;\n\n              function readSupplement() {\n                var supplementsCount = bytes[pos++];\n\n                for (i = 0; i < supplementsCount; i++) {\n                  var code = bytes[pos++];\n                  var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n                  encoding[code] = charset.indexOf(strings.get(sid));\n                }\n              }\n\n              if (pos === 0 || pos === 1) {\n                predefined = true;\n                format = pos;\n                var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n\n                for (i = 0, ii = charset.length; i < ii; i++) {\n                  var index = baseEncoding.indexOf(charset[i]);\n\n                  if (index !== -1) {\n                    encoding[index] = i;\n                  }\n                }\n              } else {\n                var dataStart = pos;\n                format = bytes[pos++];\n\n                switch (format & 0x7f) {\n                  case 0:\n                    var glyphsCount = bytes[pos++];\n\n                    for (i = 1; i <= glyphsCount; i++) {\n                      encoding[bytes[pos++]] = i;\n                    }\n\n                    break;\n\n                  case 1:\n                    var rangesCount = bytes[pos++];\n                    var gid = 1;\n\n                    for (i = 0; i < rangesCount; i++) {\n                      var start = bytes[pos++];\n                      var left = bytes[pos++];\n\n                      for (var j = start; j <= start + left; j++) {\n                        encoding[j] = gid++;\n                      }\n                    }\n\n                    break;\n\n                  default:\n                    throw new _util.FormatError(\"Unknown encoding format: \".concat(format, \" in CFF\"));\n                }\n\n                var dataEnd = pos;\n\n                if (format & 0x80) {\n                  bytes[dataStart] &= 0x7f;\n                  readSupplement();\n                }\n\n                raw = bytes.subarray(dataStart, dataEnd);\n              }\n\n              format = format & 0x7f;\n              return new CFFEncoding(predefined, format, encoding, raw);\n            }\n          }, {\n            key: \"parseFDSelect\",\n            value: function parseFDSelect(pos, length) {\n              var bytes = this.bytes;\n              var format = bytes[pos++];\n              var fdSelect = [];\n              var i;\n\n              switch (format) {\n                case 0:\n                  for (i = 0; i < length; ++i) {\n                    var id = bytes[pos++];\n                    fdSelect.push(id);\n                  }\n\n                  break;\n\n                case 3:\n                  var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\n                  for (i = 0; i < rangesCount; ++i) {\n                    var first = bytes[pos++] << 8 | bytes[pos++];\n\n                    if (i === 0 && first !== 0) {\n                      (0, _util.warn)(\"parseFDSelect: The first range must have a first GID of 0\" + \" -- trying to recover.\");\n                      first = 0;\n                    }\n\n                    var fdIndex = bytes[pos++];\n                    var next = bytes[pos] << 8 | bytes[pos + 1];\n\n                    for (var j = first; j < next; ++j) {\n                      fdSelect.push(fdIndex);\n                    }\n                  }\n\n                  pos += 2;\n                  break;\n\n                default:\n                  throw new _util.FormatError(\"parseFDSelect: Unknown format \\\"\".concat(format, \"\\\".\"));\n              }\n\n              if (fdSelect.length !== length) {\n                throw new _util.FormatError(\"parseFDSelect: Invalid font data.\");\n              }\n\n              return new CFFFDSelect(format, fdSelect);\n            }\n          }]);\n\n          return CFFParser;\n        }();\n\n        return CFFParser;\n      }();\n\n      exports.CFFParser = CFFParser;\n\n      var CFF = /*#__PURE__*/function () {\n        function CFF() {\n          _classCallCheck(this, CFF);\n\n          this.header = null;\n          this.names = [];\n          this.topDict = null;\n          this.strings = new CFFStrings();\n          this.globalSubrIndex = null;\n          this.encoding = null;\n          this.charset = null;\n          this.charStrings = null;\n          this.fdArray = [];\n          this.fdSelect = null;\n          this.isCIDFont = false;\n        }\n\n        _createClass(CFF, [{\n          key: \"duplicateFirstGlyph\",\n          value: function duplicateFirstGlyph() {\n            if (this.charStrings.count >= 65535) {\n              (0, _util.warn)(\"Not enough space in charstrings to duplicate first glyph.\");\n              return;\n            }\n\n            var glyphZero = this.charStrings.get(0);\n            this.charStrings.add(glyphZero);\n\n            if (this.isCIDFont) {\n              this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);\n            }\n          }\n        }, {\n          key: \"hasGlyphId\",\n          value: function hasGlyphId(id) {\n            if (id < 0 || id >= this.charStrings.count) {\n              return false;\n            }\n\n            var glyph = this.charStrings.get(id);\n            return glyph.length > 0;\n          }\n        }]);\n\n        return CFF;\n      }();\n\n      exports.CFF = CFF;\n\n      var CFFHeader = function CFFHeader(major, minor, hdrSize, offSize) {\n        _classCallCheck(this, CFFHeader);\n\n        this.major = major;\n        this.minor = minor;\n        this.hdrSize = hdrSize;\n        this.offSize = offSize;\n      };\n\n      exports.CFFHeader = CFFHeader;\n\n      var CFFStrings = /*#__PURE__*/function () {\n        function CFFStrings() {\n          _classCallCheck(this, CFFStrings);\n\n          this.strings = [];\n        }\n\n        _createClass(CFFStrings, [{\n          key: \"get\",\n          value: function get(index) {\n            if (index >= 0 && index <= NUM_STANDARD_CFF_STRINGS - 1) {\n              return CFFStandardStrings[index];\n            }\n\n            if (index - NUM_STANDARD_CFF_STRINGS <= this.strings.length) {\n              return this.strings[index - NUM_STANDARD_CFF_STRINGS];\n            }\n\n            return CFFStandardStrings[0];\n          }\n        }, {\n          key: \"getSID\",\n          value: function getSID(str) {\n            var index = CFFStandardStrings.indexOf(str);\n\n            if (index !== -1) {\n              return index;\n            }\n\n            index = this.strings.indexOf(str);\n\n            if (index !== -1) {\n              return index + NUM_STANDARD_CFF_STRINGS;\n            }\n\n            return -1;\n          }\n        }, {\n          key: \"add\",\n          value: function add(value) {\n            this.strings.push(value);\n          }\n        }, {\n          key: \"count\",\n          get: function get() {\n            return this.strings.length;\n          }\n        }]);\n\n        return CFFStrings;\n      }();\n\n      exports.CFFStrings = CFFStrings;\n\n      var CFFIndex = /*#__PURE__*/function () {\n        function CFFIndex() {\n          _classCallCheck(this, CFFIndex);\n\n          this.objects = [];\n          this.length = 0;\n        }\n\n        _createClass(CFFIndex, [{\n          key: \"add\",\n          value: function add(data) {\n            this.length += data.length;\n            this.objects.push(data);\n          }\n        }, {\n          key: \"set\",\n          value: function set(index, data) {\n            this.length += data.length - this.objects[index].length;\n            this.objects[index] = data;\n          }\n        }, {\n          key: \"get\",\n          value: function get(index) {\n            return this.objects[index];\n          }\n        }, {\n          key: \"count\",\n          get: function get() {\n            return this.objects.length;\n          }\n        }]);\n\n        return CFFIndex;\n      }();\n\n      exports.CFFIndex = CFFIndex;\n\n      var CFFDict = /*#__PURE__*/function () {\n        function CFFDict(tables, strings) {\n          _classCallCheck(this, CFFDict);\n\n          this.keyToNameMap = tables.keyToNameMap;\n          this.nameToKeyMap = tables.nameToKeyMap;\n          this.defaults = tables.defaults;\n          this.types = tables.types;\n          this.opcodes = tables.opcodes;\n          this.order = tables.order;\n          this.strings = strings;\n          this.values = Object.create(null);\n        }\n\n        _createClass(CFFDict, [{\n          key: \"setByKey\",\n          value: function setByKey(key, value) {\n            if (!(key in this.keyToNameMap)) {\n              return false;\n            }\n\n            var valueLength = value.length;\n\n            if (valueLength === 0) {\n              return true;\n            }\n\n            for (var i = 0; i < valueLength; i++) {\n              if (isNaN(value[i])) {\n                (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n                return true;\n              }\n            }\n\n            var type = this.types[key];\n\n            if (type === \"num\" || type === \"sid\" || type === \"offset\") {\n              value = value[0];\n            }\n\n            this.values[key] = value;\n            return true;\n          }\n        }, {\n          key: \"setByName\",\n          value: function setByName(name, value) {\n            if (!(name in this.nameToKeyMap)) {\n              throw new _util.FormatError(\"Invalid dictionary name \\\"\".concat(name, \"\\\"\"));\n            }\n\n            this.values[this.nameToKeyMap[name]] = value;\n          }\n        }, {\n          key: \"hasName\",\n          value: function hasName(name) {\n            return this.nameToKeyMap[name] in this.values;\n          }\n        }, {\n          key: \"getByName\",\n          value: function getByName(name) {\n            if (!(name in this.nameToKeyMap)) {\n              throw new _util.FormatError(\"Invalid dictionary name \".concat(name, \"\\\"\"));\n            }\n\n            var key = this.nameToKeyMap[name];\n\n            if (!(key in this.values)) {\n              return this.defaults[key];\n            }\n\n            return this.values[key];\n          }\n        }, {\n          key: \"removeByName\",\n          value: function removeByName(name) {\n            delete this.values[this.nameToKeyMap[name]];\n          }\n        }], [{\n          key: \"createTables\",\n          value: function createTables(layout) {\n            var tables = {\n              keyToNameMap: {},\n              nameToKeyMap: {},\n              defaults: {},\n              types: {},\n              opcodes: {},\n              order: []\n            };\n\n            for (var i = 0, ii = layout.length; i < ii; ++i) {\n              var entry = layout[i];\n              var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n              tables.keyToNameMap[key] = entry[1];\n              tables.nameToKeyMap[entry[1]] = key;\n              tables.types[key] = entry[2];\n              tables.defaults[key] = entry[3];\n              tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n              tables.order.push(key);\n            }\n\n            return tables;\n          }\n        }]);\n\n        return CFFDict;\n      }();\n\n      var CFFTopDict = function CFFTopDictClosure() {\n        var layout = [[[12, 30], \"ROS\", [\"sid\", \"sid\", \"num\"], null], [[12, 20], \"SyntheticBase\", \"num\", null], [0, \"version\", \"sid\", null], [1, \"Notice\", \"sid\", null], [[12, 0], \"Copyright\", \"sid\", null], [2, \"FullName\", \"sid\", null], [3, \"FamilyName\", \"sid\", null], [4, \"Weight\", \"sid\", null], [[12, 1], \"isFixedPitch\", \"num\", 0], [[12, 2], \"ItalicAngle\", \"num\", 0], [[12, 3], \"UnderlinePosition\", \"num\", -100], [[12, 4], \"UnderlineThickness\", \"num\", 50], [[12, 5], \"PaintType\", \"num\", 0], [[12, 6], \"CharstringType\", \"num\", 2], [[12, 7], \"FontMatrix\", [\"num\", \"num\", \"num\", \"num\", \"num\", \"num\"], [0.001, 0, 0, 0.001, 0, 0]], [13, \"UniqueID\", \"num\", null], [5, \"FontBBox\", [\"num\", \"num\", \"num\", \"num\"], [0, 0, 0, 0]], [[12, 8], \"StrokeWidth\", \"num\", 0], [14, \"XUID\", \"array\", null], [15, \"charset\", \"offset\", 0], [16, \"Encoding\", \"offset\", 0], [17, \"CharStrings\", \"offset\", 0], [18, \"Private\", [\"offset\", \"offset\"], null], [[12, 21], \"PostScript\", \"sid\", null], [[12, 22], \"BaseFontName\", \"sid\", null], [[12, 23], \"BaseFontBlend\", \"delta\", null], [[12, 31], \"CIDFontVersion\", \"num\", 0], [[12, 32], \"CIDFontRevision\", \"num\", 0], [[12, 33], \"CIDFontType\", \"num\", 0], [[12, 34], \"CIDCount\", \"num\", 8720], [[12, 35], \"UIDBase\", \"num\", null], [[12, 37], \"FDSelect\", \"offset\", null], [[12, 36], \"FDArray\", \"offset\", null], [[12, 38], \"FontName\", \"sid\", null]];\n        var tables = null;\n\n        var CFFTopDict = /*#__PURE__*/function (_CFFDict) {\n          _inherits(CFFTopDict, _CFFDict);\n\n          var _super59 = _createSuper(CFFTopDict);\n\n          function CFFTopDict(strings) {\n            var _this69;\n\n            _classCallCheck(this, CFFTopDict);\n\n            if (tables === null) {\n              tables = CFFDict.createTables(layout);\n            }\n\n            _this69 = _super59.call(this, tables, strings);\n            _this69.privateDict = null;\n            return _this69;\n          }\n\n          return CFFTopDict;\n        }(CFFDict);\n\n        return CFFTopDict;\n      }();\n\n      exports.CFFTopDict = CFFTopDict;\n\n      var CFFPrivateDict = function CFFPrivateDictClosure() {\n        var layout = [[6, \"BlueValues\", \"delta\", null], [7, \"OtherBlues\", \"delta\", null], [8, \"FamilyBlues\", \"delta\", null], [9, \"FamilyOtherBlues\", \"delta\", null], [[12, 9], \"BlueScale\", \"num\", 0.039625], [[12, 10], \"BlueShift\", \"num\", 7], [[12, 11], \"BlueFuzz\", \"num\", 1], [10, \"StdHW\", \"num\", null], [11, \"StdVW\", \"num\", null], [[12, 12], \"StemSnapH\", \"delta\", null], [[12, 13], \"StemSnapV\", \"delta\", null], [[12, 14], \"ForceBold\", \"num\", 0], [[12, 17], \"LanguageGroup\", \"num\", 0], [[12, 18], \"ExpansionFactor\", \"num\", 0.06], [[12, 19], \"initialRandomSeed\", \"num\", 0], [20, \"defaultWidthX\", \"num\", 0], [21, \"nominalWidthX\", \"num\", 0], [19, \"Subrs\", \"offset\", null]];\n        var tables = null;\n\n        var CFFPrivateDict = /*#__PURE__*/function (_CFFDict2) {\n          _inherits(CFFPrivateDict, _CFFDict2);\n\n          var _super60 = _createSuper(CFFPrivateDict);\n\n          function CFFPrivateDict(strings) {\n            var _this70;\n\n            _classCallCheck(this, CFFPrivateDict);\n\n            if (tables === null) {\n              tables = CFFDict.createTables(layout);\n            }\n\n            _this70 = _super60.call(this, tables, strings);\n            _this70.subrsIndex = null;\n            return _this70;\n          }\n\n          return CFFPrivateDict;\n        }(CFFDict);\n\n        return CFFPrivateDict;\n      }();\n\n      exports.CFFPrivateDict = CFFPrivateDict;\n      var CFFCharsetPredefinedTypes = {\n        ISO_ADOBE: 0,\n        EXPERT: 1,\n        EXPERT_SUBSET: 2\n      };\n\n      var CFFCharset = function CFFCharset(predefined, format, charset, raw) {\n        _classCallCheck(this, CFFCharset);\n\n        this.predefined = predefined;\n        this.format = format;\n        this.charset = charset;\n        this.raw = raw;\n      };\n\n      exports.CFFCharset = CFFCharset;\n\n      var CFFEncoding = function CFFEncoding(predefined, format, encoding, raw) {\n        _classCallCheck(this, CFFEncoding);\n\n        this.predefined = predefined;\n        this.format = format;\n        this.encoding = encoding;\n        this.raw = raw;\n      };\n\n      var CFFFDSelect = /*#__PURE__*/function () {\n        function CFFFDSelect(format, fdSelect) {\n          _classCallCheck(this, CFFFDSelect);\n\n          this.format = format;\n          this.fdSelect = fdSelect;\n        }\n\n        _createClass(CFFFDSelect, [{\n          key: \"getFDIndex\",\n          value: function getFDIndex(glyphIndex) {\n            if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n              return -1;\n            }\n\n            return this.fdSelect[glyphIndex];\n          }\n        }]);\n\n        return CFFFDSelect;\n      }();\n\n      exports.CFFFDSelect = CFFFDSelect;\n\n      var CFFOffsetTracker = /*#__PURE__*/function () {\n        function CFFOffsetTracker() {\n          _classCallCheck(this, CFFOffsetTracker);\n\n          this.offsets = Object.create(null);\n        }\n\n        _createClass(CFFOffsetTracker, [{\n          key: \"isTracking\",\n          value: function isTracking(key) {\n            return key in this.offsets;\n          }\n        }, {\n          key: \"track\",\n          value: function track(key, location) {\n            if (key in this.offsets) {\n              throw new _util.FormatError(\"Already tracking location of \".concat(key));\n            }\n\n            this.offsets[key] = location;\n          }\n        }, {\n          key: \"offset\",\n          value: function offset(value) {\n            for (var key in this.offsets) {\n              this.offsets[key] += value;\n            }\n          }\n        }, {\n          key: \"setEntryLocation\",\n          value: function setEntryLocation(key, values, output) {\n            if (!(key in this.offsets)) {\n              throw new _util.FormatError(\"Not tracking location of \".concat(key));\n            }\n\n            var data = output.data;\n            var dataOffset = this.offsets[key];\n            var size = 5;\n\n            for (var i = 0, ii = values.length; i < ii; ++i) {\n              var offset0 = i * size + dataOffset;\n              var offset1 = offset0 + 1;\n              var offset2 = offset0 + 2;\n              var offset3 = offset0 + 3;\n              var offset4 = offset0 + 4;\n\n              if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n                throw new _util.FormatError(\"writing to an offset that is not empty\");\n              }\n\n              var value = values[i];\n              data[offset0] = 0x1d;\n              data[offset1] = value >> 24 & 0xff;\n              data[offset2] = value >> 16 & 0xff;\n              data[offset3] = value >> 8 & 0xff;\n              data[offset4] = value & 0xff;\n            }\n          }\n        }]);\n\n        return CFFOffsetTracker;\n      }();\n\n      var CFFCompiler = /*#__PURE__*/function () {\n        function CFFCompiler(cff) {\n          _classCallCheck(this, CFFCompiler);\n\n          this.cff = cff;\n        }\n\n        _createClass(CFFCompiler, [{\n          key: \"compile\",\n          value: function compile() {\n            var cff = this.cff;\n            var output = {\n              data: [],\n              length: 0,\n              add: function CFFCompiler_add(data) {\n                this.data = this.data.concat(data);\n                this.length = this.data.length;\n              }\n            };\n            var header = this.compileHeader(cff.header);\n            output.add(header);\n            var nameIndex = this.compileNameIndex(cff.names);\n            output.add(nameIndex);\n\n            if (cff.isCIDFont) {\n              if (cff.topDict.hasName(\"FontMatrix\")) {\n                var base = cff.topDict.getByName(\"FontMatrix\");\n                cff.topDict.removeByName(\"FontMatrix\");\n\n                for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n                  var subDict = cff.fdArray[i];\n                  var matrix = base.slice(0);\n\n                  if (subDict.hasName(\"FontMatrix\")) {\n                    matrix = _util.Util.transform(matrix, subDict.getByName(\"FontMatrix\"));\n                  }\n\n                  subDict.setByName(\"FontMatrix\", matrix);\n                }\n              }\n            }\n\n            cff.topDict.setByName(\"charset\", 0);\n            var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n            output.add(compiled.output);\n            var topDictTracker = compiled.trackers[0];\n            var stringIndex = this.compileStringIndex(cff.strings.strings);\n            output.add(stringIndex);\n            var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n            output.add(globalSubrIndex);\n\n            if (cff.encoding && cff.topDict.hasName(\"Encoding\")) {\n              if (cff.encoding.predefined) {\n                topDictTracker.setEntryLocation(\"Encoding\", [cff.encoding.format], output);\n              } else {\n                var encoding = this.compileEncoding(cff.encoding);\n                topDictTracker.setEntryLocation(\"Encoding\", [output.length], output);\n                output.add(encoding);\n              }\n            }\n\n            var charset = this.compileCharset(cff.charset, cff.charStrings.count, cff.strings, cff.isCIDFont);\n            topDictTracker.setEntryLocation(\"charset\", [output.length], output);\n            output.add(charset);\n            var charStrings = this.compileCharStrings(cff.charStrings);\n            topDictTracker.setEntryLocation(\"CharStrings\", [output.length], output);\n            output.add(charStrings);\n\n            if (cff.isCIDFont) {\n              topDictTracker.setEntryLocation(\"FDSelect\", [output.length], output);\n              var fdSelect = this.compileFDSelect(cff.fdSelect);\n              output.add(fdSelect);\n              compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n              topDictTracker.setEntryLocation(\"FDArray\", [output.length], output);\n              output.add(compiled.output);\n              var fontDictTrackers = compiled.trackers;\n              this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n            }\n\n            this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n            output.add([0]);\n            return output.data;\n          }\n        }, {\n          key: \"encodeNumber\",\n          value: function encodeNumber(value) {\n            if (Number.isInteger(value)) {\n              return this.encodeInteger(value);\n            }\n\n            return this.encodeFloat(value);\n          }\n        }, {\n          key: \"encodeFloat\",\n          value: function encodeFloat(num) {\n            var value = num.toString();\n            var m = CFFCompiler.EncodeFloatRegExp.exec(value);\n\n            if (m) {\n              var epsilon = parseFloat(\"1e\" + ((m[2] ? +m[2] : 0) + m[1].length));\n              value = (Math.round(num * epsilon) / epsilon).toString();\n            }\n\n            var nibbles = \"\";\n            var i, ii;\n\n            for (i = 0, ii = value.length; i < ii; ++i) {\n              var a = value[i];\n\n              if (a === \"e\") {\n                nibbles += value[++i] === \"-\" ? \"c\" : \"b\";\n              } else if (a === \".\") {\n                nibbles += \"a\";\n              } else if (a === \"-\") {\n                nibbles += \"e\";\n              } else {\n                nibbles += a;\n              }\n            }\n\n            nibbles += nibbles.length & 1 ? \"f\" : \"ff\";\n            var out = [30];\n\n            for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n              out.push(parseInt(nibbles.substring(i, i + 2), 16));\n            }\n\n            return out;\n          }\n        }, {\n          key: \"encodeInteger\",\n          value: function encodeInteger(value) {\n            var code;\n\n            if (value >= -107 && value <= 107) {\n              code = [value + 139];\n            } else if (value >= 108 && value <= 1131) {\n              value = value - 108;\n              code = [(value >> 8) + 247, value & 0xff];\n            } else if (value >= -1131 && value <= -108) {\n              value = -value - 108;\n              code = [(value >> 8) + 251, value & 0xff];\n            } else if (value >= -32768 && value <= 32767) {\n              code = [0x1c, value >> 8 & 0xff, value & 0xff];\n            } else {\n              code = [0x1d, value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff];\n            }\n\n            return code;\n          }\n        }, {\n          key: \"compileHeader\",\n          value: function compileHeader(header) {\n            return [header.major, header.minor, header.hdrSize, header.offSize];\n          }\n        }, {\n          key: \"compileNameIndex\",\n          value: function compileNameIndex(names) {\n            var nameIndex = new CFFIndex();\n\n            for (var i = 0, ii = names.length; i < ii; ++i) {\n              var name = names[i];\n              var length = Math.min(name.length, 127);\n              var sanitizedName = new Array(length);\n\n              for (var j = 0; j < length; j++) {\n                var char = name[j];\n\n                if (char < \"!\" || char > \"~\" || char === \"[\" || char === \"]\" || char === \"(\" || char === \")\" || char === \"{\" || char === \"}\" || char === \"<\" || char === \">\" || char === \"/\" || char === \"%\") {\n                  char = \"_\";\n                }\n\n                sanitizedName[j] = char;\n              }\n\n              sanitizedName = sanitizedName.join(\"\");\n\n              if (sanitizedName === \"\") {\n                sanitizedName = \"Bad_Font_Name\";\n              }\n\n              nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n            }\n\n            return this.compileIndex(nameIndex);\n          }\n        }, {\n          key: \"compileTopDicts\",\n          value: function compileTopDicts(dicts, length, removeCidKeys) {\n            var fontDictTrackers = [];\n            var fdArrayIndex = new CFFIndex();\n\n            for (var i = 0, ii = dicts.length; i < ii; ++i) {\n              var fontDict = dicts[i];\n\n              if (removeCidKeys) {\n                fontDict.removeByName(\"CIDFontVersion\");\n                fontDict.removeByName(\"CIDFontRevision\");\n                fontDict.removeByName(\"CIDFontType\");\n                fontDict.removeByName(\"CIDCount\");\n                fontDict.removeByName(\"UIDBase\");\n              }\n\n              var fontDictTracker = new CFFOffsetTracker();\n              var fontDictData = this.compileDict(fontDict, fontDictTracker);\n              fontDictTrackers.push(fontDictTracker);\n              fdArrayIndex.add(fontDictData);\n              fontDictTracker.offset(length);\n            }\n\n            fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n            return {\n              trackers: fontDictTrackers,\n              output: fdArrayIndex\n            };\n          }\n        }, {\n          key: \"compilePrivateDicts\",\n          value: function compilePrivateDicts(dicts, trackers, output) {\n            for (var i = 0, ii = dicts.length; i < ii; ++i) {\n              var fontDict = dicts[i];\n              var privateDict = fontDict.privateDict;\n\n              if (!privateDict || !fontDict.hasName(\"Private\")) {\n                throw new _util.FormatError(\"There must be a private dictionary.\");\n              }\n\n              var privateDictTracker = new CFFOffsetTracker();\n              var privateDictData = this.compileDict(privateDict, privateDictTracker);\n              var outputLength = output.length;\n              privateDictTracker.offset(outputLength);\n\n              if (!privateDictData.length) {\n                outputLength = 0;\n              }\n\n              trackers[i].setEntryLocation(\"Private\", [privateDictData.length, outputLength], output);\n              output.add(privateDictData);\n\n              if (privateDict.subrsIndex && privateDict.hasName(\"Subrs\")) {\n                var subrs = this.compileIndex(privateDict.subrsIndex);\n                privateDictTracker.setEntryLocation(\"Subrs\", [privateDictData.length], output);\n                output.add(subrs);\n              }\n            }\n          }\n        }, {\n          key: \"compileDict\",\n          value: function compileDict(dict, offsetTracker) {\n            var out = [];\n            var order = dict.order;\n\n            for (var i = 0; i < order.length; ++i) {\n              var key = order[i];\n\n              if (!(key in dict.values)) {\n                continue;\n              }\n\n              var values = dict.values[key];\n              var types = dict.types[key];\n\n              if (!Array.isArray(types)) {\n                types = [types];\n              }\n\n              if (!Array.isArray(values)) {\n                values = [values];\n              }\n\n              if (values.length === 0) {\n                continue;\n              }\n\n              for (var j = 0, jj = types.length; j < jj; ++j) {\n                var type = types[j];\n                var value = values[j];\n\n                switch (type) {\n                  case \"num\":\n                  case \"sid\":\n                    out = out.concat(this.encodeNumber(value));\n                    break;\n\n                  case \"offset\":\n                    var name = dict.keyToNameMap[key];\n\n                    if (!offsetTracker.isTracking(name)) {\n                      offsetTracker.track(name, out.length);\n                    }\n\n                    out = out.concat([0x1d, 0, 0, 0, 0]);\n                    break;\n\n                  case \"array\":\n                  case \"delta\":\n                    out = out.concat(this.encodeNumber(value));\n\n                    for (var k = 1, kk = values.length; k < kk; ++k) {\n                      out = out.concat(this.encodeNumber(values[k]));\n                    }\n\n                    break;\n\n                  default:\n                    throw new _util.FormatError(\"Unknown data type of \".concat(type));\n                }\n              }\n\n              out = out.concat(dict.opcodes[key]);\n            }\n\n            return out;\n          }\n        }, {\n          key: \"compileStringIndex\",\n          value: function compileStringIndex(strings) {\n            var stringIndex = new CFFIndex();\n\n            for (var i = 0, ii = strings.length; i < ii; ++i) {\n              stringIndex.add((0, _util.stringToBytes)(strings[i]));\n            }\n\n            return this.compileIndex(stringIndex);\n          }\n        }, {\n          key: \"compileGlobalSubrIndex\",\n          value: function compileGlobalSubrIndex() {\n            var globalSubrIndex = this.cff.globalSubrIndex;\n            this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n          }\n        }, {\n          key: \"compileCharStrings\",\n          value: function compileCharStrings(charStrings) {\n            var charStringsIndex = new CFFIndex();\n\n            for (var i = 0; i < charStrings.count; i++) {\n              var glyph = charStrings.get(i);\n\n              if (glyph.length === 0) {\n                charStringsIndex.add(new Uint8Array([0x8b, 0x0e]));\n                continue;\n              }\n\n              charStringsIndex.add(glyph);\n            }\n\n            return this.compileIndex(charStringsIndex);\n          }\n        }, {\n          key: \"compileCharset\",\n          value: function compileCharset(charset, numGlyphs, strings, isCIDFont) {\n            var out;\n            var numGlyphsLessNotDef = numGlyphs - 1;\n\n            if (isCIDFont) {\n              out = new Uint8Array([2, 0, 0, numGlyphsLessNotDef >> 8 & 0xff, numGlyphsLessNotDef & 0xff]);\n            } else {\n              var length = 1 + numGlyphsLessNotDef * 2;\n              out = new Uint8Array(length);\n              out[0] = 0;\n              var charsetIndex = 0;\n              var numCharsets = charset.charset.length;\n              var warned = false;\n\n              for (var _i39 = 1; _i39 < out.length; _i39 += 2) {\n                var sid = 0;\n\n                if (charsetIndex < numCharsets) {\n                  var name = charset.charset[charsetIndex++];\n                  sid = strings.getSID(name);\n\n                  if (sid === -1) {\n                    sid = 0;\n\n                    if (!warned) {\n                      warned = true;\n                      (0, _util.warn)(\"Couldn't find \".concat(name, \" in CFF strings\"));\n                    }\n                  }\n                }\n\n                out[_i39] = sid >> 8 & 0xff;\n                out[_i39 + 1] = sid & 0xff;\n              }\n            }\n\n            return this.compileTypedArray(out);\n          }\n        }, {\n          key: \"compileEncoding\",\n          value: function compileEncoding(encoding) {\n            return this.compileTypedArray(encoding.raw);\n          }\n        }, {\n          key: \"compileFDSelect\",\n          value: function compileFDSelect(fdSelect) {\n            var format = fdSelect.format;\n            var out, i;\n\n            switch (format) {\n              case 0:\n                out = new Uint8Array(1 + fdSelect.fdSelect.length);\n                out[0] = format;\n\n                for (i = 0; i < fdSelect.fdSelect.length; i++) {\n                  out[i + 1] = fdSelect.fdSelect[i];\n                }\n\n                break;\n\n              case 3:\n                var start = 0;\n                var lastFD = fdSelect.fdSelect[0];\n                var ranges = [format, 0, 0, start >> 8 & 0xff, start & 0xff, lastFD];\n\n                for (i = 1; i < fdSelect.fdSelect.length; i++) {\n                  var currentFD = fdSelect.fdSelect[i];\n\n                  if (currentFD !== lastFD) {\n                    ranges.push(i >> 8 & 0xff, i & 0xff, currentFD);\n                    lastFD = currentFD;\n                  }\n                }\n\n                var numRanges = (ranges.length - 3) / 3;\n                ranges[1] = numRanges >> 8 & 0xff;\n                ranges[2] = numRanges & 0xff;\n                ranges.push(i >> 8 & 0xff, i & 0xff);\n                out = new Uint8Array(ranges);\n                break;\n            }\n\n            return this.compileTypedArray(out);\n          }\n        }, {\n          key: \"compileTypedArray\",\n          value: function compileTypedArray(data) {\n            var out = [];\n\n            for (var i = 0, ii = data.length; i < ii; ++i) {\n              out[i] = data[i];\n            }\n\n            return out;\n          }\n        }, {\n          key: \"compileIndex\",\n          value: function compileIndex(index) {\n            var trackers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            var objects = index.objects;\n            var count = objects.length;\n\n            if (count === 0) {\n              return [0, 0, 0];\n            }\n\n            var data = [count >> 8 & 0xff, count & 0xff];\n            var lastOffset = 1,\n                i;\n\n            for (i = 0; i < count; ++i) {\n              lastOffset += objects[i].length;\n            }\n\n            var offsetSize;\n\n            if (lastOffset < 0x100) {\n              offsetSize = 1;\n            } else if (lastOffset < 0x10000) {\n              offsetSize = 2;\n            } else if (lastOffset < 0x1000000) {\n              offsetSize = 3;\n            } else {\n              offsetSize = 4;\n            }\n\n            data.push(offsetSize);\n            var relativeOffset = 1;\n\n            for (i = 0; i < count + 1; i++) {\n              if (offsetSize === 1) {\n                data.push(relativeOffset & 0xff);\n              } else if (offsetSize === 2) {\n                data.push(relativeOffset >> 8 & 0xff, relativeOffset & 0xff);\n              } else if (offsetSize === 3) {\n                data.push(relativeOffset >> 16 & 0xff, relativeOffset >> 8 & 0xff, relativeOffset & 0xff);\n              } else {\n                data.push(relativeOffset >>> 24 & 0xff, relativeOffset >> 16 & 0xff, relativeOffset >> 8 & 0xff, relativeOffset & 0xff);\n              }\n\n              if (objects[i]) {\n                relativeOffset += objects[i].length;\n              }\n            }\n\n            for (i = 0; i < count; i++) {\n              if (trackers[i]) {\n                trackers[i].offset(data.length);\n              }\n\n              for (var j = 0, jj = objects[i].length; j < jj; j++) {\n                data.push(objects[i][j]);\n              }\n            }\n\n            return data;\n          }\n        }], [{\n          key: \"EncodeFloatRegExp\",\n          get: function get() {\n            return (0, _util.shadow)(this, \"EncodeFloatRegExp\", /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/);\n          }\n        }]);\n\n        return CFFCompiler;\n      }();\n\n      exports.CFFCompiler = CFFCompiler;\n      /***/\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.ExpertSubsetCharset = exports.ExpertCharset = exports.ISOAdobeCharset = void 0;\n      var ISOAdobeCharset = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\"];\n      exports.ISOAdobeCharset = ISOAdobeCharset;\n      var ExpertCharset = [\".notdef\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\n      exports.ExpertCharset = ExpertCharset;\n      var ExpertSubsetCharset = [\".notdef\", \"space\", \"dollaroldstyle\", \"dollarsuperior\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"hyphensuperior\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"centoldstyle\", \"figuredash\", \"hypheninferior\", \"onequarter\", \"onehalf\", \"threequarters\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\"];\n      exports.ExpertSubsetCharset = ExpertSubsetCharset;\n      /***/\n    },\n    /* 33 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getEncoding = getEncoding;\n      exports.ExpertEncoding = exports.ZapfDingbatsEncoding = exports.SymbolSetEncoding = exports.MacRomanEncoding = exports.StandardEncoding = exports.WinAnsiEncoding = void 0;\n      var ExpertEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"\", \"\", \"\", \"isuperior\", \"\", \"\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"\", \"\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"\", \"\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"\", \"Dotaccentsmall\", \"\", \"\", \"Macronsmall\", \"\", \"\", \"figuredash\", \"hypheninferior\", \"\", \"\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\n      exports.ExpertEncoding = ExpertEncoding;\n      var MacExpertEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"centoldstyle\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"\", \"threequartersemdash\", \"\", \"questionsmall\", \"\", \"\", \"\", \"\", \"Ethsmall\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"\", \"\", \"\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hypheninferior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"asuperior\", \"centsuperior\", \"\", \"\", \"\", \"\", \"Aacutesmall\", \"Agravesmall\", \"Acircumflexsmall\", \"Adieresissmall\", \"Atildesmall\", \"Aringsmall\", \"Ccedillasmall\", \"Eacutesmall\", \"Egravesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Iacutesmall\", \"Igravesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ntildesmall\", \"Oacutesmall\", \"Ogravesmall\", \"Ocircumflexsmall\", \"Odieresissmall\", \"Otildesmall\", \"Uacutesmall\", \"Ugravesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"\", \"eightsuperior\", \"fourinferior\", \"threeinferior\", \"sixinferior\", \"eightinferior\", \"seveninferior\", \"Scaronsmall\", \"\", \"centinferior\", \"twoinferior\", \"\", \"Dieresissmall\", \"\", \"Caronsmall\", \"osuperior\", \"fiveinferior\", \"\", \"commainferior\", \"periodinferior\", \"Yacutesmall\", \"\", \"dollarinferior\", \"\", \"\", \"Thornsmall\", \"\", \"nineinferior\", \"zeroinferior\", \"Zcaronsmall\", \"AEsmall\", \"Oslashsmall\", \"questiondownsmall\", \"oneinferior\", \"Lslashsmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"Cedillasmall\", \"\", \"\", \"\", \"\", \"\", \"OEsmall\", \"figuredash\", \"hyphensuperior\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"\", \"Ydieresissmall\", \"\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"ninesuperior\", \"zerosuperior\", \"\", \"esuperior\", \"rsuperior\", \"tsuperior\", \"\", \"\", \"isuperior\", \"ssuperior\", \"dsuperior\", \"\", \"\", \"\", \"\", \"\", \"lsuperior\", \"Ogoneksmall\", \"Brevesmall\", \"Macronsmall\", \"bsuperior\", \"nsuperior\", \"msuperior\", \"commasuperior\", \"periodsuperior\", \"Dotaccentsmall\", \"Ringsmall\", \"\", \"\", \"\", \"\"];\n      var MacRomanEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"space\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\"];\n      exports.MacRomanEncoding = MacRomanEncoding;\n      var StandardEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"\", \"questiondown\", \"\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"\", \"ring\", \"cedilla\", \"\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"AE\", \"\", \"ordfeminine\", \"\", \"\", \"\", \"\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"\", \"\", \"\", \"\", \"\", \"ae\", \"\", \"\", \"\", \"dotlessi\", \"\", \"\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"\", \"\", \"\", \"\"];\n      exports.StandardEncoding = StandardEncoding;\n      var WinAnsiEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"bullet\", \"Euro\", \"bullet\", \"quotesinglbase\", \"florin\", \"quotedblbase\", \"ellipsis\", \"dagger\", \"daggerdbl\", \"circumflex\", \"perthousand\", \"Scaron\", \"guilsinglleft\", \"OE\", \"bullet\", \"Zcaron\", \"bullet\", \"bullet\", \"quoteleft\", \"quoteright\", \"quotedblleft\", \"quotedblright\", \"bullet\", \"endash\", \"emdash\", \"tilde\", \"trademark\", \"scaron\", \"guilsinglright\", \"oe\", \"bullet\", \"zcaron\", \"Ydieresis\", \"space\", \"exclamdown\", \"cent\", \"sterling\", \"currency\", \"yen\", \"brokenbar\", \"section\", \"dieresis\", \"copyright\", \"ordfeminine\", \"guillemotleft\", \"logicalnot\", \"hyphen\", \"registered\", \"macron\", \"degree\", \"plusminus\", \"twosuperior\", \"threesuperior\", \"acute\", \"mu\", \"paragraph\", \"periodcentered\", \"cedilla\", \"onesuperior\", \"ordmasculine\", \"guillemotright\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondown\", \"Agrave\", \"Aacute\", \"Acircumflex\", \"Atilde\", \"Adieresis\", \"Aring\", \"AE\", \"Ccedilla\", \"Egrave\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Igrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Eth\", \"Ntilde\", \"Ograve\", \"Oacute\", \"Ocircumflex\", \"Otilde\", \"Odieresis\", \"multiply\", \"Oslash\", \"Ugrave\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Yacute\", \"Thorn\", \"germandbls\", \"agrave\", \"aacute\", \"acircumflex\", \"atilde\", \"adieresis\", \"aring\", \"ae\", \"ccedilla\", \"egrave\", \"eacute\", \"ecircumflex\", \"edieresis\", \"igrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"eth\", \"ntilde\", \"ograve\", \"oacute\", \"ocircumflex\", \"otilde\", \"odieresis\", \"divide\", \"oslash\", \"ugrave\", \"uacute\", \"ucircumflex\", \"udieresis\", \"yacute\", \"thorn\", \"ydieresis\"];\n      exports.WinAnsiEncoding = WinAnsiEncoding;\n      var SymbolSetEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"universal\", \"numbersign\", \"existential\", \"percent\", \"ampersand\", \"suchthat\", \"parenleft\", \"parenright\", \"asteriskmath\", \"plus\", \"comma\", \"minus\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"congruent\", \"Alpha\", \"Beta\", \"Chi\", \"Delta\", \"Epsilon\", \"Phi\", \"Gamma\", \"Eta\", \"Iota\", \"theta1\", \"Kappa\", \"Lambda\", \"Mu\", \"Nu\", \"Omicron\", \"Pi\", \"Theta\", \"Rho\", \"Sigma\", \"Tau\", \"Upsilon\", \"sigma1\", \"Omega\", \"Xi\", \"Psi\", \"Zeta\", \"bracketleft\", \"therefore\", \"bracketright\", \"perpendicular\", \"underscore\", \"radicalex\", \"alpha\", \"beta\", \"chi\", \"delta\", \"epsilon\", \"phi\", \"gamma\", \"eta\", \"iota\", \"phi1\", \"kappa\", \"lambda\", \"mu\", \"nu\", \"omicron\", \"pi\", \"theta\", \"rho\", \"sigma\", \"tau\", \"upsilon\", \"omega1\", \"omega\", \"xi\", \"psi\", \"zeta\", \"braceleft\", \"bar\", \"braceright\", \"similar\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Euro\", \"Upsilon1\", \"minute\", \"lessequal\", \"fraction\", \"infinity\", \"florin\", \"club\", \"diamond\", \"heart\", \"spade\", \"arrowboth\", \"arrowleft\", \"arrowup\", \"arrowright\", \"arrowdown\", \"degree\", \"plusminus\", \"second\", \"greaterequal\", \"multiply\", \"proportional\", \"partialdiff\", \"bullet\", \"divide\", \"notequal\", \"equivalence\", \"approxequal\", \"ellipsis\", \"arrowvertex\", \"arrowhorizex\", \"carriagereturn\", \"aleph\", \"Ifraktur\", \"Rfraktur\", \"weierstrass\", \"circlemultiply\", \"circleplus\", \"emptyset\", \"intersection\", \"union\", \"propersuperset\", \"reflexsuperset\", \"notsubset\", \"propersubset\", \"reflexsubset\", \"element\", \"notelement\", \"angle\", \"gradient\", \"registerserif\", \"copyrightserif\", \"trademarkserif\", \"product\", \"radical\", \"dotmath\", \"logicalnot\", \"logicaland\", \"logicalor\", \"arrowdblboth\", \"arrowdblleft\", \"arrowdblup\", \"arrowdblright\", \"arrowdbldown\", \"lozenge\", \"angleleft\", \"registersans\", \"copyrightsans\", \"trademarksans\", \"summation\", \"parenlefttp\", \"parenleftex\", \"parenleftbt\", \"bracketlefttp\", \"bracketleftex\", \"bracketleftbt\", \"bracelefttp\", \"braceleftmid\", \"braceleftbt\", \"braceex\", \"\", \"angleright\", \"integral\", \"integraltp\", \"integralex\", \"integralbt\", \"parenrighttp\", \"parenrightex\", \"parenrightbt\", \"bracketrighttp\", \"bracketrightex\", \"bracketrightbt\", \"bracerighttp\", \"bracerightmid\", \"bracerightbt\", \"\"];\n      exports.SymbolSetEncoding = SymbolSetEncoding;\n      var ZapfDingbatsEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"a1\", \"a2\", \"a202\", \"a3\", \"a4\", \"a5\", \"a119\", \"a118\", \"a117\", \"a11\", \"a12\", \"a13\", \"a14\", \"a15\", \"a16\", \"a105\", \"a17\", \"a18\", \"a19\", \"a20\", \"a21\", \"a22\", \"a23\", \"a24\", \"a25\", \"a26\", \"a27\", \"a28\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a29\", \"a30\", \"a31\", \"a32\", \"a33\", \"a34\", \"a35\", \"a36\", \"a37\", \"a38\", \"a39\", \"a40\", \"a41\", \"a42\", \"a43\", \"a44\", \"a45\", \"a46\", \"a47\", \"a48\", \"a49\", \"a50\", \"a51\", \"a52\", \"a53\", \"a54\", \"a55\", \"a56\", \"a57\", \"a58\", \"a59\", \"a60\", \"a61\", \"a62\", \"a63\", \"a64\", \"a65\", \"a66\", \"a67\", \"a68\", \"a69\", \"a70\", \"a71\", \"a72\", \"a73\", \"a74\", \"a203\", \"a75\", \"a204\", \"a76\", \"a77\", \"a78\", \"a79\", \"a81\", \"a82\", \"a83\", \"a84\", \"a97\", \"a98\", \"a99\", \"a100\", \"\", \"a89\", \"a90\", \"a93\", \"a94\", \"a91\", \"a92\", \"a205\", \"a85\", \"a206\", \"a86\", \"a87\", \"a88\", \"a95\", \"a96\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"a101\", \"a102\", \"a103\", \"a104\", \"a106\", \"a107\", \"a108\", \"a112\", \"a111\", \"a110\", \"a109\", \"a120\", \"a121\", \"a122\", \"a123\", \"a124\", \"a125\", \"a126\", \"a127\", \"a128\", \"a129\", \"a130\", \"a131\", \"a132\", \"a133\", \"a134\", \"a135\", \"a136\", \"a137\", \"a138\", \"a139\", \"a140\", \"a141\", \"a142\", \"a143\", \"a144\", \"a145\", \"a146\", \"a147\", \"a148\", \"a149\", \"a150\", \"a151\", \"a152\", \"a153\", \"a154\", \"a155\", \"a156\", \"a157\", \"a158\", \"a159\", \"a160\", \"a161\", \"a163\", \"a164\", \"a196\", \"a165\", \"a192\", \"a166\", \"a167\", \"a168\", \"a169\", \"a170\", \"a171\", \"a172\", \"a173\", \"a162\", \"a174\", \"a175\", \"a176\", \"a177\", \"a178\", \"a179\", \"a193\", \"a180\", \"a199\", \"a181\", \"a200\", \"a182\", \"\", \"a201\", \"a183\", \"a184\", \"a197\", \"a185\", \"a194\", \"a198\", \"a186\", \"a195\", \"a187\", \"a188\", \"a189\", \"a190\", \"a191\", \"\"];\n      exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\n      function getEncoding(encodingName) {\n        switch (encodingName) {\n          case \"WinAnsiEncoding\":\n            return WinAnsiEncoding;\n\n          case \"StandardEncoding\":\n            return StandardEncoding;\n\n          case \"MacRomanEncoding\":\n            return MacRomanEncoding;\n\n          case \"SymbolSetEncoding\":\n            return SymbolSetEncoding;\n\n          case \"ZapfDingbatsEncoding\":\n            return ZapfDingbatsEncoding;\n\n          case \"ExpertEncoding\":\n            return ExpertEncoding;\n\n          case \"MacExpertEncoding\":\n            return MacExpertEncoding;\n\n          default:\n            return null;\n        }\n      }\n      /***/\n\n    },\n    /* 34 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      var getLookupTableFactory = __w_pdfjs_require__(8).getLookupTableFactory;\n\n      var getGlyphsUnicode = getLookupTableFactory(function (t) {\n        t.A = 0x0041;\n        t.AE = 0x00c6;\n        t.AEacute = 0x01fc;\n        t.AEmacron = 0x01e2;\n        t.AEsmall = 0xf7e6;\n        t.Aacute = 0x00c1;\n        t.Aacutesmall = 0xf7e1;\n        t.Abreve = 0x0102;\n        t.Abreveacute = 0x1eae;\n        t.Abrevecyrillic = 0x04d0;\n        t.Abrevedotbelow = 0x1eb6;\n        t.Abrevegrave = 0x1eb0;\n        t.Abrevehookabove = 0x1eb2;\n        t.Abrevetilde = 0x1eb4;\n        t.Acaron = 0x01cd;\n        t.Acircle = 0x24b6;\n        t.Acircumflex = 0x00c2;\n        t.Acircumflexacute = 0x1ea4;\n        t.Acircumflexdotbelow = 0x1eac;\n        t.Acircumflexgrave = 0x1ea6;\n        t.Acircumflexhookabove = 0x1ea8;\n        t.Acircumflexsmall = 0xf7e2;\n        t.Acircumflextilde = 0x1eaa;\n        t.Acute = 0xf6c9;\n        t.Acutesmall = 0xf7b4;\n        t.Acyrillic = 0x0410;\n        t.Adblgrave = 0x0200;\n        t.Adieresis = 0x00c4;\n        t.Adieresiscyrillic = 0x04d2;\n        t.Adieresismacron = 0x01de;\n        t.Adieresissmall = 0xf7e4;\n        t.Adotbelow = 0x1ea0;\n        t.Adotmacron = 0x01e0;\n        t.Agrave = 0x00c0;\n        t.Agravesmall = 0xf7e0;\n        t.Ahookabove = 0x1ea2;\n        t.Aiecyrillic = 0x04d4;\n        t.Ainvertedbreve = 0x0202;\n        t.Alpha = 0x0391;\n        t.Alphatonos = 0x0386;\n        t.Amacron = 0x0100;\n        t.Amonospace = 0xff21;\n        t.Aogonek = 0x0104;\n        t.Aring = 0x00c5;\n        t.Aringacute = 0x01fa;\n        t.Aringbelow = 0x1e00;\n        t.Aringsmall = 0xf7e5;\n        t.Asmall = 0xf761;\n        t.Atilde = 0x00c3;\n        t.Atildesmall = 0xf7e3;\n        t.Aybarmenian = 0x0531;\n        t.B = 0x0042;\n        t.Bcircle = 0x24b7;\n        t.Bdotaccent = 0x1e02;\n        t.Bdotbelow = 0x1e04;\n        t.Becyrillic = 0x0411;\n        t.Benarmenian = 0x0532;\n        t.Beta = 0x0392;\n        t.Bhook = 0x0181;\n        t.Blinebelow = 0x1e06;\n        t.Bmonospace = 0xff22;\n        t.Brevesmall = 0xf6f4;\n        t.Bsmall = 0xf762;\n        t.Btopbar = 0x0182;\n        t.C = 0x0043;\n        t.Caarmenian = 0x053e;\n        t.Cacute = 0x0106;\n        t.Caron = 0xf6ca;\n        t.Caronsmall = 0xf6f5;\n        t.Ccaron = 0x010c;\n        t.Ccedilla = 0x00c7;\n        t.Ccedillaacute = 0x1e08;\n        t.Ccedillasmall = 0xf7e7;\n        t.Ccircle = 0x24b8;\n        t.Ccircumflex = 0x0108;\n        t.Cdot = 0x010a;\n        t.Cdotaccent = 0x010a;\n        t.Cedillasmall = 0xf7b8;\n        t.Chaarmenian = 0x0549;\n        t.Cheabkhasiancyrillic = 0x04bc;\n        t.Checyrillic = 0x0427;\n        t.Chedescenderabkhasiancyrillic = 0x04be;\n        t.Chedescendercyrillic = 0x04b6;\n        t.Chedieresiscyrillic = 0x04f4;\n        t.Cheharmenian = 0x0543;\n        t.Chekhakassiancyrillic = 0x04cb;\n        t.Cheverticalstrokecyrillic = 0x04b8;\n        t.Chi = 0x03a7;\n        t.Chook = 0x0187;\n        t.Circumflexsmall = 0xf6f6;\n        t.Cmonospace = 0xff23;\n        t.Coarmenian = 0x0551;\n        t.Csmall = 0xf763;\n        t.D = 0x0044;\n        t.DZ = 0x01f1;\n        t.DZcaron = 0x01c4;\n        t.Daarmenian = 0x0534;\n        t.Dafrican = 0x0189;\n        t.Dcaron = 0x010e;\n        t.Dcedilla = 0x1e10;\n        t.Dcircle = 0x24b9;\n        t.Dcircumflexbelow = 0x1e12;\n        t.Dcroat = 0x0110;\n        t.Ddotaccent = 0x1e0a;\n        t.Ddotbelow = 0x1e0c;\n        t.Decyrillic = 0x0414;\n        t.Deicoptic = 0x03ee;\n        t.Delta = 0x2206;\n        t.Deltagreek = 0x0394;\n        t.Dhook = 0x018a;\n        t.Dieresis = 0xf6cb;\n        t.DieresisAcute = 0xf6cc;\n        t.DieresisGrave = 0xf6cd;\n        t.Dieresissmall = 0xf7a8;\n        t.Digammagreek = 0x03dc;\n        t.Djecyrillic = 0x0402;\n        t.Dlinebelow = 0x1e0e;\n        t.Dmonospace = 0xff24;\n        t.Dotaccentsmall = 0xf6f7;\n        t.Dslash = 0x0110;\n        t.Dsmall = 0xf764;\n        t.Dtopbar = 0x018b;\n        t.Dz = 0x01f2;\n        t.Dzcaron = 0x01c5;\n        t.Dzeabkhasiancyrillic = 0x04e0;\n        t.Dzecyrillic = 0x0405;\n        t.Dzhecyrillic = 0x040f;\n        t.E = 0x0045;\n        t.Eacute = 0x00c9;\n        t.Eacutesmall = 0xf7e9;\n        t.Ebreve = 0x0114;\n        t.Ecaron = 0x011a;\n        t.Ecedillabreve = 0x1e1c;\n        t.Echarmenian = 0x0535;\n        t.Ecircle = 0x24ba;\n        t.Ecircumflex = 0x00ca;\n        t.Ecircumflexacute = 0x1ebe;\n        t.Ecircumflexbelow = 0x1e18;\n        t.Ecircumflexdotbelow = 0x1ec6;\n        t.Ecircumflexgrave = 0x1ec0;\n        t.Ecircumflexhookabove = 0x1ec2;\n        t.Ecircumflexsmall = 0xf7ea;\n        t.Ecircumflextilde = 0x1ec4;\n        t.Ecyrillic = 0x0404;\n        t.Edblgrave = 0x0204;\n        t.Edieresis = 0x00cb;\n        t.Edieresissmall = 0xf7eb;\n        t.Edot = 0x0116;\n        t.Edotaccent = 0x0116;\n        t.Edotbelow = 0x1eb8;\n        t.Efcyrillic = 0x0424;\n        t.Egrave = 0x00c8;\n        t.Egravesmall = 0xf7e8;\n        t.Eharmenian = 0x0537;\n        t.Ehookabove = 0x1eba;\n        t.Eightroman = 0x2167;\n        t.Einvertedbreve = 0x0206;\n        t.Eiotifiedcyrillic = 0x0464;\n        t.Elcyrillic = 0x041b;\n        t.Elevenroman = 0x216a;\n        t.Emacron = 0x0112;\n        t.Emacronacute = 0x1e16;\n        t.Emacrongrave = 0x1e14;\n        t.Emcyrillic = 0x041c;\n        t.Emonospace = 0xff25;\n        t.Encyrillic = 0x041d;\n        t.Endescendercyrillic = 0x04a2;\n        t.Eng = 0x014a;\n        t.Enghecyrillic = 0x04a4;\n        t.Enhookcyrillic = 0x04c7;\n        t.Eogonek = 0x0118;\n        t.Eopen = 0x0190;\n        t.Epsilon = 0x0395;\n        t.Epsilontonos = 0x0388;\n        t.Ercyrillic = 0x0420;\n        t.Ereversed = 0x018e;\n        t.Ereversedcyrillic = 0x042d;\n        t.Escyrillic = 0x0421;\n        t.Esdescendercyrillic = 0x04aa;\n        t.Esh = 0x01a9;\n        t.Esmall = 0xf765;\n        t.Eta = 0x0397;\n        t.Etarmenian = 0x0538;\n        t.Etatonos = 0x0389;\n        t.Eth = 0x00d0;\n        t.Ethsmall = 0xf7f0;\n        t.Etilde = 0x1ebc;\n        t.Etildebelow = 0x1e1a;\n        t.Euro = 0x20ac;\n        t.Ezh = 0x01b7;\n        t.Ezhcaron = 0x01ee;\n        t.Ezhreversed = 0x01b8;\n        t.F = 0x0046;\n        t.Fcircle = 0x24bb;\n        t.Fdotaccent = 0x1e1e;\n        t.Feharmenian = 0x0556;\n        t.Feicoptic = 0x03e4;\n        t.Fhook = 0x0191;\n        t.Fitacyrillic = 0x0472;\n        t.Fiveroman = 0x2164;\n        t.Fmonospace = 0xff26;\n        t.Fourroman = 0x2163;\n        t.Fsmall = 0xf766;\n        t.G = 0x0047;\n        t.GBsquare = 0x3387;\n        t.Gacute = 0x01f4;\n        t.Gamma = 0x0393;\n        t.Gammaafrican = 0x0194;\n        t.Gangiacoptic = 0x03ea;\n        t.Gbreve = 0x011e;\n        t.Gcaron = 0x01e6;\n        t.Gcedilla = 0x0122;\n        t.Gcircle = 0x24bc;\n        t.Gcircumflex = 0x011c;\n        t.Gcommaaccent = 0x0122;\n        t.Gdot = 0x0120;\n        t.Gdotaccent = 0x0120;\n        t.Gecyrillic = 0x0413;\n        t.Ghadarmenian = 0x0542;\n        t.Ghemiddlehookcyrillic = 0x0494;\n        t.Ghestrokecyrillic = 0x0492;\n        t.Gheupturncyrillic = 0x0490;\n        t.Ghook = 0x0193;\n        t.Gimarmenian = 0x0533;\n        t.Gjecyrillic = 0x0403;\n        t.Gmacron = 0x1e20;\n        t.Gmonospace = 0xff27;\n        t.Grave = 0xf6ce;\n        t.Gravesmall = 0xf760;\n        t.Gsmall = 0xf767;\n        t.Gsmallhook = 0x029b;\n        t.Gstroke = 0x01e4;\n        t.H = 0x0048;\n        t.H18533 = 0x25cf;\n        t.H18543 = 0x25aa;\n        t.H18551 = 0x25ab;\n        t.H22073 = 0x25a1;\n        t.HPsquare = 0x33cb;\n        t.Haabkhasiancyrillic = 0x04a8;\n        t.Hadescendercyrillic = 0x04b2;\n        t.Hardsigncyrillic = 0x042a;\n        t.Hbar = 0x0126;\n        t.Hbrevebelow = 0x1e2a;\n        t.Hcedilla = 0x1e28;\n        t.Hcircle = 0x24bd;\n        t.Hcircumflex = 0x0124;\n        t.Hdieresis = 0x1e26;\n        t.Hdotaccent = 0x1e22;\n        t.Hdotbelow = 0x1e24;\n        t.Hmonospace = 0xff28;\n        t.Hoarmenian = 0x0540;\n        t.Horicoptic = 0x03e8;\n        t.Hsmall = 0xf768;\n        t.Hungarumlaut = 0xf6cf;\n        t.Hungarumlautsmall = 0xf6f8;\n        t.Hzsquare = 0x3390;\n        t.I = 0x0049;\n        t.IAcyrillic = 0x042f;\n        t.IJ = 0x0132;\n        t.IUcyrillic = 0x042e;\n        t.Iacute = 0x00cd;\n        t.Iacutesmall = 0xf7ed;\n        t.Ibreve = 0x012c;\n        t.Icaron = 0x01cf;\n        t.Icircle = 0x24be;\n        t.Icircumflex = 0x00ce;\n        t.Icircumflexsmall = 0xf7ee;\n        t.Icyrillic = 0x0406;\n        t.Idblgrave = 0x0208;\n        t.Idieresis = 0x00cf;\n        t.Idieresisacute = 0x1e2e;\n        t.Idieresiscyrillic = 0x04e4;\n        t.Idieresissmall = 0xf7ef;\n        t.Idot = 0x0130;\n        t.Idotaccent = 0x0130;\n        t.Idotbelow = 0x1eca;\n        t.Iebrevecyrillic = 0x04d6;\n        t.Iecyrillic = 0x0415;\n        t.Ifraktur = 0x2111;\n        t.Igrave = 0x00cc;\n        t.Igravesmall = 0xf7ec;\n        t.Ihookabove = 0x1ec8;\n        t.Iicyrillic = 0x0418;\n        t.Iinvertedbreve = 0x020a;\n        t.Iishortcyrillic = 0x0419;\n        t.Imacron = 0x012a;\n        t.Imacroncyrillic = 0x04e2;\n        t.Imonospace = 0xff29;\n        t.Iniarmenian = 0x053b;\n        t.Iocyrillic = 0x0401;\n        t.Iogonek = 0x012e;\n        t.Iota = 0x0399;\n        t.Iotaafrican = 0x0196;\n        t.Iotadieresis = 0x03aa;\n        t.Iotatonos = 0x038a;\n        t.Ismall = 0xf769;\n        t.Istroke = 0x0197;\n        t.Itilde = 0x0128;\n        t.Itildebelow = 0x1e2c;\n        t.Izhitsacyrillic = 0x0474;\n        t.Izhitsadblgravecyrillic = 0x0476;\n        t.J = 0x004a;\n        t.Jaarmenian = 0x0541;\n        t.Jcircle = 0x24bf;\n        t.Jcircumflex = 0x0134;\n        t.Jecyrillic = 0x0408;\n        t.Jheharmenian = 0x054b;\n        t.Jmonospace = 0xff2a;\n        t.Jsmall = 0xf76a;\n        t.K = 0x004b;\n        t.KBsquare = 0x3385;\n        t.KKsquare = 0x33cd;\n        t.Kabashkircyrillic = 0x04a0;\n        t.Kacute = 0x1e30;\n        t.Kacyrillic = 0x041a;\n        t.Kadescendercyrillic = 0x049a;\n        t.Kahookcyrillic = 0x04c3;\n        t.Kappa = 0x039a;\n        t.Kastrokecyrillic = 0x049e;\n        t.Kaverticalstrokecyrillic = 0x049c;\n        t.Kcaron = 0x01e8;\n        t.Kcedilla = 0x0136;\n        t.Kcircle = 0x24c0;\n        t.Kcommaaccent = 0x0136;\n        t.Kdotbelow = 0x1e32;\n        t.Keharmenian = 0x0554;\n        t.Kenarmenian = 0x053f;\n        t.Khacyrillic = 0x0425;\n        t.Kheicoptic = 0x03e6;\n        t.Khook = 0x0198;\n        t.Kjecyrillic = 0x040c;\n        t.Klinebelow = 0x1e34;\n        t.Kmonospace = 0xff2b;\n        t.Koppacyrillic = 0x0480;\n        t.Koppagreek = 0x03de;\n        t.Ksicyrillic = 0x046e;\n        t.Ksmall = 0xf76b;\n        t.L = 0x004c;\n        t.LJ = 0x01c7;\n        t.LL = 0xf6bf;\n        t.Lacute = 0x0139;\n        t.Lambda = 0x039b;\n        t.Lcaron = 0x013d;\n        t.Lcedilla = 0x013b;\n        t.Lcircle = 0x24c1;\n        t.Lcircumflexbelow = 0x1e3c;\n        t.Lcommaaccent = 0x013b;\n        t.Ldot = 0x013f;\n        t.Ldotaccent = 0x013f;\n        t.Ldotbelow = 0x1e36;\n        t.Ldotbelowmacron = 0x1e38;\n        t.Liwnarmenian = 0x053c;\n        t.Lj = 0x01c8;\n        t.Ljecyrillic = 0x0409;\n        t.Llinebelow = 0x1e3a;\n        t.Lmonospace = 0xff2c;\n        t.Lslash = 0x0141;\n        t.Lslashsmall = 0xf6f9;\n        t.Lsmall = 0xf76c;\n        t.M = 0x004d;\n        t.MBsquare = 0x3386;\n        t.Macron = 0xf6d0;\n        t.Macronsmall = 0xf7af;\n        t.Macute = 0x1e3e;\n        t.Mcircle = 0x24c2;\n        t.Mdotaccent = 0x1e40;\n        t.Mdotbelow = 0x1e42;\n        t.Menarmenian = 0x0544;\n        t.Mmonospace = 0xff2d;\n        t.Msmall = 0xf76d;\n        t.Mturned = 0x019c;\n        t.Mu = 0x039c;\n        t.N = 0x004e;\n        t.NJ = 0x01ca;\n        t.Nacute = 0x0143;\n        t.Ncaron = 0x0147;\n        t.Ncedilla = 0x0145;\n        t.Ncircle = 0x24c3;\n        t.Ncircumflexbelow = 0x1e4a;\n        t.Ncommaaccent = 0x0145;\n        t.Ndotaccent = 0x1e44;\n        t.Ndotbelow = 0x1e46;\n        t.Nhookleft = 0x019d;\n        t.Nineroman = 0x2168;\n        t.Nj = 0x01cb;\n        t.Njecyrillic = 0x040a;\n        t.Nlinebelow = 0x1e48;\n        t.Nmonospace = 0xff2e;\n        t.Nowarmenian = 0x0546;\n        t.Nsmall = 0xf76e;\n        t.Ntilde = 0x00d1;\n        t.Ntildesmall = 0xf7f1;\n        t.Nu = 0x039d;\n        t.O = 0x004f;\n        t.OE = 0x0152;\n        t.OEsmall = 0xf6fa;\n        t.Oacute = 0x00d3;\n        t.Oacutesmall = 0xf7f3;\n        t.Obarredcyrillic = 0x04e8;\n        t.Obarreddieresiscyrillic = 0x04ea;\n        t.Obreve = 0x014e;\n        t.Ocaron = 0x01d1;\n        t.Ocenteredtilde = 0x019f;\n        t.Ocircle = 0x24c4;\n        t.Ocircumflex = 0x00d4;\n        t.Ocircumflexacute = 0x1ed0;\n        t.Ocircumflexdotbelow = 0x1ed8;\n        t.Ocircumflexgrave = 0x1ed2;\n        t.Ocircumflexhookabove = 0x1ed4;\n        t.Ocircumflexsmall = 0xf7f4;\n        t.Ocircumflextilde = 0x1ed6;\n        t.Ocyrillic = 0x041e;\n        t.Odblacute = 0x0150;\n        t.Odblgrave = 0x020c;\n        t.Odieresis = 0x00d6;\n        t.Odieresiscyrillic = 0x04e6;\n        t.Odieresissmall = 0xf7f6;\n        t.Odotbelow = 0x1ecc;\n        t.Ogoneksmall = 0xf6fb;\n        t.Ograve = 0x00d2;\n        t.Ogravesmall = 0xf7f2;\n        t.Oharmenian = 0x0555;\n        t.Ohm = 0x2126;\n        t.Ohookabove = 0x1ece;\n        t.Ohorn = 0x01a0;\n        t.Ohornacute = 0x1eda;\n        t.Ohorndotbelow = 0x1ee2;\n        t.Ohorngrave = 0x1edc;\n        t.Ohornhookabove = 0x1ede;\n        t.Ohorntilde = 0x1ee0;\n        t.Ohungarumlaut = 0x0150;\n        t.Oi = 0x01a2;\n        t.Oinvertedbreve = 0x020e;\n        t.Omacron = 0x014c;\n        t.Omacronacute = 0x1e52;\n        t.Omacrongrave = 0x1e50;\n        t.Omega = 0x2126;\n        t.Omegacyrillic = 0x0460;\n        t.Omegagreek = 0x03a9;\n        t.Omegaroundcyrillic = 0x047a;\n        t.Omegatitlocyrillic = 0x047c;\n        t.Omegatonos = 0x038f;\n        t.Omicron = 0x039f;\n        t.Omicrontonos = 0x038c;\n        t.Omonospace = 0xff2f;\n        t.Oneroman = 0x2160;\n        t.Oogonek = 0x01ea;\n        t.Oogonekmacron = 0x01ec;\n        t.Oopen = 0x0186;\n        t.Oslash = 0x00d8;\n        t.Oslashacute = 0x01fe;\n        t.Oslashsmall = 0xf7f8;\n        t.Osmall = 0xf76f;\n        t.Ostrokeacute = 0x01fe;\n        t.Otcyrillic = 0x047e;\n        t.Otilde = 0x00d5;\n        t.Otildeacute = 0x1e4c;\n        t.Otildedieresis = 0x1e4e;\n        t.Otildesmall = 0xf7f5;\n        t.P = 0x0050;\n        t.Pacute = 0x1e54;\n        t.Pcircle = 0x24c5;\n        t.Pdotaccent = 0x1e56;\n        t.Pecyrillic = 0x041f;\n        t.Peharmenian = 0x054a;\n        t.Pemiddlehookcyrillic = 0x04a6;\n        t.Phi = 0x03a6;\n        t.Phook = 0x01a4;\n        t.Pi = 0x03a0;\n        t.Piwrarmenian = 0x0553;\n        t.Pmonospace = 0xff30;\n        t.Psi = 0x03a8;\n        t.Psicyrillic = 0x0470;\n        t.Psmall = 0xf770;\n        t.Q = 0x0051;\n        t.Qcircle = 0x24c6;\n        t.Qmonospace = 0xff31;\n        t.Qsmall = 0xf771;\n        t.R = 0x0052;\n        t.Raarmenian = 0x054c;\n        t.Racute = 0x0154;\n        t.Rcaron = 0x0158;\n        t.Rcedilla = 0x0156;\n        t.Rcircle = 0x24c7;\n        t.Rcommaaccent = 0x0156;\n        t.Rdblgrave = 0x0210;\n        t.Rdotaccent = 0x1e58;\n        t.Rdotbelow = 0x1e5a;\n        t.Rdotbelowmacron = 0x1e5c;\n        t.Reharmenian = 0x0550;\n        t.Rfraktur = 0x211c;\n        t.Rho = 0x03a1;\n        t.Ringsmall = 0xf6fc;\n        t.Rinvertedbreve = 0x0212;\n        t.Rlinebelow = 0x1e5e;\n        t.Rmonospace = 0xff32;\n        t.Rsmall = 0xf772;\n        t.Rsmallinverted = 0x0281;\n        t.Rsmallinvertedsuperior = 0x02b6;\n        t.S = 0x0053;\n        t.SF010000 = 0x250c;\n        t.SF020000 = 0x2514;\n        t.SF030000 = 0x2510;\n        t.SF040000 = 0x2518;\n        t.SF050000 = 0x253c;\n        t.SF060000 = 0x252c;\n        t.SF070000 = 0x2534;\n        t.SF080000 = 0x251c;\n        t.SF090000 = 0x2524;\n        t.SF100000 = 0x2500;\n        t.SF110000 = 0x2502;\n        t.SF190000 = 0x2561;\n        t.SF200000 = 0x2562;\n        t.SF210000 = 0x2556;\n        t.SF220000 = 0x2555;\n        t.SF230000 = 0x2563;\n        t.SF240000 = 0x2551;\n        t.SF250000 = 0x2557;\n        t.SF260000 = 0x255d;\n        t.SF270000 = 0x255c;\n        t.SF280000 = 0x255b;\n        t.SF360000 = 0x255e;\n        t.SF370000 = 0x255f;\n        t.SF380000 = 0x255a;\n        t.SF390000 = 0x2554;\n        t.SF400000 = 0x2569;\n        t.SF410000 = 0x2566;\n        t.SF420000 = 0x2560;\n        t.SF430000 = 0x2550;\n        t.SF440000 = 0x256c;\n        t.SF450000 = 0x2567;\n        t.SF460000 = 0x2568;\n        t.SF470000 = 0x2564;\n        t.SF480000 = 0x2565;\n        t.SF490000 = 0x2559;\n        t.SF500000 = 0x2558;\n        t.SF510000 = 0x2552;\n        t.SF520000 = 0x2553;\n        t.SF530000 = 0x256b;\n        t.SF540000 = 0x256a;\n        t.Sacute = 0x015a;\n        t.Sacutedotaccent = 0x1e64;\n        t.Sampigreek = 0x03e0;\n        t.Scaron = 0x0160;\n        t.Scarondotaccent = 0x1e66;\n        t.Scaronsmall = 0xf6fd;\n        t.Scedilla = 0x015e;\n        t.Schwa = 0x018f;\n        t.Schwacyrillic = 0x04d8;\n        t.Schwadieresiscyrillic = 0x04da;\n        t.Scircle = 0x24c8;\n        t.Scircumflex = 0x015c;\n        t.Scommaaccent = 0x0218;\n        t.Sdotaccent = 0x1e60;\n        t.Sdotbelow = 0x1e62;\n        t.Sdotbelowdotaccent = 0x1e68;\n        t.Seharmenian = 0x054d;\n        t.Sevenroman = 0x2166;\n        t.Shaarmenian = 0x0547;\n        t.Shacyrillic = 0x0428;\n        t.Shchacyrillic = 0x0429;\n        t.Sheicoptic = 0x03e2;\n        t.Shhacyrillic = 0x04ba;\n        t.Shimacoptic = 0x03ec;\n        t.Sigma = 0x03a3;\n        t.Sixroman = 0x2165;\n        t.Smonospace = 0xff33;\n        t.Softsigncyrillic = 0x042c;\n        t.Ssmall = 0xf773;\n        t.Stigmagreek = 0x03da;\n        t.T = 0x0054;\n        t.Tau = 0x03a4;\n        t.Tbar = 0x0166;\n        t.Tcaron = 0x0164;\n        t.Tcedilla = 0x0162;\n        t.Tcircle = 0x24c9;\n        t.Tcircumflexbelow = 0x1e70;\n        t.Tcommaaccent = 0x0162;\n        t.Tdotaccent = 0x1e6a;\n        t.Tdotbelow = 0x1e6c;\n        t.Tecyrillic = 0x0422;\n        t.Tedescendercyrillic = 0x04ac;\n        t.Tenroman = 0x2169;\n        t.Tetsecyrillic = 0x04b4;\n        t.Theta = 0x0398;\n        t.Thook = 0x01ac;\n        t.Thorn = 0x00de;\n        t.Thornsmall = 0xf7fe;\n        t.Threeroman = 0x2162;\n        t.Tildesmall = 0xf6fe;\n        t.Tiwnarmenian = 0x054f;\n        t.Tlinebelow = 0x1e6e;\n        t.Tmonospace = 0xff34;\n        t.Toarmenian = 0x0539;\n        t.Tonefive = 0x01bc;\n        t.Tonesix = 0x0184;\n        t.Tonetwo = 0x01a7;\n        t.Tretroflexhook = 0x01ae;\n        t.Tsecyrillic = 0x0426;\n        t.Tshecyrillic = 0x040b;\n        t.Tsmall = 0xf774;\n        t.Twelveroman = 0x216b;\n        t.Tworoman = 0x2161;\n        t.U = 0x0055;\n        t.Uacute = 0x00da;\n        t.Uacutesmall = 0xf7fa;\n        t.Ubreve = 0x016c;\n        t.Ucaron = 0x01d3;\n        t.Ucircle = 0x24ca;\n        t.Ucircumflex = 0x00db;\n        t.Ucircumflexbelow = 0x1e76;\n        t.Ucircumflexsmall = 0xf7fb;\n        t.Ucyrillic = 0x0423;\n        t.Udblacute = 0x0170;\n        t.Udblgrave = 0x0214;\n        t.Udieresis = 0x00dc;\n        t.Udieresisacute = 0x01d7;\n        t.Udieresisbelow = 0x1e72;\n        t.Udieresiscaron = 0x01d9;\n        t.Udieresiscyrillic = 0x04f0;\n        t.Udieresisgrave = 0x01db;\n        t.Udieresismacron = 0x01d5;\n        t.Udieresissmall = 0xf7fc;\n        t.Udotbelow = 0x1ee4;\n        t.Ugrave = 0x00d9;\n        t.Ugravesmall = 0xf7f9;\n        t.Uhookabove = 0x1ee6;\n        t.Uhorn = 0x01af;\n        t.Uhornacute = 0x1ee8;\n        t.Uhorndotbelow = 0x1ef0;\n        t.Uhorngrave = 0x1eea;\n        t.Uhornhookabove = 0x1eec;\n        t.Uhorntilde = 0x1eee;\n        t.Uhungarumlaut = 0x0170;\n        t.Uhungarumlautcyrillic = 0x04f2;\n        t.Uinvertedbreve = 0x0216;\n        t.Ukcyrillic = 0x0478;\n        t.Umacron = 0x016a;\n        t.Umacroncyrillic = 0x04ee;\n        t.Umacrondieresis = 0x1e7a;\n        t.Umonospace = 0xff35;\n        t.Uogonek = 0x0172;\n        t.Upsilon = 0x03a5;\n        t.Upsilon1 = 0x03d2;\n        t.Upsilonacutehooksymbolgreek = 0x03d3;\n        t.Upsilonafrican = 0x01b1;\n        t.Upsilondieresis = 0x03ab;\n        t.Upsilondieresishooksymbolgreek = 0x03d4;\n        t.Upsilonhooksymbol = 0x03d2;\n        t.Upsilontonos = 0x038e;\n        t.Uring = 0x016e;\n        t.Ushortcyrillic = 0x040e;\n        t.Usmall = 0xf775;\n        t.Ustraightcyrillic = 0x04ae;\n        t.Ustraightstrokecyrillic = 0x04b0;\n        t.Utilde = 0x0168;\n        t.Utildeacute = 0x1e78;\n        t.Utildebelow = 0x1e74;\n        t.V = 0x0056;\n        t.Vcircle = 0x24cb;\n        t.Vdotbelow = 0x1e7e;\n        t.Vecyrillic = 0x0412;\n        t.Vewarmenian = 0x054e;\n        t.Vhook = 0x01b2;\n        t.Vmonospace = 0xff36;\n        t.Voarmenian = 0x0548;\n        t.Vsmall = 0xf776;\n        t.Vtilde = 0x1e7c;\n        t.W = 0x0057;\n        t.Wacute = 0x1e82;\n        t.Wcircle = 0x24cc;\n        t.Wcircumflex = 0x0174;\n        t.Wdieresis = 0x1e84;\n        t.Wdotaccent = 0x1e86;\n        t.Wdotbelow = 0x1e88;\n        t.Wgrave = 0x1e80;\n        t.Wmonospace = 0xff37;\n        t.Wsmall = 0xf777;\n        t.X = 0x0058;\n        t.Xcircle = 0x24cd;\n        t.Xdieresis = 0x1e8c;\n        t.Xdotaccent = 0x1e8a;\n        t.Xeharmenian = 0x053d;\n        t.Xi = 0x039e;\n        t.Xmonospace = 0xff38;\n        t.Xsmall = 0xf778;\n        t.Y = 0x0059;\n        t.Yacute = 0x00dd;\n        t.Yacutesmall = 0xf7fd;\n        t.Yatcyrillic = 0x0462;\n        t.Ycircle = 0x24ce;\n        t.Ycircumflex = 0x0176;\n        t.Ydieresis = 0x0178;\n        t.Ydieresissmall = 0xf7ff;\n        t.Ydotaccent = 0x1e8e;\n        t.Ydotbelow = 0x1ef4;\n        t.Yericyrillic = 0x042b;\n        t.Yerudieresiscyrillic = 0x04f8;\n        t.Ygrave = 0x1ef2;\n        t.Yhook = 0x01b3;\n        t.Yhookabove = 0x1ef6;\n        t.Yiarmenian = 0x0545;\n        t.Yicyrillic = 0x0407;\n        t.Yiwnarmenian = 0x0552;\n        t.Ymonospace = 0xff39;\n        t.Ysmall = 0xf779;\n        t.Ytilde = 0x1ef8;\n        t.Yusbigcyrillic = 0x046a;\n        t.Yusbigiotifiedcyrillic = 0x046c;\n        t.Yuslittlecyrillic = 0x0466;\n        t.Yuslittleiotifiedcyrillic = 0x0468;\n        t.Z = 0x005a;\n        t.Zaarmenian = 0x0536;\n        t.Zacute = 0x0179;\n        t.Zcaron = 0x017d;\n        t.Zcaronsmall = 0xf6ff;\n        t.Zcircle = 0x24cf;\n        t.Zcircumflex = 0x1e90;\n        t.Zdot = 0x017b;\n        t.Zdotaccent = 0x017b;\n        t.Zdotbelow = 0x1e92;\n        t.Zecyrillic = 0x0417;\n        t.Zedescendercyrillic = 0x0498;\n        t.Zedieresiscyrillic = 0x04de;\n        t.Zeta = 0x0396;\n        t.Zhearmenian = 0x053a;\n        t.Zhebrevecyrillic = 0x04c1;\n        t.Zhecyrillic = 0x0416;\n        t.Zhedescendercyrillic = 0x0496;\n        t.Zhedieresiscyrillic = 0x04dc;\n        t.Zlinebelow = 0x1e94;\n        t.Zmonospace = 0xff3a;\n        t.Zsmall = 0xf77a;\n        t.Zstroke = 0x01b5;\n        t.a = 0x0061;\n        t.aabengali = 0x0986;\n        t.aacute = 0x00e1;\n        t.aadeva = 0x0906;\n        t.aagujarati = 0x0a86;\n        t.aagurmukhi = 0x0a06;\n        t.aamatragurmukhi = 0x0a3e;\n        t.aarusquare = 0x3303;\n        t.aavowelsignbengali = 0x09be;\n        t.aavowelsigndeva = 0x093e;\n        t.aavowelsigngujarati = 0x0abe;\n        t.abbreviationmarkarmenian = 0x055f;\n        t.abbreviationsigndeva = 0x0970;\n        t.abengali = 0x0985;\n        t.abopomofo = 0x311a;\n        t.abreve = 0x0103;\n        t.abreveacute = 0x1eaf;\n        t.abrevecyrillic = 0x04d1;\n        t.abrevedotbelow = 0x1eb7;\n        t.abrevegrave = 0x1eb1;\n        t.abrevehookabove = 0x1eb3;\n        t.abrevetilde = 0x1eb5;\n        t.acaron = 0x01ce;\n        t.acircle = 0x24d0;\n        t.acircumflex = 0x00e2;\n        t.acircumflexacute = 0x1ea5;\n        t.acircumflexdotbelow = 0x1ead;\n        t.acircumflexgrave = 0x1ea7;\n        t.acircumflexhookabove = 0x1ea9;\n        t.acircumflextilde = 0x1eab;\n        t.acute = 0x00b4;\n        t.acutebelowcmb = 0x0317;\n        t.acutecmb = 0x0301;\n        t.acutecomb = 0x0301;\n        t.acutedeva = 0x0954;\n        t.acutelowmod = 0x02cf;\n        t.acutetonecmb = 0x0341;\n        t.acyrillic = 0x0430;\n        t.adblgrave = 0x0201;\n        t.addakgurmukhi = 0x0a71;\n        t.adeva = 0x0905;\n        t.adieresis = 0x00e4;\n        t.adieresiscyrillic = 0x04d3;\n        t.adieresismacron = 0x01df;\n        t.adotbelow = 0x1ea1;\n        t.adotmacron = 0x01e1;\n        t.ae = 0x00e6;\n        t.aeacute = 0x01fd;\n        t.aekorean = 0x3150;\n        t.aemacron = 0x01e3;\n        t.afii00208 = 0x2015;\n        t.afii08941 = 0x20a4;\n        t.afii10017 = 0x0410;\n        t.afii10018 = 0x0411;\n        t.afii10019 = 0x0412;\n        t.afii10020 = 0x0413;\n        t.afii10021 = 0x0414;\n        t.afii10022 = 0x0415;\n        t.afii10023 = 0x0401;\n        t.afii10024 = 0x0416;\n        t.afii10025 = 0x0417;\n        t.afii10026 = 0x0418;\n        t.afii10027 = 0x0419;\n        t.afii10028 = 0x041a;\n        t.afii10029 = 0x041b;\n        t.afii10030 = 0x041c;\n        t.afii10031 = 0x041d;\n        t.afii10032 = 0x041e;\n        t.afii10033 = 0x041f;\n        t.afii10034 = 0x0420;\n        t.afii10035 = 0x0421;\n        t.afii10036 = 0x0422;\n        t.afii10037 = 0x0423;\n        t.afii10038 = 0x0424;\n        t.afii10039 = 0x0425;\n        t.afii10040 = 0x0426;\n        t.afii10041 = 0x0427;\n        t.afii10042 = 0x0428;\n        t.afii10043 = 0x0429;\n        t.afii10044 = 0x042a;\n        t.afii10045 = 0x042b;\n        t.afii10046 = 0x042c;\n        t.afii10047 = 0x042d;\n        t.afii10048 = 0x042e;\n        t.afii10049 = 0x042f;\n        t.afii10050 = 0x0490;\n        t.afii10051 = 0x0402;\n        t.afii10052 = 0x0403;\n        t.afii10053 = 0x0404;\n        t.afii10054 = 0x0405;\n        t.afii10055 = 0x0406;\n        t.afii10056 = 0x0407;\n        t.afii10057 = 0x0408;\n        t.afii10058 = 0x0409;\n        t.afii10059 = 0x040a;\n        t.afii10060 = 0x040b;\n        t.afii10061 = 0x040c;\n        t.afii10062 = 0x040e;\n        t.afii10063 = 0xf6c4;\n        t.afii10064 = 0xf6c5;\n        t.afii10065 = 0x0430;\n        t.afii10066 = 0x0431;\n        t.afii10067 = 0x0432;\n        t.afii10068 = 0x0433;\n        t.afii10069 = 0x0434;\n        t.afii10070 = 0x0435;\n        t.afii10071 = 0x0451;\n        t.afii10072 = 0x0436;\n        t.afii10073 = 0x0437;\n        t.afii10074 = 0x0438;\n        t.afii10075 = 0x0439;\n        t.afii10076 = 0x043a;\n        t.afii10077 = 0x043b;\n        t.afii10078 = 0x043c;\n        t.afii10079 = 0x043d;\n        t.afii10080 = 0x043e;\n        t.afii10081 = 0x043f;\n        t.afii10082 = 0x0440;\n        t.afii10083 = 0x0441;\n        t.afii10084 = 0x0442;\n        t.afii10085 = 0x0443;\n        t.afii10086 = 0x0444;\n        t.afii10087 = 0x0445;\n        t.afii10088 = 0x0446;\n        t.afii10089 = 0x0447;\n        t.afii10090 = 0x0448;\n        t.afii10091 = 0x0449;\n        t.afii10092 = 0x044a;\n        t.afii10093 = 0x044b;\n        t.afii10094 = 0x044c;\n        t.afii10095 = 0x044d;\n        t.afii10096 = 0x044e;\n        t.afii10097 = 0x044f;\n        t.afii10098 = 0x0491;\n        t.afii10099 = 0x0452;\n        t.afii10100 = 0x0453;\n        t.afii10101 = 0x0454;\n        t.afii10102 = 0x0455;\n        t.afii10103 = 0x0456;\n        t.afii10104 = 0x0457;\n        t.afii10105 = 0x0458;\n        t.afii10106 = 0x0459;\n        t.afii10107 = 0x045a;\n        t.afii10108 = 0x045b;\n        t.afii10109 = 0x045c;\n        t.afii10110 = 0x045e;\n        t.afii10145 = 0x040f;\n        t.afii10146 = 0x0462;\n        t.afii10147 = 0x0472;\n        t.afii10148 = 0x0474;\n        t.afii10192 = 0xf6c6;\n        t.afii10193 = 0x045f;\n        t.afii10194 = 0x0463;\n        t.afii10195 = 0x0473;\n        t.afii10196 = 0x0475;\n        t.afii10831 = 0xf6c7;\n        t.afii10832 = 0xf6c8;\n        t.afii10846 = 0x04d9;\n        t.afii299 = 0x200e;\n        t.afii300 = 0x200f;\n        t.afii301 = 0x200d;\n        t.afii57381 = 0x066a;\n        t.afii57388 = 0x060c;\n        t.afii57392 = 0x0660;\n        t.afii57393 = 0x0661;\n        t.afii57394 = 0x0662;\n        t.afii57395 = 0x0663;\n        t.afii57396 = 0x0664;\n        t.afii57397 = 0x0665;\n        t.afii57398 = 0x0666;\n        t.afii57399 = 0x0667;\n        t.afii57400 = 0x0668;\n        t.afii57401 = 0x0669;\n        t.afii57403 = 0x061b;\n        t.afii57407 = 0x061f;\n        t.afii57409 = 0x0621;\n        t.afii57410 = 0x0622;\n        t.afii57411 = 0x0623;\n        t.afii57412 = 0x0624;\n        t.afii57413 = 0x0625;\n        t.afii57414 = 0x0626;\n        t.afii57415 = 0x0627;\n        t.afii57416 = 0x0628;\n        t.afii57417 = 0x0629;\n        t.afii57418 = 0x062a;\n        t.afii57419 = 0x062b;\n        t.afii57420 = 0x062c;\n        t.afii57421 = 0x062d;\n        t.afii57422 = 0x062e;\n        t.afii57423 = 0x062f;\n        t.afii57424 = 0x0630;\n        t.afii57425 = 0x0631;\n        t.afii57426 = 0x0632;\n        t.afii57427 = 0x0633;\n        t.afii57428 = 0x0634;\n        t.afii57429 = 0x0635;\n        t.afii57430 = 0x0636;\n        t.afii57431 = 0x0637;\n        t.afii57432 = 0x0638;\n        t.afii57433 = 0x0639;\n        t.afii57434 = 0x063a;\n        t.afii57440 = 0x0640;\n        t.afii57441 = 0x0641;\n        t.afii57442 = 0x0642;\n        t.afii57443 = 0x0643;\n        t.afii57444 = 0x0644;\n        t.afii57445 = 0x0645;\n        t.afii57446 = 0x0646;\n        t.afii57448 = 0x0648;\n        t.afii57449 = 0x0649;\n        t.afii57450 = 0x064a;\n        t.afii57451 = 0x064b;\n        t.afii57452 = 0x064c;\n        t.afii57453 = 0x064d;\n        t.afii57454 = 0x064e;\n        t.afii57455 = 0x064f;\n        t.afii57456 = 0x0650;\n        t.afii57457 = 0x0651;\n        t.afii57458 = 0x0652;\n        t.afii57470 = 0x0647;\n        t.afii57505 = 0x06a4;\n        t.afii57506 = 0x067e;\n        t.afii57507 = 0x0686;\n        t.afii57508 = 0x0698;\n        t.afii57509 = 0x06af;\n        t.afii57511 = 0x0679;\n        t.afii57512 = 0x0688;\n        t.afii57513 = 0x0691;\n        t.afii57514 = 0x06ba;\n        t.afii57519 = 0x06d2;\n        t.afii57534 = 0x06d5;\n        t.afii57636 = 0x20aa;\n        t.afii57645 = 0x05be;\n        t.afii57658 = 0x05c3;\n        t.afii57664 = 0x05d0;\n        t.afii57665 = 0x05d1;\n        t.afii57666 = 0x05d2;\n        t.afii57667 = 0x05d3;\n        t.afii57668 = 0x05d4;\n        t.afii57669 = 0x05d5;\n        t.afii57670 = 0x05d6;\n        t.afii57671 = 0x05d7;\n        t.afii57672 = 0x05d8;\n        t.afii57673 = 0x05d9;\n        t.afii57674 = 0x05da;\n        t.afii57675 = 0x05db;\n        t.afii57676 = 0x05dc;\n        t.afii57677 = 0x05dd;\n        t.afii57678 = 0x05de;\n        t.afii57679 = 0x05df;\n        t.afii57680 = 0x05e0;\n        t.afii57681 = 0x05e1;\n        t.afii57682 = 0x05e2;\n        t.afii57683 = 0x05e3;\n        t.afii57684 = 0x05e4;\n        t.afii57685 = 0x05e5;\n        t.afii57686 = 0x05e6;\n        t.afii57687 = 0x05e7;\n        t.afii57688 = 0x05e8;\n        t.afii57689 = 0x05e9;\n        t.afii57690 = 0x05ea;\n        t.afii57694 = 0xfb2a;\n        t.afii57695 = 0xfb2b;\n        t.afii57700 = 0xfb4b;\n        t.afii57705 = 0xfb1f;\n        t.afii57716 = 0x05f0;\n        t.afii57717 = 0x05f1;\n        t.afii57718 = 0x05f2;\n        t.afii57723 = 0xfb35;\n        t.afii57793 = 0x05b4;\n        t.afii57794 = 0x05b5;\n        t.afii57795 = 0x05b6;\n        t.afii57796 = 0x05bb;\n        t.afii57797 = 0x05b8;\n        t.afii57798 = 0x05b7;\n        t.afii57799 = 0x05b0;\n        t.afii57800 = 0x05b2;\n        t.afii57801 = 0x05b1;\n        t.afii57802 = 0x05b3;\n        t.afii57803 = 0x05c2;\n        t.afii57804 = 0x05c1;\n        t.afii57806 = 0x05b9;\n        t.afii57807 = 0x05bc;\n        t.afii57839 = 0x05bd;\n        t.afii57841 = 0x05bf;\n        t.afii57842 = 0x05c0;\n        t.afii57929 = 0x02bc;\n        t.afii61248 = 0x2105;\n        t.afii61289 = 0x2113;\n        t.afii61352 = 0x2116;\n        t.afii61573 = 0x202c;\n        t.afii61574 = 0x202d;\n        t.afii61575 = 0x202e;\n        t.afii61664 = 0x200c;\n        t.afii63167 = 0x066d;\n        t.afii64937 = 0x02bd;\n        t.agrave = 0x00e0;\n        t.agujarati = 0x0a85;\n        t.agurmukhi = 0x0a05;\n        t.ahiragana = 0x3042;\n        t.ahookabove = 0x1ea3;\n        t.aibengali = 0x0990;\n        t.aibopomofo = 0x311e;\n        t.aideva = 0x0910;\n        t.aiecyrillic = 0x04d5;\n        t.aigujarati = 0x0a90;\n        t.aigurmukhi = 0x0a10;\n        t.aimatragurmukhi = 0x0a48;\n        t.ainarabic = 0x0639;\n        t.ainfinalarabic = 0xfeca;\n        t.aininitialarabic = 0xfecb;\n        t.ainmedialarabic = 0xfecc;\n        t.ainvertedbreve = 0x0203;\n        t.aivowelsignbengali = 0x09c8;\n        t.aivowelsigndeva = 0x0948;\n        t.aivowelsigngujarati = 0x0ac8;\n        t.akatakana = 0x30a2;\n        t.akatakanahalfwidth = 0xff71;\n        t.akorean = 0x314f;\n        t.alef = 0x05d0;\n        t.alefarabic = 0x0627;\n        t.alefdageshhebrew = 0xfb30;\n        t.aleffinalarabic = 0xfe8e;\n        t.alefhamzaabovearabic = 0x0623;\n        t.alefhamzaabovefinalarabic = 0xfe84;\n        t.alefhamzabelowarabic = 0x0625;\n        t.alefhamzabelowfinalarabic = 0xfe88;\n        t.alefhebrew = 0x05d0;\n        t.aleflamedhebrew = 0xfb4f;\n        t.alefmaddaabovearabic = 0x0622;\n        t.alefmaddaabovefinalarabic = 0xfe82;\n        t.alefmaksuraarabic = 0x0649;\n        t.alefmaksurafinalarabic = 0xfef0;\n        t.alefmaksurainitialarabic = 0xfef3;\n        t.alefmaksuramedialarabic = 0xfef4;\n        t.alefpatahhebrew = 0xfb2e;\n        t.alefqamatshebrew = 0xfb2f;\n        t.aleph = 0x2135;\n        t.allequal = 0x224c;\n        t.alpha = 0x03b1;\n        t.alphatonos = 0x03ac;\n        t.amacron = 0x0101;\n        t.amonospace = 0xff41;\n        t.ampersand = 0x0026;\n        t.ampersandmonospace = 0xff06;\n        t.ampersandsmall = 0xf726;\n        t.amsquare = 0x33c2;\n        t.anbopomofo = 0x3122;\n        t.angbopomofo = 0x3124;\n        t.angbracketleft = 0x3008;\n        t.angbracketright = 0x3009;\n        t.angkhankhuthai = 0x0e5a;\n        t.angle = 0x2220;\n        t.anglebracketleft = 0x3008;\n        t.anglebracketleftvertical = 0xfe3f;\n        t.anglebracketright = 0x3009;\n        t.anglebracketrightvertical = 0xfe40;\n        t.angleleft = 0x2329;\n        t.angleright = 0x232a;\n        t.angstrom = 0x212b;\n        t.anoteleia = 0x0387;\n        t.anudattadeva = 0x0952;\n        t.anusvarabengali = 0x0982;\n        t.anusvaradeva = 0x0902;\n        t.anusvaragujarati = 0x0a82;\n        t.aogonek = 0x0105;\n        t.apaatosquare = 0x3300;\n        t.aparen = 0x249c;\n        t.apostrophearmenian = 0x055a;\n        t.apostrophemod = 0x02bc;\n        t.apple = 0xf8ff;\n        t.approaches = 0x2250;\n        t.approxequal = 0x2248;\n        t.approxequalorimage = 0x2252;\n        t.approximatelyequal = 0x2245;\n        t.araeaekorean = 0x318e;\n        t.araeakorean = 0x318d;\n        t.arc = 0x2312;\n        t.arighthalfring = 0x1e9a;\n        t.aring = 0x00e5;\n        t.aringacute = 0x01fb;\n        t.aringbelow = 0x1e01;\n        t.arrowboth = 0x2194;\n        t.arrowdashdown = 0x21e3;\n        t.arrowdashleft = 0x21e0;\n        t.arrowdashright = 0x21e2;\n        t.arrowdashup = 0x21e1;\n        t.arrowdblboth = 0x21d4;\n        t.arrowdbldown = 0x21d3;\n        t.arrowdblleft = 0x21d0;\n        t.arrowdblright = 0x21d2;\n        t.arrowdblup = 0x21d1;\n        t.arrowdown = 0x2193;\n        t.arrowdownleft = 0x2199;\n        t.arrowdownright = 0x2198;\n        t.arrowdownwhite = 0x21e9;\n        t.arrowheaddownmod = 0x02c5;\n        t.arrowheadleftmod = 0x02c2;\n        t.arrowheadrightmod = 0x02c3;\n        t.arrowheadupmod = 0x02c4;\n        t.arrowhorizex = 0xf8e7;\n        t.arrowleft = 0x2190;\n        t.arrowleftdbl = 0x21d0;\n        t.arrowleftdblstroke = 0x21cd;\n        t.arrowleftoverright = 0x21c6;\n        t.arrowleftwhite = 0x21e6;\n        t.arrowright = 0x2192;\n        t.arrowrightdblstroke = 0x21cf;\n        t.arrowrightheavy = 0x279e;\n        t.arrowrightoverleft = 0x21c4;\n        t.arrowrightwhite = 0x21e8;\n        t.arrowtableft = 0x21e4;\n        t.arrowtabright = 0x21e5;\n        t.arrowup = 0x2191;\n        t.arrowupdn = 0x2195;\n        t.arrowupdnbse = 0x21a8;\n        t.arrowupdownbase = 0x21a8;\n        t.arrowupleft = 0x2196;\n        t.arrowupleftofdown = 0x21c5;\n        t.arrowupright = 0x2197;\n        t.arrowupwhite = 0x21e7;\n        t.arrowvertex = 0xf8e6;\n        t.asciicircum = 0x005e;\n        t.asciicircummonospace = 0xff3e;\n        t.asciitilde = 0x007e;\n        t.asciitildemonospace = 0xff5e;\n        t.ascript = 0x0251;\n        t.ascriptturned = 0x0252;\n        t.asmallhiragana = 0x3041;\n        t.asmallkatakana = 0x30a1;\n        t.asmallkatakanahalfwidth = 0xff67;\n        t.asterisk = 0x002a;\n        t.asteriskaltonearabic = 0x066d;\n        t.asteriskarabic = 0x066d;\n        t.asteriskmath = 0x2217;\n        t.asteriskmonospace = 0xff0a;\n        t.asterisksmall = 0xfe61;\n        t.asterism = 0x2042;\n        t.asuperior = 0xf6e9;\n        t.asymptoticallyequal = 0x2243;\n        t.at = 0x0040;\n        t.atilde = 0x00e3;\n        t.atmonospace = 0xff20;\n        t.atsmall = 0xfe6b;\n        t.aturned = 0x0250;\n        t.aubengali = 0x0994;\n        t.aubopomofo = 0x3120;\n        t.audeva = 0x0914;\n        t.augujarati = 0x0a94;\n        t.augurmukhi = 0x0a14;\n        t.aulengthmarkbengali = 0x09d7;\n        t.aumatragurmukhi = 0x0a4c;\n        t.auvowelsignbengali = 0x09cc;\n        t.auvowelsigndeva = 0x094c;\n        t.auvowelsigngujarati = 0x0acc;\n        t.avagrahadeva = 0x093d;\n        t.aybarmenian = 0x0561;\n        t.ayin = 0x05e2;\n        t.ayinaltonehebrew = 0xfb20;\n        t.ayinhebrew = 0x05e2;\n        t.b = 0x0062;\n        t.babengali = 0x09ac;\n        t.backslash = 0x005c;\n        t.backslashmonospace = 0xff3c;\n        t.badeva = 0x092c;\n        t.bagujarati = 0x0aac;\n        t.bagurmukhi = 0x0a2c;\n        t.bahiragana = 0x3070;\n        t.bahtthai = 0x0e3f;\n        t.bakatakana = 0x30d0;\n        t.bar = 0x007c;\n        t.barmonospace = 0xff5c;\n        t.bbopomofo = 0x3105;\n        t.bcircle = 0x24d1;\n        t.bdotaccent = 0x1e03;\n        t.bdotbelow = 0x1e05;\n        t.beamedsixteenthnotes = 0x266c;\n        t.because = 0x2235;\n        t.becyrillic = 0x0431;\n        t.beharabic = 0x0628;\n        t.behfinalarabic = 0xfe90;\n        t.behinitialarabic = 0xfe91;\n        t.behiragana = 0x3079;\n        t.behmedialarabic = 0xfe92;\n        t.behmeeminitialarabic = 0xfc9f;\n        t.behmeemisolatedarabic = 0xfc08;\n        t.behnoonfinalarabic = 0xfc6d;\n        t.bekatakana = 0x30d9;\n        t.benarmenian = 0x0562;\n        t.bet = 0x05d1;\n        t.beta = 0x03b2;\n        t.betasymbolgreek = 0x03d0;\n        t.betdagesh = 0xfb31;\n        t.betdageshhebrew = 0xfb31;\n        t.bethebrew = 0x05d1;\n        t.betrafehebrew = 0xfb4c;\n        t.bhabengali = 0x09ad;\n        t.bhadeva = 0x092d;\n        t.bhagujarati = 0x0aad;\n        t.bhagurmukhi = 0x0a2d;\n        t.bhook = 0x0253;\n        t.bihiragana = 0x3073;\n        t.bikatakana = 0x30d3;\n        t.bilabialclick = 0x0298;\n        t.bindigurmukhi = 0x0a02;\n        t.birusquare = 0x3331;\n        t.blackcircle = 0x25cf;\n        t.blackdiamond = 0x25c6;\n        t.blackdownpointingtriangle = 0x25bc;\n        t.blackleftpointingpointer = 0x25c4;\n        t.blackleftpointingtriangle = 0x25c0;\n        t.blacklenticularbracketleft = 0x3010;\n        t.blacklenticularbracketleftvertical = 0xfe3b;\n        t.blacklenticularbracketright = 0x3011;\n        t.blacklenticularbracketrightvertical = 0xfe3c;\n        t.blacklowerlefttriangle = 0x25e3;\n        t.blacklowerrighttriangle = 0x25e2;\n        t.blackrectangle = 0x25ac;\n        t.blackrightpointingpointer = 0x25ba;\n        t.blackrightpointingtriangle = 0x25b6;\n        t.blacksmallsquare = 0x25aa;\n        t.blacksmilingface = 0x263b;\n        t.blacksquare = 0x25a0;\n        t.blackstar = 0x2605;\n        t.blackupperlefttriangle = 0x25e4;\n        t.blackupperrighttriangle = 0x25e5;\n        t.blackuppointingsmalltriangle = 0x25b4;\n        t.blackuppointingtriangle = 0x25b2;\n        t.blank = 0x2423;\n        t.blinebelow = 0x1e07;\n        t.block = 0x2588;\n        t.bmonospace = 0xff42;\n        t.bobaimaithai = 0x0e1a;\n        t.bohiragana = 0x307c;\n        t.bokatakana = 0x30dc;\n        t.bparen = 0x249d;\n        t.bqsquare = 0x33c3;\n        t.braceex = 0xf8f4;\n        t.braceleft = 0x007b;\n        t.braceleftbt = 0xf8f3;\n        t.braceleftmid = 0xf8f2;\n        t.braceleftmonospace = 0xff5b;\n        t.braceleftsmall = 0xfe5b;\n        t.bracelefttp = 0xf8f1;\n        t.braceleftvertical = 0xfe37;\n        t.braceright = 0x007d;\n        t.bracerightbt = 0xf8fe;\n        t.bracerightmid = 0xf8fd;\n        t.bracerightmonospace = 0xff5d;\n        t.bracerightsmall = 0xfe5c;\n        t.bracerighttp = 0xf8fc;\n        t.bracerightvertical = 0xfe38;\n        t.bracketleft = 0x005b;\n        t.bracketleftbt = 0xf8f0;\n        t.bracketleftex = 0xf8ef;\n        t.bracketleftmonospace = 0xff3b;\n        t.bracketlefttp = 0xf8ee;\n        t.bracketright = 0x005d;\n        t.bracketrightbt = 0xf8fb;\n        t.bracketrightex = 0xf8fa;\n        t.bracketrightmonospace = 0xff3d;\n        t.bracketrighttp = 0xf8f9;\n        t.breve = 0x02d8;\n        t.brevebelowcmb = 0x032e;\n        t.brevecmb = 0x0306;\n        t.breveinvertedbelowcmb = 0x032f;\n        t.breveinvertedcmb = 0x0311;\n        t.breveinverteddoublecmb = 0x0361;\n        t.bridgebelowcmb = 0x032a;\n        t.bridgeinvertedbelowcmb = 0x033a;\n        t.brokenbar = 0x00a6;\n        t.bstroke = 0x0180;\n        t.bsuperior = 0xf6ea;\n        t.btopbar = 0x0183;\n        t.buhiragana = 0x3076;\n        t.bukatakana = 0x30d6;\n        t.bullet = 0x2022;\n        t.bulletinverse = 0x25d8;\n        t.bulletoperator = 0x2219;\n        t.bullseye = 0x25ce;\n        t.c = 0x0063;\n        t.caarmenian = 0x056e;\n        t.cabengali = 0x099a;\n        t.cacute = 0x0107;\n        t.cadeva = 0x091a;\n        t.cagujarati = 0x0a9a;\n        t.cagurmukhi = 0x0a1a;\n        t.calsquare = 0x3388;\n        t.candrabindubengali = 0x0981;\n        t.candrabinducmb = 0x0310;\n        t.candrabindudeva = 0x0901;\n        t.candrabindugujarati = 0x0a81;\n        t.capslock = 0x21ea;\n        t.careof = 0x2105;\n        t.caron = 0x02c7;\n        t.caronbelowcmb = 0x032c;\n        t.caroncmb = 0x030c;\n        t.carriagereturn = 0x21b5;\n        t.cbopomofo = 0x3118;\n        t.ccaron = 0x010d;\n        t.ccedilla = 0x00e7;\n        t.ccedillaacute = 0x1e09;\n        t.ccircle = 0x24d2;\n        t.ccircumflex = 0x0109;\n        t.ccurl = 0x0255;\n        t.cdot = 0x010b;\n        t.cdotaccent = 0x010b;\n        t.cdsquare = 0x33c5;\n        t.cedilla = 0x00b8;\n        t.cedillacmb = 0x0327;\n        t.cent = 0x00a2;\n        t.centigrade = 0x2103;\n        t.centinferior = 0xf6df;\n        t.centmonospace = 0xffe0;\n        t.centoldstyle = 0xf7a2;\n        t.centsuperior = 0xf6e0;\n        t.chaarmenian = 0x0579;\n        t.chabengali = 0x099b;\n        t.chadeva = 0x091b;\n        t.chagujarati = 0x0a9b;\n        t.chagurmukhi = 0x0a1b;\n        t.chbopomofo = 0x3114;\n        t.cheabkhasiancyrillic = 0x04bd;\n        t.checkmark = 0x2713;\n        t.checyrillic = 0x0447;\n        t.chedescenderabkhasiancyrillic = 0x04bf;\n        t.chedescendercyrillic = 0x04b7;\n        t.chedieresiscyrillic = 0x04f5;\n        t.cheharmenian = 0x0573;\n        t.chekhakassiancyrillic = 0x04cc;\n        t.cheverticalstrokecyrillic = 0x04b9;\n        t.chi = 0x03c7;\n        t.chieuchacirclekorean = 0x3277;\n        t.chieuchaparenkorean = 0x3217;\n        t.chieuchcirclekorean = 0x3269;\n        t.chieuchkorean = 0x314a;\n        t.chieuchparenkorean = 0x3209;\n        t.chochangthai = 0x0e0a;\n        t.chochanthai = 0x0e08;\n        t.chochingthai = 0x0e09;\n        t.chochoethai = 0x0e0c;\n        t.chook = 0x0188;\n        t.cieucacirclekorean = 0x3276;\n        t.cieucaparenkorean = 0x3216;\n        t.cieuccirclekorean = 0x3268;\n        t.cieuckorean = 0x3148;\n        t.cieucparenkorean = 0x3208;\n        t.cieucuparenkorean = 0x321c;\n        t.circle = 0x25cb;\n        t.circlecopyrt = 0x00a9;\n        t.circlemultiply = 0x2297;\n        t.circleot = 0x2299;\n        t.circleplus = 0x2295;\n        t.circlepostalmark = 0x3036;\n        t.circlewithlefthalfblack = 0x25d0;\n        t.circlewithrighthalfblack = 0x25d1;\n        t.circumflex = 0x02c6;\n        t.circumflexbelowcmb = 0x032d;\n        t.circumflexcmb = 0x0302;\n        t.clear = 0x2327;\n        t.clickalveolar = 0x01c2;\n        t.clickdental = 0x01c0;\n        t.clicklateral = 0x01c1;\n        t.clickretroflex = 0x01c3;\n        t.club = 0x2663;\n        t.clubsuitblack = 0x2663;\n        t.clubsuitwhite = 0x2667;\n        t.cmcubedsquare = 0x33a4;\n        t.cmonospace = 0xff43;\n        t.cmsquaredsquare = 0x33a0;\n        t.coarmenian = 0x0581;\n        t.colon = 0x003a;\n        t.colonmonetary = 0x20a1;\n        t.colonmonospace = 0xff1a;\n        t.colonsign = 0x20a1;\n        t.colonsmall = 0xfe55;\n        t.colontriangularhalfmod = 0x02d1;\n        t.colontriangularmod = 0x02d0;\n        t.comma = 0x002c;\n        t.commaabovecmb = 0x0313;\n        t.commaaboverightcmb = 0x0315;\n        t.commaaccent = 0xf6c3;\n        t.commaarabic = 0x060c;\n        t.commaarmenian = 0x055d;\n        t.commainferior = 0xf6e1;\n        t.commamonospace = 0xff0c;\n        t.commareversedabovecmb = 0x0314;\n        t.commareversedmod = 0x02bd;\n        t.commasmall = 0xfe50;\n        t.commasuperior = 0xf6e2;\n        t.commaturnedabovecmb = 0x0312;\n        t.commaturnedmod = 0x02bb;\n        t.compass = 0x263c;\n        t.congruent = 0x2245;\n        t.contourintegral = 0x222e;\n        t.control = 0x2303;\n        t.controlACK = 0x0006;\n        t.controlBEL = 0x0007;\n        t.controlBS = 0x0008;\n        t.controlCAN = 0x0018;\n        t.controlCR = 0x000d;\n        t.controlDC1 = 0x0011;\n        t.controlDC2 = 0x0012;\n        t.controlDC3 = 0x0013;\n        t.controlDC4 = 0x0014;\n        t.controlDEL = 0x007f;\n        t.controlDLE = 0x0010;\n        t.controlEM = 0x0019;\n        t.controlENQ = 0x0005;\n        t.controlEOT = 0x0004;\n        t.controlESC = 0x001b;\n        t.controlETB = 0x0017;\n        t.controlETX = 0x0003;\n        t.controlFF = 0x000c;\n        t.controlFS = 0x001c;\n        t.controlGS = 0x001d;\n        t.controlHT = 0x0009;\n        t.controlLF = 0x000a;\n        t.controlNAK = 0x0015;\n        t.controlNULL = 0x0000;\n        t.controlRS = 0x001e;\n        t.controlSI = 0x000f;\n        t.controlSO = 0x000e;\n        t.controlSOT = 0x0002;\n        t.controlSTX = 0x0001;\n        t.controlSUB = 0x001a;\n        t.controlSYN = 0x0016;\n        t.controlUS = 0x001f;\n        t.controlVT = 0x000b;\n        t.copyright = 0x00a9;\n        t.copyrightsans = 0xf8e9;\n        t.copyrightserif = 0xf6d9;\n        t.cornerbracketleft = 0x300c;\n        t.cornerbracketlefthalfwidth = 0xff62;\n        t.cornerbracketleftvertical = 0xfe41;\n        t.cornerbracketright = 0x300d;\n        t.cornerbracketrighthalfwidth = 0xff63;\n        t.cornerbracketrightvertical = 0xfe42;\n        t.corporationsquare = 0x337f;\n        t.cosquare = 0x33c7;\n        t.coverkgsquare = 0x33c6;\n        t.cparen = 0x249e;\n        t.cruzeiro = 0x20a2;\n        t.cstretched = 0x0297;\n        t.curlyand = 0x22cf;\n        t.curlyor = 0x22ce;\n        t.currency = 0x00a4;\n        t.cyrBreve = 0xf6d1;\n        t.cyrFlex = 0xf6d2;\n        t.cyrbreve = 0xf6d4;\n        t.cyrflex = 0xf6d5;\n        t.d = 0x0064;\n        t.daarmenian = 0x0564;\n        t.dabengali = 0x09a6;\n        t.dadarabic = 0x0636;\n        t.dadeva = 0x0926;\n        t.dadfinalarabic = 0xfebe;\n        t.dadinitialarabic = 0xfebf;\n        t.dadmedialarabic = 0xfec0;\n        t.dagesh = 0x05bc;\n        t.dageshhebrew = 0x05bc;\n        t.dagger = 0x2020;\n        t.daggerdbl = 0x2021;\n        t.dagujarati = 0x0aa6;\n        t.dagurmukhi = 0x0a26;\n        t.dahiragana = 0x3060;\n        t.dakatakana = 0x30c0;\n        t.dalarabic = 0x062f;\n        t.dalet = 0x05d3;\n        t.daletdagesh = 0xfb33;\n        t.daletdageshhebrew = 0xfb33;\n        t.dalethebrew = 0x05d3;\n        t.dalfinalarabic = 0xfeaa;\n        t.dammaarabic = 0x064f;\n        t.dammalowarabic = 0x064f;\n        t.dammatanaltonearabic = 0x064c;\n        t.dammatanarabic = 0x064c;\n        t.danda = 0x0964;\n        t.dargahebrew = 0x05a7;\n        t.dargalefthebrew = 0x05a7;\n        t.dasiapneumatacyrilliccmb = 0x0485;\n        t.dblGrave = 0xf6d3;\n        t.dblanglebracketleft = 0x300a;\n        t.dblanglebracketleftvertical = 0xfe3d;\n        t.dblanglebracketright = 0x300b;\n        t.dblanglebracketrightvertical = 0xfe3e;\n        t.dblarchinvertedbelowcmb = 0x032b;\n        t.dblarrowleft = 0x21d4;\n        t.dblarrowright = 0x21d2;\n        t.dbldanda = 0x0965;\n        t.dblgrave = 0xf6d6;\n        t.dblgravecmb = 0x030f;\n        t.dblintegral = 0x222c;\n        t.dbllowline = 0x2017;\n        t.dbllowlinecmb = 0x0333;\n        t.dbloverlinecmb = 0x033f;\n        t.dblprimemod = 0x02ba;\n        t.dblverticalbar = 0x2016;\n        t.dblverticallineabovecmb = 0x030e;\n        t.dbopomofo = 0x3109;\n        t.dbsquare = 0x33c8;\n        t.dcaron = 0x010f;\n        t.dcedilla = 0x1e11;\n        t.dcircle = 0x24d3;\n        t.dcircumflexbelow = 0x1e13;\n        t.dcroat = 0x0111;\n        t.ddabengali = 0x09a1;\n        t.ddadeva = 0x0921;\n        t.ddagujarati = 0x0aa1;\n        t.ddagurmukhi = 0x0a21;\n        t.ddalarabic = 0x0688;\n        t.ddalfinalarabic = 0xfb89;\n        t.dddhadeva = 0x095c;\n        t.ddhabengali = 0x09a2;\n        t.ddhadeva = 0x0922;\n        t.ddhagujarati = 0x0aa2;\n        t.ddhagurmukhi = 0x0a22;\n        t.ddotaccent = 0x1e0b;\n        t.ddotbelow = 0x1e0d;\n        t.decimalseparatorarabic = 0x066b;\n        t.decimalseparatorpersian = 0x066b;\n        t.decyrillic = 0x0434;\n        t.degree = 0x00b0;\n        t.dehihebrew = 0x05ad;\n        t.dehiragana = 0x3067;\n        t.deicoptic = 0x03ef;\n        t.dekatakana = 0x30c7;\n        t.deleteleft = 0x232b;\n        t.deleteright = 0x2326;\n        t.delta = 0x03b4;\n        t.deltaturned = 0x018d;\n        t.denominatorminusonenumeratorbengali = 0x09f8;\n        t.dezh = 0x02a4;\n        t.dhabengali = 0x09a7;\n        t.dhadeva = 0x0927;\n        t.dhagujarati = 0x0aa7;\n        t.dhagurmukhi = 0x0a27;\n        t.dhook = 0x0257;\n        t.dialytikatonos = 0x0385;\n        t.dialytikatonoscmb = 0x0344;\n        t.diamond = 0x2666;\n        t.diamondsuitwhite = 0x2662;\n        t.dieresis = 0x00a8;\n        t.dieresisacute = 0xf6d7;\n        t.dieresisbelowcmb = 0x0324;\n        t.dieresiscmb = 0x0308;\n        t.dieresisgrave = 0xf6d8;\n        t.dieresistonos = 0x0385;\n        t.dihiragana = 0x3062;\n        t.dikatakana = 0x30c2;\n        t.dittomark = 0x3003;\n        t.divide = 0x00f7;\n        t.divides = 0x2223;\n        t.divisionslash = 0x2215;\n        t.djecyrillic = 0x0452;\n        t.dkshade = 0x2593;\n        t.dlinebelow = 0x1e0f;\n        t.dlsquare = 0x3397;\n        t.dmacron = 0x0111;\n        t.dmonospace = 0xff44;\n        t.dnblock = 0x2584;\n        t.dochadathai = 0x0e0e;\n        t.dodekthai = 0x0e14;\n        t.dohiragana = 0x3069;\n        t.dokatakana = 0x30c9;\n        t.dollar = 0x0024;\n        t.dollarinferior = 0xf6e3;\n        t.dollarmonospace = 0xff04;\n        t.dollaroldstyle = 0xf724;\n        t.dollarsmall = 0xfe69;\n        t.dollarsuperior = 0xf6e4;\n        t.dong = 0x20ab;\n        t.dorusquare = 0x3326;\n        t.dotaccent = 0x02d9;\n        t.dotaccentcmb = 0x0307;\n        t.dotbelowcmb = 0x0323;\n        t.dotbelowcomb = 0x0323;\n        t.dotkatakana = 0x30fb;\n        t.dotlessi = 0x0131;\n        t.dotlessj = 0xf6be;\n        t.dotlessjstrokehook = 0x0284;\n        t.dotmath = 0x22c5;\n        t.dottedcircle = 0x25cc;\n        t.doubleyodpatah = 0xfb1f;\n        t.doubleyodpatahhebrew = 0xfb1f;\n        t.downtackbelowcmb = 0x031e;\n        t.downtackmod = 0x02d5;\n        t.dparen = 0x249f;\n        t.dsuperior = 0xf6eb;\n        t.dtail = 0x0256;\n        t.dtopbar = 0x018c;\n        t.duhiragana = 0x3065;\n        t.dukatakana = 0x30c5;\n        t.dz = 0x01f3;\n        t.dzaltone = 0x02a3;\n        t.dzcaron = 0x01c6;\n        t.dzcurl = 0x02a5;\n        t.dzeabkhasiancyrillic = 0x04e1;\n        t.dzecyrillic = 0x0455;\n        t.dzhecyrillic = 0x045f;\n        t.e = 0x0065;\n        t.eacute = 0x00e9;\n        t.earth = 0x2641;\n        t.ebengali = 0x098f;\n        t.ebopomofo = 0x311c;\n        t.ebreve = 0x0115;\n        t.ecandradeva = 0x090d;\n        t.ecandragujarati = 0x0a8d;\n        t.ecandravowelsigndeva = 0x0945;\n        t.ecandravowelsigngujarati = 0x0ac5;\n        t.ecaron = 0x011b;\n        t.ecedillabreve = 0x1e1d;\n        t.echarmenian = 0x0565;\n        t.echyiwnarmenian = 0x0587;\n        t.ecircle = 0x24d4;\n        t.ecircumflex = 0x00ea;\n        t.ecircumflexacute = 0x1ebf;\n        t.ecircumflexbelow = 0x1e19;\n        t.ecircumflexdotbelow = 0x1ec7;\n        t.ecircumflexgrave = 0x1ec1;\n        t.ecircumflexhookabove = 0x1ec3;\n        t.ecircumflextilde = 0x1ec5;\n        t.ecyrillic = 0x0454;\n        t.edblgrave = 0x0205;\n        t.edeva = 0x090f;\n        t.edieresis = 0x00eb;\n        t.edot = 0x0117;\n        t.edotaccent = 0x0117;\n        t.edotbelow = 0x1eb9;\n        t.eegurmukhi = 0x0a0f;\n        t.eematragurmukhi = 0x0a47;\n        t.efcyrillic = 0x0444;\n        t.egrave = 0x00e8;\n        t.egujarati = 0x0a8f;\n        t.eharmenian = 0x0567;\n        t.ehbopomofo = 0x311d;\n        t.ehiragana = 0x3048;\n        t.ehookabove = 0x1ebb;\n        t.eibopomofo = 0x311f;\n        t.eight = 0x0038;\n        t.eightarabic = 0x0668;\n        t.eightbengali = 0x09ee;\n        t.eightcircle = 0x2467;\n        t.eightcircleinversesansserif = 0x2791;\n        t.eightdeva = 0x096e;\n        t.eighteencircle = 0x2471;\n        t.eighteenparen = 0x2485;\n        t.eighteenperiod = 0x2499;\n        t.eightgujarati = 0x0aee;\n        t.eightgurmukhi = 0x0a6e;\n        t.eighthackarabic = 0x0668;\n        t.eighthangzhou = 0x3028;\n        t.eighthnotebeamed = 0x266b;\n        t.eightideographicparen = 0x3227;\n        t.eightinferior = 0x2088;\n        t.eightmonospace = 0xff18;\n        t.eightoldstyle = 0xf738;\n        t.eightparen = 0x247b;\n        t.eightperiod = 0x248f;\n        t.eightpersian = 0x06f8;\n        t.eightroman = 0x2177;\n        t.eightsuperior = 0x2078;\n        t.eightthai = 0x0e58;\n        t.einvertedbreve = 0x0207;\n        t.eiotifiedcyrillic = 0x0465;\n        t.ekatakana = 0x30a8;\n        t.ekatakanahalfwidth = 0xff74;\n        t.ekonkargurmukhi = 0x0a74;\n        t.ekorean = 0x3154;\n        t.elcyrillic = 0x043b;\n        t.element = 0x2208;\n        t.elevencircle = 0x246a;\n        t.elevenparen = 0x247e;\n        t.elevenperiod = 0x2492;\n        t.elevenroman = 0x217a;\n        t.ellipsis = 0x2026;\n        t.ellipsisvertical = 0x22ee;\n        t.emacron = 0x0113;\n        t.emacronacute = 0x1e17;\n        t.emacrongrave = 0x1e15;\n        t.emcyrillic = 0x043c;\n        t.emdash = 0x2014;\n        t.emdashvertical = 0xfe31;\n        t.emonospace = 0xff45;\n        t.emphasismarkarmenian = 0x055b;\n        t.emptyset = 0x2205;\n        t.enbopomofo = 0x3123;\n        t.encyrillic = 0x043d;\n        t.endash = 0x2013;\n        t.endashvertical = 0xfe32;\n        t.endescendercyrillic = 0x04a3;\n        t.eng = 0x014b;\n        t.engbopomofo = 0x3125;\n        t.enghecyrillic = 0x04a5;\n        t.enhookcyrillic = 0x04c8;\n        t.enspace = 0x2002;\n        t.eogonek = 0x0119;\n        t.eokorean = 0x3153;\n        t.eopen = 0x025b;\n        t.eopenclosed = 0x029a;\n        t.eopenreversed = 0x025c;\n        t.eopenreversedclosed = 0x025e;\n        t.eopenreversedhook = 0x025d;\n        t.eparen = 0x24a0;\n        t.epsilon = 0x03b5;\n        t.epsilontonos = 0x03ad;\n        t.equal = 0x003d;\n        t.equalmonospace = 0xff1d;\n        t.equalsmall = 0xfe66;\n        t.equalsuperior = 0x207c;\n        t.equivalence = 0x2261;\n        t.erbopomofo = 0x3126;\n        t.ercyrillic = 0x0440;\n        t.ereversed = 0x0258;\n        t.ereversedcyrillic = 0x044d;\n        t.escyrillic = 0x0441;\n        t.esdescendercyrillic = 0x04ab;\n        t.esh = 0x0283;\n        t.eshcurl = 0x0286;\n        t.eshortdeva = 0x090e;\n        t.eshortvowelsigndeva = 0x0946;\n        t.eshreversedloop = 0x01aa;\n        t.eshsquatreversed = 0x0285;\n        t.esmallhiragana = 0x3047;\n        t.esmallkatakana = 0x30a7;\n        t.esmallkatakanahalfwidth = 0xff6a;\n        t.estimated = 0x212e;\n        t.esuperior = 0xf6ec;\n        t.eta = 0x03b7;\n        t.etarmenian = 0x0568;\n        t.etatonos = 0x03ae;\n        t.eth = 0x00f0;\n        t.etilde = 0x1ebd;\n        t.etildebelow = 0x1e1b;\n        t.etnahtafoukhhebrew = 0x0591;\n        t.etnahtafoukhlefthebrew = 0x0591;\n        t.etnahtahebrew = 0x0591;\n        t.etnahtalefthebrew = 0x0591;\n        t.eturned = 0x01dd;\n        t.eukorean = 0x3161;\n        t.euro = 0x20ac;\n        t.evowelsignbengali = 0x09c7;\n        t.evowelsigndeva = 0x0947;\n        t.evowelsigngujarati = 0x0ac7;\n        t.exclam = 0x0021;\n        t.exclamarmenian = 0x055c;\n        t.exclamdbl = 0x203c;\n        t.exclamdown = 0x00a1;\n        t.exclamdownsmall = 0xf7a1;\n        t.exclammonospace = 0xff01;\n        t.exclamsmall = 0xf721;\n        t.existential = 0x2203;\n        t.ezh = 0x0292;\n        t.ezhcaron = 0x01ef;\n        t.ezhcurl = 0x0293;\n        t.ezhreversed = 0x01b9;\n        t.ezhtail = 0x01ba;\n        t.f = 0x0066;\n        t.fadeva = 0x095e;\n        t.fagurmukhi = 0x0a5e;\n        t.fahrenheit = 0x2109;\n        t.fathaarabic = 0x064e;\n        t.fathalowarabic = 0x064e;\n        t.fathatanarabic = 0x064b;\n        t.fbopomofo = 0x3108;\n        t.fcircle = 0x24d5;\n        t.fdotaccent = 0x1e1f;\n        t.feharabic = 0x0641;\n        t.feharmenian = 0x0586;\n        t.fehfinalarabic = 0xfed2;\n        t.fehinitialarabic = 0xfed3;\n        t.fehmedialarabic = 0xfed4;\n        t.feicoptic = 0x03e5;\n        t.female = 0x2640;\n        t.ff = 0xfb00;\n        t.f_f = 0xfb00;\n        t.ffi = 0xfb03;\n        t.ffl = 0xfb04;\n        t.fi = 0xfb01;\n        t.fifteencircle = 0x246e;\n        t.fifteenparen = 0x2482;\n        t.fifteenperiod = 0x2496;\n        t.figuredash = 0x2012;\n        t.filledbox = 0x25a0;\n        t.filledrect = 0x25ac;\n        t.finalkaf = 0x05da;\n        t.finalkafdagesh = 0xfb3a;\n        t.finalkafdageshhebrew = 0xfb3a;\n        t.finalkafhebrew = 0x05da;\n        t.finalmem = 0x05dd;\n        t.finalmemhebrew = 0x05dd;\n        t.finalnun = 0x05df;\n        t.finalnunhebrew = 0x05df;\n        t.finalpe = 0x05e3;\n        t.finalpehebrew = 0x05e3;\n        t.finaltsadi = 0x05e5;\n        t.finaltsadihebrew = 0x05e5;\n        t.firsttonechinese = 0x02c9;\n        t.fisheye = 0x25c9;\n        t.fitacyrillic = 0x0473;\n        t.five = 0x0035;\n        t.fivearabic = 0x0665;\n        t.fivebengali = 0x09eb;\n        t.fivecircle = 0x2464;\n        t.fivecircleinversesansserif = 0x278e;\n        t.fivedeva = 0x096b;\n        t.fiveeighths = 0x215d;\n        t.fivegujarati = 0x0aeb;\n        t.fivegurmukhi = 0x0a6b;\n        t.fivehackarabic = 0x0665;\n        t.fivehangzhou = 0x3025;\n        t.fiveideographicparen = 0x3224;\n        t.fiveinferior = 0x2085;\n        t.fivemonospace = 0xff15;\n        t.fiveoldstyle = 0xf735;\n        t.fiveparen = 0x2478;\n        t.fiveperiod = 0x248c;\n        t.fivepersian = 0x06f5;\n        t.fiveroman = 0x2174;\n        t.fivesuperior = 0x2075;\n        t.fivethai = 0x0e55;\n        t.fl = 0xfb02;\n        t.florin = 0x0192;\n        t.fmonospace = 0xff46;\n        t.fmsquare = 0x3399;\n        t.fofanthai = 0x0e1f;\n        t.fofathai = 0x0e1d;\n        t.fongmanthai = 0x0e4f;\n        t.forall = 0x2200;\n        t.four = 0x0034;\n        t.fourarabic = 0x0664;\n        t.fourbengali = 0x09ea;\n        t.fourcircle = 0x2463;\n        t.fourcircleinversesansserif = 0x278d;\n        t.fourdeva = 0x096a;\n        t.fourgujarati = 0x0aea;\n        t.fourgurmukhi = 0x0a6a;\n        t.fourhackarabic = 0x0664;\n        t.fourhangzhou = 0x3024;\n        t.fourideographicparen = 0x3223;\n        t.fourinferior = 0x2084;\n        t.fourmonospace = 0xff14;\n        t.fournumeratorbengali = 0x09f7;\n        t.fouroldstyle = 0xf734;\n        t.fourparen = 0x2477;\n        t.fourperiod = 0x248b;\n        t.fourpersian = 0x06f4;\n        t.fourroman = 0x2173;\n        t.foursuperior = 0x2074;\n        t.fourteencircle = 0x246d;\n        t.fourteenparen = 0x2481;\n        t.fourteenperiod = 0x2495;\n        t.fourthai = 0x0e54;\n        t.fourthtonechinese = 0x02cb;\n        t.fparen = 0x24a1;\n        t.fraction = 0x2044;\n        t.franc = 0x20a3;\n        t.g = 0x0067;\n        t.gabengali = 0x0997;\n        t.gacute = 0x01f5;\n        t.gadeva = 0x0917;\n        t.gafarabic = 0x06af;\n        t.gaffinalarabic = 0xfb93;\n        t.gafinitialarabic = 0xfb94;\n        t.gafmedialarabic = 0xfb95;\n        t.gagujarati = 0x0a97;\n        t.gagurmukhi = 0x0a17;\n        t.gahiragana = 0x304c;\n        t.gakatakana = 0x30ac;\n        t.gamma = 0x03b3;\n        t.gammalatinsmall = 0x0263;\n        t.gammasuperior = 0x02e0;\n        t.gangiacoptic = 0x03eb;\n        t.gbopomofo = 0x310d;\n        t.gbreve = 0x011f;\n        t.gcaron = 0x01e7;\n        t.gcedilla = 0x0123;\n        t.gcircle = 0x24d6;\n        t.gcircumflex = 0x011d;\n        t.gcommaaccent = 0x0123;\n        t.gdot = 0x0121;\n        t.gdotaccent = 0x0121;\n        t.gecyrillic = 0x0433;\n        t.gehiragana = 0x3052;\n        t.gekatakana = 0x30b2;\n        t.geometricallyequal = 0x2251;\n        t.gereshaccenthebrew = 0x059c;\n        t.gereshhebrew = 0x05f3;\n        t.gereshmuqdamhebrew = 0x059d;\n        t.germandbls = 0x00df;\n        t.gershayimaccenthebrew = 0x059e;\n        t.gershayimhebrew = 0x05f4;\n        t.getamark = 0x3013;\n        t.ghabengali = 0x0998;\n        t.ghadarmenian = 0x0572;\n        t.ghadeva = 0x0918;\n        t.ghagujarati = 0x0a98;\n        t.ghagurmukhi = 0x0a18;\n        t.ghainarabic = 0x063a;\n        t.ghainfinalarabic = 0xfece;\n        t.ghaininitialarabic = 0xfecf;\n        t.ghainmedialarabic = 0xfed0;\n        t.ghemiddlehookcyrillic = 0x0495;\n        t.ghestrokecyrillic = 0x0493;\n        t.gheupturncyrillic = 0x0491;\n        t.ghhadeva = 0x095a;\n        t.ghhagurmukhi = 0x0a5a;\n        t.ghook = 0x0260;\n        t.ghzsquare = 0x3393;\n        t.gihiragana = 0x304e;\n        t.gikatakana = 0x30ae;\n        t.gimarmenian = 0x0563;\n        t.gimel = 0x05d2;\n        t.gimeldagesh = 0xfb32;\n        t.gimeldageshhebrew = 0xfb32;\n        t.gimelhebrew = 0x05d2;\n        t.gjecyrillic = 0x0453;\n        t.glottalinvertedstroke = 0x01be;\n        t.glottalstop = 0x0294;\n        t.glottalstopinverted = 0x0296;\n        t.glottalstopmod = 0x02c0;\n        t.glottalstopreversed = 0x0295;\n        t.glottalstopreversedmod = 0x02c1;\n        t.glottalstopreversedsuperior = 0x02e4;\n        t.glottalstopstroke = 0x02a1;\n        t.glottalstopstrokereversed = 0x02a2;\n        t.gmacron = 0x1e21;\n        t.gmonospace = 0xff47;\n        t.gohiragana = 0x3054;\n        t.gokatakana = 0x30b4;\n        t.gparen = 0x24a2;\n        t.gpasquare = 0x33ac;\n        t.gradient = 0x2207;\n        t.grave = 0x0060;\n        t.gravebelowcmb = 0x0316;\n        t.gravecmb = 0x0300;\n        t.gravecomb = 0x0300;\n        t.gravedeva = 0x0953;\n        t.gravelowmod = 0x02ce;\n        t.gravemonospace = 0xff40;\n        t.gravetonecmb = 0x0340;\n        t.greater = 0x003e;\n        t.greaterequal = 0x2265;\n        t.greaterequalorless = 0x22db;\n        t.greatermonospace = 0xff1e;\n        t.greaterorequivalent = 0x2273;\n        t.greaterorless = 0x2277;\n        t.greateroverequal = 0x2267;\n        t.greatersmall = 0xfe65;\n        t.gscript = 0x0261;\n        t.gstroke = 0x01e5;\n        t.guhiragana = 0x3050;\n        t.guillemotleft = 0x00ab;\n        t.guillemotright = 0x00bb;\n        t.guilsinglleft = 0x2039;\n        t.guilsinglright = 0x203a;\n        t.gukatakana = 0x30b0;\n        t.guramusquare = 0x3318;\n        t.gysquare = 0x33c9;\n        t.h = 0x0068;\n        t.haabkhasiancyrillic = 0x04a9;\n        t.haaltonearabic = 0x06c1;\n        t.habengali = 0x09b9;\n        t.hadescendercyrillic = 0x04b3;\n        t.hadeva = 0x0939;\n        t.hagujarati = 0x0ab9;\n        t.hagurmukhi = 0x0a39;\n        t.haharabic = 0x062d;\n        t.hahfinalarabic = 0xfea2;\n        t.hahinitialarabic = 0xfea3;\n        t.hahiragana = 0x306f;\n        t.hahmedialarabic = 0xfea4;\n        t.haitusquare = 0x332a;\n        t.hakatakana = 0x30cf;\n        t.hakatakanahalfwidth = 0xff8a;\n        t.halantgurmukhi = 0x0a4d;\n        t.hamzaarabic = 0x0621;\n        t.hamzalowarabic = 0x0621;\n        t.hangulfiller = 0x3164;\n        t.hardsigncyrillic = 0x044a;\n        t.harpoonleftbarbup = 0x21bc;\n        t.harpoonrightbarbup = 0x21c0;\n        t.hasquare = 0x33ca;\n        t.hatafpatah = 0x05b2;\n        t.hatafpatah16 = 0x05b2;\n        t.hatafpatah23 = 0x05b2;\n        t.hatafpatah2f = 0x05b2;\n        t.hatafpatahhebrew = 0x05b2;\n        t.hatafpatahnarrowhebrew = 0x05b2;\n        t.hatafpatahquarterhebrew = 0x05b2;\n        t.hatafpatahwidehebrew = 0x05b2;\n        t.hatafqamats = 0x05b3;\n        t.hatafqamats1b = 0x05b3;\n        t.hatafqamats28 = 0x05b3;\n        t.hatafqamats34 = 0x05b3;\n        t.hatafqamatshebrew = 0x05b3;\n        t.hatafqamatsnarrowhebrew = 0x05b3;\n        t.hatafqamatsquarterhebrew = 0x05b3;\n        t.hatafqamatswidehebrew = 0x05b3;\n        t.hatafsegol = 0x05b1;\n        t.hatafsegol17 = 0x05b1;\n        t.hatafsegol24 = 0x05b1;\n        t.hatafsegol30 = 0x05b1;\n        t.hatafsegolhebrew = 0x05b1;\n        t.hatafsegolnarrowhebrew = 0x05b1;\n        t.hatafsegolquarterhebrew = 0x05b1;\n        t.hatafsegolwidehebrew = 0x05b1;\n        t.hbar = 0x0127;\n        t.hbopomofo = 0x310f;\n        t.hbrevebelow = 0x1e2b;\n        t.hcedilla = 0x1e29;\n        t.hcircle = 0x24d7;\n        t.hcircumflex = 0x0125;\n        t.hdieresis = 0x1e27;\n        t.hdotaccent = 0x1e23;\n        t.hdotbelow = 0x1e25;\n        t.he = 0x05d4;\n        t.heart = 0x2665;\n        t.heartsuitblack = 0x2665;\n        t.heartsuitwhite = 0x2661;\n        t.hedagesh = 0xfb34;\n        t.hedageshhebrew = 0xfb34;\n        t.hehaltonearabic = 0x06c1;\n        t.heharabic = 0x0647;\n        t.hehebrew = 0x05d4;\n        t.hehfinalaltonearabic = 0xfba7;\n        t.hehfinalalttwoarabic = 0xfeea;\n        t.hehfinalarabic = 0xfeea;\n        t.hehhamzaabovefinalarabic = 0xfba5;\n        t.hehhamzaaboveisolatedarabic = 0xfba4;\n        t.hehinitialaltonearabic = 0xfba8;\n        t.hehinitialarabic = 0xfeeb;\n        t.hehiragana = 0x3078;\n        t.hehmedialaltonearabic = 0xfba9;\n        t.hehmedialarabic = 0xfeec;\n        t.heiseierasquare = 0x337b;\n        t.hekatakana = 0x30d8;\n        t.hekatakanahalfwidth = 0xff8d;\n        t.hekutaarusquare = 0x3336;\n        t.henghook = 0x0267;\n        t.herutusquare = 0x3339;\n        t.het = 0x05d7;\n        t.hethebrew = 0x05d7;\n        t.hhook = 0x0266;\n        t.hhooksuperior = 0x02b1;\n        t.hieuhacirclekorean = 0x327b;\n        t.hieuhaparenkorean = 0x321b;\n        t.hieuhcirclekorean = 0x326d;\n        t.hieuhkorean = 0x314e;\n        t.hieuhparenkorean = 0x320d;\n        t.hihiragana = 0x3072;\n        t.hikatakana = 0x30d2;\n        t.hikatakanahalfwidth = 0xff8b;\n        t.hiriq = 0x05b4;\n        t.hiriq14 = 0x05b4;\n        t.hiriq21 = 0x05b4;\n        t.hiriq2d = 0x05b4;\n        t.hiriqhebrew = 0x05b4;\n        t.hiriqnarrowhebrew = 0x05b4;\n        t.hiriqquarterhebrew = 0x05b4;\n        t.hiriqwidehebrew = 0x05b4;\n        t.hlinebelow = 0x1e96;\n        t.hmonospace = 0xff48;\n        t.hoarmenian = 0x0570;\n        t.hohipthai = 0x0e2b;\n        t.hohiragana = 0x307b;\n        t.hokatakana = 0x30db;\n        t.hokatakanahalfwidth = 0xff8e;\n        t.holam = 0x05b9;\n        t.holam19 = 0x05b9;\n        t.holam26 = 0x05b9;\n        t.holam32 = 0x05b9;\n        t.holamhebrew = 0x05b9;\n        t.holamnarrowhebrew = 0x05b9;\n        t.holamquarterhebrew = 0x05b9;\n        t.holamwidehebrew = 0x05b9;\n        t.honokhukthai = 0x0e2e;\n        t.hookabovecomb = 0x0309;\n        t.hookcmb = 0x0309;\n        t.hookpalatalizedbelowcmb = 0x0321;\n        t.hookretroflexbelowcmb = 0x0322;\n        t.hoonsquare = 0x3342;\n        t.horicoptic = 0x03e9;\n        t.horizontalbar = 0x2015;\n        t.horncmb = 0x031b;\n        t.hotsprings = 0x2668;\n        t.house = 0x2302;\n        t.hparen = 0x24a3;\n        t.hsuperior = 0x02b0;\n        t.hturned = 0x0265;\n        t.huhiragana = 0x3075;\n        t.huiitosquare = 0x3333;\n        t.hukatakana = 0x30d5;\n        t.hukatakanahalfwidth = 0xff8c;\n        t.hungarumlaut = 0x02dd;\n        t.hungarumlautcmb = 0x030b;\n        t.hv = 0x0195;\n        t.hyphen = 0x002d;\n        t.hypheninferior = 0xf6e5;\n        t.hyphenmonospace = 0xff0d;\n        t.hyphensmall = 0xfe63;\n        t.hyphensuperior = 0xf6e6;\n        t.hyphentwo = 0x2010;\n        t.i = 0x0069;\n        t.iacute = 0x00ed;\n        t.iacyrillic = 0x044f;\n        t.ibengali = 0x0987;\n        t.ibopomofo = 0x3127;\n        t.ibreve = 0x012d;\n        t.icaron = 0x01d0;\n        t.icircle = 0x24d8;\n        t.icircumflex = 0x00ee;\n        t.icyrillic = 0x0456;\n        t.idblgrave = 0x0209;\n        t.ideographearthcircle = 0x328f;\n        t.ideographfirecircle = 0x328b;\n        t.ideographicallianceparen = 0x323f;\n        t.ideographiccallparen = 0x323a;\n        t.ideographiccentrecircle = 0x32a5;\n        t.ideographicclose = 0x3006;\n        t.ideographiccomma = 0x3001;\n        t.ideographiccommaleft = 0xff64;\n        t.ideographiccongratulationparen = 0x3237;\n        t.ideographiccorrectcircle = 0x32a3;\n        t.ideographicearthparen = 0x322f;\n        t.ideographicenterpriseparen = 0x323d;\n        t.ideographicexcellentcircle = 0x329d;\n        t.ideographicfestivalparen = 0x3240;\n        t.ideographicfinancialcircle = 0x3296;\n        t.ideographicfinancialparen = 0x3236;\n        t.ideographicfireparen = 0x322b;\n        t.ideographichaveparen = 0x3232;\n        t.ideographichighcircle = 0x32a4;\n        t.ideographiciterationmark = 0x3005;\n        t.ideographiclaborcircle = 0x3298;\n        t.ideographiclaborparen = 0x3238;\n        t.ideographicleftcircle = 0x32a7;\n        t.ideographiclowcircle = 0x32a6;\n        t.ideographicmedicinecircle = 0x32a9;\n        t.ideographicmetalparen = 0x322e;\n        t.ideographicmoonparen = 0x322a;\n        t.ideographicnameparen = 0x3234;\n        t.ideographicperiod = 0x3002;\n        t.ideographicprintcircle = 0x329e;\n        t.ideographicreachparen = 0x3243;\n        t.ideographicrepresentparen = 0x3239;\n        t.ideographicresourceparen = 0x323e;\n        t.ideographicrightcircle = 0x32a8;\n        t.ideographicsecretcircle = 0x3299;\n        t.ideographicselfparen = 0x3242;\n        t.ideographicsocietyparen = 0x3233;\n        t.ideographicspace = 0x3000;\n        t.ideographicspecialparen = 0x3235;\n        t.ideographicstockparen = 0x3231;\n        t.ideographicstudyparen = 0x323b;\n        t.ideographicsunparen = 0x3230;\n        t.ideographicsuperviseparen = 0x323c;\n        t.ideographicwaterparen = 0x322c;\n        t.ideographicwoodparen = 0x322d;\n        t.ideographiczero = 0x3007;\n        t.ideographmetalcircle = 0x328e;\n        t.ideographmooncircle = 0x328a;\n        t.ideographnamecircle = 0x3294;\n        t.ideographsuncircle = 0x3290;\n        t.ideographwatercircle = 0x328c;\n        t.ideographwoodcircle = 0x328d;\n        t.ideva = 0x0907;\n        t.idieresis = 0x00ef;\n        t.idieresisacute = 0x1e2f;\n        t.idieresiscyrillic = 0x04e5;\n        t.idotbelow = 0x1ecb;\n        t.iebrevecyrillic = 0x04d7;\n        t.iecyrillic = 0x0435;\n        t.ieungacirclekorean = 0x3275;\n        t.ieungaparenkorean = 0x3215;\n        t.ieungcirclekorean = 0x3267;\n        t.ieungkorean = 0x3147;\n        t.ieungparenkorean = 0x3207;\n        t.igrave = 0x00ec;\n        t.igujarati = 0x0a87;\n        t.igurmukhi = 0x0a07;\n        t.ihiragana = 0x3044;\n        t.ihookabove = 0x1ec9;\n        t.iibengali = 0x0988;\n        t.iicyrillic = 0x0438;\n        t.iideva = 0x0908;\n        t.iigujarati = 0x0a88;\n        t.iigurmukhi = 0x0a08;\n        t.iimatragurmukhi = 0x0a40;\n        t.iinvertedbreve = 0x020b;\n        t.iishortcyrillic = 0x0439;\n        t.iivowelsignbengali = 0x09c0;\n        t.iivowelsigndeva = 0x0940;\n        t.iivowelsigngujarati = 0x0ac0;\n        t.ij = 0x0133;\n        t.ikatakana = 0x30a4;\n        t.ikatakanahalfwidth = 0xff72;\n        t.ikorean = 0x3163;\n        t.ilde = 0x02dc;\n        t.iluyhebrew = 0x05ac;\n        t.imacron = 0x012b;\n        t.imacroncyrillic = 0x04e3;\n        t.imageorapproximatelyequal = 0x2253;\n        t.imatragurmukhi = 0x0a3f;\n        t.imonospace = 0xff49;\n        t.increment = 0x2206;\n        t.infinity = 0x221e;\n        t.iniarmenian = 0x056b;\n        t.integral = 0x222b;\n        t.integralbottom = 0x2321;\n        t.integralbt = 0x2321;\n        t.integralex = 0xf8f5;\n        t.integraltop = 0x2320;\n        t.integraltp = 0x2320;\n        t.intersection = 0x2229;\n        t.intisquare = 0x3305;\n        t.invbullet = 0x25d8;\n        t.invcircle = 0x25d9;\n        t.invsmileface = 0x263b;\n        t.iocyrillic = 0x0451;\n        t.iogonek = 0x012f;\n        t.iota = 0x03b9;\n        t.iotadieresis = 0x03ca;\n        t.iotadieresistonos = 0x0390;\n        t.iotalatin = 0x0269;\n        t.iotatonos = 0x03af;\n        t.iparen = 0x24a4;\n        t.irigurmukhi = 0x0a72;\n        t.ismallhiragana = 0x3043;\n        t.ismallkatakana = 0x30a3;\n        t.ismallkatakanahalfwidth = 0xff68;\n        t.issharbengali = 0x09fa;\n        t.istroke = 0x0268;\n        t.isuperior = 0xf6ed;\n        t.iterationhiragana = 0x309d;\n        t.iterationkatakana = 0x30fd;\n        t.itilde = 0x0129;\n        t.itildebelow = 0x1e2d;\n        t.iubopomofo = 0x3129;\n        t.iucyrillic = 0x044e;\n        t.ivowelsignbengali = 0x09bf;\n        t.ivowelsigndeva = 0x093f;\n        t.ivowelsigngujarati = 0x0abf;\n        t.izhitsacyrillic = 0x0475;\n        t.izhitsadblgravecyrillic = 0x0477;\n        t.j = 0x006a;\n        t.jaarmenian = 0x0571;\n        t.jabengali = 0x099c;\n        t.jadeva = 0x091c;\n        t.jagujarati = 0x0a9c;\n        t.jagurmukhi = 0x0a1c;\n        t.jbopomofo = 0x3110;\n        t.jcaron = 0x01f0;\n        t.jcircle = 0x24d9;\n        t.jcircumflex = 0x0135;\n        t.jcrossedtail = 0x029d;\n        t.jdotlessstroke = 0x025f;\n        t.jecyrillic = 0x0458;\n        t.jeemarabic = 0x062c;\n        t.jeemfinalarabic = 0xfe9e;\n        t.jeeminitialarabic = 0xfe9f;\n        t.jeemmedialarabic = 0xfea0;\n        t.jeharabic = 0x0698;\n        t.jehfinalarabic = 0xfb8b;\n        t.jhabengali = 0x099d;\n        t.jhadeva = 0x091d;\n        t.jhagujarati = 0x0a9d;\n        t.jhagurmukhi = 0x0a1d;\n        t.jheharmenian = 0x057b;\n        t.jis = 0x3004;\n        t.jmonospace = 0xff4a;\n        t.jparen = 0x24a5;\n        t.jsuperior = 0x02b2;\n        t.k = 0x006b;\n        t.kabashkircyrillic = 0x04a1;\n        t.kabengali = 0x0995;\n        t.kacute = 0x1e31;\n        t.kacyrillic = 0x043a;\n        t.kadescendercyrillic = 0x049b;\n        t.kadeva = 0x0915;\n        t.kaf = 0x05db;\n        t.kafarabic = 0x0643;\n        t.kafdagesh = 0xfb3b;\n        t.kafdageshhebrew = 0xfb3b;\n        t.kaffinalarabic = 0xfeda;\n        t.kafhebrew = 0x05db;\n        t.kafinitialarabic = 0xfedb;\n        t.kafmedialarabic = 0xfedc;\n        t.kafrafehebrew = 0xfb4d;\n        t.kagujarati = 0x0a95;\n        t.kagurmukhi = 0x0a15;\n        t.kahiragana = 0x304b;\n        t.kahookcyrillic = 0x04c4;\n        t.kakatakana = 0x30ab;\n        t.kakatakanahalfwidth = 0xff76;\n        t.kappa = 0x03ba;\n        t.kappasymbolgreek = 0x03f0;\n        t.kapyeounmieumkorean = 0x3171;\n        t.kapyeounphieuphkorean = 0x3184;\n        t.kapyeounpieupkorean = 0x3178;\n        t.kapyeounssangpieupkorean = 0x3179;\n        t.karoriisquare = 0x330d;\n        t.kashidaautoarabic = 0x0640;\n        t.kashidaautonosidebearingarabic = 0x0640;\n        t.kasmallkatakana = 0x30f5;\n        t.kasquare = 0x3384;\n        t.kasraarabic = 0x0650;\n        t.kasratanarabic = 0x064d;\n        t.kastrokecyrillic = 0x049f;\n        t.katahiraprolongmarkhalfwidth = 0xff70;\n        t.kaverticalstrokecyrillic = 0x049d;\n        t.kbopomofo = 0x310e;\n        t.kcalsquare = 0x3389;\n        t.kcaron = 0x01e9;\n        t.kcedilla = 0x0137;\n        t.kcircle = 0x24da;\n        t.kcommaaccent = 0x0137;\n        t.kdotbelow = 0x1e33;\n        t.keharmenian = 0x0584;\n        t.kehiragana = 0x3051;\n        t.kekatakana = 0x30b1;\n        t.kekatakanahalfwidth = 0xff79;\n        t.kenarmenian = 0x056f;\n        t.kesmallkatakana = 0x30f6;\n        t.kgreenlandic = 0x0138;\n        t.khabengali = 0x0996;\n        t.khacyrillic = 0x0445;\n        t.khadeva = 0x0916;\n        t.khagujarati = 0x0a96;\n        t.khagurmukhi = 0x0a16;\n        t.khaharabic = 0x062e;\n        t.khahfinalarabic = 0xfea6;\n        t.khahinitialarabic = 0xfea7;\n        t.khahmedialarabic = 0xfea8;\n        t.kheicoptic = 0x03e7;\n        t.khhadeva = 0x0959;\n        t.khhagurmukhi = 0x0a59;\n        t.khieukhacirclekorean = 0x3278;\n        t.khieukhaparenkorean = 0x3218;\n        t.khieukhcirclekorean = 0x326a;\n        t.khieukhkorean = 0x314b;\n        t.khieukhparenkorean = 0x320a;\n        t.khokhaithai = 0x0e02;\n        t.khokhonthai = 0x0e05;\n        t.khokhuatthai = 0x0e03;\n        t.khokhwaithai = 0x0e04;\n        t.khomutthai = 0x0e5b;\n        t.khook = 0x0199;\n        t.khorakhangthai = 0x0e06;\n        t.khzsquare = 0x3391;\n        t.kihiragana = 0x304d;\n        t.kikatakana = 0x30ad;\n        t.kikatakanahalfwidth = 0xff77;\n        t.kiroguramusquare = 0x3315;\n        t.kiromeetorusquare = 0x3316;\n        t.kirosquare = 0x3314;\n        t.kiyeokacirclekorean = 0x326e;\n        t.kiyeokaparenkorean = 0x320e;\n        t.kiyeokcirclekorean = 0x3260;\n        t.kiyeokkorean = 0x3131;\n        t.kiyeokparenkorean = 0x3200;\n        t.kiyeoksioskorean = 0x3133;\n        t.kjecyrillic = 0x045c;\n        t.klinebelow = 0x1e35;\n        t.klsquare = 0x3398;\n        t.kmcubedsquare = 0x33a6;\n        t.kmonospace = 0xff4b;\n        t.kmsquaredsquare = 0x33a2;\n        t.kohiragana = 0x3053;\n        t.kohmsquare = 0x33c0;\n        t.kokaithai = 0x0e01;\n        t.kokatakana = 0x30b3;\n        t.kokatakanahalfwidth = 0xff7a;\n        t.kooposquare = 0x331e;\n        t.koppacyrillic = 0x0481;\n        t.koreanstandardsymbol = 0x327f;\n        t.koroniscmb = 0x0343;\n        t.kparen = 0x24a6;\n        t.kpasquare = 0x33aa;\n        t.ksicyrillic = 0x046f;\n        t.ktsquare = 0x33cf;\n        t.kturned = 0x029e;\n        t.kuhiragana = 0x304f;\n        t.kukatakana = 0x30af;\n        t.kukatakanahalfwidth = 0xff78;\n        t.kvsquare = 0x33b8;\n        t.kwsquare = 0x33be;\n        t.l = 0x006c;\n        t.labengali = 0x09b2;\n        t.lacute = 0x013a;\n        t.ladeva = 0x0932;\n        t.lagujarati = 0x0ab2;\n        t.lagurmukhi = 0x0a32;\n        t.lakkhangyaothai = 0x0e45;\n        t.lamaleffinalarabic = 0xfefc;\n        t.lamalefhamzaabovefinalarabic = 0xfef8;\n        t.lamalefhamzaaboveisolatedarabic = 0xfef7;\n        t.lamalefhamzabelowfinalarabic = 0xfefa;\n        t.lamalefhamzabelowisolatedarabic = 0xfef9;\n        t.lamalefisolatedarabic = 0xfefb;\n        t.lamalefmaddaabovefinalarabic = 0xfef6;\n        t.lamalefmaddaaboveisolatedarabic = 0xfef5;\n        t.lamarabic = 0x0644;\n        t.lambda = 0x03bb;\n        t.lambdastroke = 0x019b;\n        t.lamed = 0x05dc;\n        t.lameddagesh = 0xfb3c;\n        t.lameddageshhebrew = 0xfb3c;\n        t.lamedhebrew = 0x05dc;\n        t.lamfinalarabic = 0xfede;\n        t.lamhahinitialarabic = 0xfcca;\n        t.laminitialarabic = 0xfedf;\n        t.lamjeeminitialarabic = 0xfcc9;\n        t.lamkhahinitialarabic = 0xfccb;\n        t.lamlamhehisolatedarabic = 0xfdf2;\n        t.lammedialarabic = 0xfee0;\n        t.lammeemhahinitialarabic = 0xfd88;\n        t.lammeeminitialarabic = 0xfccc;\n        t.largecircle = 0x25ef;\n        t.lbar = 0x019a;\n        t.lbelt = 0x026c;\n        t.lbopomofo = 0x310c;\n        t.lcaron = 0x013e;\n        t.lcedilla = 0x013c;\n        t.lcircle = 0x24db;\n        t.lcircumflexbelow = 0x1e3d;\n        t.lcommaaccent = 0x013c;\n        t.ldot = 0x0140;\n        t.ldotaccent = 0x0140;\n        t.ldotbelow = 0x1e37;\n        t.ldotbelowmacron = 0x1e39;\n        t.leftangleabovecmb = 0x031a;\n        t.lefttackbelowcmb = 0x0318;\n        t.less = 0x003c;\n        t.lessequal = 0x2264;\n        t.lessequalorgreater = 0x22da;\n        t.lessmonospace = 0xff1c;\n        t.lessorequivalent = 0x2272;\n        t.lessorgreater = 0x2276;\n        t.lessoverequal = 0x2266;\n        t.lesssmall = 0xfe64;\n        t.lezh = 0x026e;\n        t.lfblock = 0x258c;\n        t.lhookretroflex = 0x026d;\n        t.lira = 0x20a4;\n        t.liwnarmenian = 0x056c;\n        t.lj = 0x01c9;\n        t.ljecyrillic = 0x0459;\n        t.ll = 0xf6c0;\n        t.lladeva = 0x0933;\n        t.llagujarati = 0x0ab3;\n        t.llinebelow = 0x1e3b;\n        t.llladeva = 0x0934;\n        t.llvocalicbengali = 0x09e1;\n        t.llvocalicdeva = 0x0961;\n        t.llvocalicvowelsignbengali = 0x09e3;\n        t.llvocalicvowelsigndeva = 0x0963;\n        t.lmiddletilde = 0x026b;\n        t.lmonospace = 0xff4c;\n        t.lmsquare = 0x33d0;\n        t.lochulathai = 0x0e2c;\n        t.logicaland = 0x2227;\n        t.logicalnot = 0x00ac;\n        t.logicalnotreversed = 0x2310;\n        t.logicalor = 0x2228;\n        t.lolingthai = 0x0e25;\n        t.longs = 0x017f;\n        t.lowlinecenterline = 0xfe4e;\n        t.lowlinecmb = 0x0332;\n        t.lowlinedashed = 0xfe4d;\n        t.lozenge = 0x25ca;\n        t.lparen = 0x24a7;\n        t.lslash = 0x0142;\n        t.lsquare = 0x2113;\n        t.lsuperior = 0xf6ee;\n        t.ltshade = 0x2591;\n        t.luthai = 0x0e26;\n        t.lvocalicbengali = 0x098c;\n        t.lvocalicdeva = 0x090c;\n        t.lvocalicvowelsignbengali = 0x09e2;\n        t.lvocalicvowelsigndeva = 0x0962;\n        t.lxsquare = 0x33d3;\n        t.m = 0x006d;\n        t.mabengali = 0x09ae;\n        t.macron = 0x00af;\n        t.macronbelowcmb = 0x0331;\n        t.macroncmb = 0x0304;\n        t.macronlowmod = 0x02cd;\n        t.macronmonospace = 0xffe3;\n        t.macute = 0x1e3f;\n        t.madeva = 0x092e;\n        t.magujarati = 0x0aae;\n        t.magurmukhi = 0x0a2e;\n        t.mahapakhhebrew = 0x05a4;\n        t.mahapakhlefthebrew = 0x05a4;\n        t.mahiragana = 0x307e;\n        t.maichattawalowleftthai = 0xf895;\n        t.maichattawalowrightthai = 0xf894;\n        t.maichattawathai = 0x0e4b;\n        t.maichattawaupperleftthai = 0xf893;\n        t.maieklowleftthai = 0xf88c;\n        t.maieklowrightthai = 0xf88b;\n        t.maiekthai = 0x0e48;\n        t.maiekupperleftthai = 0xf88a;\n        t.maihanakatleftthai = 0xf884;\n        t.maihanakatthai = 0x0e31;\n        t.maitaikhuleftthai = 0xf889;\n        t.maitaikhuthai = 0x0e47;\n        t.maitholowleftthai = 0xf88f;\n        t.maitholowrightthai = 0xf88e;\n        t.maithothai = 0x0e49;\n        t.maithoupperleftthai = 0xf88d;\n        t.maitrilowleftthai = 0xf892;\n        t.maitrilowrightthai = 0xf891;\n        t.maitrithai = 0x0e4a;\n        t.maitriupperleftthai = 0xf890;\n        t.maiyamokthai = 0x0e46;\n        t.makatakana = 0x30de;\n        t.makatakanahalfwidth = 0xff8f;\n        t.male = 0x2642;\n        t.mansyonsquare = 0x3347;\n        t.maqafhebrew = 0x05be;\n        t.mars = 0x2642;\n        t.masoracirclehebrew = 0x05af;\n        t.masquare = 0x3383;\n        t.mbopomofo = 0x3107;\n        t.mbsquare = 0x33d4;\n        t.mcircle = 0x24dc;\n        t.mcubedsquare = 0x33a5;\n        t.mdotaccent = 0x1e41;\n        t.mdotbelow = 0x1e43;\n        t.meemarabic = 0x0645;\n        t.meemfinalarabic = 0xfee2;\n        t.meeminitialarabic = 0xfee3;\n        t.meemmedialarabic = 0xfee4;\n        t.meemmeeminitialarabic = 0xfcd1;\n        t.meemmeemisolatedarabic = 0xfc48;\n        t.meetorusquare = 0x334d;\n        t.mehiragana = 0x3081;\n        t.meizierasquare = 0x337e;\n        t.mekatakana = 0x30e1;\n        t.mekatakanahalfwidth = 0xff92;\n        t.mem = 0x05de;\n        t.memdagesh = 0xfb3e;\n        t.memdageshhebrew = 0xfb3e;\n        t.memhebrew = 0x05de;\n        t.menarmenian = 0x0574;\n        t.merkhahebrew = 0x05a5;\n        t.merkhakefulahebrew = 0x05a6;\n        t.merkhakefulalefthebrew = 0x05a6;\n        t.merkhalefthebrew = 0x05a5;\n        t.mhook = 0x0271;\n        t.mhzsquare = 0x3392;\n        t.middledotkatakanahalfwidth = 0xff65;\n        t.middot = 0x00b7;\n        t.mieumacirclekorean = 0x3272;\n        t.mieumaparenkorean = 0x3212;\n        t.mieumcirclekorean = 0x3264;\n        t.mieumkorean = 0x3141;\n        t.mieumpansioskorean = 0x3170;\n        t.mieumparenkorean = 0x3204;\n        t.mieumpieupkorean = 0x316e;\n        t.mieumsioskorean = 0x316f;\n        t.mihiragana = 0x307f;\n        t.mikatakana = 0x30df;\n        t.mikatakanahalfwidth = 0xff90;\n        t.minus = 0x2212;\n        t.minusbelowcmb = 0x0320;\n        t.minuscircle = 0x2296;\n        t.minusmod = 0x02d7;\n        t.minusplus = 0x2213;\n        t.minute = 0x2032;\n        t.miribaarusquare = 0x334a;\n        t.mirisquare = 0x3349;\n        t.mlonglegturned = 0x0270;\n        t.mlsquare = 0x3396;\n        t.mmcubedsquare = 0x33a3;\n        t.mmonospace = 0xff4d;\n        t.mmsquaredsquare = 0x339f;\n        t.mohiragana = 0x3082;\n        t.mohmsquare = 0x33c1;\n        t.mokatakana = 0x30e2;\n        t.mokatakanahalfwidth = 0xff93;\n        t.molsquare = 0x33d6;\n        t.momathai = 0x0e21;\n        t.moverssquare = 0x33a7;\n        t.moverssquaredsquare = 0x33a8;\n        t.mparen = 0x24a8;\n        t.mpasquare = 0x33ab;\n        t.mssquare = 0x33b3;\n        t.msuperior = 0xf6ef;\n        t.mturned = 0x026f;\n        t.mu = 0x00b5;\n        t.mu1 = 0x00b5;\n        t.muasquare = 0x3382;\n        t.muchgreater = 0x226b;\n        t.muchless = 0x226a;\n        t.mufsquare = 0x338c;\n        t.mugreek = 0x03bc;\n        t.mugsquare = 0x338d;\n        t.muhiragana = 0x3080;\n        t.mukatakana = 0x30e0;\n        t.mukatakanahalfwidth = 0xff91;\n        t.mulsquare = 0x3395;\n        t.multiply = 0x00d7;\n        t.mumsquare = 0x339b;\n        t.munahhebrew = 0x05a3;\n        t.munahlefthebrew = 0x05a3;\n        t.musicalnote = 0x266a;\n        t.musicalnotedbl = 0x266b;\n        t.musicflatsign = 0x266d;\n        t.musicsharpsign = 0x266f;\n        t.mussquare = 0x33b2;\n        t.muvsquare = 0x33b6;\n        t.muwsquare = 0x33bc;\n        t.mvmegasquare = 0x33b9;\n        t.mvsquare = 0x33b7;\n        t.mwmegasquare = 0x33bf;\n        t.mwsquare = 0x33bd;\n        t.n = 0x006e;\n        t.nabengali = 0x09a8;\n        t.nabla = 0x2207;\n        t.nacute = 0x0144;\n        t.nadeva = 0x0928;\n        t.nagujarati = 0x0aa8;\n        t.nagurmukhi = 0x0a28;\n        t.nahiragana = 0x306a;\n        t.nakatakana = 0x30ca;\n        t.nakatakanahalfwidth = 0xff85;\n        t.napostrophe = 0x0149;\n        t.nasquare = 0x3381;\n        t.nbopomofo = 0x310b;\n        t.nbspace = 0x00a0;\n        t.ncaron = 0x0148;\n        t.ncedilla = 0x0146;\n        t.ncircle = 0x24dd;\n        t.ncircumflexbelow = 0x1e4b;\n        t.ncommaaccent = 0x0146;\n        t.ndotaccent = 0x1e45;\n        t.ndotbelow = 0x1e47;\n        t.nehiragana = 0x306d;\n        t.nekatakana = 0x30cd;\n        t.nekatakanahalfwidth = 0xff88;\n        t.newsheqelsign = 0x20aa;\n        t.nfsquare = 0x338b;\n        t.ngabengali = 0x0999;\n        t.ngadeva = 0x0919;\n        t.ngagujarati = 0x0a99;\n        t.ngagurmukhi = 0x0a19;\n        t.ngonguthai = 0x0e07;\n        t.nhiragana = 0x3093;\n        t.nhookleft = 0x0272;\n        t.nhookretroflex = 0x0273;\n        t.nieunacirclekorean = 0x326f;\n        t.nieunaparenkorean = 0x320f;\n        t.nieuncieuckorean = 0x3135;\n        t.nieuncirclekorean = 0x3261;\n        t.nieunhieuhkorean = 0x3136;\n        t.nieunkorean = 0x3134;\n        t.nieunpansioskorean = 0x3168;\n        t.nieunparenkorean = 0x3201;\n        t.nieunsioskorean = 0x3167;\n        t.nieuntikeutkorean = 0x3166;\n        t.nihiragana = 0x306b;\n        t.nikatakana = 0x30cb;\n        t.nikatakanahalfwidth = 0xff86;\n        t.nikhahitleftthai = 0xf899;\n        t.nikhahitthai = 0x0e4d;\n        t.nine = 0x0039;\n        t.ninearabic = 0x0669;\n        t.ninebengali = 0x09ef;\n        t.ninecircle = 0x2468;\n        t.ninecircleinversesansserif = 0x2792;\n        t.ninedeva = 0x096f;\n        t.ninegujarati = 0x0aef;\n        t.ninegurmukhi = 0x0a6f;\n        t.ninehackarabic = 0x0669;\n        t.ninehangzhou = 0x3029;\n        t.nineideographicparen = 0x3228;\n        t.nineinferior = 0x2089;\n        t.ninemonospace = 0xff19;\n        t.nineoldstyle = 0xf739;\n        t.nineparen = 0x247c;\n        t.nineperiod = 0x2490;\n        t.ninepersian = 0x06f9;\n        t.nineroman = 0x2178;\n        t.ninesuperior = 0x2079;\n        t.nineteencircle = 0x2472;\n        t.nineteenparen = 0x2486;\n        t.nineteenperiod = 0x249a;\n        t.ninethai = 0x0e59;\n        t.nj = 0x01cc;\n        t.njecyrillic = 0x045a;\n        t.nkatakana = 0x30f3;\n        t.nkatakanahalfwidth = 0xff9d;\n        t.nlegrightlong = 0x019e;\n        t.nlinebelow = 0x1e49;\n        t.nmonospace = 0xff4e;\n        t.nmsquare = 0x339a;\n        t.nnabengali = 0x09a3;\n        t.nnadeva = 0x0923;\n        t.nnagujarati = 0x0aa3;\n        t.nnagurmukhi = 0x0a23;\n        t.nnnadeva = 0x0929;\n        t.nohiragana = 0x306e;\n        t.nokatakana = 0x30ce;\n        t.nokatakanahalfwidth = 0xff89;\n        t.nonbreakingspace = 0x00a0;\n        t.nonenthai = 0x0e13;\n        t.nonuthai = 0x0e19;\n        t.noonarabic = 0x0646;\n        t.noonfinalarabic = 0xfee6;\n        t.noonghunnaarabic = 0x06ba;\n        t.noonghunnafinalarabic = 0xfb9f;\n        t.nooninitialarabic = 0xfee7;\n        t.noonjeeminitialarabic = 0xfcd2;\n        t.noonjeemisolatedarabic = 0xfc4b;\n        t.noonmedialarabic = 0xfee8;\n        t.noonmeeminitialarabic = 0xfcd5;\n        t.noonmeemisolatedarabic = 0xfc4e;\n        t.noonnoonfinalarabic = 0xfc8d;\n        t.notcontains = 0x220c;\n        t.notelement = 0x2209;\n        t.notelementof = 0x2209;\n        t.notequal = 0x2260;\n        t.notgreater = 0x226f;\n        t.notgreaternorequal = 0x2271;\n        t.notgreaternorless = 0x2279;\n        t.notidentical = 0x2262;\n        t.notless = 0x226e;\n        t.notlessnorequal = 0x2270;\n        t.notparallel = 0x2226;\n        t.notprecedes = 0x2280;\n        t.notsubset = 0x2284;\n        t.notsucceeds = 0x2281;\n        t.notsuperset = 0x2285;\n        t.nowarmenian = 0x0576;\n        t.nparen = 0x24a9;\n        t.nssquare = 0x33b1;\n        t.nsuperior = 0x207f;\n        t.ntilde = 0x00f1;\n        t.nu = 0x03bd;\n        t.nuhiragana = 0x306c;\n        t.nukatakana = 0x30cc;\n        t.nukatakanahalfwidth = 0xff87;\n        t.nuktabengali = 0x09bc;\n        t.nuktadeva = 0x093c;\n        t.nuktagujarati = 0x0abc;\n        t.nuktagurmukhi = 0x0a3c;\n        t.numbersign = 0x0023;\n        t.numbersignmonospace = 0xff03;\n        t.numbersignsmall = 0xfe5f;\n        t.numeralsigngreek = 0x0374;\n        t.numeralsignlowergreek = 0x0375;\n        t.numero = 0x2116;\n        t.nun = 0x05e0;\n        t.nundagesh = 0xfb40;\n        t.nundageshhebrew = 0xfb40;\n        t.nunhebrew = 0x05e0;\n        t.nvsquare = 0x33b5;\n        t.nwsquare = 0x33bb;\n        t.nyabengali = 0x099e;\n        t.nyadeva = 0x091e;\n        t.nyagujarati = 0x0a9e;\n        t.nyagurmukhi = 0x0a1e;\n        t.o = 0x006f;\n        t.oacute = 0x00f3;\n        t.oangthai = 0x0e2d;\n        t.obarred = 0x0275;\n        t.obarredcyrillic = 0x04e9;\n        t.obarreddieresiscyrillic = 0x04eb;\n        t.obengali = 0x0993;\n        t.obopomofo = 0x311b;\n        t.obreve = 0x014f;\n        t.ocandradeva = 0x0911;\n        t.ocandragujarati = 0x0a91;\n        t.ocandravowelsigndeva = 0x0949;\n        t.ocandravowelsigngujarati = 0x0ac9;\n        t.ocaron = 0x01d2;\n        t.ocircle = 0x24de;\n        t.ocircumflex = 0x00f4;\n        t.ocircumflexacute = 0x1ed1;\n        t.ocircumflexdotbelow = 0x1ed9;\n        t.ocircumflexgrave = 0x1ed3;\n        t.ocircumflexhookabove = 0x1ed5;\n        t.ocircumflextilde = 0x1ed7;\n        t.ocyrillic = 0x043e;\n        t.odblacute = 0x0151;\n        t.odblgrave = 0x020d;\n        t.odeva = 0x0913;\n        t.odieresis = 0x00f6;\n        t.odieresiscyrillic = 0x04e7;\n        t.odotbelow = 0x1ecd;\n        t.oe = 0x0153;\n        t.oekorean = 0x315a;\n        t.ogonek = 0x02db;\n        t.ogonekcmb = 0x0328;\n        t.ograve = 0x00f2;\n        t.ogujarati = 0x0a93;\n        t.oharmenian = 0x0585;\n        t.ohiragana = 0x304a;\n        t.ohookabove = 0x1ecf;\n        t.ohorn = 0x01a1;\n        t.ohornacute = 0x1edb;\n        t.ohorndotbelow = 0x1ee3;\n        t.ohorngrave = 0x1edd;\n        t.ohornhookabove = 0x1edf;\n        t.ohorntilde = 0x1ee1;\n        t.ohungarumlaut = 0x0151;\n        t.oi = 0x01a3;\n        t.oinvertedbreve = 0x020f;\n        t.okatakana = 0x30aa;\n        t.okatakanahalfwidth = 0xff75;\n        t.okorean = 0x3157;\n        t.olehebrew = 0x05ab;\n        t.omacron = 0x014d;\n        t.omacronacute = 0x1e53;\n        t.omacrongrave = 0x1e51;\n        t.omdeva = 0x0950;\n        t.omega = 0x03c9;\n        t.omega1 = 0x03d6;\n        t.omegacyrillic = 0x0461;\n        t.omegalatinclosed = 0x0277;\n        t.omegaroundcyrillic = 0x047b;\n        t.omegatitlocyrillic = 0x047d;\n        t.omegatonos = 0x03ce;\n        t.omgujarati = 0x0ad0;\n        t.omicron = 0x03bf;\n        t.omicrontonos = 0x03cc;\n        t.omonospace = 0xff4f;\n        t.one = 0x0031;\n        t.onearabic = 0x0661;\n        t.onebengali = 0x09e7;\n        t.onecircle = 0x2460;\n        t.onecircleinversesansserif = 0x278a;\n        t.onedeva = 0x0967;\n        t.onedotenleader = 0x2024;\n        t.oneeighth = 0x215b;\n        t.onefitted = 0xf6dc;\n        t.onegujarati = 0x0ae7;\n        t.onegurmukhi = 0x0a67;\n        t.onehackarabic = 0x0661;\n        t.onehalf = 0x00bd;\n        t.onehangzhou = 0x3021;\n        t.oneideographicparen = 0x3220;\n        t.oneinferior = 0x2081;\n        t.onemonospace = 0xff11;\n        t.onenumeratorbengali = 0x09f4;\n        t.oneoldstyle = 0xf731;\n        t.oneparen = 0x2474;\n        t.oneperiod = 0x2488;\n        t.onepersian = 0x06f1;\n        t.onequarter = 0x00bc;\n        t.oneroman = 0x2170;\n        t.onesuperior = 0x00b9;\n        t.onethai = 0x0e51;\n        t.onethird = 0x2153;\n        t.oogonek = 0x01eb;\n        t.oogonekmacron = 0x01ed;\n        t.oogurmukhi = 0x0a13;\n        t.oomatragurmukhi = 0x0a4b;\n        t.oopen = 0x0254;\n        t.oparen = 0x24aa;\n        t.openbullet = 0x25e6;\n        t.option = 0x2325;\n        t.ordfeminine = 0x00aa;\n        t.ordmasculine = 0x00ba;\n        t.orthogonal = 0x221f;\n        t.oshortdeva = 0x0912;\n        t.oshortvowelsigndeva = 0x094a;\n        t.oslash = 0x00f8;\n        t.oslashacute = 0x01ff;\n        t.osmallhiragana = 0x3049;\n        t.osmallkatakana = 0x30a9;\n        t.osmallkatakanahalfwidth = 0xff6b;\n        t.ostrokeacute = 0x01ff;\n        t.osuperior = 0xf6f0;\n        t.otcyrillic = 0x047f;\n        t.otilde = 0x00f5;\n        t.otildeacute = 0x1e4d;\n        t.otildedieresis = 0x1e4f;\n        t.oubopomofo = 0x3121;\n        t.overline = 0x203e;\n        t.overlinecenterline = 0xfe4a;\n        t.overlinecmb = 0x0305;\n        t.overlinedashed = 0xfe49;\n        t.overlinedblwavy = 0xfe4c;\n        t.overlinewavy = 0xfe4b;\n        t.overscore = 0x00af;\n        t.ovowelsignbengali = 0x09cb;\n        t.ovowelsigndeva = 0x094b;\n        t.ovowelsigngujarati = 0x0acb;\n        t.p = 0x0070;\n        t.paampssquare = 0x3380;\n        t.paasentosquare = 0x332b;\n        t.pabengali = 0x09aa;\n        t.pacute = 0x1e55;\n        t.padeva = 0x092a;\n        t.pagedown = 0x21df;\n        t.pageup = 0x21de;\n        t.pagujarati = 0x0aaa;\n        t.pagurmukhi = 0x0a2a;\n        t.pahiragana = 0x3071;\n        t.paiyannoithai = 0x0e2f;\n        t.pakatakana = 0x30d1;\n        t.palatalizationcyrilliccmb = 0x0484;\n        t.palochkacyrillic = 0x04c0;\n        t.pansioskorean = 0x317f;\n        t.paragraph = 0x00b6;\n        t.parallel = 0x2225;\n        t.parenleft = 0x0028;\n        t.parenleftaltonearabic = 0xfd3e;\n        t.parenleftbt = 0xf8ed;\n        t.parenleftex = 0xf8ec;\n        t.parenleftinferior = 0x208d;\n        t.parenleftmonospace = 0xff08;\n        t.parenleftsmall = 0xfe59;\n        t.parenleftsuperior = 0x207d;\n        t.parenlefttp = 0xf8eb;\n        t.parenleftvertical = 0xfe35;\n        t.parenright = 0x0029;\n        t.parenrightaltonearabic = 0xfd3f;\n        t.parenrightbt = 0xf8f8;\n        t.parenrightex = 0xf8f7;\n        t.parenrightinferior = 0x208e;\n        t.parenrightmonospace = 0xff09;\n        t.parenrightsmall = 0xfe5a;\n        t.parenrightsuperior = 0x207e;\n        t.parenrighttp = 0xf8f6;\n        t.parenrightvertical = 0xfe36;\n        t.partialdiff = 0x2202;\n        t.paseqhebrew = 0x05c0;\n        t.pashtahebrew = 0x0599;\n        t.pasquare = 0x33a9;\n        t.patah = 0x05b7;\n        t.patah11 = 0x05b7;\n        t.patah1d = 0x05b7;\n        t.patah2a = 0x05b7;\n        t.patahhebrew = 0x05b7;\n        t.patahnarrowhebrew = 0x05b7;\n        t.patahquarterhebrew = 0x05b7;\n        t.patahwidehebrew = 0x05b7;\n        t.pazerhebrew = 0x05a1;\n        t.pbopomofo = 0x3106;\n        t.pcircle = 0x24df;\n        t.pdotaccent = 0x1e57;\n        t.pe = 0x05e4;\n        t.pecyrillic = 0x043f;\n        t.pedagesh = 0xfb44;\n        t.pedageshhebrew = 0xfb44;\n        t.peezisquare = 0x333b;\n        t.pefinaldageshhebrew = 0xfb43;\n        t.peharabic = 0x067e;\n        t.peharmenian = 0x057a;\n        t.pehebrew = 0x05e4;\n        t.pehfinalarabic = 0xfb57;\n        t.pehinitialarabic = 0xfb58;\n        t.pehiragana = 0x307a;\n        t.pehmedialarabic = 0xfb59;\n        t.pekatakana = 0x30da;\n        t.pemiddlehookcyrillic = 0x04a7;\n        t.perafehebrew = 0xfb4e;\n        t.percent = 0x0025;\n        t.percentarabic = 0x066a;\n        t.percentmonospace = 0xff05;\n        t.percentsmall = 0xfe6a;\n        t.period = 0x002e;\n        t.periodarmenian = 0x0589;\n        t.periodcentered = 0x00b7;\n        t.periodhalfwidth = 0xff61;\n        t.periodinferior = 0xf6e7;\n        t.periodmonospace = 0xff0e;\n        t.periodsmall = 0xfe52;\n        t.periodsuperior = 0xf6e8;\n        t.perispomenigreekcmb = 0x0342;\n        t.perpendicular = 0x22a5;\n        t.perthousand = 0x2030;\n        t.peseta = 0x20a7;\n        t.pfsquare = 0x338a;\n        t.phabengali = 0x09ab;\n        t.phadeva = 0x092b;\n        t.phagujarati = 0x0aab;\n        t.phagurmukhi = 0x0a2b;\n        t.phi = 0x03c6;\n        t.phi1 = 0x03d5;\n        t.phieuphacirclekorean = 0x327a;\n        t.phieuphaparenkorean = 0x321a;\n        t.phieuphcirclekorean = 0x326c;\n        t.phieuphkorean = 0x314d;\n        t.phieuphparenkorean = 0x320c;\n        t.philatin = 0x0278;\n        t.phinthuthai = 0x0e3a;\n        t.phisymbolgreek = 0x03d5;\n        t.phook = 0x01a5;\n        t.phophanthai = 0x0e1e;\n        t.phophungthai = 0x0e1c;\n        t.phosamphaothai = 0x0e20;\n        t.pi = 0x03c0;\n        t.pieupacirclekorean = 0x3273;\n        t.pieupaparenkorean = 0x3213;\n        t.pieupcieuckorean = 0x3176;\n        t.pieupcirclekorean = 0x3265;\n        t.pieupkiyeokkorean = 0x3172;\n        t.pieupkorean = 0x3142;\n        t.pieupparenkorean = 0x3205;\n        t.pieupsioskiyeokkorean = 0x3174;\n        t.pieupsioskorean = 0x3144;\n        t.pieupsiostikeutkorean = 0x3175;\n        t.pieupthieuthkorean = 0x3177;\n        t.pieuptikeutkorean = 0x3173;\n        t.pihiragana = 0x3074;\n        t.pikatakana = 0x30d4;\n        t.pisymbolgreek = 0x03d6;\n        t.piwrarmenian = 0x0583;\n        t.plus = 0x002b;\n        t.plusbelowcmb = 0x031f;\n        t.pluscircle = 0x2295;\n        t.plusminus = 0x00b1;\n        t.plusmod = 0x02d6;\n        t.plusmonospace = 0xff0b;\n        t.plussmall = 0xfe62;\n        t.plussuperior = 0x207a;\n        t.pmonospace = 0xff50;\n        t.pmsquare = 0x33d8;\n        t.pohiragana = 0x307d;\n        t.pointingindexdownwhite = 0x261f;\n        t.pointingindexleftwhite = 0x261c;\n        t.pointingindexrightwhite = 0x261e;\n        t.pointingindexupwhite = 0x261d;\n        t.pokatakana = 0x30dd;\n        t.poplathai = 0x0e1b;\n        t.postalmark = 0x3012;\n        t.postalmarkface = 0x3020;\n        t.pparen = 0x24ab;\n        t.precedes = 0x227a;\n        t.prescription = 0x211e;\n        t.primemod = 0x02b9;\n        t.primereversed = 0x2035;\n        t.product = 0x220f;\n        t.projective = 0x2305;\n        t.prolongedkana = 0x30fc;\n        t.propellor = 0x2318;\n        t.propersubset = 0x2282;\n        t.propersuperset = 0x2283;\n        t.proportion = 0x2237;\n        t.proportional = 0x221d;\n        t.psi = 0x03c8;\n        t.psicyrillic = 0x0471;\n        t.psilipneumatacyrilliccmb = 0x0486;\n        t.pssquare = 0x33b0;\n        t.puhiragana = 0x3077;\n        t.pukatakana = 0x30d7;\n        t.pvsquare = 0x33b4;\n        t.pwsquare = 0x33ba;\n        t.q = 0x0071;\n        t.qadeva = 0x0958;\n        t.qadmahebrew = 0x05a8;\n        t.qafarabic = 0x0642;\n        t.qaffinalarabic = 0xfed6;\n        t.qafinitialarabic = 0xfed7;\n        t.qafmedialarabic = 0xfed8;\n        t.qamats = 0x05b8;\n        t.qamats10 = 0x05b8;\n        t.qamats1a = 0x05b8;\n        t.qamats1c = 0x05b8;\n        t.qamats27 = 0x05b8;\n        t.qamats29 = 0x05b8;\n        t.qamats33 = 0x05b8;\n        t.qamatsde = 0x05b8;\n        t.qamatshebrew = 0x05b8;\n        t.qamatsnarrowhebrew = 0x05b8;\n        t.qamatsqatanhebrew = 0x05b8;\n        t.qamatsqatannarrowhebrew = 0x05b8;\n        t.qamatsqatanquarterhebrew = 0x05b8;\n        t.qamatsqatanwidehebrew = 0x05b8;\n        t.qamatsquarterhebrew = 0x05b8;\n        t.qamatswidehebrew = 0x05b8;\n        t.qarneyparahebrew = 0x059f;\n        t.qbopomofo = 0x3111;\n        t.qcircle = 0x24e0;\n        t.qhook = 0x02a0;\n        t.qmonospace = 0xff51;\n        t.qof = 0x05e7;\n        t.qofdagesh = 0xfb47;\n        t.qofdageshhebrew = 0xfb47;\n        t.qofhebrew = 0x05e7;\n        t.qparen = 0x24ac;\n        t.quarternote = 0x2669;\n        t.qubuts = 0x05bb;\n        t.qubuts18 = 0x05bb;\n        t.qubuts25 = 0x05bb;\n        t.qubuts31 = 0x05bb;\n        t.qubutshebrew = 0x05bb;\n        t.qubutsnarrowhebrew = 0x05bb;\n        t.qubutsquarterhebrew = 0x05bb;\n        t.qubutswidehebrew = 0x05bb;\n        t.question = 0x003f;\n        t.questionarabic = 0x061f;\n        t.questionarmenian = 0x055e;\n        t.questiondown = 0x00bf;\n        t.questiondownsmall = 0xf7bf;\n        t.questiongreek = 0x037e;\n        t.questionmonospace = 0xff1f;\n        t.questionsmall = 0xf73f;\n        t.quotedbl = 0x0022;\n        t.quotedblbase = 0x201e;\n        t.quotedblleft = 0x201c;\n        t.quotedblmonospace = 0xff02;\n        t.quotedblprime = 0x301e;\n        t.quotedblprimereversed = 0x301d;\n        t.quotedblright = 0x201d;\n        t.quoteleft = 0x2018;\n        t.quoteleftreversed = 0x201b;\n        t.quotereversed = 0x201b;\n        t.quoteright = 0x2019;\n        t.quoterightn = 0x0149;\n        t.quotesinglbase = 0x201a;\n        t.quotesingle = 0x0027;\n        t.quotesinglemonospace = 0xff07;\n        t.r = 0x0072;\n        t.raarmenian = 0x057c;\n        t.rabengali = 0x09b0;\n        t.racute = 0x0155;\n        t.radeva = 0x0930;\n        t.radical = 0x221a;\n        t.radicalex = 0xf8e5;\n        t.radoverssquare = 0x33ae;\n        t.radoverssquaredsquare = 0x33af;\n        t.radsquare = 0x33ad;\n        t.rafe = 0x05bf;\n        t.rafehebrew = 0x05bf;\n        t.ragujarati = 0x0ab0;\n        t.ragurmukhi = 0x0a30;\n        t.rahiragana = 0x3089;\n        t.rakatakana = 0x30e9;\n        t.rakatakanahalfwidth = 0xff97;\n        t.ralowerdiagonalbengali = 0x09f1;\n        t.ramiddlediagonalbengali = 0x09f0;\n        t.ramshorn = 0x0264;\n        t.ratio = 0x2236;\n        t.rbopomofo = 0x3116;\n        t.rcaron = 0x0159;\n        t.rcedilla = 0x0157;\n        t.rcircle = 0x24e1;\n        t.rcommaaccent = 0x0157;\n        t.rdblgrave = 0x0211;\n        t.rdotaccent = 0x1e59;\n        t.rdotbelow = 0x1e5b;\n        t.rdotbelowmacron = 0x1e5d;\n        t.referencemark = 0x203b;\n        t.reflexsubset = 0x2286;\n        t.reflexsuperset = 0x2287;\n        t.registered = 0x00ae;\n        t.registersans = 0xf8e8;\n        t.registerserif = 0xf6da;\n        t.reharabic = 0x0631;\n        t.reharmenian = 0x0580;\n        t.rehfinalarabic = 0xfeae;\n        t.rehiragana = 0x308c;\n        t.rekatakana = 0x30ec;\n        t.rekatakanahalfwidth = 0xff9a;\n        t.resh = 0x05e8;\n        t.reshdageshhebrew = 0xfb48;\n        t.reshhebrew = 0x05e8;\n        t.reversedtilde = 0x223d;\n        t.reviahebrew = 0x0597;\n        t.reviamugrashhebrew = 0x0597;\n        t.revlogicalnot = 0x2310;\n        t.rfishhook = 0x027e;\n        t.rfishhookreversed = 0x027f;\n        t.rhabengali = 0x09dd;\n        t.rhadeva = 0x095d;\n        t.rho = 0x03c1;\n        t.rhook = 0x027d;\n        t.rhookturned = 0x027b;\n        t.rhookturnedsuperior = 0x02b5;\n        t.rhosymbolgreek = 0x03f1;\n        t.rhotichookmod = 0x02de;\n        t.rieulacirclekorean = 0x3271;\n        t.rieulaparenkorean = 0x3211;\n        t.rieulcirclekorean = 0x3263;\n        t.rieulhieuhkorean = 0x3140;\n        t.rieulkiyeokkorean = 0x313a;\n        t.rieulkiyeoksioskorean = 0x3169;\n        t.rieulkorean = 0x3139;\n        t.rieulmieumkorean = 0x313b;\n        t.rieulpansioskorean = 0x316c;\n        t.rieulparenkorean = 0x3203;\n        t.rieulphieuphkorean = 0x313f;\n        t.rieulpieupkorean = 0x313c;\n        t.rieulpieupsioskorean = 0x316b;\n        t.rieulsioskorean = 0x313d;\n        t.rieulthieuthkorean = 0x313e;\n        t.rieultikeutkorean = 0x316a;\n        t.rieulyeorinhieuhkorean = 0x316d;\n        t.rightangle = 0x221f;\n        t.righttackbelowcmb = 0x0319;\n        t.righttriangle = 0x22bf;\n        t.rihiragana = 0x308a;\n        t.rikatakana = 0x30ea;\n        t.rikatakanahalfwidth = 0xff98;\n        t.ring = 0x02da;\n        t.ringbelowcmb = 0x0325;\n        t.ringcmb = 0x030a;\n        t.ringhalfleft = 0x02bf;\n        t.ringhalfleftarmenian = 0x0559;\n        t.ringhalfleftbelowcmb = 0x031c;\n        t.ringhalfleftcentered = 0x02d3;\n        t.ringhalfright = 0x02be;\n        t.ringhalfrightbelowcmb = 0x0339;\n        t.ringhalfrightcentered = 0x02d2;\n        t.rinvertedbreve = 0x0213;\n        t.rittorusquare = 0x3351;\n        t.rlinebelow = 0x1e5f;\n        t.rlongleg = 0x027c;\n        t.rlonglegturned = 0x027a;\n        t.rmonospace = 0xff52;\n        t.rohiragana = 0x308d;\n        t.rokatakana = 0x30ed;\n        t.rokatakanahalfwidth = 0xff9b;\n        t.roruathai = 0x0e23;\n        t.rparen = 0x24ad;\n        t.rrabengali = 0x09dc;\n        t.rradeva = 0x0931;\n        t.rragurmukhi = 0x0a5c;\n        t.rreharabic = 0x0691;\n        t.rrehfinalarabic = 0xfb8d;\n        t.rrvocalicbengali = 0x09e0;\n        t.rrvocalicdeva = 0x0960;\n        t.rrvocalicgujarati = 0x0ae0;\n        t.rrvocalicvowelsignbengali = 0x09c4;\n        t.rrvocalicvowelsigndeva = 0x0944;\n        t.rrvocalicvowelsigngujarati = 0x0ac4;\n        t.rsuperior = 0xf6f1;\n        t.rtblock = 0x2590;\n        t.rturned = 0x0279;\n        t.rturnedsuperior = 0x02b4;\n        t.ruhiragana = 0x308b;\n        t.rukatakana = 0x30eb;\n        t.rukatakanahalfwidth = 0xff99;\n        t.rupeemarkbengali = 0x09f2;\n        t.rupeesignbengali = 0x09f3;\n        t.rupiah = 0xf6dd;\n        t.ruthai = 0x0e24;\n        t.rvocalicbengali = 0x098b;\n        t.rvocalicdeva = 0x090b;\n        t.rvocalicgujarati = 0x0a8b;\n        t.rvocalicvowelsignbengali = 0x09c3;\n        t.rvocalicvowelsigndeva = 0x0943;\n        t.rvocalicvowelsigngujarati = 0x0ac3;\n        t.s = 0x0073;\n        t.sabengali = 0x09b8;\n        t.sacute = 0x015b;\n        t.sacutedotaccent = 0x1e65;\n        t.sadarabic = 0x0635;\n        t.sadeva = 0x0938;\n        t.sadfinalarabic = 0xfeba;\n        t.sadinitialarabic = 0xfebb;\n        t.sadmedialarabic = 0xfebc;\n        t.sagujarati = 0x0ab8;\n        t.sagurmukhi = 0x0a38;\n        t.sahiragana = 0x3055;\n        t.sakatakana = 0x30b5;\n        t.sakatakanahalfwidth = 0xff7b;\n        t.sallallahoualayhewasallamarabic = 0xfdfa;\n        t.samekh = 0x05e1;\n        t.samekhdagesh = 0xfb41;\n        t.samekhdageshhebrew = 0xfb41;\n        t.samekhhebrew = 0x05e1;\n        t.saraaathai = 0x0e32;\n        t.saraaethai = 0x0e41;\n        t.saraaimaimalaithai = 0x0e44;\n        t.saraaimaimuanthai = 0x0e43;\n        t.saraamthai = 0x0e33;\n        t.saraathai = 0x0e30;\n        t.saraethai = 0x0e40;\n        t.saraiileftthai = 0xf886;\n        t.saraiithai = 0x0e35;\n        t.saraileftthai = 0xf885;\n        t.saraithai = 0x0e34;\n        t.saraothai = 0x0e42;\n        t.saraueeleftthai = 0xf888;\n        t.saraueethai = 0x0e37;\n        t.saraueleftthai = 0xf887;\n        t.sarauethai = 0x0e36;\n        t.sarauthai = 0x0e38;\n        t.sarauuthai = 0x0e39;\n        t.sbopomofo = 0x3119;\n        t.scaron = 0x0161;\n        t.scarondotaccent = 0x1e67;\n        t.scedilla = 0x015f;\n        t.schwa = 0x0259;\n        t.schwacyrillic = 0x04d9;\n        t.schwadieresiscyrillic = 0x04db;\n        t.schwahook = 0x025a;\n        t.scircle = 0x24e2;\n        t.scircumflex = 0x015d;\n        t.scommaaccent = 0x0219;\n        t.sdotaccent = 0x1e61;\n        t.sdotbelow = 0x1e63;\n        t.sdotbelowdotaccent = 0x1e69;\n        t.seagullbelowcmb = 0x033c;\n        t.second = 0x2033;\n        t.secondtonechinese = 0x02ca;\n        t.section = 0x00a7;\n        t.seenarabic = 0x0633;\n        t.seenfinalarabic = 0xfeb2;\n        t.seeninitialarabic = 0xfeb3;\n        t.seenmedialarabic = 0xfeb4;\n        t.segol = 0x05b6;\n        t.segol13 = 0x05b6;\n        t.segol1f = 0x05b6;\n        t.segol2c = 0x05b6;\n        t.segolhebrew = 0x05b6;\n        t.segolnarrowhebrew = 0x05b6;\n        t.segolquarterhebrew = 0x05b6;\n        t.segoltahebrew = 0x0592;\n        t.segolwidehebrew = 0x05b6;\n        t.seharmenian = 0x057d;\n        t.sehiragana = 0x305b;\n        t.sekatakana = 0x30bb;\n        t.sekatakanahalfwidth = 0xff7e;\n        t.semicolon = 0x003b;\n        t.semicolonarabic = 0x061b;\n        t.semicolonmonospace = 0xff1b;\n        t.semicolonsmall = 0xfe54;\n        t.semivoicedmarkkana = 0x309c;\n        t.semivoicedmarkkanahalfwidth = 0xff9f;\n        t.sentisquare = 0x3322;\n        t.sentosquare = 0x3323;\n        t.seven = 0x0037;\n        t.sevenarabic = 0x0667;\n        t.sevenbengali = 0x09ed;\n        t.sevencircle = 0x2466;\n        t.sevencircleinversesansserif = 0x2790;\n        t.sevendeva = 0x096d;\n        t.seveneighths = 0x215e;\n        t.sevengujarati = 0x0aed;\n        t.sevengurmukhi = 0x0a6d;\n        t.sevenhackarabic = 0x0667;\n        t.sevenhangzhou = 0x3027;\n        t.sevenideographicparen = 0x3226;\n        t.seveninferior = 0x2087;\n        t.sevenmonospace = 0xff17;\n        t.sevenoldstyle = 0xf737;\n        t.sevenparen = 0x247a;\n        t.sevenperiod = 0x248e;\n        t.sevenpersian = 0x06f7;\n        t.sevenroman = 0x2176;\n        t.sevensuperior = 0x2077;\n        t.seventeencircle = 0x2470;\n        t.seventeenparen = 0x2484;\n        t.seventeenperiod = 0x2498;\n        t.seventhai = 0x0e57;\n        t.sfthyphen = 0x00ad;\n        t.shaarmenian = 0x0577;\n        t.shabengali = 0x09b6;\n        t.shacyrillic = 0x0448;\n        t.shaddaarabic = 0x0651;\n        t.shaddadammaarabic = 0xfc61;\n        t.shaddadammatanarabic = 0xfc5e;\n        t.shaddafathaarabic = 0xfc60;\n        t.shaddakasraarabic = 0xfc62;\n        t.shaddakasratanarabic = 0xfc5f;\n        t.shade = 0x2592;\n        t.shadedark = 0x2593;\n        t.shadelight = 0x2591;\n        t.shademedium = 0x2592;\n        t.shadeva = 0x0936;\n        t.shagujarati = 0x0ab6;\n        t.shagurmukhi = 0x0a36;\n        t.shalshelethebrew = 0x0593;\n        t.shbopomofo = 0x3115;\n        t.shchacyrillic = 0x0449;\n        t.sheenarabic = 0x0634;\n        t.sheenfinalarabic = 0xfeb6;\n        t.sheeninitialarabic = 0xfeb7;\n        t.sheenmedialarabic = 0xfeb8;\n        t.sheicoptic = 0x03e3;\n        t.sheqel = 0x20aa;\n        t.sheqelhebrew = 0x20aa;\n        t.sheva = 0x05b0;\n        t.sheva115 = 0x05b0;\n        t.sheva15 = 0x05b0;\n        t.sheva22 = 0x05b0;\n        t.sheva2e = 0x05b0;\n        t.shevahebrew = 0x05b0;\n        t.shevanarrowhebrew = 0x05b0;\n        t.shevaquarterhebrew = 0x05b0;\n        t.shevawidehebrew = 0x05b0;\n        t.shhacyrillic = 0x04bb;\n        t.shimacoptic = 0x03ed;\n        t.shin = 0x05e9;\n        t.shindagesh = 0xfb49;\n        t.shindageshhebrew = 0xfb49;\n        t.shindageshshindot = 0xfb2c;\n        t.shindageshshindothebrew = 0xfb2c;\n        t.shindageshsindot = 0xfb2d;\n        t.shindageshsindothebrew = 0xfb2d;\n        t.shindothebrew = 0x05c1;\n        t.shinhebrew = 0x05e9;\n        t.shinshindot = 0xfb2a;\n        t.shinshindothebrew = 0xfb2a;\n        t.shinsindot = 0xfb2b;\n        t.shinsindothebrew = 0xfb2b;\n        t.shook = 0x0282;\n        t.sigma = 0x03c3;\n        t.sigma1 = 0x03c2;\n        t.sigmafinal = 0x03c2;\n        t.sigmalunatesymbolgreek = 0x03f2;\n        t.sihiragana = 0x3057;\n        t.sikatakana = 0x30b7;\n        t.sikatakanahalfwidth = 0xff7c;\n        t.siluqhebrew = 0x05bd;\n        t.siluqlefthebrew = 0x05bd;\n        t.similar = 0x223c;\n        t.sindothebrew = 0x05c2;\n        t.siosacirclekorean = 0x3274;\n        t.siosaparenkorean = 0x3214;\n        t.sioscieuckorean = 0x317e;\n        t.sioscirclekorean = 0x3266;\n        t.sioskiyeokkorean = 0x317a;\n        t.sioskorean = 0x3145;\n        t.siosnieunkorean = 0x317b;\n        t.siosparenkorean = 0x3206;\n        t.siospieupkorean = 0x317d;\n        t.siostikeutkorean = 0x317c;\n        t.six = 0x0036;\n        t.sixarabic = 0x0666;\n        t.sixbengali = 0x09ec;\n        t.sixcircle = 0x2465;\n        t.sixcircleinversesansserif = 0x278f;\n        t.sixdeva = 0x096c;\n        t.sixgujarati = 0x0aec;\n        t.sixgurmukhi = 0x0a6c;\n        t.sixhackarabic = 0x0666;\n        t.sixhangzhou = 0x3026;\n        t.sixideographicparen = 0x3225;\n        t.sixinferior = 0x2086;\n        t.sixmonospace = 0xff16;\n        t.sixoldstyle = 0xf736;\n        t.sixparen = 0x2479;\n        t.sixperiod = 0x248d;\n        t.sixpersian = 0x06f6;\n        t.sixroman = 0x2175;\n        t.sixsuperior = 0x2076;\n        t.sixteencircle = 0x246f;\n        t.sixteencurrencydenominatorbengali = 0x09f9;\n        t.sixteenparen = 0x2483;\n        t.sixteenperiod = 0x2497;\n        t.sixthai = 0x0e56;\n        t.slash = 0x002f;\n        t.slashmonospace = 0xff0f;\n        t.slong = 0x017f;\n        t.slongdotaccent = 0x1e9b;\n        t.smileface = 0x263a;\n        t.smonospace = 0xff53;\n        t.sofpasuqhebrew = 0x05c3;\n        t.softhyphen = 0x00ad;\n        t.softsigncyrillic = 0x044c;\n        t.sohiragana = 0x305d;\n        t.sokatakana = 0x30bd;\n        t.sokatakanahalfwidth = 0xff7f;\n        t.soliduslongoverlaycmb = 0x0338;\n        t.solidusshortoverlaycmb = 0x0337;\n        t.sorusithai = 0x0e29;\n        t.sosalathai = 0x0e28;\n        t.sosothai = 0x0e0b;\n        t.sosuathai = 0x0e2a;\n        t.space = 0x0020;\n        t.spacehackarabic = 0x0020;\n        t.spade = 0x2660;\n        t.spadesuitblack = 0x2660;\n        t.spadesuitwhite = 0x2664;\n        t.sparen = 0x24ae;\n        t.squarebelowcmb = 0x033b;\n        t.squarecc = 0x33c4;\n        t.squarecm = 0x339d;\n        t.squarediagonalcrosshatchfill = 0x25a9;\n        t.squarehorizontalfill = 0x25a4;\n        t.squarekg = 0x338f;\n        t.squarekm = 0x339e;\n        t.squarekmcapital = 0x33ce;\n        t.squareln = 0x33d1;\n        t.squarelog = 0x33d2;\n        t.squaremg = 0x338e;\n        t.squaremil = 0x33d5;\n        t.squaremm = 0x339c;\n        t.squaremsquared = 0x33a1;\n        t.squareorthogonalcrosshatchfill = 0x25a6;\n        t.squareupperlefttolowerrightfill = 0x25a7;\n        t.squareupperrighttolowerleftfill = 0x25a8;\n        t.squareverticalfill = 0x25a5;\n        t.squarewhitewithsmallblack = 0x25a3;\n        t.srsquare = 0x33db;\n        t.ssabengali = 0x09b7;\n        t.ssadeva = 0x0937;\n        t.ssagujarati = 0x0ab7;\n        t.ssangcieuckorean = 0x3149;\n        t.ssanghieuhkorean = 0x3185;\n        t.ssangieungkorean = 0x3180;\n        t.ssangkiyeokkorean = 0x3132;\n        t.ssangnieunkorean = 0x3165;\n        t.ssangpieupkorean = 0x3143;\n        t.ssangsioskorean = 0x3146;\n        t.ssangtikeutkorean = 0x3138;\n        t.ssuperior = 0xf6f2;\n        t.sterling = 0x00a3;\n        t.sterlingmonospace = 0xffe1;\n        t.strokelongoverlaycmb = 0x0336;\n        t.strokeshortoverlaycmb = 0x0335;\n        t.subset = 0x2282;\n        t.subsetnotequal = 0x228a;\n        t.subsetorequal = 0x2286;\n        t.succeeds = 0x227b;\n        t.suchthat = 0x220b;\n        t.suhiragana = 0x3059;\n        t.sukatakana = 0x30b9;\n        t.sukatakanahalfwidth = 0xff7d;\n        t.sukunarabic = 0x0652;\n        t.summation = 0x2211;\n        t.sun = 0x263c;\n        t.superset = 0x2283;\n        t.supersetnotequal = 0x228b;\n        t.supersetorequal = 0x2287;\n        t.svsquare = 0x33dc;\n        t.syouwaerasquare = 0x337c;\n        t.t = 0x0074;\n        t.tabengali = 0x09a4;\n        t.tackdown = 0x22a4;\n        t.tackleft = 0x22a3;\n        t.tadeva = 0x0924;\n        t.tagujarati = 0x0aa4;\n        t.tagurmukhi = 0x0a24;\n        t.taharabic = 0x0637;\n        t.tahfinalarabic = 0xfec2;\n        t.tahinitialarabic = 0xfec3;\n        t.tahiragana = 0x305f;\n        t.tahmedialarabic = 0xfec4;\n        t.taisyouerasquare = 0x337d;\n        t.takatakana = 0x30bf;\n        t.takatakanahalfwidth = 0xff80;\n        t.tatweelarabic = 0x0640;\n        t.tau = 0x03c4;\n        t.tav = 0x05ea;\n        t.tavdages = 0xfb4a;\n        t.tavdagesh = 0xfb4a;\n        t.tavdageshhebrew = 0xfb4a;\n        t.tavhebrew = 0x05ea;\n        t.tbar = 0x0167;\n        t.tbopomofo = 0x310a;\n        t.tcaron = 0x0165;\n        t.tccurl = 0x02a8;\n        t.tcedilla = 0x0163;\n        t.tcheharabic = 0x0686;\n        t.tchehfinalarabic = 0xfb7b;\n        t.tchehinitialarabic = 0xfb7c;\n        t.tchehmedialarabic = 0xfb7d;\n        t.tcircle = 0x24e3;\n        t.tcircumflexbelow = 0x1e71;\n        t.tcommaaccent = 0x0163;\n        t.tdieresis = 0x1e97;\n        t.tdotaccent = 0x1e6b;\n        t.tdotbelow = 0x1e6d;\n        t.tecyrillic = 0x0442;\n        t.tedescendercyrillic = 0x04ad;\n        t.teharabic = 0x062a;\n        t.tehfinalarabic = 0xfe96;\n        t.tehhahinitialarabic = 0xfca2;\n        t.tehhahisolatedarabic = 0xfc0c;\n        t.tehinitialarabic = 0xfe97;\n        t.tehiragana = 0x3066;\n        t.tehjeeminitialarabic = 0xfca1;\n        t.tehjeemisolatedarabic = 0xfc0b;\n        t.tehmarbutaarabic = 0x0629;\n        t.tehmarbutafinalarabic = 0xfe94;\n        t.tehmedialarabic = 0xfe98;\n        t.tehmeeminitialarabic = 0xfca4;\n        t.tehmeemisolatedarabic = 0xfc0e;\n        t.tehnoonfinalarabic = 0xfc73;\n        t.tekatakana = 0x30c6;\n        t.tekatakanahalfwidth = 0xff83;\n        t.telephone = 0x2121;\n        t.telephoneblack = 0x260e;\n        t.telishagedolahebrew = 0x05a0;\n        t.telishaqetanahebrew = 0x05a9;\n        t.tencircle = 0x2469;\n        t.tenideographicparen = 0x3229;\n        t.tenparen = 0x247d;\n        t.tenperiod = 0x2491;\n        t.tenroman = 0x2179;\n        t.tesh = 0x02a7;\n        t.tet = 0x05d8;\n        t.tetdagesh = 0xfb38;\n        t.tetdageshhebrew = 0xfb38;\n        t.tethebrew = 0x05d8;\n        t.tetsecyrillic = 0x04b5;\n        t.tevirhebrew = 0x059b;\n        t.tevirlefthebrew = 0x059b;\n        t.thabengali = 0x09a5;\n        t.thadeva = 0x0925;\n        t.thagujarati = 0x0aa5;\n        t.thagurmukhi = 0x0a25;\n        t.thalarabic = 0x0630;\n        t.thalfinalarabic = 0xfeac;\n        t.thanthakhatlowleftthai = 0xf898;\n        t.thanthakhatlowrightthai = 0xf897;\n        t.thanthakhatthai = 0x0e4c;\n        t.thanthakhatupperleftthai = 0xf896;\n        t.theharabic = 0x062b;\n        t.thehfinalarabic = 0xfe9a;\n        t.thehinitialarabic = 0xfe9b;\n        t.thehmedialarabic = 0xfe9c;\n        t.thereexists = 0x2203;\n        t.therefore = 0x2234;\n        t.theta = 0x03b8;\n        t.theta1 = 0x03d1;\n        t.thetasymbolgreek = 0x03d1;\n        t.thieuthacirclekorean = 0x3279;\n        t.thieuthaparenkorean = 0x3219;\n        t.thieuthcirclekorean = 0x326b;\n        t.thieuthkorean = 0x314c;\n        t.thieuthparenkorean = 0x320b;\n        t.thirteencircle = 0x246c;\n        t.thirteenparen = 0x2480;\n        t.thirteenperiod = 0x2494;\n        t.thonangmonthothai = 0x0e11;\n        t.thook = 0x01ad;\n        t.thophuthaothai = 0x0e12;\n        t.thorn = 0x00fe;\n        t.thothahanthai = 0x0e17;\n        t.thothanthai = 0x0e10;\n        t.thothongthai = 0x0e18;\n        t.thothungthai = 0x0e16;\n        t.thousandcyrillic = 0x0482;\n        t.thousandsseparatorarabic = 0x066c;\n        t.thousandsseparatorpersian = 0x066c;\n        t.three = 0x0033;\n        t.threearabic = 0x0663;\n        t.threebengali = 0x09e9;\n        t.threecircle = 0x2462;\n        t.threecircleinversesansserif = 0x278c;\n        t.threedeva = 0x0969;\n        t.threeeighths = 0x215c;\n        t.threegujarati = 0x0ae9;\n        t.threegurmukhi = 0x0a69;\n        t.threehackarabic = 0x0663;\n        t.threehangzhou = 0x3023;\n        t.threeideographicparen = 0x3222;\n        t.threeinferior = 0x2083;\n        t.threemonospace = 0xff13;\n        t.threenumeratorbengali = 0x09f6;\n        t.threeoldstyle = 0xf733;\n        t.threeparen = 0x2476;\n        t.threeperiod = 0x248a;\n        t.threepersian = 0x06f3;\n        t.threequarters = 0x00be;\n        t.threequartersemdash = 0xf6de;\n        t.threeroman = 0x2172;\n        t.threesuperior = 0x00b3;\n        t.threethai = 0x0e53;\n        t.thzsquare = 0x3394;\n        t.tihiragana = 0x3061;\n        t.tikatakana = 0x30c1;\n        t.tikatakanahalfwidth = 0xff81;\n        t.tikeutacirclekorean = 0x3270;\n        t.tikeutaparenkorean = 0x3210;\n        t.tikeutcirclekorean = 0x3262;\n        t.tikeutkorean = 0x3137;\n        t.tikeutparenkorean = 0x3202;\n        t.tilde = 0x02dc;\n        t.tildebelowcmb = 0x0330;\n        t.tildecmb = 0x0303;\n        t.tildecomb = 0x0303;\n        t.tildedoublecmb = 0x0360;\n        t.tildeoperator = 0x223c;\n        t.tildeoverlaycmb = 0x0334;\n        t.tildeverticalcmb = 0x033e;\n        t.timescircle = 0x2297;\n        t.tipehahebrew = 0x0596;\n        t.tipehalefthebrew = 0x0596;\n        t.tippigurmukhi = 0x0a70;\n        t.titlocyrilliccmb = 0x0483;\n        t.tiwnarmenian = 0x057f;\n        t.tlinebelow = 0x1e6f;\n        t.tmonospace = 0xff54;\n        t.toarmenian = 0x0569;\n        t.tohiragana = 0x3068;\n        t.tokatakana = 0x30c8;\n        t.tokatakanahalfwidth = 0xff84;\n        t.tonebarextrahighmod = 0x02e5;\n        t.tonebarextralowmod = 0x02e9;\n        t.tonebarhighmod = 0x02e6;\n        t.tonebarlowmod = 0x02e8;\n        t.tonebarmidmod = 0x02e7;\n        t.tonefive = 0x01bd;\n        t.tonesix = 0x0185;\n        t.tonetwo = 0x01a8;\n        t.tonos = 0x0384;\n        t.tonsquare = 0x3327;\n        t.topatakthai = 0x0e0f;\n        t.tortoiseshellbracketleft = 0x3014;\n        t.tortoiseshellbracketleftsmall = 0xfe5d;\n        t.tortoiseshellbracketleftvertical = 0xfe39;\n        t.tortoiseshellbracketright = 0x3015;\n        t.tortoiseshellbracketrightsmall = 0xfe5e;\n        t.tortoiseshellbracketrightvertical = 0xfe3a;\n        t.totaothai = 0x0e15;\n        t.tpalatalhook = 0x01ab;\n        t.tparen = 0x24af;\n        t.trademark = 0x2122;\n        t.trademarksans = 0xf8ea;\n        t.trademarkserif = 0xf6db;\n        t.tretroflexhook = 0x0288;\n        t.triagdn = 0x25bc;\n        t.triaglf = 0x25c4;\n        t.triagrt = 0x25ba;\n        t.triagup = 0x25b2;\n        t.ts = 0x02a6;\n        t.tsadi = 0x05e6;\n        t.tsadidagesh = 0xfb46;\n        t.tsadidageshhebrew = 0xfb46;\n        t.tsadihebrew = 0x05e6;\n        t.tsecyrillic = 0x0446;\n        t.tsere = 0x05b5;\n        t.tsere12 = 0x05b5;\n        t.tsere1e = 0x05b5;\n        t.tsere2b = 0x05b5;\n        t.tserehebrew = 0x05b5;\n        t.tserenarrowhebrew = 0x05b5;\n        t.tserequarterhebrew = 0x05b5;\n        t.tserewidehebrew = 0x05b5;\n        t.tshecyrillic = 0x045b;\n        t.tsuperior = 0xf6f3;\n        t.ttabengali = 0x099f;\n        t.ttadeva = 0x091f;\n        t.ttagujarati = 0x0a9f;\n        t.ttagurmukhi = 0x0a1f;\n        t.tteharabic = 0x0679;\n        t.ttehfinalarabic = 0xfb67;\n        t.ttehinitialarabic = 0xfb68;\n        t.ttehmedialarabic = 0xfb69;\n        t.tthabengali = 0x09a0;\n        t.tthadeva = 0x0920;\n        t.tthagujarati = 0x0aa0;\n        t.tthagurmukhi = 0x0a20;\n        t.tturned = 0x0287;\n        t.tuhiragana = 0x3064;\n        t.tukatakana = 0x30c4;\n        t.tukatakanahalfwidth = 0xff82;\n        t.tusmallhiragana = 0x3063;\n        t.tusmallkatakana = 0x30c3;\n        t.tusmallkatakanahalfwidth = 0xff6f;\n        t.twelvecircle = 0x246b;\n        t.twelveparen = 0x247f;\n        t.twelveperiod = 0x2493;\n        t.twelveroman = 0x217b;\n        t.twentycircle = 0x2473;\n        t.twentyhangzhou = 0x5344;\n        t.twentyparen = 0x2487;\n        t.twentyperiod = 0x249b;\n        t.two = 0x0032;\n        t.twoarabic = 0x0662;\n        t.twobengali = 0x09e8;\n        t.twocircle = 0x2461;\n        t.twocircleinversesansserif = 0x278b;\n        t.twodeva = 0x0968;\n        t.twodotenleader = 0x2025;\n        t.twodotleader = 0x2025;\n        t.twodotleadervertical = 0xfe30;\n        t.twogujarati = 0x0ae8;\n        t.twogurmukhi = 0x0a68;\n        t.twohackarabic = 0x0662;\n        t.twohangzhou = 0x3022;\n        t.twoideographicparen = 0x3221;\n        t.twoinferior = 0x2082;\n        t.twomonospace = 0xff12;\n        t.twonumeratorbengali = 0x09f5;\n        t.twooldstyle = 0xf732;\n        t.twoparen = 0x2475;\n        t.twoperiod = 0x2489;\n        t.twopersian = 0x06f2;\n        t.tworoman = 0x2171;\n        t.twostroke = 0x01bb;\n        t.twosuperior = 0x00b2;\n        t.twothai = 0x0e52;\n        t.twothirds = 0x2154;\n        t.u = 0x0075;\n        t.uacute = 0x00fa;\n        t.ubar = 0x0289;\n        t.ubengali = 0x0989;\n        t.ubopomofo = 0x3128;\n        t.ubreve = 0x016d;\n        t.ucaron = 0x01d4;\n        t.ucircle = 0x24e4;\n        t.ucircumflex = 0x00fb;\n        t.ucircumflexbelow = 0x1e77;\n        t.ucyrillic = 0x0443;\n        t.udattadeva = 0x0951;\n        t.udblacute = 0x0171;\n        t.udblgrave = 0x0215;\n        t.udeva = 0x0909;\n        t.udieresis = 0x00fc;\n        t.udieresisacute = 0x01d8;\n        t.udieresisbelow = 0x1e73;\n        t.udieresiscaron = 0x01da;\n        t.udieresiscyrillic = 0x04f1;\n        t.udieresisgrave = 0x01dc;\n        t.udieresismacron = 0x01d6;\n        t.udotbelow = 0x1ee5;\n        t.ugrave = 0x00f9;\n        t.ugujarati = 0x0a89;\n        t.ugurmukhi = 0x0a09;\n        t.uhiragana = 0x3046;\n        t.uhookabove = 0x1ee7;\n        t.uhorn = 0x01b0;\n        t.uhornacute = 0x1ee9;\n        t.uhorndotbelow = 0x1ef1;\n        t.uhorngrave = 0x1eeb;\n        t.uhornhookabove = 0x1eed;\n        t.uhorntilde = 0x1eef;\n        t.uhungarumlaut = 0x0171;\n        t.uhungarumlautcyrillic = 0x04f3;\n        t.uinvertedbreve = 0x0217;\n        t.ukatakana = 0x30a6;\n        t.ukatakanahalfwidth = 0xff73;\n        t.ukcyrillic = 0x0479;\n        t.ukorean = 0x315c;\n        t.umacron = 0x016b;\n        t.umacroncyrillic = 0x04ef;\n        t.umacrondieresis = 0x1e7b;\n        t.umatragurmukhi = 0x0a41;\n        t.umonospace = 0xff55;\n        t.underscore = 0x005f;\n        t.underscoredbl = 0x2017;\n        t.underscoremonospace = 0xff3f;\n        t.underscorevertical = 0xfe33;\n        t.underscorewavy = 0xfe4f;\n        t.union = 0x222a;\n        t.universal = 0x2200;\n        t.uogonek = 0x0173;\n        t.uparen = 0x24b0;\n        t.upblock = 0x2580;\n        t.upperdothebrew = 0x05c4;\n        t.upsilon = 0x03c5;\n        t.upsilondieresis = 0x03cb;\n        t.upsilondieresistonos = 0x03b0;\n        t.upsilonlatin = 0x028a;\n        t.upsilontonos = 0x03cd;\n        t.uptackbelowcmb = 0x031d;\n        t.uptackmod = 0x02d4;\n        t.uragurmukhi = 0x0a73;\n        t.uring = 0x016f;\n        t.ushortcyrillic = 0x045e;\n        t.usmallhiragana = 0x3045;\n        t.usmallkatakana = 0x30a5;\n        t.usmallkatakanahalfwidth = 0xff69;\n        t.ustraightcyrillic = 0x04af;\n        t.ustraightstrokecyrillic = 0x04b1;\n        t.utilde = 0x0169;\n        t.utildeacute = 0x1e79;\n        t.utildebelow = 0x1e75;\n        t.uubengali = 0x098a;\n        t.uudeva = 0x090a;\n        t.uugujarati = 0x0a8a;\n        t.uugurmukhi = 0x0a0a;\n        t.uumatragurmukhi = 0x0a42;\n        t.uuvowelsignbengali = 0x09c2;\n        t.uuvowelsigndeva = 0x0942;\n        t.uuvowelsigngujarati = 0x0ac2;\n        t.uvowelsignbengali = 0x09c1;\n        t.uvowelsigndeva = 0x0941;\n        t.uvowelsigngujarati = 0x0ac1;\n        t.v = 0x0076;\n        t.vadeva = 0x0935;\n        t.vagujarati = 0x0ab5;\n        t.vagurmukhi = 0x0a35;\n        t.vakatakana = 0x30f7;\n        t.vav = 0x05d5;\n        t.vavdagesh = 0xfb35;\n        t.vavdagesh65 = 0xfb35;\n        t.vavdageshhebrew = 0xfb35;\n        t.vavhebrew = 0x05d5;\n        t.vavholam = 0xfb4b;\n        t.vavholamhebrew = 0xfb4b;\n        t.vavvavhebrew = 0x05f0;\n        t.vavyodhebrew = 0x05f1;\n        t.vcircle = 0x24e5;\n        t.vdotbelow = 0x1e7f;\n        t.vecyrillic = 0x0432;\n        t.veharabic = 0x06a4;\n        t.vehfinalarabic = 0xfb6b;\n        t.vehinitialarabic = 0xfb6c;\n        t.vehmedialarabic = 0xfb6d;\n        t.vekatakana = 0x30f9;\n        t.venus = 0x2640;\n        t.verticalbar = 0x007c;\n        t.verticallineabovecmb = 0x030d;\n        t.verticallinebelowcmb = 0x0329;\n        t.verticallinelowmod = 0x02cc;\n        t.verticallinemod = 0x02c8;\n        t.vewarmenian = 0x057e;\n        t.vhook = 0x028b;\n        t.vikatakana = 0x30f8;\n        t.viramabengali = 0x09cd;\n        t.viramadeva = 0x094d;\n        t.viramagujarati = 0x0acd;\n        t.visargabengali = 0x0983;\n        t.visargadeva = 0x0903;\n        t.visargagujarati = 0x0a83;\n        t.vmonospace = 0xff56;\n        t.voarmenian = 0x0578;\n        t.voicediterationhiragana = 0x309e;\n        t.voicediterationkatakana = 0x30fe;\n        t.voicedmarkkana = 0x309b;\n        t.voicedmarkkanahalfwidth = 0xff9e;\n        t.vokatakana = 0x30fa;\n        t.vparen = 0x24b1;\n        t.vtilde = 0x1e7d;\n        t.vturned = 0x028c;\n        t.vuhiragana = 0x3094;\n        t.vukatakana = 0x30f4;\n        t.w = 0x0077;\n        t.wacute = 0x1e83;\n        t.waekorean = 0x3159;\n        t.wahiragana = 0x308f;\n        t.wakatakana = 0x30ef;\n        t.wakatakanahalfwidth = 0xff9c;\n        t.wakorean = 0x3158;\n        t.wasmallhiragana = 0x308e;\n        t.wasmallkatakana = 0x30ee;\n        t.wattosquare = 0x3357;\n        t.wavedash = 0x301c;\n        t.wavyunderscorevertical = 0xfe34;\n        t.wawarabic = 0x0648;\n        t.wawfinalarabic = 0xfeee;\n        t.wawhamzaabovearabic = 0x0624;\n        t.wawhamzaabovefinalarabic = 0xfe86;\n        t.wbsquare = 0x33dd;\n        t.wcircle = 0x24e6;\n        t.wcircumflex = 0x0175;\n        t.wdieresis = 0x1e85;\n        t.wdotaccent = 0x1e87;\n        t.wdotbelow = 0x1e89;\n        t.wehiragana = 0x3091;\n        t.weierstrass = 0x2118;\n        t.wekatakana = 0x30f1;\n        t.wekorean = 0x315e;\n        t.weokorean = 0x315d;\n        t.wgrave = 0x1e81;\n        t.whitebullet = 0x25e6;\n        t.whitecircle = 0x25cb;\n        t.whitecircleinverse = 0x25d9;\n        t.whitecornerbracketleft = 0x300e;\n        t.whitecornerbracketleftvertical = 0xfe43;\n        t.whitecornerbracketright = 0x300f;\n        t.whitecornerbracketrightvertical = 0xfe44;\n        t.whitediamond = 0x25c7;\n        t.whitediamondcontainingblacksmalldiamond = 0x25c8;\n        t.whitedownpointingsmalltriangle = 0x25bf;\n        t.whitedownpointingtriangle = 0x25bd;\n        t.whiteleftpointingsmalltriangle = 0x25c3;\n        t.whiteleftpointingtriangle = 0x25c1;\n        t.whitelenticularbracketleft = 0x3016;\n        t.whitelenticularbracketright = 0x3017;\n        t.whiterightpointingsmalltriangle = 0x25b9;\n        t.whiterightpointingtriangle = 0x25b7;\n        t.whitesmallsquare = 0x25ab;\n        t.whitesmilingface = 0x263a;\n        t.whitesquare = 0x25a1;\n        t.whitestar = 0x2606;\n        t.whitetelephone = 0x260f;\n        t.whitetortoiseshellbracketleft = 0x3018;\n        t.whitetortoiseshellbracketright = 0x3019;\n        t.whiteuppointingsmalltriangle = 0x25b5;\n        t.whiteuppointingtriangle = 0x25b3;\n        t.wihiragana = 0x3090;\n        t.wikatakana = 0x30f0;\n        t.wikorean = 0x315f;\n        t.wmonospace = 0xff57;\n        t.wohiragana = 0x3092;\n        t.wokatakana = 0x30f2;\n        t.wokatakanahalfwidth = 0xff66;\n        t.won = 0x20a9;\n        t.wonmonospace = 0xffe6;\n        t.wowaenthai = 0x0e27;\n        t.wparen = 0x24b2;\n        t.wring = 0x1e98;\n        t.wsuperior = 0x02b7;\n        t.wturned = 0x028d;\n        t.wynn = 0x01bf;\n        t.x = 0x0078;\n        t.xabovecmb = 0x033d;\n        t.xbopomofo = 0x3112;\n        t.xcircle = 0x24e7;\n        t.xdieresis = 0x1e8d;\n        t.xdotaccent = 0x1e8b;\n        t.xeharmenian = 0x056d;\n        t.xi = 0x03be;\n        t.xmonospace = 0xff58;\n        t.xparen = 0x24b3;\n        t.xsuperior = 0x02e3;\n        t.y = 0x0079;\n        t.yaadosquare = 0x334e;\n        t.yabengali = 0x09af;\n        t.yacute = 0x00fd;\n        t.yadeva = 0x092f;\n        t.yaekorean = 0x3152;\n        t.yagujarati = 0x0aaf;\n        t.yagurmukhi = 0x0a2f;\n        t.yahiragana = 0x3084;\n        t.yakatakana = 0x30e4;\n        t.yakatakanahalfwidth = 0xff94;\n        t.yakorean = 0x3151;\n        t.yamakkanthai = 0x0e4e;\n        t.yasmallhiragana = 0x3083;\n        t.yasmallkatakana = 0x30e3;\n        t.yasmallkatakanahalfwidth = 0xff6c;\n        t.yatcyrillic = 0x0463;\n        t.ycircle = 0x24e8;\n        t.ycircumflex = 0x0177;\n        t.ydieresis = 0x00ff;\n        t.ydotaccent = 0x1e8f;\n        t.ydotbelow = 0x1ef5;\n        t.yeharabic = 0x064a;\n        t.yehbarreearabic = 0x06d2;\n        t.yehbarreefinalarabic = 0xfbaf;\n        t.yehfinalarabic = 0xfef2;\n        t.yehhamzaabovearabic = 0x0626;\n        t.yehhamzaabovefinalarabic = 0xfe8a;\n        t.yehhamzaaboveinitialarabic = 0xfe8b;\n        t.yehhamzaabovemedialarabic = 0xfe8c;\n        t.yehinitialarabic = 0xfef3;\n        t.yehmedialarabic = 0xfef4;\n        t.yehmeeminitialarabic = 0xfcdd;\n        t.yehmeemisolatedarabic = 0xfc58;\n        t.yehnoonfinalarabic = 0xfc94;\n        t.yehthreedotsbelowarabic = 0x06d1;\n        t.yekorean = 0x3156;\n        t.yen = 0x00a5;\n        t.yenmonospace = 0xffe5;\n        t.yeokorean = 0x3155;\n        t.yeorinhieuhkorean = 0x3186;\n        t.yerahbenyomohebrew = 0x05aa;\n        t.yerahbenyomolefthebrew = 0x05aa;\n        t.yericyrillic = 0x044b;\n        t.yerudieresiscyrillic = 0x04f9;\n        t.yesieungkorean = 0x3181;\n        t.yesieungpansioskorean = 0x3183;\n        t.yesieungsioskorean = 0x3182;\n        t.yetivhebrew = 0x059a;\n        t.ygrave = 0x1ef3;\n        t.yhook = 0x01b4;\n        t.yhookabove = 0x1ef7;\n        t.yiarmenian = 0x0575;\n        t.yicyrillic = 0x0457;\n        t.yikorean = 0x3162;\n        t.yinyang = 0x262f;\n        t.yiwnarmenian = 0x0582;\n        t.ymonospace = 0xff59;\n        t.yod = 0x05d9;\n        t.yoddagesh = 0xfb39;\n        t.yoddageshhebrew = 0xfb39;\n        t.yodhebrew = 0x05d9;\n        t.yodyodhebrew = 0x05f2;\n        t.yodyodpatahhebrew = 0xfb1f;\n        t.yohiragana = 0x3088;\n        t.yoikorean = 0x3189;\n        t.yokatakana = 0x30e8;\n        t.yokatakanahalfwidth = 0xff96;\n        t.yokorean = 0x315b;\n        t.yosmallhiragana = 0x3087;\n        t.yosmallkatakana = 0x30e7;\n        t.yosmallkatakanahalfwidth = 0xff6e;\n        t.yotgreek = 0x03f3;\n        t.yoyaekorean = 0x3188;\n        t.yoyakorean = 0x3187;\n        t.yoyakthai = 0x0e22;\n        t.yoyingthai = 0x0e0d;\n        t.yparen = 0x24b4;\n        t.ypogegrammeni = 0x037a;\n        t.ypogegrammenigreekcmb = 0x0345;\n        t.yr = 0x01a6;\n        t.yring = 0x1e99;\n        t.ysuperior = 0x02b8;\n        t.ytilde = 0x1ef9;\n        t.yturned = 0x028e;\n        t.yuhiragana = 0x3086;\n        t.yuikorean = 0x318c;\n        t.yukatakana = 0x30e6;\n        t.yukatakanahalfwidth = 0xff95;\n        t.yukorean = 0x3160;\n        t.yusbigcyrillic = 0x046b;\n        t.yusbigiotifiedcyrillic = 0x046d;\n        t.yuslittlecyrillic = 0x0467;\n        t.yuslittleiotifiedcyrillic = 0x0469;\n        t.yusmallhiragana = 0x3085;\n        t.yusmallkatakana = 0x30e5;\n        t.yusmallkatakanahalfwidth = 0xff6d;\n        t.yuyekorean = 0x318b;\n        t.yuyeokorean = 0x318a;\n        t.yyabengali = 0x09df;\n        t.yyadeva = 0x095f;\n        t.z = 0x007a;\n        t.zaarmenian = 0x0566;\n        t.zacute = 0x017a;\n        t.zadeva = 0x095b;\n        t.zagurmukhi = 0x0a5b;\n        t.zaharabic = 0x0638;\n        t.zahfinalarabic = 0xfec6;\n        t.zahinitialarabic = 0xfec7;\n        t.zahiragana = 0x3056;\n        t.zahmedialarabic = 0xfec8;\n        t.zainarabic = 0x0632;\n        t.zainfinalarabic = 0xfeb0;\n        t.zakatakana = 0x30b6;\n        t.zaqefgadolhebrew = 0x0595;\n        t.zaqefqatanhebrew = 0x0594;\n        t.zarqahebrew = 0x0598;\n        t.zayin = 0x05d6;\n        t.zayindagesh = 0xfb36;\n        t.zayindageshhebrew = 0xfb36;\n        t.zayinhebrew = 0x05d6;\n        t.zbopomofo = 0x3117;\n        t.zcaron = 0x017e;\n        t.zcircle = 0x24e9;\n        t.zcircumflex = 0x1e91;\n        t.zcurl = 0x0291;\n        t.zdot = 0x017c;\n        t.zdotaccent = 0x017c;\n        t.zdotbelow = 0x1e93;\n        t.zecyrillic = 0x0437;\n        t.zedescendercyrillic = 0x0499;\n        t.zedieresiscyrillic = 0x04df;\n        t.zehiragana = 0x305c;\n        t.zekatakana = 0x30bc;\n        t.zero = 0x0030;\n        t.zeroarabic = 0x0660;\n        t.zerobengali = 0x09e6;\n        t.zerodeva = 0x0966;\n        t.zerogujarati = 0x0ae6;\n        t.zerogurmukhi = 0x0a66;\n        t.zerohackarabic = 0x0660;\n        t.zeroinferior = 0x2080;\n        t.zeromonospace = 0xff10;\n        t.zerooldstyle = 0xf730;\n        t.zeropersian = 0x06f0;\n        t.zerosuperior = 0x2070;\n        t.zerothai = 0x0e50;\n        t.zerowidthjoiner = 0xfeff;\n        t.zerowidthnonjoiner = 0x200c;\n        t.zerowidthspace = 0x200b;\n        t.zeta = 0x03b6;\n        t.zhbopomofo = 0x3113;\n        t.zhearmenian = 0x056a;\n        t.zhebrevecyrillic = 0x04c2;\n        t.zhecyrillic = 0x0436;\n        t.zhedescendercyrillic = 0x0497;\n        t.zhedieresiscyrillic = 0x04dd;\n        t.zihiragana = 0x3058;\n        t.zikatakana = 0x30b8;\n        t.zinorhebrew = 0x05ae;\n        t.zlinebelow = 0x1e95;\n        t.zmonospace = 0xff5a;\n        t.zohiragana = 0x305e;\n        t.zokatakana = 0x30be;\n        t.zparen = 0x24b5;\n        t.zretroflexhook = 0x0290;\n        t.zstroke = 0x01b6;\n        t.zuhiragana = 0x305a;\n        t.zukatakana = 0x30ba;\n        t[\".notdef\"] = 0x0000;\n        t.angbracketleftbig = 0x2329;\n        t.angbracketleftBig = 0x2329;\n        t.angbracketleftbigg = 0x2329;\n        t.angbracketleftBigg = 0x2329;\n        t.angbracketrightBig = 0x232a;\n        t.angbracketrightbig = 0x232a;\n        t.angbracketrightBigg = 0x232a;\n        t.angbracketrightbigg = 0x232a;\n        t.arrowhookleft = 0x21aa;\n        t.arrowhookright = 0x21a9;\n        t.arrowlefttophalf = 0x21bc;\n        t.arrowleftbothalf = 0x21bd;\n        t.arrownortheast = 0x2197;\n        t.arrownorthwest = 0x2196;\n        t.arrowrighttophalf = 0x21c0;\n        t.arrowrightbothalf = 0x21c1;\n        t.arrowsoutheast = 0x2198;\n        t.arrowsouthwest = 0x2199;\n        t.backslashbig = 0x2216;\n        t.backslashBig = 0x2216;\n        t.backslashBigg = 0x2216;\n        t.backslashbigg = 0x2216;\n        t.bardbl = 0x2016;\n        t.bracehtipdownleft = 0xfe37;\n        t.bracehtipdownright = 0xfe37;\n        t.bracehtipupleft = 0xfe38;\n        t.bracehtipupright = 0xfe38;\n        t.braceleftBig = 0x007b;\n        t.braceleftbig = 0x007b;\n        t.braceleftbigg = 0x007b;\n        t.braceleftBigg = 0x007b;\n        t.bracerightBig = 0x007d;\n        t.bracerightbig = 0x007d;\n        t.bracerightbigg = 0x007d;\n        t.bracerightBigg = 0x007d;\n        t.bracketleftbig = 0x005b;\n        t.bracketleftBig = 0x005b;\n        t.bracketleftbigg = 0x005b;\n        t.bracketleftBigg = 0x005b;\n        t.bracketrightBig = 0x005d;\n        t.bracketrightbig = 0x005d;\n        t.bracketrightbigg = 0x005d;\n        t.bracketrightBigg = 0x005d;\n        t.ceilingleftbig = 0x2308;\n        t.ceilingleftBig = 0x2308;\n        t.ceilingleftBigg = 0x2308;\n        t.ceilingleftbigg = 0x2308;\n        t.ceilingrightbig = 0x2309;\n        t.ceilingrightBig = 0x2309;\n        t.ceilingrightbigg = 0x2309;\n        t.ceilingrightBigg = 0x2309;\n        t.circledotdisplay = 0x2299;\n        t.circledottext = 0x2299;\n        t.circlemultiplydisplay = 0x2297;\n        t.circlemultiplytext = 0x2297;\n        t.circleplusdisplay = 0x2295;\n        t.circleplustext = 0x2295;\n        t.contintegraldisplay = 0x222e;\n        t.contintegraltext = 0x222e;\n        t.coproductdisplay = 0x2210;\n        t.coproducttext = 0x2210;\n        t.floorleftBig = 0x230a;\n        t.floorleftbig = 0x230a;\n        t.floorleftbigg = 0x230a;\n        t.floorleftBigg = 0x230a;\n        t.floorrightbig = 0x230b;\n        t.floorrightBig = 0x230b;\n        t.floorrightBigg = 0x230b;\n        t.floorrightbigg = 0x230b;\n        t.hatwide = 0x0302;\n        t.hatwider = 0x0302;\n        t.hatwidest = 0x0302;\n        t.intercal = 0x1d40;\n        t.integraldisplay = 0x222b;\n        t.integraltext = 0x222b;\n        t.intersectiondisplay = 0x22c2;\n        t.intersectiontext = 0x22c2;\n        t.logicalanddisplay = 0x2227;\n        t.logicalandtext = 0x2227;\n        t.logicalordisplay = 0x2228;\n        t.logicalortext = 0x2228;\n        t.parenleftBig = 0x0028;\n        t.parenleftbig = 0x0028;\n        t.parenleftBigg = 0x0028;\n        t.parenleftbigg = 0x0028;\n        t.parenrightBig = 0x0029;\n        t.parenrightbig = 0x0029;\n        t.parenrightBigg = 0x0029;\n        t.parenrightbigg = 0x0029;\n        t.prime = 0x2032;\n        t.productdisplay = 0x220f;\n        t.producttext = 0x220f;\n        t.radicalbig = 0x221a;\n        t.radicalBig = 0x221a;\n        t.radicalBigg = 0x221a;\n        t.radicalbigg = 0x221a;\n        t.radicalbt = 0x221a;\n        t.radicaltp = 0x221a;\n        t.radicalvertex = 0x221a;\n        t.slashbig = 0x002f;\n        t.slashBig = 0x002f;\n        t.slashBigg = 0x002f;\n        t.slashbigg = 0x002f;\n        t.summationdisplay = 0x2211;\n        t.summationtext = 0x2211;\n        t.tildewide = 0x02dc;\n        t.tildewider = 0x02dc;\n        t.tildewidest = 0x02dc;\n        t.uniondisplay = 0x22c3;\n        t.unionmultidisplay = 0x228e;\n        t.unionmultitext = 0x228e;\n        t.unionsqdisplay = 0x2294;\n        t.unionsqtext = 0x2294;\n        t.uniontext = 0x22c3;\n        t.vextenddouble = 0x2225;\n        t.vextendsingle = 0x2223;\n      });\n      var getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n        t.space = 0x0020;\n        t.a1 = 0x2701;\n        t.a2 = 0x2702;\n        t.a202 = 0x2703;\n        t.a3 = 0x2704;\n        t.a4 = 0x260e;\n        t.a5 = 0x2706;\n        t.a119 = 0x2707;\n        t.a118 = 0x2708;\n        t.a117 = 0x2709;\n        t.a11 = 0x261b;\n        t.a12 = 0x261e;\n        t.a13 = 0x270c;\n        t.a14 = 0x270d;\n        t.a15 = 0x270e;\n        t.a16 = 0x270f;\n        t.a105 = 0x2710;\n        t.a17 = 0x2711;\n        t.a18 = 0x2712;\n        t.a19 = 0x2713;\n        t.a20 = 0x2714;\n        t.a21 = 0x2715;\n        t.a22 = 0x2716;\n        t.a23 = 0x2717;\n        t.a24 = 0x2718;\n        t.a25 = 0x2719;\n        t.a26 = 0x271a;\n        t.a27 = 0x271b;\n        t.a28 = 0x271c;\n        t.a6 = 0x271d;\n        t.a7 = 0x271e;\n        t.a8 = 0x271f;\n        t.a9 = 0x2720;\n        t.a10 = 0x2721;\n        t.a29 = 0x2722;\n        t.a30 = 0x2723;\n        t.a31 = 0x2724;\n        t.a32 = 0x2725;\n        t.a33 = 0x2726;\n        t.a34 = 0x2727;\n        t.a35 = 0x2605;\n        t.a36 = 0x2729;\n        t.a37 = 0x272a;\n        t.a38 = 0x272b;\n        t.a39 = 0x272c;\n        t.a40 = 0x272d;\n        t.a41 = 0x272e;\n        t.a42 = 0x272f;\n        t.a43 = 0x2730;\n        t.a44 = 0x2731;\n        t.a45 = 0x2732;\n        t.a46 = 0x2733;\n        t.a47 = 0x2734;\n        t.a48 = 0x2735;\n        t.a49 = 0x2736;\n        t.a50 = 0x2737;\n        t.a51 = 0x2738;\n        t.a52 = 0x2739;\n        t.a53 = 0x273a;\n        t.a54 = 0x273b;\n        t.a55 = 0x273c;\n        t.a56 = 0x273d;\n        t.a57 = 0x273e;\n        t.a58 = 0x273f;\n        t.a59 = 0x2740;\n        t.a60 = 0x2741;\n        t.a61 = 0x2742;\n        t.a62 = 0x2743;\n        t.a63 = 0x2744;\n        t.a64 = 0x2745;\n        t.a65 = 0x2746;\n        t.a66 = 0x2747;\n        t.a67 = 0x2748;\n        t.a68 = 0x2749;\n        t.a69 = 0x274a;\n        t.a70 = 0x274b;\n        t.a71 = 0x25cf;\n        t.a72 = 0x274d;\n        t.a73 = 0x25a0;\n        t.a74 = 0x274f;\n        t.a203 = 0x2750;\n        t.a75 = 0x2751;\n        t.a204 = 0x2752;\n        t.a76 = 0x25b2;\n        t.a77 = 0x25bc;\n        t.a78 = 0x25c6;\n        t.a79 = 0x2756;\n        t.a81 = 0x25d7;\n        t.a82 = 0x2758;\n        t.a83 = 0x2759;\n        t.a84 = 0x275a;\n        t.a97 = 0x275b;\n        t.a98 = 0x275c;\n        t.a99 = 0x275d;\n        t.a100 = 0x275e;\n        t.a101 = 0x2761;\n        t.a102 = 0x2762;\n        t.a103 = 0x2763;\n        t.a104 = 0x2764;\n        t.a106 = 0x2765;\n        t.a107 = 0x2766;\n        t.a108 = 0x2767;\n        t.a112 = 0x2663;\n        t.a111 = 0x2666;\n        t.a110 = 0x2665;\n        t.a109 = 0x2660;\n        t.a120 = 0x2460;\n        t.a121 = 0x2461;\n        t.a122 = 0x2462;\n        t.a123 = 0x2463;\n        t.a124 = 0x2464;\n        t.a125 = 0x2465;\n        t.a126 = 0x2466;\n        t.a127 = 0x2467;\n        t.a128 = 0x2468;\n        t.a129 = 0x2469;\n        t.a130 = 0x2776;\n        t.a131 = 0x2777;\n        t.a132 = 0x2778;\n        t.a133 = 0x2779;\n        t.a134 = 0x277a;\n        t.a135 = 0x277b;\n        t.a136 = 0x277c;\n        t.a137 = 0x277d;\n        t.a138 = 0x277e;\n        t.a139 = 0x277f;\n        t.a140 = 0x2780;\n        t.a141 = 0x2781;\n        t.a142 = 0x2782;\n        t.a143 = 0x2783;\n        t.a144 = 0x2784;\n        t.a145 = 0x2785;\n        t.a146 = 0x2786;\n        t.a147 = 0x2787;\n        t.a148 = 0x2788;\n        t.a149 = 0x2789;\n        t.a150 = 0x278a;\n        t.a151 = 0x278b;\n        t.a152 = 0x278c;\n        t.a153 = 0x278d;\n        t.a154 = 0x278e;\n        t.a155 = 0x278f;\n        t.a156 = 0x2790;\n        t.a157 = 0x2791;\n        t.a158 = 0x2792;\n        t.a159 = 0x2793;\n        t.a160 = 0x2794;\n        t.a161 = 0x2192;\n        t.a163 = 0x2194;\n        t.a164 = 0x2195;\n        t.a196 = 0x2798;\n        t.a165 = 0x2799;\n        t.a192 = 0x279a;\n        t.a166 = 0x279b;\n        t.a167 = 0x279c;\n        t.a168 = 0x279d;\n        t.a169 = 0x279e;\n        t.a170 = 0x279f;\n        t.a171 = 0x27a0;\n        t.a172 = 0x27a1;\n        t.a173 = 0x27a2;\n        t.a162 = 0x27a3;\n        t.a174 = 0x27a4;\n        t.a175 = 0x27a5;\n        t.a176 = 0x27a6;\n        t.a177 = 0x27a7;\n        t.a178 = 0x27a8;\n        t.a179 = 0x27a9;\n        t.a193 = 0x27aa;\n        t.a180 = 0x27ab;\n        t.a199 = 0x27ac;\n        t.a181 = 0x27ad;\n        t.a200 = 0x27ae;\n        t.a182 = 0x27af;\n        t.a201 = 0x27b1;\n        t.a183 = 0x27b2;\n        t.a184 = 0x27b3;\n        t.a197 = 0x27b4;\n        t.a185 = 0x27b5;\n        t.a194 = 0x27b6;\n        t.a198 = 0x27b7;\n        t.a186 = 0x27b8;\n        t.a195 = 0x27b9;\n        t.a187 = 0x27ba;\n        t.a188 = 0x27bb;\n        t.a189 = 0x27bc;\n        t.a190 = 0x27bd;\n        t.a191 = 0x27be;\n        t.a89 = 0x2768;\n        t.a90 = 0x2769;\n        t.a93 = 0x276a;\n        t.a94 = 0x276b;\n        t.a91 = 0x276c;\n        t.a92 = 0x276d;\n        t.a205 = 0x276e;\n        t.a85 = 0x276f;\n        t.a206 = 0x2770;\n        t.a86 = 0x2771;\n        t.a87 = 0x2772;\n        t.a88 = 0x2773;\n        t.a95 = 0x2774;\n        t.a96 = 0x2775;\n        t[\".notdef\"] = 0x0000;\n      });\n      exports.getGlyphsUnicode = getGlyphsUnicode;\n      exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n      /***/\n    },\n    /* 35 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = void 0;\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var getStdFontMap = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t.ArialNarrow = \"Helvetica\";\n        t[\"ArialNarrow-Bold\"] = \"Helvetica-Bold\";\n        t[\"ArialNarrow-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"ArialNarrow-Italic\"] = \"Helvetica-Oblique\";\n        t.ArialBlack = \"Helvetica\";\n        t[\"ArialBlack-Bold\"] = \"Helvetica-Bold\";\n        t[\"ArialBlack-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"ArialBlack-Italic\"] = \"Helvetica-Oblique\";\n        t[\"Arial-Black\"] = \"Helvetica\";\n        t[\"Arial-Black-Bold\"] = \"Helvetica-Bold\";\n        t[\"Arial-Black-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"Arial-Black-Italic\"] = \"Helvetica-Oblique\";\n        t.Arial = \"Helvetica\";\n        t[\"Arial-Bold\"] = \"Helvetica-Bold\";\n        t[\"Arial-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"Arial-Italic\"] = \"Helvetica-Oblique\";\n        t[\"Arial-BoldItalicMT\"] = \"Helvetica-BoldOblique\";\n        t[\"Arial-BoldMT\"] = \"Helvetica-Bold\";\n        t[\"Arial-ItalicMT\"] = \"Helvetica-Oblique\";\n        t.ArialMT = \"Helvetica\";\n        t[\"Courier-Bold\"] = \"Courier-Bold\";\n        t[\"Courier-BoldItalic\"] = \"Courier-BoldOblique\";\n        t[\"Courier-Italic\"] = \"Courier-Oblique\";\n        t.CourierNew = \"Courier\";\n        t[\"CourierNew-Bold\"] = \"Courier-Bold\";\n        t[\"CourierNew-BoldItalic\"] = \"Courier-BoldOblique\";\n        t[\"CourierNew-Italic\"] = \"Courier-Oblique\";\n        t[\"CourierNewPS-BoldItalicMT\"] = \"Courier-BoldOblique\";\n        t[\"CourierNewPS-BoldMT\"] = \"Courier-Bold\";\n        t[\"CourierNewPS-ItalicMT\"] = \"Courier-Oblique\";\n        t.CourierNewPSMT = \"Courier\";\n        t.Helvetica = \"Helvetica\";\n        t[\"Helvetica-Bold\"] = \"Helvetica-Bold\";\n        t[\"Helvetica-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"Helvetica-BoldOblique\"] = \"Helvetica-BoldOblique\";\n        t[\"Helvetica-Italic\"] = \"Helvetica-Oblique\";\n        t[\"Helvetica-Oblique\"] = \"Helvetica-Oblique\";\n        t[\"Symbol-Bold\"] = \"Symbol\";\n        t[\"Symbol-BoldItalic\"] = \"Symbol\";\n        t[\"Symbol-Italic\"] = \"Symbol\";\n        t.TimesNewRoman = \"Times-Roman\";\n        t[\"TimesNewRoman-Bold\"] = \"Times-Bold\";\n        t[\"TimesNewRoman-BoldItalic\"] = \"Times-BoldItalic\";\n        t[\"TimesNewRoman-Italic\"] = \"Times-Italic\";\n        t.TimesNewRomanPS = \"Times-Roman\";\n        t[\"TimesNewRomanPS-Bold\"] = \"Times-Bold\";\n        t[\"TimesNewRomanPS-BoldItalic\"] = \"Times-BoldItalic\";\n        t[\"TimesNewRomanPS-BoldItalicMT\"] = \"Times-BoldItalic\";\n        t[\"TimesNewRomanPS-BoldMT\"] = \"Times-Bold\";\n        t[\"TimesNewRomanPS-Italic\"] = \"Times-Italic\";\n        t[\"TimesNewRomanPS-ItalicMT\"] = \"Times-Italic\";\n        t.TimesNewRomanPSMT = \"Times-Roman\";\n        t[\"TimesNewRomanPSMT-Bold\"] = \"Times-Bold\";\n        t[\"TimesNewRomanPSMT-BoldItalic\"] = \"Times-BoldItalic\";\n        t[\"TimesNewRomanPSMT-Italic\"] = \"Times-Italic\";\n      });\n      exports.getStdFontMap = getStdFontMap;\n      var getNonStdFontMap = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t.Calibri = \"Helvetica\";\n        t[\"Calibri-Bold\"] = \"Helvetica-Bold\";\n        t[\"Calibri-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"Calibri-Italic\"] = \"Helvetica-Oblique\";\n        t.CenturyGothic = \"Helvetica\";\n        t[\"CenturyGothic-Bold\"] = \"Helvetica-Bold\";\n        t[\"CenturyGothic-BoldItalic\"] = \"Helvetica-BoldOblique\";\n        t[\"CenturyGothic-Italic\"] = \"Helvetica-Oblique\";\n        t.ComicSansMS = \"Comic Sans MS\";\n        t[\"ComicSansMS-Bold\"] = \"Comic Sans MS-Bold\";\n        t[\"ComicSansMS-BoldItalic\"] = \"Comic Sans MS-BoldItalic\";\n        t[\"ComicSansMS-Italic\"] = \"Comic Sans MS-Italic\";\n        t.LucidaConsole = \"Courier\";\n        t[\"LucidaConsole-Bold\"] = \"Courier-Bold\";\n        t[\"LucidaConsole-BoldItalic\"] = \"Courier-BoldOblique\";\n        t[\"LucidaConsole-Italic\"] = \"Courier-Oblique\";\n        t[\"LucidaSans-Demi\"] = \"Helvetica-Bold\";\n        t[\"MS-Gothic\"] = \"MS Gothic\";\n        t[\"MS-Gothic-Bold\"] = \"MS Gothic-Bold\";\n        t[\"MS-Gothic-BoldItalic\"] = \"MS Gothic-BoldItalic\";\n        t[\"MS-Gothic-Italic\"] = \"MS Gothic-Italic\";\n        t[\"MS-Mincho\"] = \"MS Mincho\";\n        t[\"MS-Mincho-Bold\"] = \"MS Mincho-Bold\";\n        t[\"MS-Mincho-BoldItalic\"] = \"MS Mincho-BoldItalic\";\n        t[\"MS-Mincho-Italic\"] = \"MS Mincho-Italic\";\n        t[\"MS-PGothic\"] = \"MS PGothic\";\n        t[\"MS-PGothic-Bold\"] = \"MS PGothic-Bold\";\n        t[\"MS-PGothic-BoldItalic\"] = \"MS PGothic-BoldItalic\";\n        t[\"MS-PGothic-Italic\"] = \"MS PGothic-Italic\";\n        t[\"MS-PMincho\"] = \"MS PMincho\";\n        t[\"MS-PMincho-Bold\"] = \"MS PMincho-Bold\";\n        t[\"MS-PMincho-BoldItalic\"] = \"MS PMincho-BoldItalic\";\n        t[\"MS-PMincho-Italic\"] = \"MS PMincho-Italic\";\n        t.NuptialScript = \"Times-Italic\";\n        t.SegoeUISymbol = \"Helvetica\";\n        t.Wingdings = \"ZapfDingbats\";\n        t[\"Wingdings-Regular\"] = \"ZapfDingbats\";\n      });\n      exports.getNonStdFontMap = getNonStdFontMap;\n      var getSerifFonts = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t[\"Adobe Jenson\"] = true;\n        t[\"Adobe Text\"] = true;\n        t.Albertus = true;\n        t.Aldus = true;\n        t.Alexandria = true;\n        t.Algerian = true;\n        t[\"American Typewriter\"] = true;\n        t.Antiqua = true;\n        t.Apex = true;\n        t.Arno = true;\n        t.Aster = true;\n        t.Aurora = true;\n        t.Baskerville = true;\n        t.Bell = true;\n        t.Bembo = true;\n        t[\"Bembo Schoolbook\"] = true;\n        t.Benguiat = true;\n        t[\"Berkeley Old Style\"] = true;\n        t[\"Bernhard Modern\"] = true;\n        t[\"Berthold City\"] = true;\n        t.Bodoni = true;\n        t[\"Bauer Bodoni\"] = true;\n        t[\"Book Antiqua\"] = true;\n        t.Bookman = true;\n        t[\"Bordeaux Roman\"] = true;\n        t[\"Californian FB\"] = true;\n        t.Calisto = true;\n        t.Calvert = true;\n        t.Capitals = true;\n        t.Cambria = true;\n        t.Cartier = true;\n        t.Caslon = true;\n        t.Catull = true;\n        t.Centaur = true;\n        t[\"Century Old Style\"] = true;\n        t[\"Century Schoolbook\"] = true;\n        t.Chaparral = true;\n        t[\"Charis SIL\"] = true;\n        t.Cheltenham = true;\n        t[\"Cholla Slab\"] = true;\n        t.Clarendon = true;\n        t.Clearface = true;\n        t.Cochin = true;\n        t.Colonna = true;\n        t[\"Computer Modern\"] = true;\n        t[\"Concrete Roman\"] = true;\n        t.Constantia = true;\n        t[\"Cooper Black\"] = true;\n        t.Corona = true;\n        t.Ecotype = true;\n        t.Egyptienne = true;\n        t.Elephant = true;\n        t.Excelsior = true;\n        t.Fairfield = true;\n        t[\"FF Scala\"] = true;\n        t.Folkard = true;\n        t.Footlight = true;\n        t.FreeSerif = true;\n        t[\"Friz Quadrata\"] = true;\n        t.Garamond = true;\n        t.Gentium = true;\n        t.Georgia = true;\n        t.Gloucester = true;\n        t[\"Goudy Old Style\"] = true;\n        t[\"Goudy Schoolbook\"] = true;\n        t[\"Goudy Pro Font\"] = true;\n        t.Granjon = true;\n        t[\"Guardian Egyptian\"] = true;\n        t.Heather = true;\n        t.Hercules = true;\n        t[\"High Tower Text\"] = true;\n        t.Hiroshige = true;\n        t[\"Hoefler Text\"] = true;\n        t[\"Humana Serif\"] = true;\n        t.Imprint = true;\n        t[\"Ionic No. 5\"] = true;\n        t.Janson = true;\n        t.Joanna = true;\n        t.Korinna = true;\n        t.Lexicon = true;\n        t[\"Liberation Serif\"] = true;\n        t[\"Linux Libertine\"] = true;\n        t.Literaturnaya = true;\n        t.Lucida = true;\n        t[\"Lucida Bright\"] = true;\n        t.Melior = true;\n        t.Memphis = true;\n        t.Miller = true;\n        t.Minion = true;\n        t.Modern = true;\n        t[\"Mona Lisa\"] = true;\n        t[\"Mrs Eaves\"] = true;\n        t[\"MS Serif\"] = true;\n        t[\"Museo Slab\"] = true;\n        t[\"New York\"] = true;\n        t[\"Nimbus Roman\"] = true;\n        t[\"NPS Rawlinson Roadway\"] = true;\n        t.NuptialScript = true;\n        t.Palatino = true;\n        t.Perpetua = true;\n        t.Plantin = true;\n        t[\"Plantin Schoolbook\"] = true;\n        t.Playbill = true;\n        t[\"Poor Richard\"] = true;\n        t[\"Rawlinson Roadway\"] = true;\n        t.Renault = true;\n        t.Requiem = true;\n        t.Rockwell = true;\n        t.Roman = true;\n        t[\"Rotis Serif\"] = true;\n        t.Sabon = true;\n        t.Scala = true;\n        t.Seagull = true;\n        t.Sistina = true;\n        t.Souvenir = true;\n        t.STIX = true;\n        t[\"Stone Informal\"] = true;\n        t[\"Stone Serif\"] = true;\n        t.Sylfaen = true;\n        t.Times = true;\n        t.Trajan = true;\n        t[\"Trinité\"] = true;\n        t[\"Trump Mediaeval\"] = true;\n        t.Utopia = true;\n        t[\"Vale Type\"] = true;\n        t[\"Bitstream Vera\"] = true;\n        t[\"Vera Serif\"] = true;\n        t.Versailles = true;\n        t.Wanted = true;\n        t.Weiss = true;\n        t[\"Wide Latin\"] = true;\n        t.Windsor = true;\n        t.XITS = true;\n      });\n      exports.getSerifFonts = getSerifFonts;\n      var getSymbolsFonts = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t.Dingbats = true;\n        t.Symbol = true;\n        t.ZapfDingbats = true;\n      });\n      exports.getSymbolsFonts = getSymbolsFonts;\n      var getGlyphMapForStandardFonts = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t[2] = 10;\n        t[3] = 32;\n        t[4] = 33;\n        t[5] = 34;\n        t[6] = 35;\n        t[7] = 36;\n        t[8] = 37;\n        t[9] = 38;\n        t[10] = 39;\n        t[11] = 40;\n        t[12] = 41;\n        t[13] = 42;\n        t[14] = 43;\n        t[15] = 44;\n        t[16] = 45;\n        t[17] = 46;\n        t[18] = 47;\n        t[19] = 48;\n        t[20] = 49;\n        t[21] = 50;\n        t[22] = 51;\n        t[23] = 52;\n        t[24] = 53;\n        t[25] = 54;\n        t[26] = 55;\n        t[27] = 56;\n        t[28] = 57;\n        t[29] = 58;\n        t[30] = 894;\n        t[31] = 60;\n        t[32] = 61;\n        t[33] = 62;\n        t[34] = 63;\n        t[35] = 64;\n        t[36] = 65;\n        t[37] = 66;\n        t[38] = 67;\n        t[39] = 68;\n        t[40] = 69;\n        t[41] = 70;\n        t[42] = 71;\n        t[43] = 72;\n        t[44] = 73;\n        t[45] = 74;\n        t[46] = 75;\n        t[47] = 76;\n        t[48] = 77;\n        t[49] = 78;\n        t[50] = 79;\n        t[51] = 80;\n        t[52] = 81;\n        t[53] = 82;\n        t[54] = 83;\n        t[55] = 84;\n        t[56] = 85;\n        t[57] = 86;\n        t[58] = 87;\n        t[59] = 88;\n        t[60] = 89;\n        t[61] = 90;\n        t[62] = 91;\n        t[63] = 92;\n        t[64] = 93;\n        t[65] = 94;\n        t[66] = 95;\n        t[67] = 96;\n        t[68] = 97;\n        t[69] = 98;\n        t[70] = 99;\n        t[71] = 100;\n        t[72] = 101;\n        t[73] = 102;\n        t[74] = 103;\n        t[75] = 104;\n        t[76] = 105;\n        t[77] = 106;\n        t[78] = 107;\n        t[79] = 108;\n        t[80] = 109;\n        t[81] = 110;\n        t[82] = 111;\n        t[83] = 112;\n        t[84] = 113;\n        t[85] = 114;\n        t[86] = 115;\n        t[87] = 116;\n        t[88] = 117;\n        t[89] = 118;\n        t[90] = 119;\n        t[91] = 120;\n        t[92] = 121;\n        t[93] = 122;\n        t[94] = 123;\n        t[95] = 124;\n        t[96] = 125;\n        t[97] = 126;\n        t[98] = 196;\n        t[99] = 197;\n        t[100] = 199;\n        t[101] = 201;\n        t[102] = 209;\n        t[103] = 214;\n        t[104] = 220;\n        t[105] = 225;\n        t[106] = 224;\n        t[107] = 226;\n        t[108] = 228;\n        t[109] = 227;\n        t[110] = 229;\n        t[111] = 231;\n        t[112] = 233;\n        t[113] = 232;\n        t[114] = 234;\n        t[115] = 235;\n        t[116] = 237;\n        t[117] = 236;\n        t[118] = 238;\n        t[119] = 239;\n        t[120] = 241;\n        t[121] = 243;\n        t[122] = 242;\n        t[123] = 244;\n        t[124] = 246;\n        t[125] = 245;\n        t[126] = 250;\n        t[127] = 249;\n        t[128] = 251;\n        t[129] = 252;\n        t[130] = 8224;\n        t[131] = 176;\n        t[132] = 162;\n        t[133] = 163;\n        t[134] = 167;\n        t[135] = 8226;\n        t[136] = 182;\n        t[137] = 223;\n        t[138] = 174;\n        t[139] = 169;\n        t[140] = 8482;\n        t[141] = 180;\n        t[142] = 168;\n        t[143] = 8800;\n        t[144] = 198;\n        t[145] = 216;\n        t[146] = 8734;\n        t[147] = 177;\n        t[148] = 8804;\n        t[149] = 8805;\n        t[150] = 165;\n        t[151] = 181;\n        t[152] = 8706;\n        t[153] = 8721;\n        t[154] = 8719;\n        t[156] = 8747;\n        t[157] = 170;\n        t[158] = 186;\n        t[159] = 8486;\n        t[160] = 230;\n        t[161] = 248;\n        t[162] = 191;\n        t[163] = 161;\n        t[164] = 172;\n        t[165] = 8730;\n        t[166] = 402;\n        t[167] = 8776;\n        t[168] = 8710;\n        t[169] = 171;\n        t[170] = 187;\n        t[171] = 8230;\n        t[210] = 218;\n        t[223] = 711;\n        t[224] = 321;\n        t[225] = 322;\n        t[227] = 353;\n        t[229] = 382;\n        t[234] = 253;\n        t[252] = 263;\n        t[253] = 268;\n        t[254] = 269;\n        t[258] = 258;\n        t[260] = 260;\n        t[261] = 261;\n        t[265] = 280;\n        t[266] = 281;\n        t[268] = 283;\n        t[269] = 313;\n        t[275] = 323;\n        t[276] = 324;\n        t[278] = 328;\n        t[284] = 345;\n        t[285] = 346;\n        t[286] = 347;\n        t[292] = 367;\n        t[295] = 377;\n        t[296] = 378;\n        t[298] = 380;\n        t[305] = 963;\n        t[306] = 964;\n        t[307] = 966;\n        t[308] = 8215;\n        t[309] = 8252;\n        t[310] = 8319;\n        t[311] = 8359;\n        t[312] = 8592;\n        t[313] = 8593;\n        t[337] = 9552;\n        t[493] = 1039;\n        t[494] = 1040;\n        t[705] = 1524;\n        t[706] = 8362;\n        t[710] = 64288;\n        t[711] = 64298;\n        t[759] = 1617;\n        t[761] = 1776;\n        t[763] = 1778;\n        t[775] = 1652;\n        t[777] = 1764;\n        t[778] = 1780;\n        t[779] = 1781;\n        t[780] = 1782;\n        t[782] = 771;\n        t[783] = 64726;\n        t[786] = 8363;\n        t[788] = 8532;\n        t[790] = 768;\n        t[791] = 769;\n        t[792] = 768;\n        t[795] = 803;\n        t[797] = 64336;\n        t[798] = 64337;\n        t[799] = 64342;\n        t[800] = 64343;\n        t[801] = 64344;\n        t[802] = 64345;\n        t[803] = 64362;\n        t[804] = 64363;\n        t[805] = 64364;\n        t[2424] = 7821;\n        t[2425] = 7822;\n        t[2426] = 7823;\n        t[2427] = 7824;\n        t[2428] = 7825;\n        t[2429] = 7826;\n        t[2430] = 7827;\n        t[2433] = 7682;\n        t[2678] = 8045;\n        t[2679] = 8046;\n        t[2830] = 1552;\n        t[2838] = 686;\n        t[2840] = 751;\n        t[2842] = 753;\n        t[2843] = 754;\n        t[2844] = 755;\n        t[2846] = 757;\n        t[2856] = 767;\n        t[2857] = 848;\n        t[2858] = 849;\n        t[2862] = 853;\n        t[2863] = 854;\n        t[2864] = 855;\n        t[2865] = 861;\n        t[2866] = 862;\n        t[2906] = 7460;\n        t[2908] = 7462;\n        t[2909] = 7463;\n        t[2910] = 7464;\n        t[2912] = 7466;\n        t[2913] = 7467;\n        t[2914] = 7468;\n        t[2916] = 7470;\n        t[2917] = 7471;\n        t[2918] = 7472;\n        t[2920] = 7474;\n        t[2921] = 7475;\n        t[2922] = 7476;\n        t[2924] = 7478;\n        t[2925] = 7479;\n        t[2926] = 7480;\n        t[2928] = 7482;\n        t[2929] = 7483;\n        t[2930] = 7484;\n        t[2932] = 7486;\n        t[2933] = 7487;\n        t[2934] = 7488;\n        t[2936] = 7490;\n        t[2937] = 7491;\n        t[2938] = 7492;\n        t[2940] = 7494;\n        t[2941] = 7495;\n        t[2942] = 7496;\n        t[2944] = 7498;\n        t[2946] = 7500;\n        t[2948] = 7502;\n        t[2950] = 7504;\n        t[2951] = 7505;\n        t[2952] = 7506;\n        t[2954] = 7508;\n        t[2955] = 7509;\n        t[2956] = 7510;\n        t[2958] = 7512;\n        t[2959] = 7513;\n        t[2960] = 7514;\n        t[2962] = 7516;\n        t[2963] = 7517;\n        t[2964] = 7518;\n        t[2966] = 7520;\n        t[2967] = 7521;\n        t[2968] = 7522;\n        t[2970] = 7524;\n        t[2971] = 7525;\n        t[2972] = 7526;\n        t[2974] = 7528;\n        t[2975] = 7529;\n        t[2976] = 7530;\n        t[2978] = 1537;\n        t[2979] = 1538;\n        t[2980] = 1539;\n        t[2982] = 1549;\n        t[2983] = 1551;\n        t[2984] = 1552;\n        t[2986] = 1554;\n        t[2987] = 1555;\n        t[2988] = 1556;\n        t[2990] = 1623;\n        t[2991] = 1624;\n        t[2995] = 1775;\n        t[2999] = 1791;\n        t[3002] = 64290;\n        t[3003] = 64291;\n        t[3004] = 64292;\n        t[3006] = 64294;\n        t[3007] = 64295;\n        t[3008] = 64296;\n        t[3011] = 1900;\n        t[3014] = 8223;\n        t[3015] = 8244;\n        t[3017] = 7532;\n        t[3018] = 7533;\n        t[3019] = 7534;\n        t[3075] = 7590;\n        t[3076] = 7591;\n        t[3079] = 7594;\n        t[3080] = 7595;\n        t[3083] = 7598;\n        t[3084] = 7599;\n        t[3087] = 7602;\n        t[3088] = 7603;\n        t[3091] = 7606;\n        t[3092] = 7607;\n        t[3095] = 7610;\n        t[3096] = 7611;\n        t[3099] = 7614;\n        t[3100] = 7615;\n        t[3103] = 7618;\n        t[3104] = 7619;\n        t[3107] = 8337;\n        t[3108] = 8338;\n        t[3116] = 1884;\n        t[3119] = 1885;\n        t[3120] = 1885;\n        t[3123] = 1886;\n        t[3124] = 1886;\n        t[3127] = 1887;\n        t[3128] = 1887;\n        t[3131] = 1888;\n        t[3132] = 1888;\n        t[3135] = 1889;\n        t[3136] = 1889;\n        t[3139] = 1890;\n        t[3140] = 1890;\n        t[3143] = 1891;\n        t[3144] = 1891;\n        t[3147] = 1892;\n        t[3148] = 1892;\n        t[3153] = 580;\n        t[3154] = 581;\n        t[3157] = 584;\n        t[3158] = 585;\n        t[3161] = 588;\n        t[3162] = 589;\n        t[3165] = 891;\n        t[3166] = 892;\n        t[3169] = 1274;\n        t[3170] = 1275;\n        t[3173] = 1278;\n        t[3174] = 1279;\n        t[3181] = 7622;\n        t[3182] = 7623;\n        t[3282] = 11799;\n        t[3316] = 578;\n        t[3379] = 42785;\n        t[3393] = 1159;\n        t[3416] = 8377;\n      });\n      exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n      var getSupplementalGlyphMapForArialBlack = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t[227] = 322;\n        t[264] = 261;\n        t[291] = 346;\n      });\n      exports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n      var getSupplementalGlyphMapForCalibri = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t[1] = 32;\n        t[4] = 65;\n        t[17] = 66;\n        t[18] = 67;\n        t[24] = 68;\n        t[28] = 69;\n        t[38] = 70;\n        t[39] = 71;\n        t[44] = 72;\n        t[47] = 73;\n        t[58] = 74;\n        t[60] = 75;\n        t[62] = 76;\n        t[68] = 77;\n        t[69] = 78;\n        t[75] = 79;\n        t[87] = 80;\n        t[89] = 81;\n        t[90] = 82;\n        t[94] = 83;\n        t[100] = 84;\n        t[104] = 85;\n        t[115] = 86;\n        t[116] = 87;\n        t[121] = 88;\n        t[122] = 89;\n        t[127] = 90;\n        t[258] = 97;\n        t[268] = 261;\n        t[271] = 98;\n        t[272] = 99;\n        t[273] = 263;\n        t[282] = 100;\n        t[286] = 101;\n        t[295] = 281;\n        t[296] = 102;\n        t[336] = 103;\n        t[346] = 104;\n        t[349] = 105;\n        t[361] = 106;\n        t[364] = 107;\n        t[367] = 108;\n        t[371] = 322;\n        t[373] = 109;\n        t[374] = 110;\n        t[381] = 111;\n        t[383] = 243;\n        t[393] = 112;\n        t[395] = 113;\n        t[396] = 114;\n        t[400] = 115;\n        t[401] = 347;\n        t[410] = 116;\n        t[437] = 117;\n        t[448] = 118;\n        t[449] = 119;\n        t[454] = 120;\n        t[455] = 121;\n        t[460] = 122;\n        t[463] = 380;\n        t[853] = 44;\n        t[855] = 58;\n        t[856] = 46;\n        t[876] = 47;\n        t[878] = 45;\n        t[882] = 45;\n        t[894] = 40;\n        t[895] = 41;\n        t[896] = 91;\n        t[897] = 93;\n        t[923] = 64;\n        t[1004] = 48;\n        t[1005] = 49;\n        t[1006] = 50;\n        t[1007] = 51;\n        t[1008] = 52;\n        t[1009] = 53;\n        t[1010] = 54;\n        t[1011] = 55;\n        t[1012] = 56;\n        t[1013] = 57;\n        t[1081] = 37;\n        t[1085] = 43;\n        t[1086] = 45;\n      });\n      exports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n      /***/\n    },\n    /* 36 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      var getLookupTableFactory = __w_pdfjs_require__(8).getLookupTableFactory;\n\n      var getSpecialPUASymbols = getLookupTableFactory(function (t) {\n        t[63721] = 0x00a9;\n        t[63193] = 0x00a9;\n        t[63720] = 0x00ae;\n        t[63194] = 0x00ae;\n        t[63722] = 0x2122;\n        t[63195] = 0x2122;\n        t[63729] = 0x23a7;\n        t[63730] = 0x23a8;\n        t[63731] = 0x23a9;\n        t[63740] = 0x23ab;\n        t[63741] = 0x23ac;\n        t[63742] = 0x23ad;\n        t[63726] = 0x23a1;\n        t[63727] = 0x23a2;\n        t[63728] = 0x23a3;\n        t[63737] = 0x23a4;\n        t[63738] = 0x23a5;\n        t[63739] = 0x23a6;\n        t[63723] = 0x239b;\n        t[63724] = 0x239c;\n        t[63725] = 0x239d;\n        t[63734] = 0x239e;\n        t[63735] = 0x239f;\n        t[63736] = 0x23a0;\n      });\n\n      function mapSpecialUnicodeValues(code) {\n        if (code >= 0xfff0 && code <= 0xffff) {\n          return 0;\n        } else if (code >= 0xf600 && code <= 0xf8ff) {\n          return getSpecialPUASymbols()[code] || code;\n        } else if (code === 0x00ad) {\n          return 0x002d;\n        }\n\n        return code;\n      }\n\n      function getUnicodeForGlyph(name, glyphsUnicodeMap) {\n        var unicode = glyphsUnicodeMap[name];\n\n        if (unicode !== undefined) {\n          return unicode;\n        }\n\n        if (!name) {\n          return -1;\n        }\n\n        if (name[0] === \"u\") {\n          var nameLen = name.length,\n              hexStr;\n\n          if (nameLen === 7 && name[1] === \"n\" && name[2] === \"i\") {\n            hexStr = name.substring(3);\n          } else if (nameLen >= 5 && nameLen <= 7) {\n            hexStr = name.substring(1);\n          } else {\n            return -1;\n          }\n\n          if (hexStr === hexStr.toUpperCase()) {\n            unicode = parseInt(hexStr, 16);\n\n            if (unicode >= 0) {\n              return unicode;\n            }\n          }\n        }\n\n        return -1;\n      }\n\n      var UnicodeRanges = [{\n        begin: 0x0000,\n        end: 0x007f\n      }, {\n        begin: 0x0080,\n        end: 0x00ff\n      }, {\n        begin: 0x0100,\n        end: 0x017f\n      }, {\n        begin: 0x0180,\n        end: 0x024f\n      }, {\n        begin: 0x0250,\n        end: 0x02af\n      }, {\n        begin: 0x02b0,\n        end: 0x02ff\n      }, {\n        begin: 0x0300,\n        end: 0x036f\n      }, {\n        begin: 0x0370,\n        end: 0x03ff\n      }, {\n        begin: 0x2c80,\n        end: 0x2cff\n      }, {\n        begin: 0x0400,\n        end: 0x04ff\n      }, {\n        begin: 0x0530,\n        end: 0x058f\n      }, {\n        begin: 0x0590,\n        end: 0x05ff\n      }, {\n        begin: 0xa500,\n        end: 0xa63f\n      }, {\n        begin: 0x0600,\n        end: 0x06ff\n      }, {\n        begin: 0x07c0,\n        end: 0x07ff\n      }, {\n        begin: 0x0900,\n        end: 0x097f\n      }, {\n        begin: 0x0980,\n        end: 0x09ff\n      }, {\n        begin: 0x0a00,\n        end: 0x0a7f\n      }, {\n        begin: 0x0a80,\n        end: 0x0aff\n      }, {\n        begin: 0x0b00,\n        end: 0x0b7f\n      }, {\n        begin: 0x0b80,\n        end: 0x0bff\n      }, {\n        begin: 0x0c00,\n        end: 0x0c7f\n      }, {\n        begin: 0x0c80,\n        end: 0x0cff\n      }, {\n        begin: 0x0d00,\n        end: 0x0d7f\n      }, {\n        begin: 0x0e00,\n        end: 0x0e7f\n      }, {\n        begin: 0x0e80,\n        end: 0x0eff\n      }, {\n        begin: 0x10a0,\n        end: 0x10ff\n      }, {\n        begin: 0x1b00,\n        end: 0x1b7f\n      }, {\n        begin: 0x1100,\n        end: 0x11ff\n      }, {\n        begin: 0x1e00,\n        end: 0x1eff\n      }, {\n        begin: 0x1f00,\n        end: 0x1fff\n      }, {\n        begin: 0x2000,\n        end: 0x206f\n      }, {\n        begin: 0x2070,\n        end: 0x209f\n      }, {\n        begin: 0x20a0,\n        end: 0x20cf\n      }, {\n        begin: 0x20d0,\n        end: 0x20ff\n      }, {\n        begin: 0x2100,\n        end: 0x214f\n      }, {\n        begin: 0x2150,\n        end: 0x218f\n      }, {\n        begin: 0x2190,\n        end: 0x21ff\n      }, {\n        begin: 0x2200,\n        end: 0x22ff\n      }, {\n        begin: 0x2300,\n        end: 0x23ff\n      }, {\n        begin: 0x2400,\n        end: 0x243f\n      }, {\n        begin: 0x2440,\n        end: 0x245f\n      }, {\n        begin: 0x2460,\n        end: 0x24ff\n      }, {\n        begin: 0x2500,\n        end: 0x257f\n      }, {\n        begin: 0x2580,\n        end: 0x259f\n      }, {\n        begin: 0x25a0,\n        end: 0x25ff\n      }, {\n        begin: 0x2600,\n        end: 0x26ff\n      }, {\n        begin: 0x2700,\n        end: 0x27bf\n      }, {\n        begin: 0x3000,\n        end: 0x303f\n      }, {\n        begin: 0x3040,\n        end: 0x309f\n      }, {\n        begin: 0x30a0,\n        end: 0x30ff\n      }, {\n        begin: 0x3100,\n        end: 0x312f\n      }, {\n        begin: 0x3130,\n        end: 0x318f\n      }, {\n        begin: 0xa840,\n        end: 0xa87f\n      }, {\n        begin: 0x3200,\n        end: 0x32ff\n      }, {\n        begin: 0x3300,\n        end: 0x33ff\n      }, {\n        begin: 0xac00,\n        end: 0xd7af\n      }, {\n        begin: 0xd800,\n        end: 0xdfff\n      }, {\n        begin: 0x10900,\n        end: 0x1091f\n      }, {\n        begin: 0x4e00,\n        end: 0x9fff\n      }, {\n        begin: 0xe000,\n        end: 0xf8ff\n      }, {\n        begin: 0x31c0,\n        end: 0x31ef\n      }, {\n        begin: 0xfb00,\n        end: 0xfb4f\n      }, {\n        begin: 0xfb50,\n        end: 0xfdff\n      }, {\n        begin: 0xfe20,\n        end: 0xfe2f\n      }, {\n        begin: 0xfe10,\n        end: 0xfe1f\n      }, {\n        begin: 0xfe50,\n        end: 0xfe6f\n      }, {\n        begin: 0xfe70,\n        end: 0xfeff\n      }, {\n        begin: 0xff00,\n        end: 0xffef\n      }, {\n        begin: 0xfff0,\n        end: 0xffff\n      }, {\n        begin: 0x0f00,\n        end: 0x0fff\n      }, {\n        begin: 0x0700,\n        end: 0x074f\n      }, {\n        begin: 0x0780,\n        end: 0x07bf\n      }, {\n        begin: 0x0d80,\n        end: 0x0dff\n      }, {\n        begin: 0x1000,\n        end: 0x109f\n      }, {\n        begin: 0x1200,\n        end: 0x137f\n      }, {\n        begin: 0x13a0,\n        end: 0x13ff\n      }, {\n        begin: 0x1400,\n        end: 0x167f\n      }, {\n        begin: 0x1680,\n        end: 0x169f\n      }, {\n        begin: 0x16a0,\n        end: 0x16ff\n      }, {\n        begin: 0x1780,\n        end: 0x17ff\n      }, {\n        begin: 0x1800,\n        end: 0x18af\n      }, {\n        begin: 0x2800,\n        end: 0x28ff\n      }, {\n        begin: 0xa000,\n        end: 0xa48f\n      }, {\n        begin: 0x1700,\n        end: 0x171f\n      }, {\n        begin: 0x10300,\n        end: 0x1032f\n      }, {\n        begin: 0x10330,\n        end: 0x1034f\n      }, {\n        begin: 0x10400,\n        end: 0x1044f\n      }, {\n        begin: 0x1d000,\n        end: 0x1d0ff\n      }, {\n        begin: 0x1d400,\n        end: 0x1d7ff\n      }, {\n        begin: 0xff000,\n        end: 0xffffd\n      }, {\n        begin: 0xfe00,\n        end: 0xfe0f\n      }, {\n        begin: 0xe0000,\n        end: 0xe007f\n      }, {\n        begin: 0x1900,\n        end: 0x194f\n      }, {\n        begin: 0x1950,\n        end: 0x197f\n      }, {\n        begin: 0x1980,\n        end: 0x19df\n      }, {\n        begin: 0x1a00,\n        end: 0x1a1f\n      }, {\n        begin: 0x2c00,\n        end: 0x2c5f\n      }, {\n        begin: 0x2d30,\n        end: 0x2d7f\n      }, {\n        begin: 0x4dc0,\n        end: 0x4dff\n      }, {\n        begin: 0xa800,\n        end: 0xa82f\n      }, {\n        begin: 0x10000,\n        end: 0x1007f\n      }, {\n        begin: 0x10140,\n        end: 0x1018f\n      }, {\n        begin: 0x10380,\n        end: 0x1039f\n      }, {\n        begin: 0x103a0,\n        end: 0x103df\n      }, {\n        begin: 0x10450,\n        end: 0x1047f\n      }, {\n        begin: 0x10480,\n        end: 0x104af\n      }, {\n        begin: 0x10800,\n        end: 0x1083f\n      }, {\n        begin: 0x10a00,\n        end: 0x10a5f\n      }, {\n        begin: 0x1d300,\n        end: 0x1d35f\n      }, {\n        begin: 0x12000,\n        end: 0x123ff\n      }, {\n        begin: 0x1d360,\n        end: 0x1d37f\n      }, {\n        begin: 0x1b80,\n        end: 0x1bbf\n      }, {\n        begin: 0x1c00,\n        end: 0x1c4f\n      }, {\n        begin: 0x1c50,\n        end: 0x1c7f\n      }, {\n        begin: 0xa880,\n        end: 0xa8df\n      }, {\n        begin: 0xa900,\n        end: 0xa92f\n      }, {\n        begin: 0xa930,\n        end: 0xa95f\n      }, {\n        begin: 0xaa00,\n        end: 0xaa5f\n      }, {\n        begin: 0x10190,\n        end: 0x101cf\n      }, {\n        begin: 0x101d0,\n        end: 0x101ff\n      }, {\n        begin: 0x102a0,\n        end: 0x102df\n      }, {\n        begin: 0x1f030,\n        end: 0x1f09f\n      }];\n\n      function getUnicodeRangeFor(value) {\n        for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n          var range = UnicodeRanges[i];\n\n          if (value >= range.begin && value < range.end) {\n            return i;\n          }\n        }\n\n        return -1;\n      }\n\n      function isRTLRangeFor(value) {\n        var range = UnicodeRanges[13];\n\n        if (value >= range.begin && value < range.end) {\n          return true;\n        }\n\n        range = UnicodeRanges[11];\n\n        if (value >= range.begin && value < range.end) {\n          return true;\n        }\n\n        return false;\n      }\n\n      var getNormalizedUnicodes = getLookupTableFactory(function (t) {\n        t[\"\\xA8\"] = \" \\u0308\";\n        t[\"\\xAF\"] = \" \\u0304\";\n        t[\"\\xB4\"] = \" \\u0301\";\n        t[\"\\xB5\"] = \"\\u03BC\";\n        t[\"\\xB8\"] = \" \\u0327\";\n        t[\"\\u0132\"] = \"IJ\";\n        t[\"\\u0133\"] = \"ij\";\n        t[\"\\u013F\"] = \"L\\xB7\";\n        t[\"\\u0140\"] = \"l\\xB7\";\n        t[\"\\u0149\"] = \"\\u02BCn\";\n        t[\"\\u017F\"] = \"s\";\n        t[\"\\u01C4\"] = \"D\\u017D\";\n        t[\"\\u01C5\"] = \"D\\u017E\";\n        t[\"\\u01C6\"] = \"d\\u017E\";\n        t[\"\\u01C7\"] = \"LJ\";\n        t[\"\\u01C8\"] = \"Lj\";\n        t[\"\\u01C9\"] = \"lj\";\n        t[\"\\u01CA\"] = \"NJ\";\n        t[\"\\u01CB\"] = \"Nj\";\n        t[\"\\u01CC\"] = \"nj\";\n        t[\"\\u01F1\"] = \"DZ\";\n        t[\"\\u01F2\"] = \"Dz\";\n        t[\"\\u01F3\"] = \"dz\";\n        t[\"\\u02D8\"] = \" \\u0306\";\n        t[\"\\u02D9\"] = \" \\u0307\";\n        t[\"\\u02DA\"] = \" \\u030A\";\n        t[\"\\u02DB\"] = \" \\u0328\";\n        t[\"\\u02DC\"] = \" \\u0303\";\n        t[\"\\u02DD\"] = \" \\u030B\";\n        t[\"\\u037A\"] = \" \\u0345\";\n        t[\"\\u0384\"] = \" \\u0301\";\n        t[\"\\u03D0\"] = \"\\u03B2\";\n        t[\"\\u03D1\"] = \"\\u03B8\";\n        t[\"\\u03D2\"] = \"\\u03A5\";\n        t[\"\\u03D5\"] = \"\\u03C6\";\n        t[\"\\u03D6\"] = \"\\u03C0\";\n        t[\"\\u03F0\"] = \"\\u03BA\";\n        t[\"\\u03F1\"] = \"\\u03C1\";\n        t[\"\\u03F2\"] = \"\\u03C2\";\n        t[\"\\u03F4\"] = \"\\u0398\";\n        t[\"\\u03F5\"] = \"\\u03B5\";\n        t[\"\\u03F9\"] = \"\\u03A3\";\n        t[\"\\u0587\"] = \"\\u0565\\u0582\";\n        t[\"\\u0675\"] = \"\\u0627\\u0674\";\n        t[\"\\u0676\"] = \"\\u0648\\u0674\";\n        t[\"\\u0677\"] = \"\\u06C7\\u0674\";\n        t[\"\\u0678\"] = \"\\u064A\\u0674\";\n        t[\"\\u0E33\"] = \"\\u0E4D\\u0E32\";\n        t[\"\\u0EB3\"] = \"\\u0ECD\\u0EB2\";\n        t[\"\\u0EDC\"] = \"\\u0EAB\\u0E99\";\n        t[\"\\u0EDD\"] = \"\\u0EAB\\u0EA1\";\n        t[\"\\u0F77\"] = \"\\u0FB2\\u0F81\";\n        t[\"\\u0F79\"] = \"\\u0FB3\\u0F81\";\n        t[\"\\u1E9A\"] = \"a\\u02BE\";\n        t[\"\\u1FBD\"] = \" \\u0313\";\n        t[\"\\u1FBF\"] = \" \\u0313\";\n        t[\"\\u1FC0\"] = \" \\u0342\";\n        t[\"\\u1FFE\"] = \" \\u0314\";\n        t[\"\\u2002\"] = \" \";\n        t[\"\\u2003\"] = \" \";\n        t[\"\\u2004\"] = \" \";\n        t[\"\\u2005\"] = \" \";\n        t[\"\\u2006\"] = \" \";\n        t[\"\\u2008\"] = \" \";\n        t[\"\\u2009\"] = \" \";\n        t[\"\\u200A\"] = \" \";\n        t[\"\\u2017\"] = \" \\u0333\";\n        t[\"\\u2024\"] = \".\";\n        t[\"\\u2025\"] = \"..\";\n        t[\"\\u2026\"] = \"...\";\n        t[\"\\u2033\"] = \"\\u2032\\u2032\";\n        t[\"\\u2034\"] = \"\\u2032\\u2032\\u2032\";\n        t[\"\\u2036\"] = \"\\u2035\\u2035\";\n        t[\"\\u2037\"] = \"\\u2035\\u2035\\u2035\";\n        t[\"\\u203C\"] = \"!!\";\n        t[\"\\u203E\"] = \" \\u0305\";\n        t[\"\\u2047\"] = \"??\";\n        t[\"\\u2048\"] = \"?!\";\n        t[\"\\u2049\"] = \"!?\";\n        t[\"\\u2057\"] = \"\\u2032\\u2032\\u2032\\u2032\";\n        t[\"\\u205F\"] = \" \";\n        t[\"\\u20A8\"] = \"Rs\";\n        t[\"\\u2100\"] = \"a/c\";\n        t[\"\\u2101\"] = \"a/s\";\n        t[\"\\u2103\"] = \"\\xB0C\";\n        t[\"\\u2105\"] = \"c/o\";\n        t[\"\\u2106\"] = \"c/u\";\n        t[\"\\u2107\"] = \"\\u0190\";\n        t[\"\\u2109\"] = \"\\xB0F\";\n        t[\"\\u2116\"] = \"No\";\n        t[\"\\u2121\"] = \"TEL\";\n        t[\"\\u2135\"] = \"\\u05D0\";\n        t[\"\\u2136\"] = \"\\u05D1\";\n        t[\"\\u2137\"] = \"\\u05D2\";\n        t[\"\\u2138\"] = \"\\u05D3\";\n        t[\"\\u213B\"] = \"FAX\";\n        t[\"\\u2160\"] = \"I\";\n        t[\"\\u2161\"] = \"II\";\n        t[\"\\u2162\"] = \"III\";\n        t[\"\\u2163\"] = \"IV\";\n        t[\"\\u2164\"] = \"V\";\n        t[\"\\u2165\"] = \"VI\";\n        t[\"\\u2166\"] = \"VII\";\n        t[\"\\u2167\"] = \"VIII\";\n        t[\"\\u2168\"] = \"IX\";\n        t[\"\\u2169\"] = \"X\";\n        t[\"\\u216A\"] = \"XI\";\n        t[\"\\u216B\"] = \"XII\";\n        t[\"\\u216C\"] = \"L\";\n        t[\"\\u216D\"] = \"C\";\n        t[\"\\u216E\"] = \"D\";\n        t[\"\\u216F\"] = \"M\";\n        t[\"\\u2170\"] = \"i\";\n        t[\"\\u2171\"] = \"ii\";\n        t[\"\\u2172\"] = \"iii\";\n        t[\"\\u2173\"] = \"iv\";\n        t[\"\\u2174\"] = \"v\";\n        t[\"\\u2175\"] = \"vi\";\n        t[\"\\u2176\"] = \"vii\";\n        t[\"\\u2177\"] = \"viii\";\n        t[\"\\u2178\"] = \"ix\";\n        t[\"\\u2179\"] = \"x\";\n        t[\"\\u217A\"] = \"xi\";\n        t[\"\\u217B\"] = \"xii\";\n        t[\"\\u217C\"] = \"l\";\n        t[\"\\u217D\"] = \"c\";\n        t[\"\\u217E\"] = \"d\";\n        t[\"\\u217F\"] = \"m\";\n        t[\"\\u222C\"] = \"\\u222B\\u222B\";\n        t[\"\\u222D\"] = \"\\u222B\\u222B\\u222B\";\n        t[\"\\u222F\"] = \"\\u222E\\u222E\";\n        t[\"\\u2230\"] = \"\\u222E\\u222E\\u222E\";\n        t[\"\\u2474\"] = \"(1)\";\n        t[\"\\u2475\"] = \"(2)\";\n        t[\"\\u2476\"] = \"(3)\";\n        t[\"\\u2477\"] = \"(4)\";\n        t[\"\\u2478\"] = \"(5)\";\n        t[\"\\u2479\"] = \"(6)\";\n        t[\"\\u247A\"] = \"(7)\";\n        t[\"\\u247B\"] = \"(8)\";\n        t[\"\\u247C\"] = \"(9)\";\n        t[\"\\u247D\"] = \"(10)\";\n        t[\"\\u247E\"] = \"(11)\";\n        t[\"\\u247F\"] = \"(12)\";\n        t[\"\\u2480\"] = \"(13)\";\n        t[\"\\u2481\"] = \"(14)\";\n        t[\"\\u2482\"] = \"(15)\";\n        t[\"\\u2483\"] = \"(16)\";\n        t[\"\\u2484\"] = \"(17)\";\n        t[\"\\u2485\"] = \"(18)\";\n        t[\"\\u2486\"] = \"(19)\";\n        t[\"\\u2487\"] = \"(20)\";\n        t[\"\\u2488\"] = \"1.\";\n        t[\"\\u2489\"] = \"2.\";\n        t[\"\\u248A\"] = \"3.\";\n        t[\"\\u248B\"] = \"4.\";\n        t[\"\\u248C\"] = \"5.\";\n        t[\"\\u248D\"] = \"6.\";\n        t[\"\\u248E\"] = \"7.\";\n        t[\"\\u248F\"] = \"8.\";\n        t[\"\\u2490\"] = \"9.\";\n        t[\"\\u2491\"] = \"10.\";\n        t[\"\\u2492\"] = \"11.\";\n        t[\"\\u2493\"] = \"12.\";\n        t[\"\\u2494\"] = \"13.\";\n        t[\"\\u2495\"] = \"14.\";\n        t[\"\\u2496\"] = \"15.\";\n        t[\"\\u2497\"] = \"16.\";\n        t[\"\\u2498\"] = \"17.\";\n        t[\"\\u2499\"] = \"18.\";\n        t[\"\\u249A\"] = \"19.\";\n        t[\"\\u249B\"] = \"20.\";\n        t[\"\\u249C\"] = \"(a)\";\n        t[\"\\u249D\"] = \"(b)\";\n        t[\"\\u249E\"] = \"(c)\";\n        t[\"\\u249F\"] = \"(d)\";\n        t[\"\\u24A0\"] = \"(e)\";\n        t[\"\\u24A1\"] = \"(f)\";\n        t[\"\\u24A2\"] = \"(g)\";\n        t[\"\\u24A3\"] = \"(h)\";\n        t[\"\\u24A4\"] = \"(i)\";\n        t[\"\\u24A5\"] = \"(j)\";\n        t[\"\\u24A6\"] = \"(k)\";\n        t[\"\\u24A7\"] = \"(l)\";\n        t[\"\\u24A8\"] = \"(m)\";\n        t[\"\\u24A9\"] = \"(n)\";\n        t[\"\\u24AA\"] = \"(o)\";\n        t[\"\\u24AB\"] = \"(p)\";\n        t[\"\\u24AC\"] = \"(q)\";\n        t[\"\\u24AD\"] = \"(r)\";\n        t[\"\\u24AE\"] = \"(s)\";\n        t[\"\\u24AF\"] = \"(t)\";\n        t[\"\\u24B0\"] = \"(u)\";\n        t[\"\\u24B1\"] = \"(v)\";\n        t[\"\\u24B2\"] = \"(w)\";\n        t[\"\\u24B3\"] = \"(x)\";\n        t[\"\\u24B4\"] = \"(y)\";\n        t[\"\\u24B5\"] = \"(z)\";\n        t[\"\\u2A0C\"] = \"\\u222B\\u222B\\u222B\\u222B\";\n        t[\"\\u2A74\"] = \"::=\";\n        t[\"\\u2A75\"] = \"==\";\n        t[\"\\u2A76\"] = \"===\";\n        t[\"\\u2E9F\"] = \"\\u6BCD\";\n        t[\"\\u2EF3\"] = \"\\u9F9F\";\n        t[\"\\u2F00\"] = \"\\u4E00\";\n        t[\"\\u2F01\"] = \"\\u4E28\";\n        t[\"\\u2F02\"] = \"\\u4E36\";\n        t[\"\\u2F03\"] = \"\\u4E3F\";\n        t[\"\\u2F04\"] = \"\\u4E59\";\n        t[\"\\u2F05\"] = \"\\u4E85\";\n        t[\"\\u2F06\"] = \"\\u4E8C\";\n        t[\"\\u2F07\"] = \"\\u4EA0\";\n        t[\"\\u2F08\"] = \"\\u4EBA\";\n        t[\"\\u2F09\"] = \"\\u513F\";\n        t[\"\\u2F0A\"] = \"\\u5165\";\n        t[\"\\u2F0B\"] = \"\\u516B\";\n        t[\"\\u2F0C\"] = \"\\u5182\";\n        t[\"\\u2F0D\"] = \"\\u5196\";\n        t[\"\\u2F0E\"] = \"\\u51AB\";\n        t[\"\\u2F0F\"] = \"\\u51E0\";\n        t[\"\\u2F10\"] = \"\\u51F5\";\n        t[\"\\u2F11\"] = \"\\u5200\";\n        t[\"\\u2F12\"] = \"\\u529B\";\n        t[\"\\u2F13\"] = \"\\u52F9\";\n        t[\"\\u2F14\"] = \"\\u5315\";\n        t[\"\\u2F15\"] = \"\\u531A\";\n        t[\"\\u2F16\"] = \"\\u5338\";\n        t[\"\\u2F17\"] = \"\\u5341\";\n        t[\"\\u2F18\"] = \"\\u535C\";\n        t[\"\\u2F19\"] = \"\\u5369\";\n        t[\"\\u2F1A\"] = \"\\u5382\";\n        t[\"\\u2F1B\"] = \"\\u53B6\";\n        t[\"\\u2F1C\"] = \"\\u53C8\";\n        t[\"\\u2F1D\"] = \"\\u53E3\";\n        t[\"\\u2F1E\"] = \"\\u56D7\";\n        t[\"\\u2F1F\"] = \"\\u571F\";\n        t[\"\\u2F20\"] = \"\\u58EB\";\n        t[\"\\u2F21\"] = \"\\u5902\";\n        t[\"\\u2F22\"] = \"\\u590A\";\n        t[\"\\u2F23\"] = \"\\u5915\";\n        t[\"\\u2F24\"] = \"\\u5927\";\n        t[\"\\u2F25\"] = \"\\u5973\";\n        t[\"\\u2F26\"] = \"\\u5B50\";\n        t[\"\\u2F27\"] = \"\\u5B80\";\n        t[\"\\u2F28\"] = \"\\u5BF8\";\n        t[\"\\u2F29\"] = \"\\u5C0F\";\n        t[\"\\u2F2A\"] = \"\\u5C22\";\n        t[\"\\u2F2B\"] = \"\\u5C38\";\n        t[\"\\u2F2C\"] = \"\\u5C6E\";\n        t[\"\\u2F2D\"] = \"\\u5C71\";\n        t[\"\\u2F2E\"] = \"\\u5DDB\";\n        t[\"\\u2F2F\"] = \"\\u5DE5\";\n        t[\"\\u2F30\"] = \"\\u5DF1\";\n        t[\"\\u2F31\"] = \"\\u5DFE\";\n        t[\"\\u2F32\"] = \"\\u5E72\";\n        t[\"\\u2F33\"] = \"\\u5E7A\";\n        t[\"\\u2F34\"] = \"\\u5E7F\";\n        t[\"\\u2F35\"] = \"\\u5EF4\";\n        t[\"\\u2F36\"] = \"\\u5EFE\";\n        t[\"\\u2F37\"] = \"\\u5F0B\";\n        t[\"\\u2F38\"] = \"\\u5F13\";\n        t[\"\\u2F39\"] = \"\\u5F50\";\n        t[\"\\u2F3A\"] = \"\\u5F61\";\n        t[\"\\u2F3B\"] = \"\\u5F73\";\n        t[\"\\u2F3C\"] = \"\\u5FC3\";\n        t[\"\\u2F3D\"] = \"\\u6208\";\n        t[\"\\u2F3E\"] = \"\\u6236\";\n        t[\"\\u2F3F\"] = \"\\u624B\";\n        t[\"\\u2F40\"] = \"\\u652F\";\n        t[\"\\u2F41\"] = \"\\u6534\";\n        t[\"\\u2F42\"] = \"\\u6587\";\n        t[\"\\u2F43\"] = \"\\u6597\";\n        t[\"\\u2F44\"] = \"\\u65A4\";\n        t[\"\\u2F45\"] = \"\\u65B9\";\n        t[\"\\u2F46\"] = \"\\u65E0\";\n        t[\"\\u2F47\"] = \"\\u65E5\";\n        t[\"\\u2F48\"] = \"\\u66F0\";\n        t[\"\\u2F49\"] = \"\\u6708\";\n        t[\"\\u2F4A\"] = \"\\u6728\";\n        t[\"\\u2F4B\"] = \"\\u6B20\";\n        t[\"\\u2F4C\"] = \"\\u6B62\";\n        t[\"\\u2F4D\"] = \"\\u6B79\";\n        t[\"\\u2F4E\"] = \"\\u6BB3\";\n        t[\"\\u2F4F\"] = \"\\u6BCB\";\n        t[\"\\u2F50\"] = \"\\u6BD4\";\n        t[\"\\u2F51\"] = \"\\u6BDB\";\n        t[\"\\u2F52\"] = \"\\u6C0F\";\n        t[\"\\u2F53\"] = \"\\u6C14\";\n        t[\"\\u2F54\"] = \"\\u6C34\";\n        t[\"\\u2F55\"] = \"\\u706B\";\n        t[\"\\u2F56\"] = \"\\u722A\";\n        t[\"\\u2F57\"] = \"\\u7236\";\n        t[\"\\u2F58\"] = \"\\u723B\";\n        t[\"\\u2F59\"] = \"\\u723F\";\n        t[\"\\u2F5A\"] = \"\\u7247\";\n        t[\"\\u2F5B\"] = \"\\u7259\";\n        t[\"\\u2F5C\"] = \"\\u725B\";\n        t[\"\\u2F5D\"] = \"\\u72AC\";\n        t[\"\\u2F5E\"] = \"\\u7384\";\n        t[\"\\u2F5F\"] = \"\\u7389\";\n        t[\"\\u2F60\"] = \"\\u74DC\";\n        t[\"\\u2F61\"] = \"\\u74E6\";\n        t[\"\\u2F62\"] = \"\\u7518\";\n        t[\"\\u2F63\"] = \"\\u751F\";\n        t[\"\\u2F64\"] = \"\\u7528\";\n        t[\"\\u2F65\"] = \"\\u7530\";\n        t[\"\\u2F66\"] = \"\\u758B\";\n        t[\"\\u2F67\"] = \"\\u7592\";\n        t[\"\\u2F68\"] = \"\\u7676\";\n        t[\"\\u2F69\"] = \"\\u767D\";\n        t[\"\\u2F6A\"] = \"\\u76AE\";\n        t[\"\\u2F6B\"] = \"\\u76BF\";\n        t[\"\\u2F6C\"] = \"\\u76EE\";\n        t[\"\\u2F6D\"] = \"\\u77DB\";\n        t[\"\\u2F6E\"] = \"\\u77E2\";\n        t[\"\\u2F6F\"] = \"\\u77F3\";\n        t[\"\\u2F70\"] = \"\\u793A\";\n        t[\"\\u2F71\"] = \"\\u79B8\";\n        t[\"\\u2F72\"] = \"\\u79BE\";\n        t[\"\\u2F73\"] = \"\\u7A74\";\n        t[\"\\u2F74\"] = \"\\u7ACB\";\n        t[\"\\u2F75\"] = \"\\u7AF9\";\n        t[\"\\u2F76\"] = \"\\u7C73\";\n        t[\"\\u2F77\"] = \"\\u7CF8\";\n        t[\"\\u2F78\"] = \"\\u7F36\";\n        t[\"\\u2F79\"] = \"\\u7F51\";\n        t[\"\\u2F7A\"] = \"\\u7F8A\";\n        t[\"\\u2F7B\"] = \"\\u7FBD\";\n        t[\"\\u2F7C\"] = \"\\u8001\";\n        t[\"\\u2F7D\"] = \"\\u800C\";\n        t[\"\\u2F7E\"] = \"\\u8012\";\n        t[\"\\u2F7F\"] = \"\\u8033\";\n        t[\"\\u2F80\"] = \"\\u807F\";\n        t[\"\\u2F81\"] = \"\\u8089\";\n        t[\"\\u2F82\"] = \"\\u81E3\";\n        t[\"\\u2F83\"] = \"\\u81EA\";\n        t[\"\\u2F84\"] = \"\\u81F3\";\n        t[\"\\u2F85\"] = \"\\u81FC\";\n        t[\"\\u2F86\"] = \"\\u820C\";\n        t[\"\\u2F87\"] = \"\\u821B\";\n        t[\"\\u2F88\"] = \"\\u821F\";\n        t[\"\\u2F89\"] = \"\\u826E\";\n        t[\"\\u2F8A\"] = \"\\u8272\";\n        t[\"\\u2F8B\"] = \"\\u8278\";\n        t[\"\\u2F8C\"] = \"\\u864D\";\n        t[\"\\u2F8D\"] = \"\\u866B\";\n        t[\"\\u2F8E\"] = \"\\u8840\";\n        t[\"\\u2F8F\"] = \"\\u884C\";\n        t[\"\\u2F90\"] = \"\\u8863\";\n        t[\"\\u2F91\"] = \"\\u897E\";\n        t[\"\\u2F92\"] = \"\\u898B\";\n        t[\"\\u2F93\"] = \"\\u89D2\";\n        t[\"\\u2F94\"] = \"\\u8A00\";\n        t[\"\\u2F95\"] = \"\\u8C37\";\n        t[\"\\u2F96\"] = \"\\u8C46\";\n        t[\"\\u2F97\"] = \"\\u8C55\";\n        t[\"\\u2F98\"] = \"\\u8C78\";\n        t[\"\\u2F99\"] = \"\\u8C9D\";\n        t[\"\\u2F9A\"] = \"\\u8D64\";\n        t[\"\\u2F9B\"] = \"\\u8D70\";\n        t[\"\\u2F9C\"] = \"\\u8DB3\";\n        t[\"\\u2F9D\"] = \"\\u8EAB\";\n        t[\"\\u2F9E\"] = \"\\u8ECA\";\n        t[\"\\u2F9F\"] = \"\\u8F9B\";\n        t[\"\\u2FA0\"] = \"\\u8FB0\";\n        t[\"\\u2FA1\"] = \"\\u8FB5\";\n        t[\"\\u2FA2\"] = \"\\u9091\";\n        t[\"\\u2FA3\"] = \"\\u9149\";\n        t[\"\\u2FA4\"] = \"\\u91C6\";\n        t[\"\\u2FA5\"] = \"\\u91CC\";\n        t[\"\\u2FA6\"] = \"\\u91D1\";\n        t[\"\\u2FA7\"] = \"\\u9577\";\n        t[\"\\u2FA8\"] = \"\\u9580\";\n        t[\"\\u2FA9\"] = \"\\u961C\";\n        t[\"\\u2FAA\"] = \"\\u96B6\";\n        t[\"\\u2FAB\"] = \"\\u96B9\";\n        t[\"\\u2FAC\"] = \"\\u96E8\";\n        t[\"\\u2FAD\"] = \"\\u9751\";\n        t[\"\\u2FAE\"] = \"\\u975E\";\n        t[\"\\u2FAF\"] = \"\\u9762\";\n        t[\"\\u2FB0\"] = \"\\u9769\";\n        t[\"\\u2FB1\"] = \"\\u97CB\";\n        t[\"\\u2FB2\"] = \"\\u97ED\";\n        t[\"\\u2FB3\"] = \"\\u97F3\";\n        t[\"\\u2FB4\"] = \"\\u9801\";\n        t[\"\\u2FB5\"] = \"\\u98A8\";\n        t[\"\\u2FB6\"] = \"\\u98DB\";\n        t[\"\\u2FB7\"] = \"\\u98DF\";\n        t[\"\\u2FB8\"] = \"\\u9996\";\n        t[\"\\u2FB9\"] = \"\\u9999\";\n        t[\"\\u2FBA\"] = \"\\u99AC\";\n        t[\"\\u2FBB\"] = \"\\u9AA8\";\n        t[\"\\u2FBC\"] = \"\\u9AD8\";\n        t[\"\\u2FBD\"] = \"\\u9ADF\";\n        t[\"\\u2FBE\"] = \"\\u9B25\";\n        t[\"\\u2FBF\"] = \"\\u9B2F\";\n        t[\"\\u2FC0\"] = \"\\u9B32\";\n        t[\"\\u2FC1\"] = \"\\u9B3C\";\n        t[\"\\u2FC2\"] = \"\\u9B5A\";\n        t[\"\\u2FC3\"] = \"\\u9CE5\";\n        t[\"\\u2FC4\"] = \"\\u9E75\";\n        t[\"\\u2FC5\"] = \"\\u9E7F\";\n        t[\"\\u2FC6\"] = \"\\u9EA5\";\n        t[\"\\u2FC7\"] = \"\\u9EBB\";\n        t[\"\\u2FC8\"] = \"\\u9EC3\";\n        t[\"\\u2FC9\"] = \"\\u9ECD\";\n        t[\"\\u2FCA\"] = \"\\u9ED1\";\n        t[\"\\u2FCB\"] = \"\\u9EF9\";\n        t[\"\\u2FCC\"] = \"\\u9EFD\";\n        t[\"\\u2FCD\"] = \"\\u9F0E\";\n        t[\"\\u2FCE\"] = \"\\u9F13\";\n        t[\"\\u2FCF\"] = \"\\u9F20\";\n        t[\"\\u2FD0\"] = \"\\u9F3B\";\n        t[\"\\u2FD1\"] = \"\\u9F4A\";\n        t[\"\\u2FD2\"] = \"\\u9F52\";\n        t[\"\\u2FD3\"] = \"\\u9F8D\";\n        t[\"\\u2FD4\"] = \"\\u9F9C\";\n        t[\"\\u2FD5\"] = \"\\u9FA0\";\n        t[\"\\u3036\"] = \"\\u3012\";\n        t[\"\\u3038\"] = \"\\u5341\";\n        t[\"\\u3039\"] = \"\\u5344\";\n        t[\"\\u303A\"] = \"\\u5345\";\n        t[\"\\u309B\"] = \" \\u3099\";\n        t[\"\\u309C\"] = \" \\u309A\";\n        t[\"\\u3131\"] = \"\\u1100\";\n        t[\"\\u3132\"] = \"\\u1101\";\n        t[\"\\u3133\"] = \"\\u11AA\";\n        t[\"\\u3134\"] = \"\\u1102\";\n        t[\"\\u3135\"] = \"\\u11AC\";\n        t[\"\\u3136\"] = \"\\u11AD\";\n        t[\"\\u3137\"] = \"\\u1103\";\n        t[\"\\u3138\"] = \"\\u1104\";\n        t[\"\\u3139\"] = \"\\u1105\";\n        t[\"\\u313A\"] = \"\\u11B0\";\n        t[\"\\u313B\"] = \"\\u11B1\";\n        t[\"\\u313C\"] = \"\\u11B2\";\n        t[\"\\u313D\"] = \"\\u11B3\";\n        t[\"\\u313E\"] = \"\\u11B4\";\n        t[\"\\u313F\"] = \"\\u11B5\";\n        t[\"\\u3140\"] = \"\\u111A\";\n        t[\"\\u3141\"] = \"\\u1106\";\n        t[\"\\u3142\"] = \"\\u1107\";\n        t[\"\\u3143\"] = \"\\u1108\";\n        t[\"\\u3144\"] = \"\\u1121\";\n        t[\"\\u3145\"] = \"\\u1109\";\n        t[\"\\u3146\"] = \"\\u110A\";\n        t[\"\\u3147\"] = \"\\u110B\";\n        t[\"\\u3148\"] = \"\\u110C\";\n        t[\"\\u3149\"] = \"\\u110D\";\n        t[\"\\u314A\"] = \"\\u110E\";\n        t[\"\\u314B\"] = \"\\u110F\";\n        t[\"\\u314C\"] = \"\\u1110\";\n        t[\"\\u314D\"] = \"\\u1111\";\n        t[\"\\u314E\"] = \"\\u1112\";\n        t[\"\\u314F\"] = \"\\u1161\";\n        t[\"\\u3150\"] = \"\\u1162\";\n        t[\"\\u3151\"] = \"\\u1163\";\n        t[\"\\u3152\"] = \"\\u1164\";\n        t[\"\\u3153\"] = \"\\u1165\";\n        t[\"\\u3154\"] = \"\\u1166\";\n        t[\"\\u3155\"] = \"\\u1167\";\n        t[\"\\u3156\"] = \"\\u1168\";\n        t[\"\\u3157\"] = \"\\u1169\";\n        t[\"\\u3158\"] = \"\\u116A\";\n        t[\"\\u3159\"] = \"\\u116B\";\n        t[\"\\u315A\"] = \"\\u116C\";\n        t[\"\\u315B\"] = \"\\u116D\";\n        t[\"\\u315C\"] = \"\\u116E\";\n        t[\"\\u315D\"] = \"\\u116F\";\n        t[\"\\u315E\"] = \"\\u1170\";\n        t[\"\\u315F\"] = \"\\u1171\";\n        t[\"\\u3160\"] = \"\\u1172\";\n        t[\"\\u3161\"] = \"\\u1173\";\n        t[\"\\u3162\"] = \"\\u1174\";\n        t[\"\\u3163\"] = \"\\u1175\";\n        t[\"\\u3164\"] = \"\\u1160\";\n        t[\"\\u3165\"] = \"\\u1114\";\n        t[\"\\u3166\"] = \"\\u1115\";\n        t[\"\\u3167\"] = \"\\u11C7\";\n        t[\"\\u3168\"] = \"\\u11C8\";\n        t[\"\\u3169\"] = \"\\u11CC\";\n        t[\"\\u316A\"] = \"\\u11CE\";\n        t[\"\\u316B\"] = \"\\u11D3\";\n        t[\"\\u316C\"] = \"\\u11D7\";\n        t[\"\\u316D\"] = \"\\u11D9\";\n        t[\"\\u316E\"] = \"\\u111C\";\n        t[\"\\u316F\"] = \"\\u11DD\";\n        t[\"\\u3170\"] = \"\\u11DF\";\n        t[\"\\u3171\"] = \"\\u111D\";\n        t[\"\\u3172\"] = \"\\u111E\";\n        t[\"\\u3173\"] = \"\\u1120\";\n        t[\"\\u3174\"] = \"\\u1122\";\n        t[\"\\u3175\"] = \"\\u1123\";\n        t[\"\\u3176\"] = \"\\u1127\";\n        t[\"\\u3177\"] = \"\\u1129\";\n        t[\"\\u3178\"] = \"\\u112B\";\n        t[\"\\u3179\"] = \"\\u112C\";\n        t[\"\\u317A\"] = \"\\u112D\";\n        t[\"\\u317B\"] = \"\\u112E\";\n        t[\"\\u317C\"] = \"\\u112F\";\n        t[\"\\u317D\"] = \"\\u1132\";\n        t[\"\\u317E\"] = \"\\u1136\";\n        t[\"\\u317F\"] = \"\\u1140\";\n        t[\"\\u3180\"] = \"\\u1147\";\n        t[\"\\u3181\"] = \"\\u114C\";\n        t[\"\\u3182\"] = \"\\u11F1\";\n        t[\"\\u3183\"] = \"\\u11F2\";\n        t[\"\\u3184\"] = \"\\u1157\";\n        t[\"\\u3185\"] = \"\\u1158\";\n        t[\"\\u3186\"] = \"\\u1159\";\n        t[\"\\u3187\"] = \"\\u1184\";\n        t[\"\\u3188\"] = \"\\u1185\";\n        t[\"\\u3189\"] = \"\\u1188\";\n        t[\"\\u318A\"] = \"\\u1191\";\n        t[\"\\u318B\"] = \"\\u1192\";\n        t[\"\\u318C\"] = \"\\u1194\";\n        t[\"\\u318D\"] = \"\\u119E\";\n        t[\"\\u318E\"] = \"\\u11A1\";\n        t[\"\\u3200\"] = \"(\\u1100)\";\n        t[\"\\u3201\"] = \"(\\u1102)\";\n        t[\"\\u3202\"] = \"(\\u1103)\";\n        t[\"\\u3203\"] = \"(\\u1105)\";\n        t[\"\\u3204\"] = \"(\\u1106)\";\n        t[\"\\u3205\"] = \"(\\u1107)\";\n        t[\"\\u3206\"] = \"(\\u1109)\";\n        t[\"\\u3207\"] = \"(\\u110B)\";\n        t[\"\\u3208\"] = \"(\\u110C)\";\n        t[\"\\u3209\"] = \"(\\u110E)\";\n        t[\"\\u320A\"] = \"(\\u110F)\";\n        t[\"\\u320B\"] = \"(\\u1110)\";\n        t[\"\\u320C\"] = \"(\\u1111)\";\n        t[\"\\u320D\"] = \"(\\u1112)\";\n        t[\"\\u320E\"] = \"(\\u1100\\u1161)\";\n        t[\"\\u320F\"] = \"(\\u1102\\u1161)\";\n        t[\"\\u3210\"] = \"(\\u1103\\u1161)\";\n        t[\"\\u3211\"] = \"(\\u1105\\u1161)\";\n        t[\"\\u3212\"] = \"(\\u1106\\u1161)\";\n        t[\"\\u3213\"] = \"(\\u1107\\u1161)\";\n        t[\"\\u3214\"] = \"(\\u1109\\u1161)\";\n        t[\"\\u3215\"] = \"(\\u110B\\u1161)\";\n        t[\"\\u3216\"] = \"(\\u110C\\u1161)\";\n        t[\"\\u3217\"] = \"(\\u110E\\u1161)\";\n        t[\"\\u3218\"] = \"(\\u110F\\u1161)\";\n        t[\"\\u3219\"] = \"(\\u1110\\u1161)\";\n        t[\"\\u321A\"] = \"(\\u1111\\u1161)\";\n        t[\"\\u321B\"] = \"(\\u1112\\u1161)\";\n        t[\"\\u321C\"] = \"(\\u110C\\u116E)\";\n        t[\"\\u321D\"] = \"(\\u110B\\u1169\\u110C\\u1165\\u11AB)\";\n        t[\"\\u321E\"] = \"(\\u110B\\u1169\\u1112\\u116E)\";\n        t[\"\\u3220\"] = \"(\\u4E00)\";\n        t[\"\\u3221\"] = \"(\\u4E8C)\";\n        t[\"\\u3222\"] = \"(\\u4E09)\";\n        t[\"\\u3223\"] = \"(\\u56DB)\";\n        t[\"\\u3224\"] = \"(\\u4E94)\";\n        t[\"\\u3225\"] = \"(\\u516D)\";\n        t[\"\\u3226\"] = \"(\\u4E03)\";\n        t[\"\\u3227\"] = \"(\\u516B)\";\n        t[\"\\u3228\"] = \"(\\u4E5D)\";\n        t[\"\\u3229\"] = \"(\\u5341)\";\n        t[\"\\u322A\"] = \"(\\u6708)\";\n        t[\"\\u322B\"] = \"(\\u706B)\";\n        t[\"\\u322C\"] = \"(\\u6C34)\";\n        t[\"\\u322D\"] = \"(\\u6728)\";\n        t[\"\\u322E\"] = \"(\\u91D1)\";\n        t[\"\\u322F\"] = \"(\\u571F)\";\n        t[\"\\u3230\"] = \"(\\u65E5)\";\n        t[\"\\u3231\"] = \"(\\u682A)\";\n        t[\"\\u3232\"] = \"(\\u6709)\";\n        t[\"\\u3233\"] = \"(\\u793E)\";\n        t[\"\\u3234\"] = \"(\\u540D)\";\n        t[\"\\u3235\"] = \"(\\u7279)\";\n        t[\"\\u3236\"] = \"(\\u8CA1)\";\n        t[\"\\u3237\"] = \"(\\u795D)\";\n        t[\"\\u3238\"] = \"(\\u52B4)\";\n        t[\"\\u3239\"] = \"(\\u4EE3)\";\n        t[\"\\u323A\"] = \"(\\u547C)\";\n        t[\"\\u323B\"] = \"(\\u5B66)\";\n        t[\"\\u323C\"] = \"(\\u76E3)\";\n        t[\"\\u323D\"] = \"(\\u4F01)\";\n        t[\"\\u323E\"] = \"(\\u8CC7)\";\n        t[\"\\u323F\"] = \"(\\u5354)\";\n        t[\"\\u3240\"] = \"(\\u796D)\";\n        t[\"\\u3241\"] = \"(\\u4F11)\";\n        t[\"\\u3242\"] = \"(\\u81EA)\";\n        t[\"\\u3243\"] = \"(\\u81F3)\";\n        t[\"\\u32C0\"] = \"1\\u6708\";\n        t[\"\\u32C1\"] = \"2\\u6708\";\n        t[\"\\u32C2\"] = \"3\\u6708\";\n        t[\"\\u32C3\"] = \"4\\u6708\";\n        t[\"\\u32C4\"] = \"5\\u6708\";\n        t[\"\\u32C5\"] = \"6\\u6708\";\n        t[\"\\u32C6\"] = \"7\\u6708\";\n        t[\"\\u32C7\"] = \"8\\u6708\";\n        t[\"\\u32C8\"] = \"9\\u6708\";\n        t[\"\\u32C9\"] = \"10\\u6708\";\n        t[\"\\u32CA\"] = \"11\\u6708\";\n        t[\"\\u32CB\"] = \"12\\u6708\";\n        t[\"\\u3358\"] = \"0\\u70B9\";\n        t[\"\\u3359\"] = \"1\\u70B9\";\n        t[\"\\u335A\"] = \"2\\u70B9\";\n        t[\"\\u335B\"] = \"3\\u70B9\";\n        t[\"\\u335C\"] = \"4\\u70B9\";\n        t[\"\\u335D\"] = \"5\\u70B9\";\n        t[\"\\u335E\"] = \"6\\u70B9\";\n        t[\"\\u335F\"] = \"7\\u70B9\";\n        t[\"\\u3360\"] = \"8\\u70B9\";\n        t[\"\\u3361\"] = \"9\\u70B9\";\n        t[\"\\u3362\"] = \"10\\u70B9\";\n        t[\"\\u3363\"] = \"11\\u70B9\";\n        t[\"\\u3364\"] = \"12\\u70B9\";\n        t[\"\\u3365\"] = \"13\\u70B9\";\n        t[\"\\u3366\"] = \"14\\u70B9\";\n        t[\"\\u3367\"] = \"15\\u70B9\";\n        t[\"\\u3368\"] = \"16\\u70B9\";\n        t[\"\\u3369\"] = \"17\\u70B9\";\n        t[\"\\u336A\"] = \"18\\u70B9\";\n        t[\"\\u336B\"] = \"19\\u70B9\";\n        t[\"\\u336C\"] = \"20\\u70B9\";\n        t[\"\\u336D\"] = \"21\\u70B9\";\n        t[\"\\u336E\"] = \"22\\u70B9\";\n        t[\"\\u336F\"] = \"23\\u70B9\";\n        t[\"\\u3370\"] = \"24\\u70B9\";\n        t[\"\\u33E0\"] = \"1\\u65E5\";\n        t[\"\\u33E1\"] = \"2\\u65E5\";\n        t[\"\\u33E2\"] = \"3\\u65E5\";\n        t[\"\\u33E3\"] = \"4\\u65E5\";\n        t[\"\\u33E4\"] = \"5\\u65E5\";\n        t[\"\\u33E5\"] = \"6\\u65E5\";\n        t[\"\\u33E6\"] = \"7\\u65E5\";\n        t[\"\\u33E7\"] = \"8\\u65E5\";\n        t[\"\\u33E8\"] = \"9\\u65E5\";\n        t[\"\\u33E9\"] = \"10\\u65E5\";\n        t[\"\\u33EA\"] = \"11\\u65E5\";\n        t[\"\\u33EB\"] = \"12\\u65E5\";\n        t[\"\\u33EC\"] = \"13\\u65E5\";\n        t[\"\\u33ED\"] = \"14\\u65E5\";\n        t[\"\\u33EE\"] = \"15\\u65E5\";\n        t[\"\\u33EF\"] = \"16\\u65E5\";\n        t[\"\\u33F0\"] = \"17\\u65E5\";\n        t[\"\\u33F1\"] = \"18\\u65E5\";\n        t[\"\\u33F2\"] = \"19\\u65E5\";\n        t[\"\\u33F3\"] = \"20\\u65E5\";\n        t[\"\\u33F4\"] = \"21\\u65E5\";\n        t[\"\\u33F5\"] = \"22\\u65E5\";\n        t[\"\\u33F6\"] = \"23\\u65E5\";\n        t[\"\\u33F7\"] = \"24\\u65E5\";\n        t[\"\\u33F8\"] = \"25\\u65E5\";\n        t[\"\\u33F9\"] = \"26\\u65E5\";\n        t[\"\\u33FA\"] = \"27\\u65E5\";\n        t[\"\\u33FB\"] = \"28\\u65E5\";\n        t[\"\\u33FC\"] = \"29\\u65E5\";\n        t[\"\\u33FD\"] = \"30\\u65E5\";\n        t[\"\\u33FE\"] = \"31\\u65E5\";\n        t[\"\\uFB00\"] = \"ff\";\n        t[\"\\uFB01\"] = \"fi\";\n        t[\"\\uFB02\"] = \"fl\";\n        t[\"\\uFB03\"] = \"ffi\";\n        t[\"\\uFB04\"] = \"ffl\";\n        t[\"\\uFB05\"] = \"\\u017Ft\";\n        t[\"\\uFB06\"] = \"st\";\n        t[\"\\uFB13\"] = \"\\u0574\\u0576\";\n        t[\"\\uFB14\"] = \"\\u0574\\u0565\";\n        t[\"\\uFB15\"] = \"\\u0574\\u056B\";\n        t[\"\\uFB16\"] = \"\\u057E\\u0576\";\n        t[\"\\uFB17\"] = \"\\u0574\\u056D\";\n        t[\"\\uFB4F\"] = \"\\u05D0\\u05DC\";\n        t[\"\\uFB50\"] = \"\\u0671\";\n        t[\"\\uFB51\"] = \"\\u0671\";\n        t[\"\\uFB52\"] = \"\\u067B\";\n        t[\"\\uFB53\"] = \"\\u067B\";\n        t[\"\\uFB54\"] = \"\\u067B\";\n        t[\"\\uFB55\"] = \"\\u067B\";\n        t[\"\\uFB56\"] = \"\\u067E\";\n        t[\"\\uFB57\"] = \"\\u067E\";\n        t[\"\\uFB58\"] = \"\\u067E\";\n        t[\"\\uFB59\"] = \"\\u067E\";\n        t[\"\\uFB5A\"] = \"\\u0680\";\n        t[\"\\uFB5B\"] = \"\\u0680\";\n        t[\"\\uFB5C\"] = \"\\u0680\";\n        t[\"\\uFB5D\"] = \"\\u0680\";\n        t[\"\\uFB5E\"] = \"\\u067A\";\n        t[\"\\uFB5F\"] = \"\\u067A\";\n        t[\"\\uFB60\"] = \"\\u067A\";\n        t[\"\\uFB61\"] = \"\\u067A\";\n        t[\"\\uFB62\"] = \"\\u067F\";\n        t[\"\\uFB63\"] = \"\\u067F\";\n        t[\"\\uFB64\"] = \"\\u067F\";\n        t[\"\\uFB65\"] = \"\\u067F\";\n        t[\"\\uFB66\"] = \"\\u0679\";\n        t[\"\\uFB67\"] = \"\\u0679\";\n        t[\"\\uFB68\"] = \"\\u0679\";\n        t[\"\\uFB69\"] = \"\\u0679\";\n        t[\"\\uFB6A\"] = \"\\u06A4\";\n        t[\"\\uFB6B\"] = \"\\u06A4\";\n        t[\"\\uFB6C\"] = \"\\u06A4\";\n        t[\"\\uFB6D\"] = \"\\u06A4\";\n        t[\"\\uFB6E\"] = \"\\u06A6\";\n        t[\"\\uFB6F\"] = \"\\u06A6\";\n        t[\"\\uFB70\"] = \"\\u06A6\";\n        t[\"\\uFB71\"] = \"\\u06A6\";\n        t[\"\\uFB72\"] = \"\\u0684\";\n        t[\"\\uFB73\"] = \"\\u0684\";\n        t[\"\\uFB74\"] = \"\\u0684\";\n        t[\"\\uFB75\"] = \"\\u0684\";\n        t[\"\\uFB76\"] = \"\\u0683\";\n        t[\"\\uFB77\"] = \"\\u0683\";\n        t[\"\\uFB78\"] = \"\\u0683\";\n        t[\"\\uFB79\"] = \"\\u0683\";\n        t[\"\\uFB7A\"] = \"\\u0686\";\n        t[\"\\uFB7B\"] = \"\\u0686\";\n        t[\"\\uFB7C\"] = \"\\u0686\";\n        t[\"\\uFB7D\"] = \"\\u0686\";\n        t[\"\\uFB7E\"] = \"\\u0687\";\n        t[\"\\uFB7F\"] = \"\\u0687\";\n        t[\"\\uFB80\"] = \"\\u0687\";\n        t[\"\\uFB81\"] = \"\\u0687\";\n        t[\"\\uFB82\"] = \"\\u068D\";\n        t[\"\\uFB83\"] = \"\\u068D\";\n        t[\"\\uFB84\"] = \"\\u068C\";\n        t[\"\\uFB85\"] = \"\\u068C\";\n        t[\"\\uFB86\"] = \"\\u068E\";\n        t[\"\\uFB87\"] = \"\\u068E\";\n        t[\"\\uFB88\"] = \"\\u0688\";\n        t[\"\\uFB89\"] = \"\\u0688\";\n        t[\"\\uFB8A\"] = \"\\u0698\";\n        t[\"\\uFB8B\"] = \"\\u0698\";\n        t[\"\\uFB8C\"] = \"\\u0691\";\n        t[\"\\uFB8D\"] = \"\\u0691\";\n        t[\"\\uFB8E\"] = \"\\u06A9\";\n        t[\"\\uFB8F\"] = \"\\u06A9\";\n        t[\"\\uFB90\"] = \"\\u06A9\";\n        t[\"\\uFB91\"] = \"\\u06A9\";\n        t[\"\\uFB92\"] = \"\\u06AF\";\n        t[\"\\uFB93\"] = \"\\u06AF\";\n        t[\"\\uFB94\"] = \"\\u06AF\";\n        t[\"\\uFB95\"] = \"\\u06AF\";\n        t[\"\\uFB96\"] = \"\\u06B3\";\n        t[\"\\uFB97\"] = \"\\u06B3\";\n        t[\"\\uFB98\"] = \"\\u06B3\";\n        t[\"\\uFB99\"] = \"\\u06B3\";\n        t[\"\\uFB9A\"] = \"\\u06B1\";\n        t[\"\\uFB9B\"] = \"\\u06B1\";\n        t[\"\\uFB9C\"] = \"\\u06B1\";\n        t[\"\\uFB9D\"] = \"\\u06B1\";\n        t[\"\\uFB9E\"] = \"\\u06BA\";\n        t[\"\\uFB9F\"] = \"\\u06BA\";\n        t[\"\\uFBA0\"] = \"\\u06BB\";\n        t[\"\\uFBA1\"] = \"\\u06BB\";\n        t[\"\\uFBA2\"] = \"\\u06BB\";\n        t[\"\\uFBA3\"] = \"\\u06BB\";\n        t[\"\\uFBA4\"] = \"\\u06C0\";\n        t[\"\\uFBA5\"] = \"\\u06C0\";\n        t[\"\\uFBA6\"] = \"\\u06C1\";\n        t[\"\\uFBA7\"] = \"\\u06C1\";\n        t[\"\\uFBA8\"] = \"\\u06C1\";\n        t[\"\\uFBA9\"] = \"\\u06C1\";\n        t[\"\\uFBAA\"] = \"\\u06BE\";\n        t[\"\\uFBAB\"] = \"\\u06BE\";\n        t[\"\\uFBAC\"] = \"\\u06BE\";\n        t[\"\\uFBAD\"] = \"\\u06BE\";\n        t[\"\\uFBAE\"] = \"\\u06D2\";\n        t[\"\\uFBAF\"] = \"\\u06D2\";\n        t[\"\\uFBB0\"] = \"\\u06D3\";\n        t[\"\\uFBB1\"] = \"\\u06D3\";\n        t[\"\\uFBD3\"] = \"\\u06AD\";\n        t[\"\\uFBD4\"] = \"\\u06AD\";\n        t[\"\\uFBD5\"] = \"\\u06AD\";\n        t[\"\\uFBD6\"] = \"\\u06AD\";\n        t[\"\\uFBD7\"] = \"\\u06C7\";\n        t[\"\\uFBD8\"] = \"\\u06C7\";\n        t[\"\\uFBD9\"] = \"\\u06C6\";\n        t[\"\\uFBDA\"] = \"\\u06C6\";\n        t[\"\\uFBDB\"] = \"\\u06C8\";\n        t[\"\\uFBDC\"] = \"\\u06C8\";\n        t[\"\\uFBDD\"] = \"\\u0677\";\n        t[\"\\uFBDE\"] = \"\\u06CB\";\n        t[\"\\uFBDF\"] = \"\\u06CB\";\n        t[\"\\uFBE0\"] = \"\\u06C5\";\n        t[\"\\uFBE1\"] = \"\\u06C5\";\n        t[\"\\uFBE2\"] = \"\\u06C9\";\n        t[\"\\uFBE3\"] = \"\\u06C9\";\n        t[\"\\uFBE4\"] = \"\\u06D0\";\n        t[\"\\uFBE5\"] = \"\\u06D0\";\n        t[\"\\uFBE6\"] = \"\\u06D0\";\n        t[\"\\uFBE7\"] = \"\\u06D0\";\n        t[\"\\uFBE8\"] = \"\\u0649\";\n        t[\"\\uFBE9\"] = \"\\u0649\";\n        t[\"\\uFBEA\"] = \"\\u0626\\u0627\";\n        t[\"\\uFBEB\"] = \"\\u0626\\u0627\";\n        t[\"\\uFBEC\"] = \"\\u0626\\u06D5\";\n        t[\"\\uFBED\"] = \"\\u0626\\u06D5\";\n        t[\"\\uFBEE\"] = \"\\u0626\\u0648\";\n        t[\"\\uFBEF\"] = \"\\u0626\\u0648\";\n        t[\"\\uFBF0\"] = \"\\u0626\\u06C7\";\n        t[\"\\uFBF1\"] = \"\\u0626\\u06C7\";\n        t[\"\\uFBF2\"] = \"\\u0626\\u06C6\";\n        t[\"\\uFBF3\"] = \"\\u0626\\u06C6\";\n        t[\"\\uFBF4\"] = \"\\u0626\\u06C8\";\n        t[\"\\uFBF5\"] = \"\\u0626\\u06C8\";\n        t[\"\\uFBF6\"] = \"\\u0626\\u06D0\";\n        t[\"\\uFBF7\"] = \"\\u0626\\u06D0\";\n        t[\"\\uFBF8\"] = \"\\u0626\\u06D0\";\n        t[\"\\uFBF9\"] = \"\\u0626\\u0649\";\n        t[\"\\uFBFA\"] = \"\\u0626\\u0649\";\n        t[\"\\uFBFB\"] = \"\\u0626\\u0649\";\n        t[\"\\uFBFC\"] = \"\\u06CC\";\n        t[\"\\uFBFD\"] = \"\\u06CC\";\n        t[\"\\uFBFE\"] = \"\\u06CC\";\n        t[\"\\uFBFF\"] = \"\\u06CC\";\n        t[\"\\uFC00\"] = \"\\u0626\\u062C\";\n        t[\"\\uFC01\"] = \"\\u0626\\u062D\";\n        t[\"\\uFC02\"] = \"\\u0626\\u0645\";\n        t[\"\\uFC03\"] = \"\\u0626\\u0649\";\n        t[\"\\uFC04\"] = \"\\u0626\\u064A\";\n        t[\"\\uFC05\"] = \"\\u0628\\u062C\";\n        t[\"\\uFC06\"] = \"\\u0628\\u062D\";\n        t[\"\\uFC07\"] = \"\\u0628\\u062E\";\n        t[\"\\uFC08\"] = \"\\u0628\\u0645\";\n        t[\"\\uFC09\"] = \"\\u0628\\u0649\";\n        t[\"\\uFC0A\"] = \"\\u0628\\u064A\";\n        t[\"\\uFC0B\"] = \"\\u062A\\u062C\";\n        t[\"\\uFC0C\"] = \"\\u062A\\u062D\";\n        t[\"\\uFC0D\"] = \"\\u062A\\u062E\";\n        t[\"\\uFC0E\"] = \"\\u062A\\u0645\";\n        t[\"\\uFC0F\"] = \"\\u062A\\u0649\";\n        t[\"\\uFC10\"] = \"\\u062A\\u064A\";\n        t[\"\\uFC11\"] = \"\\u062B\\u062C\";\n        t[\"\\uFC12\"] = \"\\u062B\\u0645\";\n        t[\"\\uFC13\"] = \"\\u062B\\u0649\";\n        t[\"\\uFC14\"] = \"\\u062B\\u064A\";\n        t[\"\\uFC15\"] = \"\\u062C\\u062D\";\n        t[\"\\uFC16\"] = \"\\u062C\\u0645\";\n        t[\"\\uFC17\"] = \"\\u062D\\u062C\";\n        t[\"\\uFC18\"] = \"\\u062D\\u0645\";\n        t[\"\\uFC19\"] = \"\\u062E\\u062C\";\n        t[\"\\uFC1A\"] = \"\\u062E\\u062D\";\n        t[\"\\uFC1B\"] = \"\\u062E\\u0645\";\n        t[\"\\uFC1C\"] = \"\\u0633\\u062C\";\n        t[\"\\uFC1D\"] = \"\\u0633\\u062D\";\n        t[\"\\uFC1E\"] = \"\\u0633\\u062E\";\n        t[\"\\uFC1F\"] = \"\\u0633\\u0645\";\n        t[\"\\uFC20\"] = \"\\u0635\\u062D\";\n        t[\"\\uFC21\"] = \"\\u0635\\u0645\";\n        t[\"\\uFC22\"] = \"\\u0636\\u062C\";\n        t[\"\\uFC23\"] = \"\\u0636\\u062D\";\n        t[\"\\uFC24\"] = \"\\u0636\\u062E\";\n        t[\"\\uFC25\"] = \"\\u0636\\u0645\";\n        t[\"\\uFC26\"] = \"\\u0637\\u062D\";\n        t[\"\\uFC27\"] = \"\\u0637\\u0645\";\n        t[\"\\uFC28\"] = \"\\u0638\\u0645\";\n        t[\"\\uFC29\"] = \"\\u0639\\u062C\";\n        t[\"\\uFC2A\"] = \"\\u0639\\u0645\";\n        t[\"\\uFC2B\"] = \"\\u063A\\u062C\";\n        t[\"\\uFC2C\"] = \"\\u063A\\u0645\";\n        t[\"\\uFC2D\"] = \"\\u0641\\u062C\";\n        t[\"\\uFC2E\"] = \"\\u0641\\u062D\";\n        t[\"\\uFC2F\"] = \"\\u0641\\u062E\";\n        t[\"\\uFC30\"] = \"\\u0641\\u0645\";\n        t[\"\\uFC31\"] = \"\\u0641\\u0649\";\n        t[\"\\uFC32\"] = \"\\u0641\\u064A\";\n        t[\"\\uFC33\"] = \"\\u0642\\u062D\";\n        t[\"\\uFC34\"] = \"\\u0642\\u0645\";\n        t[\"\\uFC35\"] = \"\\u0642\\u0649\";\n        t[\"\\uFC36\"] = \"\\u0642\\u064A\";\n        t[\"\\uFC37\"] = \"\\u0643\\u0627\";\n        t[\"\\uFC38\"] = \"\\u0643\\u062C\";\n        t[\"\\uFC39\"] = \"\\u0643\\u062D\";\n        t[\"\\uFC3A\"] = \"\\u0643\\u062E\";\n        t[\"\\uFC3B\"] = \"\\u0643\\u0644\";\n        t[\"\\uFC3C\"] = \"\\u0643\\u0645\";\n        t[\"\\uFC3D\"] = \"\\u0643\\u0649\";\n        t[\"\\uFC3E\"] = \"\\u0643\\u064A\";\n        t[\"\\uFC3F\"] = \"\\u0644\\u062C\";\n        t[\"\\uFC40\"] = \"\\u0644\\u062D\";\n        t[\"\\uFC41\"] = \"\\u0644\\u062E\";\n        t[\"\\uFC42\"] = \"\\u0644\\u0645\";\n        t[\"\\uFC43\"] = \"\\u0644\\u0649\";\n        t[\"\\uFC44\"] = \"\\u0644\\u064A\";\n        t[\"\\uFC45\"] = \"\\u0645\\u062C\";\n        t[\"\\uFC46\"] = \"\\u0645\\u062D\";\n        t[\"\\uFC47\"] = \"\\u0645\\u062E\";\n        t[\"\\uFC48\"] = \"\\u0645\\u0645\";\n        t[\"\\uFC49\"] = \"\\u0645\\u0649\";\n        t[\"\\uFC4A\"] = \"\\u0645\\u064A\";\n        t[\"\\uFC4B\"] = \"\\u0646\\u062C\";\n        t[\"\\uFC4C\"] = \"\\u0646\\u062D\";\n        t[\"\\uFC4D\"] = \"\\u0646\\u062E\";\n        t[\"\\uFC4E\"] = \"\\u0646\\u0645\";\n        t[\"\\uFC4F\"] = \"\\u0646\\u0649\";\n        t[\"\\uFC50\"] = \"\\u0646\\u064A\";\n        t[\"\\uFC51\"] = \"\\u0647\\u062C\";\n        t[\"\\uFC52\"] = \"\\u0647\\u0645\";\n        t[\"\\uFC53\"] = \"\\u0647\\u0649\";\n        t[\"\\uFC54\"] = \"\\u0647\\u064A\";\n        t[\"\\uFC55\"] = \"\\u064A\\u062C\";\n        t[\"\\uFC56\"] = \"\\u064A\\u062D\";\n        t[\"\\uFC57\"] = \"\\u064A\\u062E\";\n        t[\"\\uFC58\"] = \"\\u064A\\u0645\";\n        t[\"\\uFC59\"] = \"\\u064A\\u0649\";\n        t[\"\\uFC5A\"] = \"\\u064A\\u064A\";\n        t[\"\\uFC5B\"] = \"\\u0630\\u0670\";\n        t[\"\\uFC5C\"] = \"\\u0631\\u0670\";\n        t[\"\\uFC5D\"] = \"\\u0649\\u0670\";\n        t[\"\\uFC5E\"] = \" \\u064C\\u0651\";\n        t[\"\\uFC5F\"] = \" \\u064D\\u0651\";\n        t[\"\\uFC60\"] = \" \\u064E\\u0651\";\n        t[\"\\uFC61\"] = \" \\u064F\\u0651\";\n        t[\"\\uFC62\"] = \" \\u0650\\u0651\";\n        t[\"\\uFC63\"] = \" \\u0651\\u0670\";\n        t[\"\\uFC64\"] = \"\\u0626\\u0631\";\n        t[\"\\uFC65\"] = \"\\u0626\\u0632\";\n        t[\"\\uFC66\"] = \"\\u0626\\u0645\";\n        t[\"\\uFC67\"] = \"\\u0626\\u0646\";\n        t[\"\\uFC68\"] = \"\\u0626\\u0649\";\n        t[\"\\uFC69\"] = \"\\u0626\\u064A\";\n        t[\"\\uFC6A\"] = \"\\u0628\\u0631\";\n        t[\"\\uFC6B\"] = \"\\u0628\\u0632\";\n        t[\"\\uFC6C\"] = \"\\u0628\\u0645\";\n        t[\"\\uFC6D\"] = \"\\u0628\\u0646\";\n        t[\"\\uFC6E\"] = \"\\u0628\\u0649\";\n        t[\"\\uFC6F\"] = \"\\u0628\\u064A\";\n        t[\"\\uFC70\"] = \"\\u062A\\u0631\";\n        t[\"\\uFC71\"] = \"\\u062A\\u0632\";\n        t[\"\\uFC72\"] = \"\\u062A\\u0645\";\n        t[\"\\uFC73\"] = \"\\u062A\\u0646\";\n        t[\"\\uFC74\"] = \"\\u062A\\u0649\";\n        t[\"\\uFC75\"] = \"\\u062A\\u064A\";\n        t[\"\\uFC76\"] = \"\\u062B\\u0631\";\n        t[\"\\uFC77\"] = \"\\u062B\\u0632\";\n        t[\"\\uFC78\"] = \"\\u062B\\u0645\";\n        t[\"\\uFC79\"] = \"\\u062B\\u0646\";\n        t[\"\\uFC7A\"] = \"\\u062B\\u0649\";\n        t[\"\\uFC7B\"] = \"\\u062B\\u064A\";\n        t[\"\\uFC7C\"] = \"\\u0641\\u0649\";\n        t[\"\\uFC7D\"] = \"\\u0641\\u064A\";\n        t[\"\\uFC7E\"] = \"\\u0642\\u0649\";\n        t[\"\\uFC7F\"] = \"\\u0642\\u064A\";\n        t[\"\\uFC80\"] = \"\\u0643\\u0627\";\n        t[\"\\uFC81\"] = \"\\u0643\\u0644\";\n        t[\"\\uFC82\"] = \"\\u0643\\u0645\";\n        t[\"\\uFC83\"] = \"\\u0643\\u0649\";\n        t[\"\\uFC84\"] = \"\\u0643\\u064A\";\n        t[\"\\uFC85\"] = \"\\u0644\\u0645\";\n        t[\"\\uFC86\"] = \"\\u0644\\u0649\";\n        t[\"\\uFC87\"] = \"\\u0644\\u064A\";\n        t[\"\\uFC88\"] = \"\\u0645\\u0627\";\n        t[\"\\uFC89\"] = \"\\u0645\\u0645\";\n        t[\"\\uFC8A\"] = \"\\u0646\\u0631\";\n        t[\"\\uFC8B\"] = \"\\u0646\\u0632\";\n        t[\"\\uFC8C\"] = \"\\u0646\\u0645\";\n        t[\"\\uFC8D\"] = \"\\u0646\\u0646\";\n        t[\"\\uFC8E\"] = \"\\u0646\\u0649\";\n        t[\"\\uFC8F\"] = \"\\u0646\\u064A\";\n        t[\"\\uFC90\"] = \"\\u0649\\u0670\";\n        t[\"\\uFC91\"] = \"\\u064A\\u0631\";\n        t[\"\\uFC92\"] = \"\\u064A\\u0632\";\n        t[\"\\uFC93\"] = \"\\u064A\\u0645\";\n        t[\"\\uFC94\"] = \"\\u064A\\u0646\";\n        t[\"\\uFC95\"] = \"\\u064A\\u0649\";\n        t[\"\\uFC96\"] = \"\\u064A\\u064A\";\n        t[\"\\uFC97\"] = \"\\u0626\\u062C\";\n        t[\"\\uFC98\"] = \"\\u0626\\u062D\";\n        t[\"\\uFC99\"] = \"\\u0626\\u062E\";\n        t[\"\\uFC9A\"] = \"\\u0626\\u0645\";\n        t[\"\\uFC9B\"] = \"\\u0626\\u0647\";\n        t[\"\\uFC9C\"] = \"\\u0628\\u062C\";\n        t[\"\\uFC9D\"] = \"\\u0628\\u062D\";\n        t[\"\\uFC9E\"] = \"\\u0628\\u062E\";\n        t[\"\\uFC9F\"] = \"\\u0628\\u0645\";\n        t[\"\\uFCA0\"] = \"\\u0628\\u0647\";\n        t[\"\\uFCA1\"] = \"\\u062A\\u062C\";\n        t[\"\\uFCA2\"] = \"\\u062A\\u062D\";\n        t[\"\\uFCA3\"] = \"\\u062A\\u062E\";\n        t[\"\\uFCA4\"] = \"\\u062A\\u0645\";\n        t[\"\\uFCA5\"] = \"\\u062A\\u0647\";\n        t[\"\\uFCA6\"] = \"\\u062B\\u0645\";\n        t[\"\\uFCA7\"] = \"\\u062C\\u062D\";\n        t[\"\\uFCA8\"] = \"\\u062C\\u0645\";\n        t[\"\\uFCA9\"] = \"\\u062D\\u062C\";\n        t[\"\\uFCAA\"] = \"\\u062D\\u0645\";\n        t[\"\\uFCAB\"] = \"\\u062E\\u062C\";\n        t[\"\\uFCAC\"] = \"\\u062E\\u0645\";\n        t[\"\\uFCAD\"] = \"\\u0633\\u062C\";\n        t[\"\\uFCAE\"] = \"\\u0633\\u062D\";\n        t[\"\\uFCAF\"] = \"\\u0633\\u062E\";\n        t[\"\\uFCB0\"] = \"\\u0633\\u0645\";\n        t[\"\\uFCB1\"] = \"\\u0635\\u062D\";\n        t[\"\\uFCB2\"] = \"\\u0635\\u062E\";\n        t[\"\\uFCB3\"] = \"\\u0635\\u0645\";\n        t[\"\\uFCB4\"] = \"\\u0636\\u062C\";\n        t[\"\\uFCB5\"] = \"\\u0636\\u062D\";\n        t[\"\\uFCB6\"] = \"\\u0636\\u062E\";\n        t[\"\\uFCB7\"] = \"\\u0636\\u0645\";\n        t[\"\\uFCB8\"] = \"\\u0637\\u062D\";\n        t[\"\\uFCB9\"] = \"\\u0638\\u0645\";\n        t[\"\\uFCBA\"] = \"\\u0639\\u062C\";\n        t[\"\\uFCBB\"] = \"\\u0639\\u0645\";\n        t[\"\\uFCBC\"] = \"\\u063A\\u062C\";\n        t[\"\\uFCBD\"] = \"\\u063A\\u0645\";\n        t[\"\\uFCBE\"] = \"\\u0641\\u062C\";\n        t[\"\\uFCBF\"] = \"\\u0641\\u062D\";\n        t[\"\\uFCC0\"] = \"\\u0641\\u062E\";\n        t[\"\\uFCC1\"] = \"\\u0641\\u0645\";\n        t[\"\\uFCC2\"] = \"\\u0642\\u062D\";\n        t[\"\\uFCC3\"] = \"\\u0642\\u0645\";\n        t[\"\\uFCC4\"] = \"\\u0643\\u062C\";\n        t[\"\\uFCC5\"] = \"\\u0643\\u062D\";\n        t[\"\\uFCC6\"] = \"\\u0643\\u062E\";\n        t[\"\\uFCC7\"] = \"\\u0643\\u0644\";\n        t[\"\\uFCC8\"] = \"\\u0643\\u0645\";\n        t[\"\\uFCC9\"] = \"\\u0644\\u062C\";\n        t[\"\\uFCCA\"] = \"\\u0644\\u062D\";\n        t[\"\\uFCCB\"] = \"\\u0644\\u062E\";\n        t[\"\\uFCCC\"] = \"\\u0644\\u0645\";\n        t[\"\\uFCCD\"] = \"\\u0644\\u0647\";\n        t[\"\\uFCCE\"] = \"\\u0645\\u062C\";\n        t[\"\\uFCCF\"] = \"\\u0645\\u062D\";\n        t[\"\\uFCD0\"] = \"\\u0645\\u062E\";\n        t[\"\\uFCD1\"] = \"\\u0645\\u0645\";\n        t[\"\\uFCD2\"] = \"\\u0646\\u062C\";\n        t[\"\\uFCD3\"] = \"\\u0646\\u062D\";\n        t[\"\\uFCD4\"] = \"\\u0646\\u062E\";\n        t[\"\\uFCD5\"] = \"\\u0646\\u0645\";\n        t[\"\\uFCD6\"] = \"\\u0646\\u0647\";\n        t[\"\\uFCD7\"] = \"\\u0647\\u062C\";\n        t[\"\\uFCD8\"] = \"\\u0647\\u0645\";\n        t[\"\\uFCD9\"] = \"\\u0647\\u0670\";\n        t[\"\\uFCDA\"] = \"\\u064A\\u062C\";\n        t[\"\\uFCDB\"] = \"\\u064A\\u062D\";\n        t[\"\\uFCDC\"] = \"\\u064A\\u062E\";\n        t[\"\\uFCDD\"] = \"\\u064A\\u0645\";\n        t[\"\\uFCDE\"] = \"\\u064A\\u0647\";\n        t[\"\\uFCDF\"] = \"\\u0626\\u0645\";\n        t[\"\\uFCE0\"] = \"\\u0626\\u0647\";\n        t[\"\\uFCE1\"] = \"\\u0628\\u0645\";\n        t[\"\\uFCE2\"] = \"\\u0628\\u0647\";\n        t[\"\\uFCE3\"] = \"\\u062A\\u0645\";\n        t[\"\\uFCE4\"] = \"\\u062A\\u0647\";\n        t[\"\\uFCE5\"] = \"\\u062B\\u0645\";\n        t[\"\\uFCE6\"] = \"\\u062B\\u0647\";\n        t[\"\\uFCE7\"] = \"\\u0633\\u0645\";\n        t[\"\\uFCE8\"] = \"\\u0633\\u0647\";\n        t[\"\\uFCE9\"] = \"\\u0634\\u0645\";\n        t[\"\\uFCEA\"] = \"\\u0634\\u0647\";\n        t[\"\\uFCEB\"] = \"\\u0643\\u0644\";\n        t[\"\\uFCEC\"] = \"\\u0643\\u0645\";\n        t[\"\\uFCED\"] = \"\\u0644\\u0645\";\n        t[\"\\uFCEE\"] = \"\\u0646\\u0645\";\n        t[\"\\uFCEF\"] = \"\\u0646\\u0647\";\n        t[\"\\uFCF0\"] = \"\\u064A\\u0645\";\n        t[\"\\uFCF1\"] = \"\\u064A\\u0647\";\n        t[\"\\uFCF2\"] = \"\\u0640\\u064E\\u0651\";\n        t[\"\\uFCF3\"] = \"\\u0640\\u064F\\u0651\";\n        t[\"\\uFCF4\"] = \"\\u0640\\u0650\\u0651\";\n        t[\"\\uFCF5\"] = \"\\u0637\\u0649\";\n        t[\"\\uFCF6\"] = \"\\u0637\\u064A\";\n        t[\"\\uFCF7\"] = \"\\u0639\\u0649\";\n        t[\"\\uFCF8\"] = \"\\u0639\\u064A\";\n        t[\"\\uFCF9\"] = \"\\u063A\\u0649\";\n        t[\"\\uFCFA\"] = \"\\u063A\\u064A\";\n        t[\"\\uFCFB\"] = \"\\u0633\\u0649\";\n        t[\"\\uFCFC\"] = \"\\u0633\\u064A\";\n        t[\"\\uFCFD\"] = \"\\u0634\\u0649\";\n        t[\"\\uFCFE\"] = \"\\u0634\\u064A\";\n        t[\"\\uFCFF\"] = \"\\u062D\\u0649\";\n        t[\"\\uFD00\"] = \"\\u062D\\u064A\";\n        t[\"\\uFD01\"] = \"\\u062C\\u0649\";\n        t[\"\\uFD02\"] = \"\\u062C\\u064A\";\n        t[\"\\uFD03\"] = \"\\u062E\\u0649\";\n        t[\"\\uFD04\"] = \"\\u062E\\u064A\";\n        t[\"\\uFD05\"] = \"\\u0635\\u0649\";\n        t[\"\\uFD06\"] = \"\\u0635\\u064A\";\n        t[\"\\uFD07\"] = \"\\u0636\\u0649\";\n        t[\"\\uFD08\"] = \"\\u0636\\u064A\";\n        t[\"\\uFD09\"] = \"\\u0634\\u062C\";\n        t[\"\\uFD0A\"] = \"\\u0634\\u062D\";\n        t[\"\\uFD0B\"] = \"\\u0634\\u062E\";\n        t[\"\\uFD0C\"] = \"\\u0634\\u0645\";\n        t[\"\\uFD0D\"] = \"\\u0634\\u0631\";\n        t[\"\\uFD0E\"] = \"\\u0633\\u0631\";\n        t[\"\\uFD0F\"] = \"\\u0635\\u0631\";\n        t[\"\\uFD10\"] = \"\\u0636\\u0631\";\n        t[\"\\uFD11\"] = \"\\u0637\\u0649\";\n        t[\"\\uFD12\"] = \"\\u0637\\u064A\";\n        t[\"\\uFD13\"] = \"\\u0639\\u0649\";\n        t[\"\\uFD14\"] = \"\\u0639\\u064A\";\n        t[\"\\uFD15\"] = \"\\u063A\\u0649\";\n        t[\"\\uFD16\"] = \"\\u063A\\u064A\";\n        t[\"\\uFD17\"] = \"\\u0633\\u0649\";\n        t[\"\\uFD18\"] = \"\\u0633\\u064A\";\n        t[\"\\uFD19\"] = \"\\u0634\\u0649\";\n        t[\"\\uFD1A\"] = \"\\u0634\\u064A\";\n        t[\"\\uFD1B\"] = \"\\u062D\\u0649\";\n        t[\"\\uFD1C\"] = \"\\u062D\\u064A\";\n        t[\"\\uFD1D\"] = \"\\u062C\\u0649\";\n        t[\"\\uFD1E\"] = \"\\u062C\\u064A\";\n        t[\"\\uFD1F\"] = \"\\u062E\\u0649\";\n        t[\"\\uFD20\"] = \"\\u062E\\u064A\";\n        t[\"\\uFD21\"] = \"\\u0635\\u0649\";\n        t[\"\\uFD22\"] = \"\\u0635\\u064A\";\n        t[\"\\uFD23\"] = \"\\u0636\\u0649\";\n        t[\"\\uFD24\"] = \"\\u0636\\u064A\";\n        t[\"\\uFD25\"] = \"\\u0634\\u062C\";\n        t[\"\\uFD26\"] = \"\\u0634\\u062D\";\n        t[\"\\uFD27\"] = \"\\u0634\\u062E\";\n        t[\"\\uFD28\"] = \"\\u0634\\u0645\";\n        t[\"\\uFD29\"] = \"\\u0634\\u0631\";\n        t[\"\\uFD2A\"] = \"\\u0633\\u0631\";\n        t[\"\\uFD2B\"] = \"\\u0635\\u0631\";\n        t[\"\\uFD2C\"] = \"\\u0636\\u0631\";\n        t[\"\\uFD2D\"] = \"\\u0634\\u062C\";\n        t[\"\\uFD2E\"] = \"\\u0634\\u062D\";\n        t[\"\\uFD2F\"] = \"\\u0634\\u062E\";\n        t[\"\\uFD30\"] = \"\\u0634\\u0645\";\n        t[\"\\uFD31\"] = \"\\u0633\\u0647\";\n        t[\"\\uFD32\"] = \"\\u0634\\u0647\";\n        t[\"\\uFD33\"] = \"\\u0637\\u0645\";\n        t[\"\\uFD34\"] = \"\\u0633\\u062C\";\n        t[\"\\uFD35\"] = \"\\u0633\\u062D\";\n        t[\"\\uFD36\"] = \"\\u0633\\u062E\";\n        t[\"\\uFD37\"] = \"\\u0634\\u062C\";\n        t[\"\\uFD38\"] = \"\\u0634\\u062D\";\n        t[\"\\uFD39\"] = \"\\u0634\\u062E\";\n        t[\"\\uFD3A\"] = \"\\u0637\\u0645\";\n        t[\"\\uFD3B\"] = \"\\u0638\\u0645\";\n        t[\"\\uFD3C\"] = \"\\u0627\\u064B\";\n        t[\"\\uFD3D\"] = \"\\u0627\\u064B\";\n        t[\"\\uFD50\"] = \"\\u062A\\u062C\\u0645\";\n        t[\"\\uFD51\"] = \"\\u062A\\u062D\\u062C\";\n        t[\"\\uFD52\"] = \"\\u062A\\u062D\\u062C\";\n        t[\"\\uFD53\"] = \"\\u062A\\u062D\\u0645\";\n        t[\"\\uFD54\"] = \"\\u062A\\u062E\\u0645\";\n        t[\"\\uFD55\"] = \"\\u062A\\u0645\\u062C\";\n        t[\"\\uFD56\"] = \"\\u062A\\u0645\\u062D\";\n        t[\"\\uFD57\"] = \"\\u062A\\u0645\\u062E\";\n        t[\"\\uFD58\"] = \"\\u062C\\u0645\\u062D\";\n        t[\"\\uFD59\"] = \"\\u062C\\u0645\\u062D\";\n        t[\"\\uFD5A\"] = \"\\u062D\\u0645\\u064A\";\n        t[\"\\uFD5B\"] = \"\\u062D\\u0645\\u0649\";\n        t[\"\\uFD5C\"] = \"\\u0633\\u062D\\u062C\";\n        t[\"\\uFD5D\"] = \"\\u0633\\u062C\\u062D\";\n        t[\"\\uFD5E\"] = \"\\u0633\\u062C\\u0649\";\n        t[\"\\uFD5F\"] = \"\\u0633\\u0645\\u062D\";\n        t[\"\\uFD60\"] = \"\\u0633\\u0645\\u062D\";\n        t[\"\\uFD61\"] = \"\\u0633\\u0645\\u062C\";\n        t[\"\\uFD62\"] = \"\\u0633\\u0645\\u0645\";\n        t[\"\\uFD63\"] = \"\\u0633\\u0645\\u0645\";\n        t[\"\\uFD64\"] = \"\\u0635\\u062D\\u062D\";\n        t[\"\\uFD65\"] = \"\\u0635\\u062D\\u062D\";\n        t[\"\\uFD66\"] = \"\\u0635\\u0645\\u0645\";\n        t[\"\\uFD67\"] = \"\\u0634\\u062D\\u0645\";\n        t[\"\\uFD68\"] = \"\\u0634\\u062D\\u0645\";\n        t[\"\\uFD69\"] = \"\\u0634\\u062C\\u064A\";\n        t[\"\\uFD6A\"] = \"\\u0634\\u0645\\u062E\";\n        t[\"\\uFD6B\"] = \"\\u0634\\u0645\\u062E\";\n        t[\"\\uFD6C\"] = \"\\u0634\\u0645\\u0645\";\n        t[\"\\uFD6D\"] = \"\\u0634\\u0645\\u0645\";\n        t[\"\\uFD6E\"] = \"\\u0636\\u062D\\u0649\";\n        t[\"\\uFD6F\"] = \"\\u0636\\u062E\\u0645\";\n        t[\"\\uFD70\"] = \"\\u0636\\u062E\\u0645\";\n        t[\"\\uFD71\"] = \"\\u0637\\u0645\\u062D\";\n        t[\"\\uFD72\"] = \"\\u0637\\u0645\\u062D\";\n        t[\"\\uFD73\"] = \"\\u0637\\u0645\\u0645\";\n        t[\"\\uFD74\"] = \"\\u0637\\u0645\\u064A\";\n        t[\"\\uFD75\"] = \"\\u0639\\u062C\\u0645\";\n        t[\"\\uFD76\"] = \"\\u0639\\u0645\\u0645\";\n        t[\"\\uFD77\"] = \"\\u0639\\u0645\\u0645\";\n        t[\"\\uFD78\"] = \"\\u0639\\u0645\\u0649\";\n        t[\"\\uFD79\"] = \"\\u063A\\u0645\\u0645\";\n        t[\"\\uFD7A\"] = \"\\u063A\\u0645\\u064A\";\n        t[\"\\uFD7B\"] = \"\\u063A\\u0645\\u0649\";\n        t[\"\\uFD7C\"] = \"\\u0641\\u062E\\u0645\";\n        t[\"\\uFD7D\"] = \"\\u0641\\u062E\\u0645\";\n        t[\"\\uFD7E\"] = \"\\u0642\\u0645\\u062D\";\n        t[\"\\uFD7F\"] = \"\\u0642\\u0645\\u0645\";\n        t[\"\\uFD80\"] = \"\\u0644\\u062D\\u0645\";\n        t[\"\\uFD81\"] = \"\\u0644\\u062D\\u064A\";\n        t[\"\\uFD82\"] = \"\\u0644\\u062D\\u0649\";\n        t[\"\\uFD83\"] = \"\\u0644\\u062C\\u062C\";\n        t[\"\\uFD84\"] = \"\\u0644\\u062C\\u062C\";\n        t[\"\\uFD85\"] = \"\\u0644\\u062E\\u0645\";\n        t[\"\\uFD86\"] = \"\\u0644\\u062E\\u0645\";\n        t[\"\\uFD87\"] = \"\\u0644\\u0645\\u062D\";\n        t[\"\\uFD88\"] = \"\\u0644\\u0645\\u062D\";\n        t[\"\\uFD89\"] = \"\\u0645\\u062D\\u062C\";\n        t[\"\\uFD8A\"] = \"\\u0645\\u062D\\u0645\";\n        t[\"\\uFD8B\"] = \"\\u0645\\u062D\\u064A\";\n        t[\"\\uFD8C\"] = \"\\u0645\\u062C\\u062D\";\n        t[\"\\uFD8D\"] = \"\\u0645\\u062C\\u0645\";\n        t[\"\\uFD8E\"] = \"\\u0645\\u062E\\u062C\";\n        t[\"\\uFD8F\"] = \"\\u0645\\u062E\\u0645\";\n        t[\"\\uFD92\"] = \"\\u0645\\u062C\\u062E\";\n        t[\"\\uFD93\"] = \"\\u0647\\u0645\\u062C\";\n        t[\"\\uFD94\"] = \"\\u0647\\u0645\\u0645\";\n        t[\"\\uFD95\"] = \"\\u0646\\u062D\\u0645\";\n        t[\"\\uFD96\"] = \"\\u0646\\u062D\\u0649\";\n        t[\"\\uFD97\"] = \"\\u0646\\u062C\\u0645\";\n        t[\"\\uFD98\"] = \"\\u0646\\u062C\\u0645\";\n        t[\"\\uFD99\"] = \"\\u0646\\u062C\\u0649\";\n        t[\"\\uFD9A\"] = \"\\u0646\\u0645\\u064A\";\n        t[\"\\uFD9B\"] = \"\\u0646\\u0645\\u0649\";\n        t[\"\\uFD9C\"] = \"\\u064A\\u0645\\u0645\";\n        t[\"\\uFD9D\"] = \"\\u064A\\u0645\\u0645\";\n        t[\"\\uFD9E\"] = \"\\u0628\\u062E\\u064A\";\n        t[\"\\uFD9F\"] = \"\\u062A\\u062C\\u064A\";\n        t[\"\\uFDA0\"] = \"\\u062A\\u062C\\u0649\";\n        t[\"\\uFDA1\"] = \"\\u062A\\u062E\\u064A\";\n        t[\"\\uFDA2\"] = \"\\u062A\\u062E\\u0649\";\n        t[\"\\uFDA3\"] = \"\\u062A\\u0645\\u064A\";\n        t[\"\\uFDA4\"] = \"\\u062A\\u0645\\u0649\";\n        t[\"\\uFDA5\"] = \"\\u062C\\u0645\\u064A\";\n        t[\"\\uFDA6\"] = \"\\u062C\\u062D\\u0649\";\n        t[\"\\uFDA7\"] = \"\\u062C\\u0645\\u0649\";\n        t[\"\\uFDA8\"] = \"\\u0633\\u062E\\u0649\";\n        t[\"\\uFDA9\"] = \"\\u0635\\u062D\\u064A\";\n        t[\"\\uFDAA\"] = \"\\u0634\\u062D\\u064A\";\n        t[\"\\uFDAB\"] = \"\\u0636\\u062D\\u064A\";\n        t[\"\\uFDAC\"] = \"\\u0644\\u062C\\u064A\";\n        t[\"\\uFDAD\"] = \"\\u0644\\u0645\\u064A\";\n        t[\"\\uFDAE\"] = \"\\u064A\\u062D\\u064A\";\n        t[\"\\uFDAF\"] = \"\\u064A\\u062C\\u064A\";\n        t[\"\\uFDB0\"] = \"\\u064A\\u0645\\u064A\";\n        t[\"\\uFDB1\"] = \"\\u0645\\u0645\\u064A\";\n        t[\"\\uFDB2\"] = \"\\u0642\\u0645\\u064A\";\n        t[\"\\uFDB3\"] = \"\\u0646\\u062D\\u064A\";\n        t[\"\\uFDB4\"] = \"\\u0642\\u0645\\u062D\";\n        t[\"\\uFDB5\"] = \"\\u0644\\u062D\\u0645\";\n        t[\"\\uFDB6\"] = \"\\u0639\\u0645\\u064A\";\n        t[\"\\uFDB7\"] = \"\\u0643\\u0645\\u064A\";\n        t[\"\\uFDB8\"] = \"\\u0646\\u062C\\u062D\";\n        t[\"\\uFDB9\"] = \"\\u0645\\u062E\\u064A\";\n        t[\"\\uFDBA\"] = \"\\u0644\\u062C\\u0645\";\n        t[\"\\uFDBB\"] = \"\\u0643\\u0645\\u0645\";\n        t[\"\\uFDBC\"] = \"\\u0644\\u062C\\u0645\";\n        t[\"\\uFDBD\"] = \"\\u0646\\u062C\\u062D\";\n        t[\"\\uFDBE\"] = \"\\u062C\\u062D\\u064A\";\n        t[\"\\uFDBF\"] = \"\\u062D\\u062C\\u064A\";\n        t[\"\\uFDC0\"] = \"\\u0645\\u062C\\u064A\";\n        t[\"\\uFDC1\"] = \"\\u0641\\u0645\\u064A\";\n        t[\"\\uFDC2\"] = \"\\u0628\\u062D\\u064A\";\n        t[\"\\uFDC3\"] = \"\\u0643\\u0645\\u0645\";\n        t[\"\\uFDC4\"] = \"\\u0639\\u062C\\u0645\";\n        t[\"\\uFDC5\"] = \"\\u0635\\u0645\\u0645\";\n        t[\"\\uFDC6\"] = \"\\u0633\\u062E\\u064A\";\n        t[\"\\uFDC7\"] = \"\\u0646\\u062C\\u064A\";\n        t[\"\\uFE49\"] = \"\\u203E\";\n        t[\"\\uFE4A\"] = \"\\u203E\";\n        t[\"\\uFE4B\"] = \"\\u203E\";\n        t[\"\\uFE4C\"] = \"\\u203E\";\n        t[\"\\uFE4D\"] = \"_\";\n        t[\"\\uFE4E\"] = \"_\";\n        t[\"\\uFE4F\"] = \"_\";\n        t[\"\\uFE80\"] = \"\\u0621\";\n        t[\"\\uFE81\"] = \"\\u0622\";\n        t[\"\\uFE82\"] = \"\\u0622\";\n        t[\"\\uFE83\"] = \"\\u0623\";\n        t[\"\\uFE84\"] = \"\\u0623\";\n        t[\"\\uFE85\"] = \"\\u0624\";\n        t[\"\\uFE86\"] = \"\\u0624\";\n        t[\"\\uFE87\"] = \"\\u0625\";\n        t[\"\\uFE88\"] = \"\\u0625\";\n        t[\"\\uFE89\"] = \"\\u0626\";\n        t[\"\\uFE8A\"] = \"\\u0626\";\n        t[\"\\uFE8B\"] = \"\\u0626\";\n        t[\"\\uFE8C\"] = \"\\u0626\";\n        t[\"\\uFE8D\"] = \"\\u0627\";\n        t[\"\\uFE8E\"] = \"\\u0627\";\n        t[\"\\uFE8F\"] = \"\\u0628\";\n        t[\"\\uFE90\"] = \"\\u0628\";\n        t[\"\\uFE91\"] = \"\\u0628\";\n        t[\"\\uFE92\"] = \"\\u0628\";\n        t[\"\\uFE93\"] = \"\\u0629\";\n        t[\"\\uFE94\"] = \"\\u0629\";\n        t[\"\\uFE95\"] = \"\\u062A\";\n        t[\"\\uFE96\"] = \"\\u062A\";\n        t[\"\\uFE97\"] = \"\\u062A\";\n        t[\"\\uFE98\"] = \"\\u062A\";\n        t[\"\\uFE99\"] = \"\\u062B\";\n        t[\"\\uFE9A\"] = \"\\u062B\";\n        t[\"\\uFE9B\"] = \"\\u062B\";\n        t[\"\\uFE9C\"] = \"\\u062B\";\n        t[\"\\uFE9D\"] = \"\\u062C\";\n        t[\"\\uFE9E\"] = \"\\u062C\";\n        t[\"\\uFE9F\"] = \"\\u062C\";\n        t[\"\\uFEA0\"] = \"\\u062C\";\n        t[\"\\uFEA1\"] = \"\\u062D\";\n        t[\"\\uFEA2\"] = \"\\u062D\";\n        t[\"\\uFEA3\"] = \"\\u062D\";\n        t[\"\\uFEA4\"] = \"\\u062D\";\n        t[\"\\uFEA5\"] = \"\\u062E\";\n        t[\"\\uFEA6\"] = \"\\u062E\";\n        t[\"\\uFEA7\"] = \"\\u062E\";\n        t[\"\\uFEA8\"] = \"\\u062E\";\n        t[\"\\uFEA9\"] = \"\\u062F\";\n        t[\"\\uFEAA\"] = \"\\u062F\";\n        t[\"\\uFEAB\"] = \"\\u0630\";\n        t[\"\\uFEAC\"] = \"\\u0630\";\n        t[\"\\uFEAD\"] = \"\\u0631\";\n        t[\"\\uFEAE\"] = \"\\u0631\";\n        t[\"\\uFEAF\"] = \"\\u0632\";\n        t[\"\\uFEB0\"] = \"\\u0632\";\n        t[\"\\uFEB1\"] = \"\\u0633\";\n        t[\"\\uFEB2\"] = \"\\u0633\";\n        t[\"\\uFEB3\"] = \"\\u0633\";\n        t[\"\\uFEB4\"] = \"\\u0633\";\n        t[\"\\uFEB5\"] = \"\\u0634\";\n        t[\"\\uFEB6\"] = \"\\u0634\";\n        t[\"\\uFEB7\"] = \"\\u0634\";\n        t[\"\\uFEB8\"] = \"\\u0634\";\n        t[\"\\uFEB9\"] = \"\\u0635\";\n        t[\"\\uFEBA\"] = \"\\u0635\";\n        t[\"\\uFEBB\"] = \"\\u0635\";\n        t[\"\\uFEBC\"] = \"\\u0635\";\n        t[\"\\uFEBD\"] = \"\\u0636\";\n        t[\"\\uFEBE\"] = \"\\u0636\";\n        t[\"\\uFEBF\"] = \"\\u0636\";\n        t[\"\\uFEC0\"] = \"\\u0636\";\n        t[\"\\uFEC1\"] = \"\\u0637\";\n        t[\"\\uFEC2\"] = \"\\u0637\";\n        t[\"\\uFEC3\"] = \"\\u0637\";\n        t[\"\\uFEC4\"] = \"\\u0637\";\n        t[\"\\uFEC5\"] = \"\\u0638\";\n        t[\"\\uFEC6\"] = \"\\u0638\";\n        t[\"\\uFEC7\"] = \"\\u0638\";\n        t[\"\\uFEC8\"] = \"\\u0638\";\n        t[\"\\uFEC9\"] = \"\\u0639\";\n        t[\"\\uFECA\"] = \"\\u0639\";\n        t[\"\\uFECB\"] = \"\\u0639\";\n        t[\"\\uFECC\"] = \"\\u0639\";\n        t[\"\\uFECD\"] = \"\\u063A\";\n        t[\"\\uFECE\"] = \"\\u063A\";\n        t[\"\\uFECF\"] = \"\\u063A\";\n        t[\"\\uFED0\"] = \"\\u063A\";\n        t[\"\\uFED1\"] = \"\\u0641\";\n        t[\"\\uFED2\"] = \"\\u0641\";\n        t[\"\\uFED3\"] = \"\\u0641\";\n        t[\"\\uFED4\"] = \"\\u0641\";\n        t[\"\\uFED5\"] = \"\\u0642\";\n        t[\"\\uFED6\"] = \"\\u0642\";\n        t[\"\\uFED7\"] = \"\\u0642\";\n        t[\"\\uFED8\"] = \"\\u0642\";\n        t[\"\\uFED9\"] = \"\\u0643\";\n        t[\"\\uFEDA\"] = \"\\u0643\";\n        t[\"\\uFEDB\"] = \"\\u0643\";\n        t[\"\\uFEDC\"] = \"\\u0643\";\n        t[\"\\uFEDD\"] = \"\\u0644\";\n        t[\"\\uFEDE\"] = \"\\u0644\";\n        t[\"\\uFEDF\"] = \"\\u0644\";\n        t[\"\\uFEE0\"] = \"\\u0644\";\n        t[\"\\uFEE1\"] = \"\\u0645\";\n        t[\"\\uFEE2\"] = \"\\u0645\";\n        t[\"\\uFEE3\"] = \"\\u0645\";\n        t[\"\\uFEE4\"] = \"\\u0645\";\n        t[\"\\uFEE5\"] = \"\\u0646\";\n        t[\"\\uFEE6\"] = \"\\u0646\";\n        t[\"\\uFEE7\"] = \"\\u0646\";\n        t[\"\\uFEE8\"] = \"\\u0646\";\n        t[\"\\uFEE9\"] = \"\\u0647\";\n        t[\"\\uFEEA\"] = \"\\u0647\";\n        t[\"\\uFEEB\"] = \"\\u0647\";\n        t[\"\\uFEEC\"] = \"\\u0647\";\n        t[\"\\uFEED\"] = \"\\u0648\";\n        t[\"\\uFEEE\"] = \"\\u0648\";\n        t[\"\\uFEEF\"] = \"\\u0649\";\n        t[\"\\uFEF0\"] = \"\\u0649\";\n        t[\"\\uFEF1\"] = \"\\u064A\";\n        t[\"\\uFEF2\"] = \"\\u064A\";\n        t[\"\\uFEF3\"] = \"\\u064A\";\n        t[\"\\uFEF4\"] = \"\\u064A\";\n        t[\"\\uFEF5\"] = \"\\u0644\\u0622\";\n        t[\"\\uFEF6\"] = \"\\u0644\\u0622\";\n        t[\"\\uFEF7\"] = \"\\u0644\\u0623\";\n        t[\"\\uFEF8\"] = \"\\u0644\\u0623\";\n        t[\"\\uFEF9\"] = \"\\u0644\\u0625\";\n        t[\"\\uFEFA\"] = \"\\u0644\\u0625\";\n        t[\"\\uFEFB\"] = \"\\u0644\\u0627\";\n        t[\"\\uFEFC\"] = \"\\u0644\\u0627\";\n      });\n\n      function reverseIfRtl(chars) {\n        var charsLength = chars.length;\n\n        if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n          return chars;\n        }\n\n        var s = \"\";\n\n        for (var ii = charsLength - 1; ii >= 0; ii--) {\n          s += chars[ii];\n        }\n\n        return s;\n      }\n\n      exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n      exports.reverseIfRtl = reverseIfRtl;\n      exports.getUnicodeRangeFor = getUnicodeRangeFor;\n      exports.getNormalizedUnicodes = getNormalizedUnicodes;\n      exports.getUnicodeForGlyph = getUnicodeForGlyph;\n      /***/\n    },\n    /* 37 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontRendererFactory = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _cff_parser = __w_pdfjs_require__(31);\n\n      var _glyphlist = __w_pdfjs_require__(34);\n\n      var _encodings = __w_pdfjs_require__(33);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var FontRendererFactory = function FontRendererFactoryClosure() {\n        function getLong(data, offset) {\n          return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n        }\n\n        function getUshort(data, offset) {\n          return data[offset] << 8 | data[offset + 1];\n        }\n\n        function getSubroutineBias(subrs) {\n          var numSubrs = subrs.length;\n          var bias = 32768;\n\n          if (numSubrs < 1240) {\n            bias = 107;\n          } else if (numSubrs < 33900) {\n            bias = 1131;\n          }\n\n          return bias;\n        }\n\n        function parseCmap(data, start, end) {\n          var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n          var format = getUshort(data, start + offset);\n          var ranges, p, i;\n\n          if (format === 4) {\n            getUshort(data, start + offset + 2);\n            var segCount = getUshort(data, start + offset + 6) >> 1;\n            p = start + offset + 14;\n            ranges = [];\n\n            for (i = 0; i < segCount; i++, p += 2) {\n              ranges[i] = {\n                end: getUshort(data, p)\n              };\n            }\n\n            p += 2;\n\n            for (i = 0; i < segCount; i++, p += 2) {\n              ranges[i].start = getUshort(data, p);\n            }\n\n            for (i = 0; i < segCount; i++, p += 2) {\n              ranges[i].idDelta = getUshort(data, p);\n            }\n\n            for (i = 0; i < segCount; i++, p += 2) {\n              var idOffset = getUshort(data, p);\n\n              if (idOffset === 0) {\n                continue;\n              }\n\n              ranges[i].ids = [];\n\n              for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n                ranges[i].ids[j] = getUshort(data, p + idOffset);\n                idOffset += 2;\n              }\n            }\n\n            return ranges;\n          } else if (format === 12) {\n            getLong(data, start + offset + 4);\n            var groups = getLong(data, start + offset + 12);\n            p = start + offset + 16;\n            ranges = [];\n\n            for (i = 0; i < groups; i++) {\n              ranges.push({\n                start: getLong(data, p),\n                end: getLong(data, p + 4),\n                idDelta: getLong(data, p + 8) - getLong(data, p)\n              });\n              p += 12;\n            }\n\n            return ranges;\n          }\n\n          throw new _util.FormatError(\"unsupported cmap: \".concat(format));\n        }\n\n        function parseCff(data, start, end, seacAnalysisEnabled) {\n          var properties = {};\n          var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n          var cff = parser.parse();\n          return {\n            glyphs: cff.charStrings.objects,\n            subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n            gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n            isCFFCIDFont: cff.isCIDFont,\n            fdSelect: cff.fdSelect,\n            fdArray: cff.fdArray\n          };\n        }\n\n        function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n          var itemSize, itemDecode;\n\n          if (isGlyphLocationsLong) {\n            itemSize = 4;\n\n            itemDecode = function fontItemDecodeLong(data, offset) {\n              return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n            };\n          } else {\n            itemSize = 2;\n\n            itemDecode = function fontItemDecode(data, offset) {\n              return data[offset] << 9 | data[offset + 1] << 1;\n            };\n          }\n\n          var glyphs = [];\n          var startOffset = itemDecode(loca, 0);\n\n          for (var j = itemSize; j < loca.length; j += itemSize) {\n            var endOffset = itemDecode(loca, j);\n            glyphs.push(glyf.subarray(startOffset, endOffset));\n            startOffset = endOffset;\n          }\n\n          return glyphs;\n        }\n\n        function lookupCmap(ranges, unicode) {\n          var code = unicode.codePointAt(0),\n              gid = 0;\n          var l = 0,\n              r = ranges.length - 1;\n\n          while (l < r) {\n            var c = l + r + 1 >> 1;\n\n            if (code < ranges[c].start) {\n              r = c - 1;\n            } else {\n              l = c;\n            }\n          }\n\n          if (ranges[l].start <= code && code <= ranges[l].end) {\n            gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xffff;\n          }\n\n          return {\n            charCode: code,\n            glyphId: gid\n          };\n        }\n\n        function compileGlyf(code, cmds, font) {\n          function moveTo(x, y) {\n            cmds.push({\n              cmd: \"moveTo\",\n              args: [x, y]\n            });\n          }\n\n          function lineTo(x, y) {\n            cmds.push({\n              cmd: \"lineTo\",\n              args: [x, y]\n            });\n          }\n\n          function quadraticCurveTo(xa, ya, x, y) {\n            cmds.push({\n              cmd: \"quadraticCurveTo\",\n              args: [xa, ya, x, y]\n            });\n          }\n\n          var i = 0;\n          var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          var flags;\n          var x = 0,\n              y = 0;\n          i += 10;\n\n          if (numberOfContours < 0) {\n            do {\n              flags = code[i] << 8 | code[i + 1];\n              var glyphIndex = code[i + 2] << 8 | code[i + 3];\n              i += 4;\n              var arg1, arg2;\n\n              if (flags & 0x01) {\n                arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n                arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n                i += 4;\n              } else {\n                arg1 = code[i++];\n                arg2 = code[i++];\n              }\n\n              if (flags & 0x02) {\n                x = arg1;\n                y = arg2;\n              } else {\n                x = 0;\n                y = 0;\n              }\n\n              var scaleX = 1,\n                  scaleY = 1,\n                  scale01 = 0,\n                  scale10 = 0;\n\n              if (flags & 0x08) {\n                scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n                i += 2;\n              } else if (flags & 0x40) {\n                scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n                scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n                i += 4;\n              } else if (flags & 0x80) {\n                scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n                scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n                scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n                scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n                i += 8;\n              }\n\n              var subglyph = font.glyphs[glyphIndex];\n\n              if (subglyph) {\n                cmds.push({\n                  cmd: \"save\"\n                });\n                cmds.push({\n                  cmd: \"transform\",\n                  args: [scaleX, scale01, scale10, scaleY, x, y]\n                });\n                compileGlyf(subglyph, cmds, font);\n                cmds.push({\n                  cmd: \"restore\"\n                });\n              }\n            } while (flags & 0x20);\n          } else {\n            var endPtsOfContours = [];\n            var j, jj;\n\n            for (j = 0; j < numberOfContours; j++) {\n              endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n              i += 2;\n            }\n\n            var instructionLength = code[i] << 8 | code[i + 1];\n            i += 2 + instructionLength;\n            var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n            var points = [];\n\n            while (points.length < numberOfPoints) {\n              flags = code[i++];\n              var repeat = 1;\n\n              if (flags & 0x08) {\n                repeat += code[i++];\n              }\n\n              while (repeat-- > 0) {\n                points.push({\n                  flags: flags\n                });\n              }\n            }\n\n            for (j = 0; j < numberOfPoints; j++) {\n              switch (points[j].flags & 0x12) {\n                case 0x00:\n                  x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n                  i += 2;\n                  break;\n\n                case 0x02:\n                  x -= code[i++];\n                  break;\n\n                case 0x12:\n                  x += code[i++];\n                  break;\n              }\n\n              points[j].x = x;\n            }\n\n            for (j = 0; j < numberOfPoints; j++) {\n              switch (points[j].flags & 0x24) {\n                case 0x00:\n                  y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n                  i += 2;\n                  break;\n\n                case 0x04:\n                  y -= code[i++];\n                  break;\n\n                case 0x24:\n                  y += code[i++];\n                  break;\n              }\n\n              points[j].y = y;\n            }\n\n            var startPoint = 0;\n\n            for (i = 0; i < numberOfContours; i++) {\n              var endPoint = endPtsOfContours[i];\n              var contour = points.slice(startPoint, endPoint + 1);\n\n              if (contour[0].flags & 1) {\n                contour.push(contour[0]);\n              } else if (contour[contour.length - 1].flags & 1) {\n                contour.unshift(contour[contour.length - 1]);\n              } else {\n                var p = {\n                  flags: 1,\n                  x: (contour[0].x + contour[contour.length - 1].x) / 2,\n                  y: (contour[0].y + contour[contour.length - 1].y) / 2\n                };\n                contour.unshift(p);\n                contour.push(p);\n              }\n\n              moveTo(contour[0].x, contour[0].y);\n\n              for (j = 1, jj = contour.length; j < jj; j++) {\n                if (contour[j].flags & 1) {\n                  lineTo(contour[j].x, contour[j].y);\n                } else if (contour[j + 1].flags & 1) {\n                  quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n                  j++;\n                } else {\n                  quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n                }\n              }\n\n              startPoint = endPoint + 1;\n            }\n          }\n        }\n\n        function compileCharString(charStringCode, cmds, font, glyphId) {\n          function moveTo(x, y) {\n            cmds.push({\n              cmd: \"moveTo\",\n              args: [x, y]\n            });\n          }\n\n          function lineTo(x, y) {\n            cmds.push({\n              cmd: \"lineTo\",\n              args: [x, y]\n            });\n          }\n\n          function bezierCurveTo(x1, y1, x2, y2, x, y) {\n            cmds.push({\n              cmd: \"bezierCurveTo\",\n              args: [x1, y1, x2, y2, x, y]\n            });\n          }\n\n          var stack = [];\n          var x = 0,\n              y = 0;\n          var stems = 0;\n\n          function parse(code) {\n            var i = 0;\n\n            while (i < code.length) {\n              var stackClean = false;\n              var v = code[i++];\n              var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\n              switch (v) {\n                case 1:\n                  stems += stack.length >> 1;\n                  stackClean = true;\n                  break;\n\n                case 3:\n                  stems += stack.length >> 1;\n                  stackClean = true;\n                  break;\n\n                case 4:\n                  y += stack.pop();\n                  moveTo(x, y);\n                  stackClean = true;\n                  break;\n\n                case 5:\n                  while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    lineTo(x, y);\n                  }\n\n                  break;\n\n                case 6:\n                  while (stack.length > 0) {\n                    x += stack.shift();\n                    lineTo(x, y);\n\n                    if (stack.length === 0) {\n                      break;\n                    }\n\n                    y += stack.shift();\n                    lineTo(x, y);\n                  }\n\n                  break;\n\n                case 7:\n                  while (stack.length > 0) {\n                    y += stack.shift();\n                    lineTo(x, y);\n\n                    if (stack.length === 0) {\n                      break;\n                    }\n\n                    x += stack.shift();\n                    lineTo(x, y);\n                  }\n\n                  break;\n\n                case 8:\n                  while (stack.length > 0) {\n                    xa = x + stack.shift();\n                    ya = y + stack.shift();\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb + stack.shift();\n                    y = yb + stack.shift();\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  break;\n\n                case 10:\n                  n = stack.pop();\n                  subrCode = null;\n\n                  if (font.isCFFCIDFont) {\n                    var fdIndex = font.fdSelect.getFDIndex(glyphId);\n\n                    if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                      var fontDict = font.fdArray[fdIndex];\n                      var subrs = void 0;\n\n                      if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                        subrs = fontDict.privateDict.subrsIndex.objects;\n                      }\n\n                      if (subrs) {\n                        n += getSubroutineBias(subrs);\n                        subrCode = subrs[n];\n                      }\n                    } else {\n                      (0, _util.warn)(\"Invalid fd index for glyph index.\");\n                    }\n                  } else {\n                    subrCode = font.subrs[n + font.subrsBias];\n                  }\n\n                  if (subrCode) {\n                    parse(subrCode);\n                  }\n\n                  break;\n\n                case 11:\n                  return;\n\n                case 12:\n                  v = code[i++];\n\n                  switch (v) {\n                    case 34:\n                      xa = x + stack.shift();\n                      xb = xa + stack.shift();\n                      y1 = y + stack.shift();\n                      x = xb + stack.shift();\n                      bezierCurveTo(xa, y, xb, y1, x, y1);\n                      xa = x + stack.shift();\n                      xb = xa + stack.shift();\n                      x = xb + stack.shift();\n                      bezierCurveTo(xa, y1, xb, y, x, y);\n                      break;\n\n                    case 35:\n                      xa = x + stack.shift();\n                      ya = y + stack.shift();\n                      xb = xa + stack.shift();\n                      yb = ya + stack.shift();\n                      x = xb + stack.shift();\n                      y = yb + stack.shift();\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\n                      xa = x + stack.shift();\n                      ya = y + stack.shift();\n                      xb = xa + stack.shift();\n                      yb = ya + stack.shift();\n                      x = xb + stack.shift();\n                      y = yb + stack.shift();\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\n                      stack.pop();\n                      break;\n\n                    case 36:\n                      xa = x + stack.shift();\n                      y1 = y + stack.shift();\n                      xb = xa + stack.shift();\n                      y2 = y1 + stack.shift();\n                      x = xb + stack.shift();\n                      bezierCurveTo(xa, y1, xb, y2, x, y2);\n                      xa = x + stack.shift();\n                      xb = xa + stack.shift();\n                      y3 = y2 + stack.shift();\n                      x = xb + stack.shift();\n                      bezierCurveTo(xa, y2, xb, y3, x, y);\n                      break;\n\n                    case 37:\n                      var x0 = x,\n                          y0 = y;\n                      xa = x + stack.shift();\n                      ya = y + stack.shift();\n                      xb = xa + stack.shift();\n                      yb = ya + stack.shift();\n                      x = xb + stack.shift();\n                      y = yb + stack.shift();\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\n                      xa = x + stack.shift();\n                      ya = y + stack.shift();\n                      xb = xa + stack.shift();\n                      yb = ya + stack.shift();\n                      x = xb;\n                      y = yb;\n\n                      if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                        x += stack.shift();\n                      } else {\n                        y += stack.shift();\n                      }\n\n                      bezierCurveTo(xa, ya, xb, yb, x, y);\n                      break;\n\n                    default:\n                      throw new _util.FormatError(\"unknown operator: 12 \".concat(v));\n                  }\n\n                  break;\n\n                case 14:\n                  if (stack.length >= 4) {\n                    var achar = stack.pop();\n                    var bchar = stack.pop();\n                    y = stack.pop();\n                    x = stack.pop();\n                    cmds.push({\n                      cmd: \"save\"\n                    });\n                    cmds.push({\n                      cmd: \"translate\",\n                      args: [x, y]\n                    });\n                    var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n                    compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n                    cmds.push({\n                      cmd: \"restore\"\n                    });\n                    cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n                    compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n                  }\n\n                  return;\n\n                case 18:\n                  stems += stack.length >> 1;\n                  stackClean = true;\n                  break;\n\n                case 19:\n                  stems += stack.length >> 1;\n                  i += stems + 7 >> 3;\n                  stackClean = true;\n                  break;\n\n                case 20:\n                  stems += stack.length >> 1;\n                  i += stems + 7 >> 3;\n                  stackClean = true;\n                  break;\n\n                case 21:\n                  y += stack.pop();\n                  x += stack.pop();\n                  moveTo(x, y);\n                  stackClean = true;\n                  break;\n\n                case 22:\n                  x += stack.pop();\n                  moveTo(x, y);\n                  stackClean = true;\n                  break;\n\n                case 23:\n                  stems += stack.length >> 1;\n                  stackClean = true;\n                  break;\n\n                case 24:\n                  while (stack.length > 2) {\n                    xa = x + stack.shift();\n                    ya = y + stack.shift();\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb + stack.shift();\n                    y = yb + stack.shift();\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  x += stack.shift();\n                  y += stack.shift();\n                  lineTo(x, y);\n                  break;\n\n                case 25:\n                  while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    lineTo(x, y);\n                  }\n\n                  xa = x + stack.shift();\n                  ya = y + stack.shift();\n                  xb = xa + stack.shift();\n                  yb = ya + stack.shift();\n                  x = xb + stack.shift();\n                  y = yb + stack.shift();\n                  bezierCurveTo(xa, ya, xb, yb, x, y);\n                  break;\n\n                case 26:\n                  if (stack.length % 2) {\n                    x += stack.shift();\n                  }\n\n                  while (stack.length > 0) {\n                    xa = x;\n                    ya = y + stack.shift();\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb;\n                    y = yb + stack.shift();\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  break;\n\n                case 27:\n                  if (stack.length % 2) {\n                    y += stack.shift();\n                  }\n\n                  while (stack.length > 0) {\n                    xa = x + stack.shift();\n                    ya = y;\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb + stack.shift();\n                    y = yb;\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  break;\n\n                case 28:\n                  stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n                  i += 2;\n                  break;\n\n                case 29:\n                  n = stack.pop() + font.gsubrsBias;\n                  subrCode = font.gsubrs[n];\n\n                  if (subrCode) {\n                    parse(subrCode);\n                  }\n\n                  break;\n\n                case 30:\n                  while (stack.length > 0) {\n                    xa = x;\n                    ya = y + stack.shift();\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb + stack.shift();\n                    y = yb + (stack.length === 1 ? stack.shift() : 0);\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n\n                    if (stack.length === 0) {\n                      break;\n                    }\n\n                    xa = x + stack.shift();\n                    ya = y;\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    y = yb + stack.shift();\n                    x = xb + (stack.length === 1 ? stack.shift() : 0);\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  break;\n\n                case 31:\n                  while (stack.length > 0) {\n                    xa = x + stack.shift();\n                    ya = y;\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    y = yb + stack.shift();\n                    x = xb + (stack.length === 1 ? stack.shift() : 0);\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n\n                    if (stack.length === 0) {\n                      break;\n                    }\n\n                    xa = x;\n                    ya = y + stack.shift();\n                    xb = xa + stack.shift();\n                    yb = ya + stack.shift();\n                    x = xb + stack.shift();\n                    y = yb + (stack.length === 1 ? stack.shift() : 0);\n                    bezierCurveTo(xa, ya, xb, yb, x, y);\n                  }\n\n                  break;\n\n                default:\n                  if (v < 32) {\n                    throw new _util.FormatError(\"unknown operator: \".concat(v));\n                  }\n\n                  if (v < 247) {\n                    stack.push(v - 139);\n                  } else if (v < 251) {\n                    stack.push((v - 247) * 256 + code[i++] + 108);\n                  } else if (v < 255) {\n                    stack.push(-(v - 251) * 256 - code[i++] - 108);\n                  } else {\n                    stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n                    i += 4;\n                  }\n\n                  break;\n              }\n\n              if (stackClean) {\n                stack.length = 0;\n              }\n            }\n          }\n\n          parse(charStringCode);\n        }\n\n        var NOOP = [];\n\n        var CompiledFont = /*#__PURE__*/function () {\n          function CompiledFont(fontMatrix) {\n            _classCallCheck(this, CompiledFont);\n\n            if (this.constructor === CompiledFont) {\n              (0, _util.unreachable)(\"Cannot initialize CompiledFont.\");\n            }\n\n            this.fontMatrix = fontMatrix;\n            this.compiledGlyphs = Object.create(null);\n            this.compiledCharCodeToGlyphId = Object.create(null);\n          }\n\n          _createClass(CompiledFont, [{\n            key: \"getPathJs\",\n            value: function getPathJs(unicode) {\n              var cmap = lookupCmap(this.cmap, unicode);\n              var fn = this.compiledGlyphs[cmap.glyphId];\n\n              if (!fn) {\n                fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n                this.compiledGlyphs[cmap.glyphId] = fn;\n              }\n\n              if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n                this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n              }\n\n              return fn;\n            }\n          }, {\n            key: \"compileGlyph\",\n            value: function compileGlyph(code, glyphId) {\n              if (!code || code.length === 0 || code[0] === 14) {\n                return NOOP;\n              }\n\n              var fontMatrix = this.fontMatrix;\n\n              if (this.isCFFCIDFont) {\n                var fdIndex = this.fdSelect.getFDIndex(glyphId);\n\n                if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n                  var fontDict = this.fdArray[fdIndex];\n                  fontMatrix = fontDict.getByName(\"FontMatrix\") || _util.FONT_IDENTITY_MATRIX;\n                } else {\n                  (0, _util.warn)(\"Invalid fd index for glyph index.\");\n                }\n              }\n\n              var cmds = [];\n              cmds.push({\n                cmd: \"save\"\n              });\n              cmds.push({\n                cmd: \"transform\",\n                args: fontMatrix.slice()\n              });\n              cmds.push({\n                cmd: \"scale\",\n                args: [\"size\", \"-size\"]\n              });\n              this.compileGlyphImpl(code, cmds, glyphId);\n              cmds.push({\n                cmd: \"restore\"\n              });\n              return cmds;\n            }\n          }, {\n            key: \"compileGlyphImpl\",\n            value: function compileGlyphImpl() {\n              (0, _util.unreachable)(\"Children classes should implement this.\");\n            }\n          }, {\n            key: \"hasBuiltPath\",\n            value: function hasBuiltPath(unicode) {\n              var cmap = lookupCmap(this.cmap, unicode);\n              return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n            }\n          }]);\n\n          return CompiledFont;\n        }();\n\n        var TrueTypeCompiled = /*#__PURE__*/function (_CompiledFont) {\n          _inherits(TrueTypeCompiled, _CompiledFont);\n\n          var _super61 = _createSuper(TrueTypeCompiled);\n\n          function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n            var _this71;\n\n            _classCallCheck(this, TrueTypeCompiled);\n\n            _this71 = _super61.call(this, fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0]);\n            _this71.glyphs = glyphs;\n            _this71.cmap = cmap;\n            return _this71;\n          }\n\n          _createClass(TrueTypeCompiled, [{\n            key: \"compileGlyphImpl\",\n            value: function compileGlyphImpl(code, cmds) {\n              compileGlyf(code, cmds, this);\n            }\n          }]);\n\n          return TrueTypeCompiled;\n        }(CompiledFont);\n\n        var Type2Compiled = /*#__PURE__*/function (_CompiledFont2) {\n          _inherits(Type2Compiled, _CompiledFont2);\n\n          var _super62 = _createSuper(Type2Compiled);\n\n          function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n            var _this72;\n\n            _classCallCheck(this, Type2Compiled);\n\n            _this72 = _super62.call(this, fontMatrix || [0.001, 0, 0, 0.001, 0, 0]);\n            _this72.glyphs = cffInfo.glyphs;\n            _this72.gsubrs = cffInfo.gsubrs || [];\n            _this72.subrs = cffInfo.subrs || [];\n            _this72.cmap = cmap;\n            _this72.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n            _this72.gsubrsBias = getSubroutineBias(_this72.gsubrs);\n            _this72.subrsBias = getSubroutineBias(_this72.subrs);\n            _this72.isCFFCIDFont = cffInfo.isCFFCIDFont;\n            _this72.fdSelect = cffInfo.fdSelect;\n            _this72.fdArray = cffInfo.fdArray;\n            return _this72;\n          }\n\n          _createClass(Type2Compiled, [{\n            key: \"compileGlyphImpl\",\n            value: function compileGlyphImpl(code, cmds, glyphId) {\n              compileCharString(code, cmds, this, glyphId);\n            }\n          }]);\n\n          return Type2Compiled;\n        }(CompiledFont);\n\n        return {\n          create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n            var data = new Uint8Array(font.data);\n            var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n            var numTables = getUshort(data, 4);\n\n            for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n              var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n              var offset = getLong(data, p + 8);\n              var length = getLong(data, p + 12);\n\n              switch (tag) {\n                case \"cmap\":\n                  cmap = parseCmap(data, offset, offset + length);\n                  break;\n\n                case \"glyf\":\n                  glyf = data.subarray(offset, offset + length);\n                  break;\n\n                case \"loca\":\n                  loca = data.subarray(offset, offset + length);\n                  break;\n\n                case \"head\":\n                  unitsPerEm = getUshort(data, offset + 18);\n                  indexToLocFormat = getUshort(data, offset + 50);\n                  break;\n\n                case \"CFF \":\n                  cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n                  break;\n              }\n            }\n\n            if (glyf) {\n              var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n              return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n            }\n\n            return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n          }\n        };\n      }();\n\n      exports.FontRendererFactory = FontRendererFactory;\n      /***/\n    },\n    /* 38 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Type1Parser = void 0;\n\n      var _encodings = __w_pdfjs_require__(33);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var HINTING_ENABLED = false;\n\n      var Type1CharString = function Type1CharStringClosure() {\n        var COMMAND_MAP = {\n          hstem: [1],\n          vstem: [3],\n          vmoveto: [4],\n          rlineto: [5],\n          hlineto: [6],\n          vlineto: [7],\n          rrcurveto: [8],\n          callsubr: [10],\n          flex: [12, 35],\n          drop: [12, 18],\n          endchar: [14],\n          rmoveto: [21],\n          hmoveto: [22],\n          vhcurveto: [30],\n          hvcurveto: [31]\n        };\n\n        function Type1CharString() {\n          this.width = 0;\n          this.lsb = 0;\n          this.flexing = false;\n          this.output = [];\n          this.stack = [];\n        }\n\n        Type1CharString.prototype = {\n          convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n            var count = encoded.length;\n            var error = false;\n            var wx, sbx, subrNumber;\n\n            for (var i = 0; i < count; i++) {\n              var value = encoded[i];\n\n              if (value < 32) {\n                if (value === 12) {\n                  value = (value << 8) + encoded[++i];\n                }\n\n                switch (value) {\n                  case 1:\n                    if (!HINTING_ENABLED) {\n                      this.stack = [];\n                      break;\n                    }\n\n                    error = this.executeCommand(2, COMMAND_MAP.hstem);\n                    break;\n\n                  case 3:\n                    if (!HINTING_ENABLED) {\n                      this.stack = [];\n                      break;\n                    }\n\n                    error = this.executeCommand(2, COMMAND_MAP.vstem);\n                    break;\n\n                  case 4:\n                    if (this.flexing) {\n                      if (this.stack.length < 1) {\n                        error = true;\n                        break;\n                      }\n\n                      var dy = this.stack.pop();\n                      this.stack.push(0, dy);\n                      break;\n                    }\n\n                    error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n                    break;\n\n                  case 5:\n                    error = this.executeCommand(2, COMMAND_MAP.rlineto);\n                    break;\n\n                  case 6:\n                    error = this.executeCommand(1, COMMAND_MAP.hlineto);\n                    break;\n\n                  case 7:\n                    error = this.executeCommand(1, COMMAND_MAP.vlineto);\n                    break;\n\n                  case 8:\n                    error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n                    break;\n\n                  case 9:\n                    this.stack = [];\n                    break;\n\n                  case 10:\n                    if (this.stack.length < 1) {\n                      error = true;\n                      break;\n                    }\n\n                    subrNumber = this.stack.pop();\n\n                    if (!subrs[subrNumber]) {\n                      error = true;\n                      break;\n                    }\n\n                    error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n                    break;\n\n                  case 11:\n                    return error;\n\n                  case 13:\n                    if (this.stack.length < 2) {\n                      error = true;\n                      break;\n                    }\n\n                    wx = this.stack.pop();\n                    sbx = this.stack.pop();\n                    this.lsb = sbx;\n                    this.width = wx;\n                    this.stack.push(wx, sbx);\n                    error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n                    break;\n\n                  case 14:\n                    this.output.push(COMMAND_MAP.endchar[0]);\n                    break;\n\n                  case 21:\n                    if (this.flexing) {\n                      break;\n                    }\n\n                    error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n                    break;\n\n                  case 22:\n                    if (this.flexing) {\n                      this.stack.push(0);\n                      break;\n                    }\n\n                    error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n                    break;\n\n                  case 30:\n                    error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n                    break;\n\n                  case 31:\n                    error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n                    break;\n\n                  case (12 << 8) + 0:\n                    this.stack = [];\n                    break;\n\n                  case (12 << 8) + 1:\n                    if (!HINTING_ENABLED) {\n                      this.stack = [];\n                      break;\n                    }\n\n                    error = this.executeCommand(2, COMMAND_MAP.vstem);\n                    break;\n\n                  case (12 << 8) + 2:\n                    if (!HINTING_ENABLED) {\n                      this.stack = [];\n                      break;\n                    }\n\n                    error = this.executeCommand(2, COMMAND_MAP.hstem);\n                    break;\n\n                  case (12 << 8) + 6:\n                    if (seacAnalysisEnabled) {\n                      var asb = this.stack[this.stack.length - 5];\n                      this.seac = this.stack.splice(-4, 4);\n                      this.seac[0] += this.lsb - asb;\n                      error = this.executeCommand(0, COMMAND_MAP.endchar);\n                    } else {\n                      error = this.executeCommand(4, COMMAND_MAP.endchar);\n                    }\n\n                    break;\n\n                  case (12 << 8) + 7:\n                    if (this.stack.length < 4) {\n                      error = true;\n                      break;\n                    }\n\n                    this.stack.pop();\n                    wx = this.stack.pop();\n                    var sby = this.stack.pop();\n                    sbx = this.stack.pop();\n                    this.lsb = sbx;\n                    this.width = wx;\n                    this.stack.push(wx, sbx, sby);\n                    error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n                    break;\n\n                  case (12 << 8) + 12:\n                    if (this.stack.length < 2) {\n                      error = true;\n                      break;\n                    }\n\n                    var num2 = this.stack.pop();\n                    var num1 = this.stack.pop();\n                    this.stack.push(num1 / num2);\n                    break;\n\n                  case (12 << 8) + 16:\n                    if (this.stack.length < 2) {\n                      error = true;\n                      break;\n                    }\n\n                    subrNumber = this.stack.pop();\n                    var numArgs = this.stack.pop();\n\n                    if (subrNumber === 0 && numArgs === 3) {\n                      var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                      this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                      error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                      this.flexing = false;\n                      this.stack.push(flexArgs[15], flexArgs[16]);\n                    } else if (subrNumber === 1 && numArgs === 0) {\n                      this.flexing = true;\n                    }\n\n                    break;\n\n                  case (12 << 8) + 17:\n                    break;\n\n                  case (12 << 8) + 33:\n                    this.stack = [];\n                    break;\n\n                  default:\n                    (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n                    break;\n                }\n\n                if (error) {\n                  break;\n                }\n\n                continue;\n              } else if (value <= 246) {\n                value = value - 139;\n              } else if (value <= 250) {\n                value = (value - 247) * 256 + encoded[++i] + 108;\n              } else if (value <= 254) {\n                value = -((value - 251) * 256) - encoded[++i] - 108;\n              } else {\n                value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n              }\n\n              this.stack.push(value);\n            }\n\n            return error;\n          },\n          executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n            var stackLength = this.stack.length;\n\n            if (howManyArgs > stackLength) {\n              return true;\n            }\n\n            var start = stackLength - howManyArgs;\n\n            for (var i = start; i < stackLength; i++) {\n              var value = this.stack[i];\n\n              if (Number.isInteger(value)) {\n                this.output.push(28, value >> 8 & 0xff, value & 0xff);\n              } else {\n                value = 65536 * value | 0;\n                this.output.push(255, value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n              }\n            }\n\n            this.output.push.apply(this.output, command);\n\n            if (keepStack) {\n              this.stack.splice(start, howManyArgs);\n            } else {\n              this.stack.length = 0;\n            }\n\n            return false;\n          }\n        };\n        return Type1CharString;\n      }();\n\n      var Type1Parser = function Type1ParserClosure() {\n        var EEXEC_ENCRYPT_KEY = 55665;\n        var CHAR_STRS_ENCRYPT_KEY = 4330;\n\n        function isHexDigit(code) {\n          return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n        }\n\n        function decrypt(data, key, discardNumber) {\n          if (discardNumber >= data.length) {\n            return new Uint8Array(0);\n          }\n\n          var r = key | 0,\n              c1 = 52845,\n              c2 = 22719,\n              i,\n              j;\n\n          for (i = 0; i < discardNumber; i++) {\n            r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n          }\n\n          var count = data.length - discardNumber;\n          var decrypted = new Uint8Array(count);\n\n          for (i = discardNumber, j = 0; j < count; i++, j++) {\n            var value = data[i];\n            decrypted[j] = value ^ r >> 8;\n            r = (value + r) * c1 + c2 & (1 << 16) - 1;\n          }\n\n          return decrypted;\n        }\n\n        function decryptAscii(data, key, discardNumber) {\n          var r = key | 0,\n              c1 = 52845,\n              c2 = 22719;\n          var count = data.length,\n              maybeLength = count >>> 1;\n          var decrypted = new Uint8Array(maybeLength);\n          var i, j;\n\n          for (i = 0, j = 0; i < count; i++) {\n            var digit1 = data[i];\n\n            if (!isHexDigit(digit1)) {\n              continue;\n            }\n\n            i++;\n            var digit2;\n\n            while (i < count && !isHexDigit(digit2 = data[i])) {\n              i++;\n            }\n\n            if (i < count) {\n              var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n              decrypted[j++] = value ^ r >> 8;\n              r = (value + r) * c1 + c2 & (1 << 16) - 1;\n            }\n          }\n\n          return decrypted.slice(discardNumber, j);\n        }\n\n        function isSpecial(c) {\n          return c === 0x2f || c === 0x5b || c === 0x5d || c === 0x7b || c === 0x7d || c === 0x28 || c === 0x29;\n        }\n\n        function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n          if (encrypted) {\n            var data = stream.getBytes();\n            var isBinary = !((isHexDigit(data[0]) || (0, _core_utils.isWhiteSpace)(data[0])) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]) && isHexDigit(data[4]) && isHexDigit(data[5]) && isHexDigit(data[6]) && isHexDigit(data[7]));\n            stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n          }\n\n          this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n          this.stream = stream;\n          this.nextChar();\n        }\n\n        Type1Parser.prototype = {\n          readNumberArray: function Type1Parser_readNumberArray() {\n            this.getToken();\n            var array = [];\n\n            while (true) {\n              var token = this.getToken();\n\n              if (token === null || token === \"]\" || token === \"}\") {\n                break;\n              }\n\n              array.push(parseFloat(token || 0));\n            }\n\n            return array;\n          },\n          readNumber: function Type1Parser_readNumber() {\n            var token = this.getToken();\n            return parseFloat(token || 0);\n          },\n          readInt: function Type1Parser_readInt() {\n            var token = this.getToken();\n            return parseInt(token || 0, 10) | 0;\n          },\n          readBoolean: function Type1Parser_readBoolean() {\n            var token = this.getToken();\n            return token === \"true\" ? 1 : 0;\n          },\n          nextChar: function Type1_nextChar() {\n            return this.currentChar = this.stream.getByte();\n          },\n          getToken: function Type1Parser_getToken() {\n            var comment = false;\n            var ch = this.currentChar;\n\n            while (true) {\n              if (ch === -1) {\n                return null;\n              }\n\n              if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                  comment = false;\n                }\n              } else if (ch === 0x25) {\n                comment = true;\n              } else if (!(0, _core_utils.isWhiteSpace)(ch)) {\n                break;\n              }\n\n              ch = this.nextChar();\n            }\n\n            if (isSpecial(ch)) {\n              this.nextChar();\n              return String.fromCharCode(ch);\n            }\n\n            var token = \"\";\n\n            do {\n              token += String.fromCharCode(ch);\n              ch = this.nextChar();\n            } while (ch >= 0 && !(0, _core_utils.isWhiteSpace)(ch) && !isSpecial(ch));\n\n            return token;\n          },\n          readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n            if (lenIV === -1) {\n              return bytes;\n            }\n\n            return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n          },\n          extractFontProgram: function Type1Parser_extractFontProgram(properties) {\n            var stream = this.stream;\n            var subrs = [],\n                charstrings = [];\n            var privateData = Object.create(null);\n            privateData.lenIV = 4;\n            var program = {\n              subrs: [],\n              charstrings: [],\n              properties: {\n                privateData: privateData\n              }\n            };\n            var token, length, data, lenIV, encoded;\n\n            while ((token = this.getToken()) !== null) {\n              if (token !== \"/\") {\n                continue;\n              }\n\n              token = this.getToken();\n\n              switch (token) {\n                case \"CharStrings\":\n                  this.getToken();\n                  this.getToken();\n                  this.getToken();\n                  this.getToken();\n\n                  while (true) {\n                    token = this.getToken();\n\n                    if (token === null || token === \"end\") {\n                      break;\n                    }\n\n                    if (token !== \"/\") {\n                      continue;\n                    }\n\n                    var glyph = this.getToken();\n                    length = this.readInt();\n                    this.getToken();\n                    data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n                    lenIV = program.properties.privateData.lenIV;\n                    encoded = this.readCharStrings(data, lenIV);\n                    this.nextChar();\n                    token = this.getToken();\n\n                    if (token === \"noaccess\") {\n                      this.getToken();\n                    }\n\n                    charstrings.push({\n                      glyph: glyph,\n                      encoded: encoded\n                    });\n                  }\n\n                  break;\n\n                case \"Subrs\":\n                  this.readInt();\n                  this.getToken();\n\n                  while (this.getToken() === \"dup\") {\n                    var index = this.readInt();\n                    length = this.readInt();\n                    this.getToken();\n                    data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n                    lenIV = program.properties.privateData.lenIV;\n                    encoded = this.readCharStrings(data, lenIV);\n                    this.nextChar();\n                    token = this.getToken();\n\n                    if (token === \"noaccess\") {\n                      this.getToken();\n                    }\n\n                    subrs[index] = encoded;\n                  }\n\n                  break;\n\n                case \"BlueValues\":\n                case \"OtherBlues\":\n                case \"FamilyBlues\":\n                case \"FamilyOtherBlues\":\n                  var blueArray = this.readNumberArray();\n\n                  if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n                    program.properties.privateData[token] = blueArray;\n                  }\n\n                  break;\n\n                case \"StemSnapH\":\n                case \"StemSnapV\":\n                  program.properties.privateData[token] = this.readNumberArray();\n                  break;\n\n                case \"StdHW\":\n                case \"StdVW\":\n                  program.properties.privateData[token] = this.readNumberArray()[0];\n                  break;\n\n                case \"BlueShift\":\n                case \"lenIV\":\n                case \"BlueFuzz\":\n                case \"BlueScale\":\n                case \"LanguageGroup\":\n                case \"ExpansionFactor\":\n                  program.properties.privateData[token] = this.readNumber();\n                  break;\n\n                case \"ForceBold\":\n                  program.properties.privateData[token] = this.readBoolean();\n                  break;\n              }\n            }\n\n            for (var i = 0; i < charstrings.length; i++) {\n              glyph = charstrings[i].glyph;\n              encoded = charstrings[i].encoded;\n              var charString = new Type1CharString();\n              var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n              var output = charString.output;\n\n              if (error) {\n                output = [14];\n              }\n\n              var charStringObject = {\n                glyphName: glyph,\n                charstring: output,\n                width: charString.width,\n                lsb: charString.lsb,\n                seac: charString.seac\n              };\n\n              if (glyph === \".notdef\") {\n                program.charstrings.unshift(charStringObject);\n              } else {\n                program.charstrings.push(charStringObject);\n              }\n\n              if (properties.builtInEncoding) {\n                var _index = properties.builtInEncoding.indexOf(glyph);\n\n                if (_index > -1 && properties.widths[_index] === undefined && _index >= properties.firstChar && _index <= properties.lastChar) {\n                  properties.widths[_index] = charString.width;\n                }\n              }\n            }\n\n            return program;\n          },\n          extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n            var token;\n\n            while ((token = this.getToken()) !== null) {\n              if (token !== \"/\") {\n                continue;\n              }\n\n              token = this.getToken();\n\n              switch (token) {\n                case \"FontMatrix\":\n                  var matrix = this.readNumberArray();\n                  properties.fontMatrix = matrix;\n                  break;\n\n                case \"Encoding\":\n                  var encodingArg = this.getToken();\n                  var encoding;\n\n                  if (!/^\\d+$/.test(encodingArg)) {\n                    encoding = (0, _encodings.getEncoding)(encodingArg);\n                  } else {\n                    encoding = [];\n                    var size = parseInt(encodingArg, 10) | 0;\n                    this.getToken();\n\n                    for (var j = 0; j < size; j++) {\n                      token = this.getToken();\n\n                      while (token !== \"dup\" && token !== \"def\") {\n                        token = this.getToken();\n\n                        if (token === null) {\n                          return;\n                        }\n                      }\n\n                      if (token === \"def\") {\n                        break;\n                      }\n\n                      var index = this.readInt();\n                      this.getToken();\n                      var glyph = this.getToken();\n                      encoding[index] = glyph;\n                      this.getToken();\n                    }\n                  }\n\n                  properties.builtInEncoding = encoding;\n                  break;\n\n                case \"FontBBox\":\n                  var fontBBox = this.readNumberArray();\n                  properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n                  properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n                  properties.ascentScaled = true;\n                  break;\n              }\n            }\n          }\n        };\n        return Type1Parser;\n      }();\n\n      exports.Type1Parser = Type1Parser;\n      /***/\n    },\n    /* 39 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getTilingPatternIR = getTilingPatternIR;\n      exports.Pattern = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _colorspace = __w_pdfjs_require__(23);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var ShadingType = {\n        FUNCTION_BASED: 1,\n        AXIAL: 2,\n        RADIAL: 3,\n        FREE_FORM_MESH: 4,\n        LATTICE_FORM_MESH: 5,\n        COONS_PATCH_MESH: 6,\n        TENSOR_PATCH_MESH: 7\n      };\n\n      var Pattern = function PatternClosure() {\n        function Pattern() {\n          (0, _util.unreachable)(\"should not call Pattern constructor\");\n        }\n\n        Pattern.prototype = {\n          getPattern: function Pattern_getPattern(ctx) {\n            (0, _util.unreachable)(\"Should not call Pattern.getStyle: \".concat(ctx));\n          }\n        };\n\n        Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory, localColorSpaceCache) {\n          var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n          var type = dict.get(\"ShadingType\");\n\n          try {\n            switch (type) {\n              case ShadingType.AXIAL:\n              case ShadingType.RADIAL:\n                return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory, localColorSpaceCache);\n\n              case ShadingType.FREE_FORM_MESH:\n              case ShadingType.LATTICE_FORM_MESH:\n              case ShadingType.COONS_PATCH_MESH:\n              case ShadingType.TENSOR_PATCH_MESH:\n                return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory, localColorSpaceCache);\n\n              default:\n                throw new _util.FormatError(\"Unsupported ShadingType: \" + type);\n            }\n          } catch (ex) {\n            if (ex instanceof _core_utils.MissingDataException) {\n              throw ex;\n            }\n\n            handler.send(\"UnsupportedFeature\", {\n              featureId: _util.UNSUPPORTED_FEATURES.shadingPattern\n            });\n            (0, _util.warn)(ex);\n            return new Shadings.Dummy();\n          }\n        };\n\n        return Pattern;\n      }();\n\n      exports.Pattern = Pattern;\n      var Shadings = {};\n      Shadings.SMALL_NUMBER = 1e-6;\n\n      Shadings.RadialAxial = function RadialAxialClosure() {\n        function RadialAxial(dict, matrix, xref, resources, pdfFunctionFactory, localColorSpaceCache) {\n          this.matrix = matrix;\n          this.coordsArr = dict.getArray(\"Coords\");\n          this.shadingType = dict.get(\"ShadingType\");\n          this.type = \"Pattern\";\n\n          var cs = _colorspace.ColorSpace.parse({\n            cs: dict.getRaw(\"ColorSpace\") || dict.getRaw(\"CS\"),\n            xref: xref,\n            resources: resources,\n            pdfFunctionFactory: pdfFunctionFactory,\n            localColorSpaceCache: localColorSpaceCache\n          });\n\n          this.cs = cs;\n          var bbox = dict.getArray(\"BBox\");\n\n          if (Array.isArray(bbox) && bbox.length === 4) {\n            this.bbox = _util.Util.normalizeRect(bbox);\n          } else {\n            this.bbox = null;\n          }\n\n          var t0 = 0.0,\n              t1 = 1.0;\n\n          if (dict.has(\"Domain\")) {\n            var domainArr = dict.getArray(\"Domain\");\n            t0 = domainArr[0];\n            t1 = domainArr[1];\n          }\n\n          var extendStart = false,\n              extendEnd = false;\n\n          if (dict.has(\"Extend\")) {\n            var extendArr = dict.getArray(\"Extend\");\n            extendStart = extendArr[0];\n            extendEnd = extendArr[1];\n          }\n\n          if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n            var x1 = this.coordsArr[0];\n            var y1 = this.coordsArr[1];\n            var r1 = this.coordsArr[2];\n            var x2 = this.coordsArr[3];\n            var y2 = this.coordsArr[4];\n            var r2 = this.coordsArr[5];\n            var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n            if (r1 <= r2 + distance && r2 <= r1 + distance) {\n              (0, _util.warn)(\"Unsupported radial gradient.\");\n            }\n          }\n\n          this.extendStart = extendStart;\n          this.extendEnd = extendEnd;\n          var fnObj = dict.getRaw(\"Function\");\n          var fn = pdfFunctionFactory.createFromArray(fnObj);\n          var NUMBER_OF_SAMPLES = 10;\n          var step = (t1 - t0) / NUMBER_OF_SAMPLES;\n          var colorStops = this.colorStops = [];\n\n          if (t0 >= t1 || step <= 0) {\n            (0, _util.info)(\"Bad shading domain.\");\n            return;\n          }\n\n          var color = new Float32Array(cs.numComps),\n              ratio = new Float32Array(1);\n          var rgbColor;\n\n          for (var _i40 = 0; _i40 <= NUMBER_OF_SAMPLES; _i40++) {\n            ratio[0] = t0 + _i40 * step;\n            fn(ratio, 0, color, 0);\n            rgbColor = cs.getRgb(color, 0);\n\n            var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\n            colorStops.push([_i40 / NUMBER_OF_SAMPLES, cssColor]);\n          }\n\n          var background = \"transparent\";\n\n          if (dict.has(\"Background\")) {\n            rgbColor = cs.getRgb(dict.get(\"Background\"), 0);\n            background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n          }\n\n          if (!extendStart) {\n            colorStops.unshift([0, background]);\n            colorStops[1][0] += Shadings.SMALL_NUMBER;\n          }\n\n          if (!extendEnd) {\n            colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n            colorStops.push([1, background]);\n          }\n\n          this.colorStops = colorStops;\n        }\n\n        RadialAxial.prototype = {\n          getIR: function RadialAxial_getIR() {\n            var coordsArr = this.coordsArr;\n            var shadingType = this.shadingType;\n            var type, p0, p1, r0, r1;\n\n            if (shadingType === ShadingType.AXIAL) {\n              p0 = [coordsArr[0], coordsArr[1]];\n              p1 = [coordsArr[2], coordsArr[3]];\n              r0 = null;\n              r1 = null;\n              type = \"axial\";\n            } else if (shadingType === ShadingType.RADIAL) {\n              p0 = [coordsArr[0], coordsArr[1]];\n              p1 = [coordsArr[3], coordsArr[4]];\n              r0 = coordsArr[2];\n              r1 = coordsArr[5];\n              type = \"radial\";\n            } else {\n              (0, _util.unreachable)(\"getPattern type unknown: \".concat(shadingType));\n            }\n\n            var matrix = this.matrix;\n\n            if (matrix) {\n              p0 = _util.Util.applyTransform(p0, matrix);\n              p1 = _util.Util.applyTransform(p1, matrix);\n\n              if (shadingType === ShadingType.RADIAL) {\n                var scale = _util.Util.singularValueDecompose2dScale(matrix);\n\n                r0 *= scale[0];\n                r1 *= scale[1];\n              }\n            }\n\n            return [\"RadialAxial\", type, this.bbox, this.colorStops, p0, p1, r0, r1];\n          }\n        };\n        return RadialAxial;\n      }();\n\n      Shadings.Mesh = function MeshClosure() {\n        function MeshStreamReader(stream, context) {\n          this.stream = stream;\n          this.context = context;\n          this.buffer = 0;\n          this.bufferLength = 0;\n          var numComps = context.numComps;\n          this.tmpCompsBuf = new Float32Array(numComps);\n          var csNumComps = context.colorSpace.numComps;\n          this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n        }\n\n        MeshStreamReader.prototype = {\n          get hasData() {\n            if (this.stream.end) {\n              return this.stream.pos < this.stream.end;\n            }\n\n            if (this.bufferLength > 0) {\n              return true;\n            }\n\n            var nextByte = this.stream.getByte();\n\n            if (nextByte < 0) {\n              return false;\n            }\n\n            this.buffer = nextByte;\n            this.bufferLength = 8;\n            return true;\n          },\n\n          readBits: function MeshStreamReader_readBits(n) {\n            var buffer = this.buffer;\n            var bufferLength = this.bufferLength;\n\n            if (n === 32) {\n              if (bufferLength === 0) {\n                return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n              }\n\n              buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n              var nextByte = this.stream.getByte();\n              this.buffer = nextByte & (1 << bufferLength) - 1;\n              return (buffer << 8 - bufferLength | (nextByte & 0xff) >> bufferLength) >>> 0;\n            }\n\n            if (n === 8 && bufferLength === 0) {\n              return this.stream.getByte();\n            }\n\n            while (bufferLength < n) {\n              buffer = buffer << 8 | this.stream.getByte();\n              bufferLength += 8;\n            }\n\n            bufferLength -= n;\n            this.bufferLength = bufferLength;\n            this.buffer = buffer & (1 << bufferLength) - 1;\n            return buffer >> bufferLength;\n          },\n          align: function MeshStreamReader_align() {\n            this.buffer = 0;\n            this.bufferLength = 0;\n          },\n          readFlag: function MeshStreamReader_readFlag() {\n            return this.readBits(this.context.bitsPerFlag);\n          },\n          readCoordinate: function MeshStreamReader_readCoordinate() {\n            var bitsPerCoordinate = this.context.bitsPerCoordinate;\n            var xi = this.readBits(bitsPerCoordinate);\n            var yi = this.readBits(bitsPerCoordinate);\n            var decode = this.context.decode;\n            var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n            return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n          },\n          readComponents: function MeshStreamReader_readComponents() {\n            var numComps = this.context.numComps;\n            var bitsPerComponent = this.context.bitsPerComponent;\n            var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n            var decode = this.context.decode;\n            var components = this.tmpCompsBuf;\n\n            for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n              var ci = this.readBits(bitsPerComponent);\n              components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n            }\n\n            var color = this.tmpCsCompsBuf;\n\n            if (this.context.colorFn) {\n              this.context.colorFn(components, 0, color, 0);\n            }\n\n            return this.context.colorSpace.getRgb(color, 0);\n          }\n        };\n\n        function decodeType4Shading(mesh, reader) {\n          var coords = mesh.coords;\n          var colors = mesh.colors;\n          var operators = [];\n          var ps = [];\n          var verticesLeft = 0;\n\n          while (reader.hasData) {\n            var f = reader.readFlag();\n            var coord = reader.readCoordinate();\n            var color = reader.readComponents();\n\n            if (verticesLeft === 0) {\n              if (!(0 <= f && f <= 2)) {\n                throw new _util.FormatError(\"Unknown type4 flag\");\n              }\n\n              switch (f) {\n                case 0:\n                  verticesLeft = 3;\n                  break;\n\n                case 1:\n                  ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n                  verticesLeft = 1;\n                  break;\n\n                case 2:\n                  ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n                  verticesLeft = 1;\n                  break;\n              }\n\n              operators.push(f);\n            }\n\n            ps.push(coords.length);\n            coords.push(coord);\n            colors.push(color);\n            verticesLeft--;\n            reader.align();\n          }\n\n          mesh.figures.push({\n            type: \"triangles\",\n            coords: new Int32Array(ps),\n            colors: new Int32Array(ps)\n          });\n        }\n\n        function decodeType5Shading(mesh, reader, verticesPerRow) {\n          var coords = mesh.coords;\n          var colors = mesh.colors;\n          var ps = [];\n\n          while (reader.hasData) {\n            var coord = reader.readCoordinate();\n            var color = reader.readComponents();\n            ps.push(coords.length);\n            coords.push(coord);\n            colors.push(color);\n          }\n\n          mesh.figures.push({\n            type: \"lattice\",\n            coords: new Int32Array(ps),\n            colors: new Int32Array(ps),\n            verticesPerRow: verticesPerRow\n          });\n        }\n\n        var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n        var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n        var TRIANGLE_DENSITY = 20;\n\n        var getB = function getBClosure() {\n          function buildB(count) {\n            var lut = [];\n\n            for (var i = 0; i <= count; i++) {\n              var t = i / count,\n                  t_ = 1 - t;\n              lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n            }\n\n            return lut;\n          }\n\n          var cache = [];\n          return function getB(count) {\n            if (!cache[count]) {\n              cache[count] = buildB(count);\n            }\n\n            return cache[count];\n          };\n        }();\n\n        function buildFigureFromPatch(mesh, index) {\n          var figure = mesh.figures[index];\n          (0, _util.assert)(figure.type === \"patch\", \"Unexpected patch mesh figure\");\n          var coords = mesh.coords,\n              colors = mesh.colors;\n          var pi = figure.coords;\n          var ci = figure.colors;\n          var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n          var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n          var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n          var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n          var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n          splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n          var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n          splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n          var verticesPerRow = splitXBy + 1;\n          var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n          var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n          var k = 0;\n          var cl = new Uint8Array(3),\n              cr = new Uint8Array(3);\n          var c0 = colors[ci[0]],\n              c1 = colors[ci[1]],\n              c2 = colors[ci[2]],\n              c3 = colors[ci[3]];\n          var bRow = getB(splitYBy),\n              bCol = getB(splitXBy);\n\n          for (var row = 0; row <= splitYBy; row++) {\n            cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n            cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n            cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n            cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n            cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n            cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\n            for (var col = 0; col <= splitXBy; col++, k++) {\n              if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n                continue;\n              }\n\n              var x = 0,\n                  y = 0;\n              var q = 0;\n\n              for (var i = 0; i <= 3; i++) {\n                for (var j = 0; j <= 3; j++, q++) {\n                  var m = bRow[row][i] * bCol[col][j];\n                  x += coords[pi[q]][0] * m;\n                  y += coords[pi[q]][1] * m;\n                }\n              }\n\n              figureCoords[k] = coords.length;\n              coords.push([x, y]);\n              figureColors[k] = colors.length;\n              var newColor = new Uint8Array(3);\n              newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n              newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n              newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n              colors.push(newColor);\n            }\n          }\n\n          figureCoords[0] = pi[0];\n          figureColors[0] = ci[0];\n          figureCoords[splitXBy] = pi[3];\n          figureColors[splitXBy] = ci[1];\n          figureCoords[verticesPerRow * splitYBy] = pi[12];\n          figureColors[verticesPerRow * splitYBy] = ci[2];\n          figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n          figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n          mesh.figures[index] = {\n            type: \"lattice\",\n            coords: figureCoords,\n            colors: figureColors,\n            verticesPerRow: verticesPerRow\n          };\n        }\n\n        function decodeType6Shading(mesh, reader) {\n          var coords = mesh.coords;\n          var colors = mesh.colors;\n          var ps = new Int32Array(16);\n          var cs = new Int32Array(4);\n\n          while (reader.hasData) {\n            var f = reader.readFlag();\n\n            if (!(0 <= f && f <= 3)) {\n              throw new _util.FormatError(\"Unknown type6 flag\");\n            }\n\n            var i, ii;\n            var pi = coords.length;\n\n            for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n              coords.push(reader.readCoordinate());\n            }\n\n            var ci = colors.length;\n\n            for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n              colors.push(reader.readComponents());\n            }\n\n            var tmp1, tmp2, tmp3, tmp4;\n\n            switch (f) {\n              case 0:\n                ps[12] = pi + 3;\n                ps[13] = pi + 4;\n                ps[14] = pi + 5;\n                ps[15] = pi + 6;\n                ps[8] = pi + 2;\n                ps[11] = pi + 7;\n                ps[4] = pi + 1;\n                ps[7] = pi + 8;\n                ps[0] = pi;\n                ps[1] = pi + 11;\n                ps[2] = pi + 10;\n                ps[3] = pi + 9;\n                cs[2] = ci + 1;\n                cs[3] = ci + 2;\n                cs[0] = ci;\n                cs[1] = ci + 3;\n                break;\n\n              case 1:\n                tmp1 = ps[12];\n                tmp2 = ps[13];\n                tmp3 = ps[14];\n                tmp4 = ps[15];\n                ps[12] = tmp4;\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = tmp3;\n                ps[11] = pi + 3;\n                ps[4] = tmp2;\n                ps[7] = pi + 4;\n                ps[0] = tmp1;\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                tmp1 = cs[2];\n                tmp2 = cs[3];\n                cs[2] = tmp2;\n                cs[3] = ci;\n                cs[0] = tmp1;\n                cs[1] = ci + 1;\n                break;\n\n              case 2:\n                tmp1 = ps[15];\n                tmp2 = ps[11];\n                ps[12] = ps[3];\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = ps[7];\n                ps[11] = pi + 3;\n                ps[4] = tmp2;\n                ps[7] = pi + 4;\n                ps[0] = tmp1;\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                tmp1 = cs[3];\n                cs[2] = cs[1];\n                cs[3] = ci;\n                cs[0] = tmp1;\n                cs[1] = ci + 1;\n                break;\n\n              case 3:\n                ps[12] = ps[0];\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = ps[1];\n                ps[11] = pi + 3;\n                ps[4] = ps[2];\n                ps[7] = pi + 4;\n                ps[0] = ps[3];\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                cs[2] = cs[0];\n                cs[3] = ci;\n                cs[0] = cs[1];\n                cs[1] = ci + 1;\n                break;\n            }\n\n            ps[5] = coords.length;\n            coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n            ps[6] = coords.length;\n            coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n            ps[9] = coords.length;\n            coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n            ps[10] = coords.length;\n            coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n            mesh.figures.push({\n              type: \"patch\",\n              coords: new Int32Array(ps),\n              colors: new Int32Array(cs)\n            });\n          }\n        }\n\n        function decodeType7Shading(mesh, reader) {\n          var coords = mesh.coords;\n          var colors = mesh.colors;\n          var ps = new Int32Array(16);\n          var cs = new Int32Array(4);\n\n          while (reader.hasData) {\n            var f = reader.readFlag();\n\n            if (!(0 <= f && f <= 3)) {\n              throw new _util.FormatError(\"Unknown type7 flag\");\n            }\n\n            var i, ii;\n            var pi = coords.length;\n\n            for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n              coords.push(reader.readCoordinate());\n            }\n\n            var ci = colors.length;\n\n            for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n              colors.push(reader.readComponents());\n            }\n\n            var tmp1, tmp2, tmp3, tmp4;\n\n            switch (f) {\n              case 0:\n                ps[12] = pi + 3;\n                ps[13] = pi + 4;\n                ps[14] = pi + 5;\n                ps[15] = pi + 6;\n                ps[8] = pi + 2;\n                ps[9] = pi + 13;\n                ps[10] = pi + 14;\n                ps[11] = pi + 7;\n                ps[4] = pi + 1;\n                ps[5] = pi + 12;\n                ps[6] = pi + 15;\n                ps[7] = pi + 8;\n                ps[0] = pi;\n                ps[1] = pi + 11;\n                ps[2] = pi + 10;\n                ps[3] = pi + 9;\n                cs[2] = ci + 1;\n                cs[3] = ci + 2;\n                cs[0] = ci;\n                cs[1] = ci + 3;\n                break;\n\n              case 1:\n                tmp1 = ps[12];\n                tmp2 = ps[13];\n                tmp3 = ps[14];\n                tmp4 = ps[15];\n                ps[12] = tmp4;\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = tmp3;\n                ps[9] = pi + 9;\n                ps[10] = pi + 10;\n                ps[11] = pi + 3;\n                ps[4] = tmp2;\n                ps[5] = pi + 8;\n                ps[6] = pi + 11;\n                ps[7] = pi + 4;\n                ps[0] = tmp1;\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                tmp1 = cs[2];\n                tmp2 = cs[3];\n                cs[2] = tmp2;\n                cs[3] = ci;\n                cs[0] = tmp1;\n                cs[1] = ci + 1;\n                break;\n\n              case 2:\n                tmp1 = ps[15];\n                tmp2 = ps[11];\n                ps[12] = ps[3];\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = ps[7];\n                ps[9] = pi + 9;\n                ps[10] = pi + 10;\n                ps[11] = pi + 3;\n                ps[4] = tmp2;\n                ps[5] = pi + 8;\n                ps[6] = pi + 11;\n                ps[7] = pi + 4;\n                ps[0] = tmp1;\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                tmp1 = cs[3];\n                cs[2] = cs[1];\n                cs[3] = ci;\n                cs[0] = tmp1;\n                cs[1] = ci + 1;\n                break;\n\n              case 3:\n                ps[12] = ps[0];\n                ps[13] = pi + 0;\n                ps[14] = pi + 1;\n                ps[15] = pi + 2;\n                ps[8] = ps[1];\n                ps[9] = pi + 9;\n                ps[10] = pi + 10;\n                ps[11] = pi + 3;\n                ps[4] = ps[2];\n                ps[5] = pi + 8;\n                ps[6] = pi + 11;\n                ps[7] = pi + 4;\n                ps[0] = ps[3];\n                ps[1] = pi + 7;\n                ps[2] = pi + 6;\n                ps[3] = pi + 5;\n                cs[2] = cs[0];\n                cs[3] = ci;\n                cs[0] = cs[1];\n                cs[1] = ci + 1;\n                break;\n            }\n\n            mesh.figures.push({\n              type: \"patch\",\n              coords: new Int32Array(ps),\n              colors: new Int32Array(cs)\n            });\n          }\n        }\n\n        function updateBounds(mesh) {\n          var minX = mesh.coords[0][0],\n              minY = mesh.coords[0][1],\n              maxX = minX,\n              maxY = minY;\n\n          for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n            var x = mesh.coords[i][0],\n                y = mesh.coords[i][1];\n            minX = minX > x ? x : minX;\n            minY = minY > y ? y : minY;\n            maxX = maxX < x ? x : maxX;\n            maxY = maxY < y ? y : maxY;\n          }\n\n          mesh.bounds = [minX, minY, maxX, maxY];\n        }\n\n        function packData(mesh) {\n          var i, ii, j, jj;\n          var coords = mesh.coords;\n          var coordsPacked = new Float32Array(coords.length * 2);\n\n          for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n            var xy = coords[i];\n            coordsPacked[j++] = xy[0];\n            coordsPacked[j++] = xy[1];\n          }\n\n          mesh.coords = coordsPacked;\n          var colors = mesh.colors;\n          var colorsPacked = new Uint8Array(colors.length * 3);\n\n          for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n            var c = colors[i];\n            colorsPacked[j++] = c[0];\n            colorsPacked[j++] = c[1];\n            colorsPacked[j++] = c[2];\n          }\n\n          mesh.colors = colorsPacked;\n          var figures = mesh.figures;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n                ps = figure.coords,\n                cs = figure.colors;\n\n            for (j = 0, jj = ps.length; j < jj; j++) {\n              ps[j] *= 2;\n              cs[j] *= 3;\n            }\n          }\n        }\n\n        function Mesh(stream, matrix, xref, resources, pdfFunctionFactory, localColorSpaceCache) {\n          if (!(0, _primitives.isStream)(stream)) {\n            throw new _util.FormatError(\"Mesh data is not a stream\");\n          }\n\n          var dict = stream.dict;\n          this.matrix = matrix;\n          this.shadingType = dict.get(\"ShadingType\");\n          this.type = \"Pattern\";\n          var bbox = dict.getArray(\"BBox\");\n\n          if (Array.isArray(bbox) && bbox.length === 4) {\n            this.bbox = _util.Util.normalizeRect(bbox);\n          } else {\n            this.bbox = null;\n          }\n\n          var cs = _colorspace.ColorSpace.parse({\n            cs: dict.getRaw(\"ColorSpace\") || dict.getRaw(\"CS\"),\n            xref: xref,\n            resources: resources,\n            pdfFunctionFactory: pdfFunctionFactory,\n            localColorSpaceCache: localColorSpaceCache\n          });\n\n          this.cs = cs;\n          this.background = dict.has(\"Background\") ? cs.getRgb(dict.get(\"Background\"), 0) : null;\n          var fnObj = dict.getRaw(\"Function\");\n          var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n          this.coords = [];\n          this.colors = [];\n          this.figures = [];\n          var decodeContext = {\n            bitsPerCoordinate: dict.get(\"BitsPerCoordinate\"),\n            bitsPerComponent: dict.get(\"BitsPerComponent\"),\n            bitsPerFlag: dict.get(\"BitsPerFlag\"),\n            decode: dict.getArray(\"Decode\"),\n            colorFn: fn,\n            colorSpace: cs,\n            numComps: fn ? 1 : cs.numComps\n          };\n          var reader = new MeshStreamReader(stream, decodeContext);\n          var patchMesh = false;\n\n          switch (this.shadingType) {\n            case ShadingType.FREE_FORM_MESH:\n              decodeType4Shading(this, reader);\n              break;\n\n            case ShadingType.LATTICE_FORM_MESH:\n              var verticesPerRow = dict.get(\"VerticesPerRow\") | 0;\n\n              if (verticesPerRow < 2) {\n                throw new _util.FormatError(\"Invalid VerticesPerRow\");\n              }\n\n              decodeType5Shading(this, reader, verticesPerRow);\n              break;\n\n            case ShadingType.COONS_PATCH_MESH:\n              decodeType6Shading(this, reader);\n              patchMesh = true;\n              break;\n\n            case ShadingType.TENSOR_PATCH_MESH:\n              decodeType7Shading(this, reader);\n              patchMesh = true;\n              break;\n\n            default:\n              (0, _util.unreachable)(\"Unsupported mesh type.\");\n              break;\n          }\n\n          if (patchMesh) {\n            updateBounds(this);\n\n            for (var i = 0, ii = this.figures.length; i < ii; i++) {\n              buildFigureFromPatch(this, i);\n            }\n          }\n\n          updateBounds(this);\n          packData(this);\n        }\n\n        Mesh.prototype = {\n          getIR: function Mesh_getIR() {\n            return [\"Mesh\", this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n          }\n        };\n        return Mesh;\n      }();\n\n      Shadings.Dummy = function DummyClosure() {\n        function Dummy() {\n          this.type = \"Pattern\";\n        }\n\n        Dummy.prototype = {\n          getIR: function Dummy_getIR() {\n            return [\"Dummy\"];\n          }\n        };\n        return Dummy;\n      }();\n\n      function getTilingPatternIR(operatorList, dict, args) {\n        var matrix = dict.getArray(\"Matrix\");\n\n        var bbox = _util.Util.normalizeRect(dict.getArray(\"BBox\"));\n\n        var xstep = dict.get(\"XStep\");\n        var ystep = dict.get(\"YStep\");\n        var paintType = dict.get(\"PaintType\");\n        var tilingType = dict.get(\"TilingType\");\n\n        if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n          throw new _util.FormatError(\"Invalid getTilingPatternIR /BBox array: [\".concat(bbox, \"].\"));\n        }\n\n        return [\"TilingPattern\", args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n      }\n      /***/\n\n    },\n    /* 40 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isPDFFunction = isPDFFunction;\n      exports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = void 0;\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _ps_parser = __w_pdfjs_require__(41);\n\n      var _image_utils = __w_pdfjs_require__(24);\n\n      var PDFFunctionFactory = /*#__PURE__*/function () {\n        function PDFFunctionFactory(_ref40) {\n          var xref = _ref40.xref,\n              _ref40$isEvalSupporte = _ref40.isEvalSupported,\n              isEvalSupported = _ref40$isEvalSupporte === void 0 ? true : _ref40$isEvalSupporte;\n\n          _classCallCheck(this, PDFFunctionFactory);\n\n          this.xref = xref;\n          this.isEvalSupported = isEvalSupported !== false;\n          this._localFunctionCache = null;\n        }\n\n        _createClass(PDFFunctionFactory, [{\n          key: \"create\",\n          value: function create(fn) {\n            var cachedFunction = this.getCached(fn);\n\n            if (cachedFunction) {\n              return cachedFunction;\n            }\n\n            var parsedFunction = PDFFunction.parse({\n              xref: this.xref,\n              isEvalSupported: this.isEvalSupported,\n              fn: fn instanceof _primitives.Ref ? this.xref.fetch(fn) : fn\n            });\n\n            this._cache(fn, parsedFunction);\n\n            return parsedFunction;\n          }\n        }, {\n          key: \"createFromArray\",\n          value: function createFromArray(fnObj) {\n            var cachedFunction = this.getCached(fnObj);\n\n            if (cachedFunction) {\n              return cachedFunction;\n            }\n\n            var parsedFunction = PDFFunction.parseArray({\n              xref: this.xref,\n              isEvalSupported: this.isEvalSupported,\n              fnObj: fnObj instanceof _primitives.Ref ? this.xref.fetch(fnObj) : fnObj\n            });\n\n            this._cache(fnObj, parsedFunction);\n\n            return parsedFunction;\n          }\n        }, {\n          key: \"getCached\",\n          value: function getCached(cacheKey) {\n            var fnRef;\n\n            if (cacheKey instanceof _primitives.Ref) {\n              fnRef = cacheKey;\n            } else if (cacheKey instanceof _primitives.Dict) {\n              fnRef = cacheKey.objId;\n            } else if ((0, _primitives.isStream)(cacheKey)) {\n              fnRef = cacheKey.dict && cacheKey.dict.objId;\n            }\n\n            if (fnRef) {\n              if (!this._localFunctionCache) {\n                this._localFunctionCache = new _image_utils.LocalFunctionCache();\n              }\n\n              var localFunction = this._localFunctionCache.getByRef(fnRef);\n\n              if (localFunction) {\n                return localFunction;\n              }\n            }\n\n            return null;\n          }\n        }, {\n          key: \"_cache\",\n          value: function _cache(cacheKey, parsedFunction) {\n            if (!parsedFunction) {\n              throw new Error('PDFFunctionFactory._cache - expected \"parsedFunction\" argument.');\n            }\n\n            var fnRef;\n\n            if (cacheKey instanceof _primitives.Ref) {\n              fnRef = cacheKey;\n            } else if (cacheKey instanceof _primitives.Dict) {\n              fnRef = cacheKey.objId;\n            } else if ((0, _primitives.isStream)(cacheKey)) {\n              fnRef = cacheKey.dict && cacheKey.dict.objId;\n            }\n\n            if (fnRef) {\n              if (!this._localFunctionCache) {\n                this._localFunctionCache = new _image_utils.LocalFunctionCache();\n              }\n\n              this._localFunctionCache.set(null, fnRef, parsedFunction);\n            }\n          }\n        }]);\n\n        return PDFFunctionFactory;\n      }();\n\n      exports.PDFFunctionFactory = PDFFunctionFactory;\n\n      function toNumberArray(arr) {\n        if (!Array.isArray(arr)) {\n          return null;\n        }\n\n        var length = arr.length;\n\n        for (var _i41 = 0; _i41 < length; _i41++) {\n          if (typeof arr[_i41] !== \"number\") {\n            var result = new Array(length);\n\n            for (var j = 0; j < length; j++) {\n              result[j] = +arr[j];\n            }\n\n            return result;\n          }\n        }\n\n        return arr;\n      }\n\n      var PDFFunction = function PDFFunctionClosure() {\n        var CONSTRUCT_SAMPLED = 0;\n        var CONSTRUCT_INTERPOLATED = 2;\n        var CONSTRUCT_STICHED = 3;\n        var CONSTRUCT_POSTSCRIPT = 4;\n        return {\n          getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n            var i, ii;\n            var length = 1;\n\n            for (i = 0, ii = size.length; i < ii; i++) {\n              length *= size[i];\n            }\n\n            length *= outputSize;\n            var array = new Array(length);\n            var codeSize = 0;\n            var codeBuf = 0;\n            var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n            var strBytes = stream.getBytes((length * bps + 7) / 8);\n            var strIdx = 0;\n\n            for (i = 0; i < length; i++) {\n              while (codeSize < bps) {\n                codeBuf <<= 8;\n                codeBuf |= strBytes[strIdx++];\n                codeSize += 8;\n              }\n\n              codeSize -= bps;\n              array[i] = (codeBuf >> codeSize) * sampleMul;\n              codeBuf &= (1 << codeSize) - 1;\n            }\n\n            return array;\n          },\n          getIR: function getIR(_ref41) {\n            var xref = _ref41.xref,\n                isEvalSupported = _ref41.isEvalSupported,\n                fn = _ref41.fn;\n            var dict = fn.dict;\n\n            if (!dict) {\n              dict = fn;\n            }\n\n            var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n            var typeNum = dict.get(\"FunctionType\");\n            var typeFn = types[typeNum];\n\n            if (!typeFn) {\n              throw new _util.FormatError(\"Unknown type of function\");\n            }\n\n            return typeFn.call(this, {\n              xref: xref,\n              isEvalSupported: isEvalSupported,\n              fn: fn,\n              dict: dict\n            });\n          },\n          fromIR: function fromIR(_ref42) {\n            var xref = _ref42.xref,\n                isEvalSupported = _ref42.isEvalSupported,\n                IR = _ref42.IR;\n            var type = IR[0];\n\n            switch (type) {\n              case CONSTRUCT_SAMPLED:\n                return this.constructSampledFromIR({\n                  xref: xref,\n                  isEvalSupported: isEvalSupported,\n                  IR: IR\n                });\n\n              case CONSTRUCT_INTERPOLATED:\n                return this.constructInterpolatedFromIR({\n                  xref: xref,\n                  isEvalSupported: isEvalSupported,\n                  IR: IR\n                });\n\n              case CONSTRUCT_STICHED:\n                return this.constructStichedFromIR({\n                  xref: xref,\n                  isEvalSupported: isEvalSupported,\n                  IR: IR\n                });\n\n              default:\n                return this.constructPostScriptFromIR({\n                  xref: xref,\n                  isEvalSupported: isEvalSupported,\n                  IR: IR\n                });\n            }\n          },\n          parse: function parse(_ref43) {\n            var xref = _ref43.xref,\n                isEvalSupported = _ref43.isEvalSupported,\n                fn = _ref43.fn;\n            var IR = this.getIR({\n              xref: xref,\n              isEvalSupported: isEvalSupported,\n              fn: fn\n            });\n            return this.fromIR({\n              xref: xref,\n              isEvalSupported: isEvalSupported,\n              IR: IR\n            });\n          },\n          parseArray: function parseArray(_ref44) {\n            var xref = _ref44.xref,\n                isEvalSupported = _ref44.isEvalSupported,\n                fnObj = _ref44.fnObj;\n\n            if (!Array.isArray(fnObj)) {\n              return this.parse({\n                xref: xref,\n                isEvalSupported: isEvalSupported,\n                fn: fnObj\n              });\n            }\n\n            var fnArray = [];\n\n            for (var j = 0, jj = fnObj.length; j < jj; j++) {\n              fnArray.push(this.parse({\n                xref: xref,\n                isEvalSupported: isEvalSupported,\n                fn: xref.fetchIfRef(fnObj[j])\n              }));\n            }\n\n            return function (src, srcOffset, dest, destOffset) {\n              for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                fnArray[i](src, srcOffset, dest, destOffset + i);\n              }\n            };\n          },\n          constructSampled: function constructSampled(_ref45) {\n            var xref = _ref45.xref,\n                isEvalSupported = _ref45.isEvalSupported,\n                fn = _ref45.fn,\n                dict = _ref45.dict;\n\n            function toMultiArray(arr) {\n              var inputLength = arr.length;\n              var out = [];\n              var index = 0;\n\n              for (var i = 0; i < inputLength; i += 2) {\n                out[index] = [arr[i], arr[i + 1]];\n                ++index;\n              }\n\n              return out;\n            }\n\n            var domain = toNumberArray(dict.getArray(\"Domain\"));\n            var range = toNumberArray(dict.getArray(\"Range\"));\n\n            if (!domain || !range) {\n              throw new _util.FormatError(\"No domain or range\");\n            }\n\n            var inputSize = domain.length / 2;\n            var outputSize = range.length / 2;\n            domain = toMultiArray(domain);\n            range = toMultiArray(range);\n            var size = toNumberArray(dict.getArray(\"Size\"));\n            var bps = dict.get(\"BitsPerSample\");\n            var order = dict.get(\"Order\") || 1;\n\n            if (order !== 1) {\n              (0, _util.info)(\"No support for cubic spline interpolation: \" + order);\n            }\n\n            var encode = toNumberArray(dict.getArray(\"Encode\"));\n\n            if (!encode) {\n              encode = [];\n\n              for (var i = 0; i < inputSize; ++i) {\n                encode.push([0, size[i] - 1]);\n              }\n            } else {\n              encode = toMultiArray(encode);\n            }\n\n            var decode = toNumberArray(dict.getArray(\"Decode\"));\n\n            if (!decode) {\n              decode = range;\n            } else {\n              decode = toMultiArray(decode);\n            }\n\n            var samples = this.getSampleArray(size, outputSize, bps, fn);\n            return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n          },\n          constructSampledFromIR: function constructSampledFromIR(_ref46) {\n            var xref = _ref46.xref,\n                isEvalSupported = _ref46.isEvalSupported,\n                IR = _ref46.IR;\n\n            function interpolate(x, xmin, xmax, ymin, ymax) {\n              return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n            }\n\n            return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n              var m = IR[1];\n              var domain = IR[2];\n              var encode = IR[3];\n              var decode = IR[4];\n              var samples = IR[5];\n              var size = IR[6];\n              var n = IR[7];\n              var range = IR[9];\n              var cubeVertices = 1 << m;\n              var cubeN = new Float64Array(cubeVertices);\n              var cubeVertex = new Uint32Array(cubeVertices);\n              var i, j;\n\n              for (j = 0; j < cubeVertices; j++) {\n                cubeN[j] = 1;\n              }\n\n              var k = n,\n                  pos = 1;\n\n              for (i = 0; i < m; ++i) {\n                var domain_2i = domain[i][0];\n                var domain_2i_1 = domain[i][1];\n                var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n                var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n                var size_i = size[i];\n                e = Math.min(Math.max(e, 0), size_i - 1);\n                var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n                var n0 = e0 + 1 - e;\n                var n1 = e - e0;\n                var offset0 = e0 * k;\n                var offset1 = offset0 + k;\n\n                for (j = 0; j < cubeVertices; j++) {\n                  if (j & pos) {\n                    cubeN[j] *= n1;\n                    cubeVertex[j] += offset1;\n                  } else {\n                    cubeN[j] *= n0;\n                    cubeVertex[j] += offset0;\n                  }\n                }\n\n                k *= size_i;\n                pos <<= 1;\n              }\n\n              for (j = 0; j < n; ++j) {\n                var rj = 0;\n\n                for (i = 0; i < cubeVertices; i++) {\n                  rj += samples[cubeVertex[i] + j] * cubeN[i];\n                }\n\n                rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n                dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n              }\n            };\n          },\n          constructInterpolated: function constructInterpolated(_ref47) {\n            var xref = _ref47.xref,\n                isEvalSupported = _ref47.isEvalSupported,\n                fn = _ref47.fn,\n                dict = _ref47.dict;\n            var c0 = toNumberArray(dict.getArray(\"C0\")) || [0];\n            var c1 = toNumberArray(dict.getArray(\"C1\")) || [1];\n            var n = dict.get(\"N\");\n            var length = c0.length;\n            var diff = [];\n\n            for (var i = 0; i < length; ++i) {\n              diff.push(c1[i] - c0[i]);\n            }\n\n            return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n          },\n          constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref48) {\n            var xref = _ref48.xref,\n                isEvalSupported = _ref48.isEvalSupported,\n                IR = _ref48.IR;\n            var c0 = IR[1];\n            var diff = IR[2];\n            var n = IR[3];\n            var length = diff.length;\n            return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n              var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\n              for (var j = 0; j < length; ++j) {\n                dest[destOffset + j] = c0[j] + x * diff[j];\n              }\n            };\n          },\n          constructStiched: function constructStiched(_ref49) {\n            var xref = _ref49.xref,\n                isEvalSupported = _ref49.isEvalSupported,\n                fn = _ref49.fn,\n                dict = _ref49.dict;\n            var domain = toNumberArray(dict.getArray(\"Domain\"));\n\n            if (!domain) {\n              throw new _util.FormatError(\"No domain\");\n            }\n\n            var inputSize = domain.length / 2;\n\n            if (inputSize !== 1) {\n              throw new _util.FormatError(\"Bad domain for stiched function\");\n            }\n\n            var fnRefs = dict.get(\"Functions\");\n            var fns = [];\n\n            for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n              fns.push(this.parse({\n                xref: xref,\n                isEvalSupported: isEvalSupported,\n                fn: xref.fetchIfRef(fnRefs[i])\n              }));\n            }\n\n            var bounds = toNumberArray(dict.getArray(\"Bounds\"));\n            var encode = toNumberArray(dict.getArray(\"Encode\"));\n            return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n          },\n          constructStichedFromIR: function constructStichedFromIR(_ref50) {\n            var xref = _ref50.xref,\n                isEvalSupported = _ref50.isEvalSupported,\n                IR = _ref50.IR;\n            var domain = IR[1];\n            var bounds = IR[2];\n            var encode = IR[3];\n            var fns = IR[4];\n            var tmpBuf = new Float32Array(1);\n            return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n              var clip = function constructStichedFromIRClip(v, min, max) {\n                if (v > max) {\n                  v = max;\n                } else if (v < min) {\n                  v = min;\n                }\n\n                return v;\n              };\n\n              var v = clip(src[srcOffset], domain[0], domain[1]);\n\n              for (var i = 0, ii = bounds.length; i < ii; ++i) {\n                if (v < bounds[i]) {\n                  break;\n                }\n              }\n\n              var dmin = domain[0];\n\n              if (i > 0) {\n                dmin = bounds[i - 1];\n              }\n\n              var dmax = domain[1];\n\n              if (i < bounds.length) {\n                dmax = bounds[i];\n              }\n\n              var rmin = encode[2 * i];\n              var rmax = encode[2 * i + 1];\n              tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n              fns[i](tmpBuf, 0, dest, destOffset);\n            };\n          },\n          constructPostScript: function constructPostScript(_ref51) {\n            var xref = _ref51.xref,\n                isEvalSupported = _ref51.isEvalSupported,\n                fn = _ref51.fn,\n                dict = _ref51.dict;\n            var domain = toNumberArray(dict.getArray(\"Domain\"));\n            var range = toNumberArray(dict.getArray(\"Range\"));\n\n            if (!domain) {\n              throw new _util.FormatError(\"No domain.\");\n            }\n\n            if (!range) {\n              throw new _util.FormatError(\"No range.\");\n            }\n\n            var lexer = new _ps_parser.PostScriptLexer(fn);\n            var parser = new _ps_parser.PostScriptParser(lexer);\n            var code = parser.parse();\n            return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n          },\n          constructPostScriptFromIR: function constructPostScriptFromIR(_ref52) {\n            var xref = _ref52.xref,\n                isEvalSupported = _ref52.isEvalSupported,\n                IR = _ref52.IR;\n            var domain = IR[1];\n            var range = IR[2];\n            var code = IR[3];\n\n            if (isEvalSupported && _util.IsEvalSupportedCached.value) {\n              var compiled = new PostScriptCompiler().compile(code, domain, range);\n\n              if (compiled) {\n                return new Function(\"src\", \"srcOffset\", \"dest\", \"destOffset\", compiled);\n              }\n            }\n\n            (0, _util.info)(\"Unable to compile PS function\");\n            var numOutputs = range.length >> 1;\n            var numInputs = domain.length >> 1;\n            var evaluator = new PostScriptEvaluator(code);\n            var cache = Object.create(null);\n            var MAX_CACHE_SIZE = 2048 * 4;\n            var cache_available = MAX_CACHE_SIZE;\n            var tmpBuf = new Float32Array(numInputs);\n            return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n              var i, value;\n              var key = \"\";\n              var input = tmpBuf;\n\n              for (i = 0; i < numInputs; i++) {\n                value = src[srcOffset + i];\n                input[i] = value;\n                key += value + \"_\";\n              }\n\n              var cachedValue = cache[key];\n\n              if (cachedValue !== undefined) {\n                dest.set(cachedValue, destOffset);\n                return;\n              }\n\n              var output = new Float32Array(numOutputs);\n              var stack = evaluator.execute(input);\n              var stackIndex = stack.length - numOutputs;\n\n              for (i = 0; i < numOutputs; i++) {\n                value = stack[stackIndex + i];\n                var bound = range[i * 2];\n\n                if (value < bound) {\n                  value = bound;\n                } else {\n                  bound = range[i * 2 + 1];\n\n                  if (value > bound) {\n                    value = bound;\n                  }\n                }\n\n                output[i] = value;\n              }\n\n              if (cache_available > 0) {\n                cache_available--;\n                cache[key] = output;\n              }\n\n              dest.set(output, destOffset);\n            };\n          }\n        };\n      }();\n\n      function isPDFFunction(v) {\n        var fnDict;\n\n        if (typeof v !== \"object\") {\n          return false;\n        } else if ((0, _primitives.isDict)(v)) {\n          fnDict = v;\n        } else if ((0, _primitives.isStream)(v)) {\n          fnDict = v.dict;\n        } else {\n          return false;\n        }\n\n        return fnDict.has(\"FunctionType\");\n      }\n\n      var PostScriptStack = function PostScriptStackClosure() {\n        var MAX_STACK_SIZE = 100;\n\n        function PostScriptStack(initialStack) {\n          this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n        }\n\n        PostScriptStack.prototype = {\n          push: function PostScriptStack_push(value) {\n            if (this.stack.length >= MAX_STACK_SIZE) {\n              throw new Error(\"PostScript function stack overflow.\");\n            }\n\n            this.stack.push(value);\n          },\n          pop: function PostScriptStack_pop() {\n            if (this.stack.length <= 0) {\n              throw new Error(\"PostScript function stack underflow.\");\n            }\n\n            return this.stack.pop();\n          },\n          copy: function PostScriptStack_copy(n) {\n            if (this.stack.length + n >= MAX_STACK_SIZE) {\n              throw new Error(\"PostScript function stack overflow.\");\n            }\n\n            var stack = this.stack;\n\n            for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n              stack.push(stack[i]);\n            }\n          },\n          index: function PostScriptStack_index(n) {\n            this.push(this.stack[this.stack.length - n - 1]);\n          },\n          roll: function PostScriptStack_roll(n, p) {\n            var stack = this.stack;\n            var l = stack.length - n;\n            var r = stack.length - 1,\n                c = l + (p - Math.floor(p / n) * n),\n                i,\n                j,\n                t;\n\n            for (i = l, j = r; i < j; i++, j--) {\n              t = stack[i];\n              stack[i] = stack[j];\n              stack[j] = t;\n            }\n\n            for (i = l, j = c - 1; i < j; i++, j--) {\n              t = stack[i];\n              stack[i] = stack[j];\n              stack[j] = t;\n            }\n\n            for (i = c, j = r; i < j; i++, j--) {\n              t = stack[i];\n              stack[i] = stack[j];\n              stack[j] = t;\n            }\n          }\n        };\n        return PostScriptStack;\n      }();\n\n      var PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n        function PostScriptEvaluator(operators) {\n          this.operators = operators;\n        }\n\n        PostScriptEvaluator.prototype = {\n          execute: function PostScriptEvaluator_execute(initialStack) {\n            var stack = new PostScriptStack(initialStack);\n            var counter = 0;\n            var operators = this.operators;\n            var length = operators.length;\n            var operator, a, b;\n\n            while (counter < length) {\n              operator = operators[counter++];\n\n              if (typeof operator === \"number\") {\n                stack.push(operator);\n                continue;\n              }\n\n              switch (operator) {\n                case \"jz\":\n                  b = stack.pop();\n                  a = stack.pop();\n\n                  if (!a) {\n                    counter = b;\n                  }\n\n                  break;\n\n                case \"j\":\n                  a = stack.pop();\n                  counter = a;\n                  break;\n\n                case \"abs\":\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case \"add\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case \"and\":\n                  b = stack.pop();\n                  a = stack.pop();\n\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n                    stack.push(a && b);\n                  } else {\n                    stack.push(a & b);\n                  }\n\n                  break;\n\n                case \"atan\":\n                  a = stack.pop();\n                  stack.push(Math.atan(a));\n                  break;\n\n                case \"bitshift\":\n                  b = stack.pop();\n                  a = stack.pop();\n\n                  if (a > 0) {\n                    stack.push(a << b);\n                  } else {\n                    stack.push(a >> b);\n                  }\n\n                  break;\n\n                case \"ceiling\":\n                  a = stack.pop();\n                  stack.push(Math.ceil(a));\n                  break;\n\n                case \"copy\":\n                  a = stack.pop();\n                  stack.copy(a);\n                  break;\n\n                case \"cos\":\n                  a = stack.pop();\n                  stack.push(Math.cos(a));\n                  break;\n\n                case \"cvi\":\n                  a = stack.pop() | 0;\n                  stack.push(a);\n                  break;\n\n                case \"cvr\":\n                  break;\n\n                case \"div\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case \"dup\":\n                  stack.copy(1);\n                  break;\n\n                case \"eq\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a === b);\n                  break;\n\n                case \"exch\":\n                  stack.roll(2, 1);\n                  break;\n\n                case \"exp\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(Math.pow(a, b));\n                  break;\n\n                case \"false\":\n                  stack.push(false);\n                  break;\n\n                case \"floor\":\n                  a = stack.pop();\n                  stack.push(Math.floor(a));\n                  break;\n\n                case \"ge\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a >= b);\n                  break;\n\n                case \"gt\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a > b);\n                  break;\n\n                case \"idiv\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a / b | 0);\n                  break;\n\n                case \"index\":\n                  a = stack.pop();\n                  stack.index(a);\n                  break;\n\n                case \"le\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a <= b);\n                  break;\n\n                case \"ln\":\n                  a = stack.pop();\n                  stack.push(Math.log(a));\n                  break;\n\n                case \"log\":\n                  a = stack.pop();\n                  stack.push(Math.log(a) / Math.LN10);\n                  break;\n\n                case \"lt\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a < b);\n                  break;\n\n                case \"mod\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a % b);\n                  break;\n\n                case \"mul\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case \"ne\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a !== b);\n                  break;\n\n                case \"neg\":\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case \"not\":\n                  a = stack.pop();\n\n                  if ((0, _util.isBool)(a)) {\n                    stack.push(!a);\n                  } else {\n                    stack.push(~a);\n                  }\n\n                  break;\n\n                case \"or\":\n                  b = stack.pop();\n                  a = stack.pop();\n\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n                    stack.push(a || b);\n                  } else {\n                    stack.push(a | b);\n                  }\n\n                  break;\n\n                case \"pop\":\n                  stack.pop();\n                  break;\n\n                case \"roll\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.roll(a, b);\n                  break;\n\n                case \"round\":\n                  a = stack.pop();\n                  stack.push(Math.round(a));\n                  break;\n\n                case \"sin\":\n                  a = stack.pop();\n                  stack.push(Math.sin(a));\n                  break;\n\n                case \"sqrt\":\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case \"sub\":\n                  b = stack.pop();\n                  a = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case \"true\":\n                  stack.push(true);\n                  break;\n\n                case \"truncate\":\n                  a = stack.pop();\n                  a = a < 0 ? Math.ceil(a) : Math.floor(a);\n                  stack.push(a);\n                  break;\n\n                case \"xor\":\n                  b = stack.pop();\n                  a = stack.pop();\n\n                  if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n                    stack.push(a !== b);\n                  } else {\n                    stack.push(a ^ b);\n                  }\n\n                  break;\n\n                default:\n                  throw new _util.FormatError(\"Unknown operator \".concat(operator));\n              }\n            }\n\n            return stack.stack;\n          }\n        };\n        return PostScriptEvaluator;\n      }();\n\n      exports.PostScriptEvaluator = PostScriptEvaluator;\n\n      var PostScriptCompiler = function PostScriptCompilerClosure() {\n        function AstNode(type) {\n          this.type = type;\n        }\n\n        AstNode.prototype.visit = function (visitor) {\n          (0, _util.unreachable)(\"abstract method\");\n        };\n\n        function AstArgument(index, min, max) {\n          AstNode.call(this, \"args\");\n          this.index = index;\n          this.min = min;\n          this.max = max;\n        }\n\n        AstArgument.prototype = Object.create(AstNode.prototype);\n\n        AstArgument.prototype.visit = function (visitor) {\n          visitor.visitArgument(this);\n        };\n\n        function AstLiteral(number) {\n          AstNode.call(this, \"literal\");\n          this.number = number;\n          this.min = number;\n          this.max = number;\n        }\n\n        AstLiteral.prototype = Object.create(AstNode.prototype);\n\n        AstLiteral.prototype.visit = function (visitor) {\n          visitor.visitLiteral(this);\n        };\n\n        function AstBinaryOperation(op, arg1, arg2, min, max) {\n          AstNode.call(this, \"binary\");\n          this.op = op;\n          this.arg1 = arg1;\n          this.arg2 = arg2;\n          this.min = min;\n          this.max = max;\n        }\n\n        AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\n        AstBinaryOperation.prototype.visit = function (visitor) {\n          visitor.visitBinaryOperation(this);\n        };\n\n        function AstMin(arg, max) {\n          AstNode.call(this, \"max\");\n          this.arg = arg;\n          this.min = arg.min;\n          this.max = max;\n        }\n\n        AstMin.prototype = Object.create(AstNode.prototype);\n\n        AstMin.prototype.visit = function (visitor) {\n          visitor.visitMin(this);\n        };\n\n        function AstVariable(index, min, max) {\n          AstNode.call(this, \"var\");\n          this.index = index;\n          this.min = min;\n          this.max = max;\n        }\n\n        AstVariable.prototype = Object.create(AstNode.prototype);\n\n        AstVariable.prototype.visit = function (visitor) {\n          visitor.visitVariable(this);\n        };\n\n        function AstVariableDefinition(variable, arg) {\n          AstNode.call(this, \"definition\");\n          this.variable = variable;\n          this.arg = arg;\n        }\n\n        AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\n        AstVariableDefinition.prototype.visit = function (visitor) {\n          visitor.visitVariableDefinition(this);\n        };\n\n        function ExpressionBuilderVisitor() {\n          this.parts = [];\n        }\n\n        ExpressionBuilderVisitor.prototype = {\n          visitArgument: function visitArgument(arg) {\n            this.parts.push(\"Math.max(\", arg.min, \", Math.min(\", arg.max, \", src[srcOffset + \", arg.index, \"]))\");\n          },\n          visitVariable: function visitVariable(variable) {\n            this.parts.push(\"v\", variable.index);\n          },\n          visitLiteral: function visitLiteral(literal) {\n            this.parts.push(literal.number);\n          },\n          visitBinaryOperation: function visitBinaryOperation(operation) {\n            this.parts.push(\"(\");\n            operation.arg1.visit(this);\n            this.parts.push(\" \", operation.op, \" \");\n            operation.arg2.visit(this);\n            this.parts.push(\")\");\n          },\n          visitVariableDefinition: function visitVariableDefinition(definition) {\n            this.parts.push(\"var \");\n            definition.variable.visit(this);\n            this.parts.push(\" = \");\n            definition.arg.visit(this);\n            this.parts.push(\";\");\n          },\n          visitMin: function visitMin(max) {\n            this.parts.push(\"Math.min(\");\n            max.arg.visit(this);\n            this.parts.push(\", \", max.max, \")\");\n          },\n          toString: function toString() {\n            return this.parts.join(\"\");\n          }\n        };\n\n        function buildAddOperation(num1, num2) {\n          if (num2.type === \"literal\" && num2.number === 0) {\n            return num1;\n          }\n\n          if (num1.type === \"literal\" && num1.number === 0) {\n            return num2;\n          }\n\n          if (num2.type === \"literal\" && num1.type === \"literal\") {\n            return new AstLiteral(num1.number + num2.number);\n          }\n\n          return new AstBinaryOperation(\"+\", num1, num2, num1.min + num2.min, num1.max + num2.max);\n        }\n\n        function buildMulOperation(num1, num2) {\n          if (num2.type === \"literal\") {\n            if (num2.number === 0) {\n              return new AstLiteral(0);\n            } else if (num2.number === 1) {\n              return num1;\n            } else if (num1.type === \"literal\") {\n              return new AstLiteral(num1.number * num2.number);\n            }\n          }\n\n          if (num1.type === \"literal\") {\n            if (num1.number === 0) {\n              return new AstLiteral(0);\n            } else if (num1.number === 1) {\n              return num2;\n            }\n          }\n\n          var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n          var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n          return new AstBinaryOperation(\"*\", num1, num2, min, max);\n        }\n\n        function buildSubOperation(num1, num2) {\n          if (num2.type === \"literal\") {\n            if (num2.number === 0) {\n              return num1;\n            } else if (num1.type === \"literal\") {\n              return new AstLiteral(num1.number - num2.number);\n            }\n          }\n\n          if (num2.type === \"binary\" && num2.op === \"-\" && num1.type === \"literal\" && num1.number === 1 && num2.arg1.type === \"literal\" && num2.arg1.number === 1) {\n            return num2.arg2;\n          }\n\n          return new AstBinaryOperation(\"-\", num1, num2, num1.min - num2.max, num1.max - num2.min);\n        }\n\n        function buildMinOperation(num1, max) {\n          if (num1.min >= max) {\n            return new AstLiteral(max);\n          } else if (num1.max <= max) {\n            return num1;\n          }\n\n          return new AstMin(num1, max);\n        }\n\n        function PostScriptCompiler() {}\n\n        PostScriptCompiler.prototype = {\n          compile: function PostScriptCompiler_compile(code, domain, range) {\n            var stack = [];\n            var instructions = [];\n            var inputSize = domain.length >> 1,\n                outputSize = range.length >> 1;\n            var lastRegister = 0;\n            var n, j;\n            var num1, num2, ast1, ast2, tmpVar, item;\n\n            for (var _i42 = 0; _i42 < inputSize; _i42++) {\n              stack.push(new AstArgument(_i42, domain[_i42 * 2], domain[_i42 * 2 + 1]));\n            }\n\n            for (var _i43 = 0, ii = code.length; _i43 < ii; _i43++) {\n              item = code[_i43];\n\n              if (typeof item === \"number\") {\n                stack.push(new AstLiteral(item));\n                continue;\n              }\n\n              switch (item) {\n                case \"add\":\n                  if (stack.length < 2) {\n                    return null;\n                  }\n\n                  num2 = stack.pop();\n                  num1 = stack.pop();\n                  stack.push(buildAddOperation(num1, num2));\n                  break;\n\n                case \"cvr\":\n                  if (stack.length < 1) {\n                    return null;\n                  }\n\n                  break;\n\n                case \"mul\":\n                  if (stack.length < 2) {\n                    return null;\n                  }\n\n                  num2 = stack.pop();\n                  num1 = stack.pop();\n                  stack.push(buildMulOperation(num1, num2));\n                  break;\n\n                case \"sub\":\n                  if (stack.length < 2) {\n                    return null;\n                  }\n\n                  num2 = stack.pop();\n                  num1 = stack.pop();\n                  stack.push(buildSubOperation(num1, num2));\n                  break;\n\n                case \"exch\":\n                  if (stack.length < 2) {\n                    return null;\n                  }\n\n                  ast1 = stack.pop();\n                  ast2 = stack.pop();\n                  stack.push(ast1, ast2);\n                  break;\n\n                case \"pop\":\n                  if (stack.length < 1) {\n                    return null;\n                  }\n\n                  stack.pop();\n                  break;\n\n                case \"index\":\n                  if (stack.length < 1) {\n                    return null;\n                  }\n\n                  num1 = stack.pop();\n\n                  if (num1.type !== \"literal\") {\n                    return null;\n                  }\n\n                  n = num1.number;\n\n                  if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n                    return null;\n                  }\n\n                  ast1 = stack[stack.length - n - 1];\n\n                  if (ast1.type === \"literal\" || ast1.type === \"var\") {\n                    stack.push(ast1);\n                    break;\n                  }\n\n                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n                  stack[stack.length - n - 1] = tmpVar;\n                  stack.push(tmpVar);\n                  instructions.push(new AstVariableDefinition(tmpVar, ast1));\n                  break;\n\n                case \"dup\":\n                  if (stack.length < 1) {\n                    return null;\n                  }\n\n                  if (typeof code[_i43 + 1] === \"number\" && code[_i43 + 2] === \"gt\" && code[_i43 + 3] === _i43 + 7 && code[_i43 + 4] === \"jz\" && code[_i43 + 5] === \"pop\" && code[_i43 + 6] === code[_i43 + 1]) {\n                    num1 = stack.pop();\n                    stack.push(buildMinOperation(num1, code[_i43 + 1]));\n                    _i43 += 6;\n                    break;\n                  }\n\n                  ast1 = stack[stack.length - 1];\n\n                  if (ast1.type === \"literal\" || ast1.type === \"var\") {\n                    stack.push(ast1);\n                    break;\n                  }\n\n                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n                  stack[stack.length - 1] = tmpVar;\n                  stack.push(tmpVar);\n                  instructions.push(new AstVariableDefinition(tmpVar, ast1));\n                  break;\n\n                case \"roll\":\n                  if (stack.length < 2) {\n                    return null;\n                  }\n\n                  num2 = stack.pop();\n                  num1 = stack.pop();\n\n                  if (num2.type !== \"literal\" || num1.type !== \"literal\") {\n                    return null;\n                  }\n\n                  j = num2.number;\n                  n = num1.number;\n\n                  if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n                    return null;\n                  }\n\n                  j = (j % n + n) % n;\n\n                  if (j === 0) {\n                    break;\n                  }\n\n                  Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n                  break;\n\n                default:\n                  return null;\n              }\n            }\n\n            if (stack.length !== outputSize) {\n              return null;\n            }\n\n            var result = [];\n            instructions.forEach(function (instruction) {\n              var statementBuilder = new ExpressionBuilderVisitor();\n              instruction.visit(statementBuilder);\n              result.push(statementBuilder.toString());\n            });\n            stack.forEach(function (expr, i) {\n              var statementBuilder = new ExpressionBuilderVisitor();\n              expr.visit(statementBuilder);\n              var min = range[i * 2],\n                  max = range[i * 2 + 1];\n              var out = [statementBuilder.toString()];\n\n              if (min > expr.min) {\n                out.unshift(\"Math.max(\", min, \", \");\n                out.push(\")\");\n              }\n\n              if (max < expr.max) {\n                out.unshift(\"Math.min(\", max, \", \");\n                out.push(\")\");\n              }\n\n              out.unshift(\"dest[destOffset + \", i, \"] = \");\n              out.push(\";\");\n              result.push(out.join(\"\"));\n            });\n            return result.join(\"\\n\");\n          }\n        };\n        return PostScriptCompiler;\n      }();\n\n      exports.PostScriptCompiler = PostScriptCompiler;\n      /***/\n    },\n    /* 41 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PostScriptParser = exports.PostScriptLexer = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var PostScriptParser = /*#__PURE__*/function () {\n        function PostScriptParser(lexer) {\n          _classCallCheck(this, PostScriptParser);\n\n          this.lexer = lexer;\n          this.operators = [];\n          this.token = null;\n          this.prev = null;\n        }\n\n        _createClass(PostScriptParser, [{\n          key: \"nextToken\",\n          value: function nextToken() {\n            this.prev = this.token;\n            this.token = this.lexer.getToken();\n          }\n        }, {\n          key: \"accept\",\n          value: function accept(type) {\n            if (this.token.type === type) {\n              this.nextToken();\n              return true;\n            }\n\n            return false;\n          }\n        }, {\n          key: \"expect\",\n          value: function expect(type) {\n            if (this.accept(type)) {\n              return true;\n            }\n\n            throw new _util.FormatError(\"Unexpected symbol: found \".concat(this.token.type, \" expected \").concat(type, \".\"));\n          }\n        }, {\n          key: \"parse\",\n          value: function parse() {\n            this.nextToken();\n            this.expect(PostScriptTokenTypes.LBRACE);\n            this.parseBlock();\n            this.expect(PostScriptTokenTypes.RBRACE);\n            return this.operators;\n          }\n        }, {\n          key: \"parseBlock\",\n          value: function parseBlock() {\n            while (true) {\n              if (this.accept(PostScriptTokenTypes.NUMBER)) {\n                this.operators.push(this.prev.value);\n              } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n                this.operators.push(this.prev.value);\n              } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n                this.parseCondition();\n              } else {\n                return;\n              }\n            }\n          }\n        }, {\n          key: \"parseCondition\",\n          value: function parseCondition() {\n            var conditionLocation = this.operators.length;\n            this.operators.push(null, null);\n            this.parseBlock();\n            this.expect(PostScriptTokenTypes.RBRACE);\n\n            if (this.accept(PostScriptTokenTypes.IF)) {\n              this.operators[conditionLocation] = this.operators.length;\n              this.operators[conditionLocation + 1] = \"jz\";\n            } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n              var jumpLocation = this.operators.length;\n              this.operators.push(null, null);\n              var endOfTrue = this.operators.length;\n              this.parseBlock();\n              this.expect(PostScriptTokenTypes.RBRACE);\n              this.expect(PostScriptTokenTypes.IFELSE);\n              this.operators[jumpLocation] = this.operators.length;\n              this.operators[jumpLocation + 1] = \"j\";\n              this.operators[conditionLocation] = endOfTrue;\n              this.operators[conditionLocation + 1] = \"jz\";\n            } else {\n              throw new _util.FormatError(\"PS Function: error parsing conditional.\");\n            }\n          }\n        }]);\n\n        return PostScriptParser;\n      }();\n\n      exports.PostScriptParser = PostScriptParser;\n      var PostScriptTokenTypes = {\n        LBRACE: 0,\n        RBRACE: 1,\n        NUMBER: 2,\n        OPERATOR: 3,\n        IF: 4,\n        IFELSE: 5\n      };\n\n      var PostScriptToken = function PostScriptTokenClosure() {\n        var opCache = Object.create(null);\n\n        var PostScriptToken = /*#__PURE__*/function () {\n          function PostScriptToken(type, value) {\n            _classCallCheck(this, PostScriptToken);\n\n            this.type = type;\n            this.value = value;\n          }\n\n          _createClass(PostScriptToken, null, [{\n            key: \"getOperator\",\n            value: function getOperator(op) {\n              var opValue = opCache[op];\n\n              if (opValue) {\n                return opValue;\n              }\n\n              return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n            }\n          }, {\n            key: \"LBRACE\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"LBRACE\", new PostScriptToken(PostScriptTokenTypes.LBRACE, \"{\"));\n            }\n          }, {\n            key: \"RBRACE\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"RBRACE\", new PostScriptToken(PostScriptTokenTypes.RBRACE, \"}\"));\n            }\n          }, {\n            key: \"IF\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"IF\", new PostScriptToken(PostScriptTokenTypes.IF, \"IF\"));\n            }\n          }, {\n            key: \"IFELSE\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"IFELSE\", new PostScriptToken(PostScriptTokenTypes.IFELSE, \"IFELSE\"));\n            }\n          }]);\n\n          return PostScriptToken;\n        }();\n\n        return PostScriptToken;\n      }();\n\n      var PostScriptLexer = /*#__PURE__*/function () {\n        function PostScriptLexer(stream) {\n          _classCallCheck(this, PostScriptLexer);\n\n          this.stream = stream;\n          this.nextChar();\n          this.strBuf = [];\n        }\n\n        _createClass(PostScriptLexer, [{\n          key: \"nextChar\",\n          value: function nextChar() {\n            return this.currentChar = this.stream.getByte();\n          }\n        }, {\n          key: \"getToken\",\n          value: function getToken() {\n            var comment = false;\n            var ch = this.currentChar;\n\n            while (true) {\n              if (ch < 0) {\n                return _primitives.EOF;\n              }\n\n              if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                  comment = false;\n                }\n              } else if (ch === 0x25) {\n                comment = true;\n              } else if (!(0, _core_utils.isWhiteSpace)(ch)) {\n                break;\n              }\n\n              ch = this.nextChar();\n            }\n\n            switch (ch | 0) {\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n              case 0x38:\n              case 0x39:\n              case 0x2b:\n              case 0x2d:\n              case 0x2e:\n                return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\n              case 0x7b:\n                this.nextChar();\n                return PostScriptToken.LBRACE;\n\n              case 0x7d:\n                this.nextChar();\n                return PostScriptToken.RBRACE;\n            }\n\n            var strBuf = this.strBuf;\n            strBuf.length = 0;\n            strBuf[0] = String.fromCharCode(ch);\n\n            while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5a || ch >= 0x61 && ch <= 0x7a)) {\n              strBuf.push(String.fromCharCode(ch));\n            }\n\n            var str = strBuf.join(\"\");\n\n            switch (str.toLowerCase()) {\n              case \"if\":\n                return PostScriptToken.IF;\n\n              case \"ifelse\":\n                return PostScriptToken.IFELSE;\n\n              default:\n                return PostScriptToken.getOperator(str);\n            }\n          }\n        }, {\n          key: \"getNumber\",\n          value: function getNumber() {\n            var ch = this.currentChar;\n            var strBuf = this.strBuf;\n            strBuf.length = 0;\n            strBuf[0] = String.fromCharCode(ch);\n\n            while ((ch = this.nextChar()) >= 0) {\n              if (ch >= 0x30 && ch <= 0x39 || ch === 0x2d || ch === 0x2e) {\n                strBuf.push(String.fromCharCode(ch));\n              } else {\n                break;\n              }\n            }\n\n            var value = parseFloat(strBuf.join(\"\"));\n\n            if (isNaN(value)) {\n              throw new _util.FormatError(\"Invalid floating point number: \".concat(value));\n            }\n\n            return value;\n          }\n        }]);\n\n        return PostScriptLexer;\n      }();\n\n      exports.PostScriptLexer = PostScriptLexer;\n      /***/\n    },\n    /* 42 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.bidi = bidi;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var baseTypesn      var arabicTypes = [\"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"ON\", \"ON\", \"AL\", \"ET\", \"ET\", \"AL\", \"CS\", \"AL\", \"ON\", \"ON\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"AL\", \"AL\", \"\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"AN\", \"ET\", \"AN\", \"AN\", \"AL\", \"AL\", \"AL\", \"NSM\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"AN\", \"ON\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"AL\", \"AL\", \"NSM\", \"NSM\", \"ON\", \"NSM\", \"NSM\", \"NSM\", \"NSM\", \"AL\", \"AL\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\"];\n\n      function isOdd(i) {\n        return (i & 1) !== 0;\n      }\n\n      function isEven(i) {\n        return (i & 1) === 0;\n      }\n\n      function findUnequal(arr, start, value) {\n        for (var j = start, jj = arr.length; j < jj; ++j) {\n          if (arr[j] !== value) {\n            return j;\n          }\n        }\n\n        return j;\n      }\n\n      function setValues(arr, start, end, value) {\n        for (var j = start; j < end; ++j) {\n          arr[j] = value;\n        }\n      }\n\n      function reverseValues(arr, start, end) {\n        for (var i = start, j = end - 1; i < j; ++i, --j) {\n          var temp = arr[i];\n          arr[i] = arr[j];\n          arr[j] = temp;\n        }\n      }\n\n      function createBidiText(str, isLTR) {\n        var vertical = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var dir = \"ltr\";\n\n        if (vertical) {\n          dir = \"ttb\";\n        } else if (!isLTR) {\n          dir = \"rtl\";\n        }\n\n        return {\n          str: str,\n          dir: dir\n        };\n      }\n\n      var chars = [];\n      var types = [];\n\n      function bidi(str, startLevel, vertical) {\n        var isLTR = true;\n        var strLength = str.length;\n\n        if (strLength === 0 || vertical) {\n          return createBidiText(str, isLTR, vertical);\n        }\n\n        chars.length = strLength;\n        types.length = strLength;\n        var numBidi = 0;\n        var i, ii;\n\n        for (i = 0; i < strLength; ++i) {\n          chars[i] = str.charAt(i);\n          var charCode = str.charCodeAt(i);\n          var charType = \"L\";\n\n          if (charCode <= 0x00ff) {\n            charType = baseTypes[charCode];\n          } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n            charType = \"R\";\n          } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n            charType = arabicTypes[charCode & 0xff];\n\n            if (!charType) {\n              (0, _util.warn)(\"Bidi: invalid Unicode character \" + charCode.toString(16));\n            }\n          } else if (0x0700 <= charCode && charCode <= 0x08ac) {\n            charType = \"AL\";\n          }\n\n          if (charType === \"R\" || charType === \"AL\" || charType === \"AN\") {\n            numBidi++;\n          }\n\n          types[i] = charType;\n        }\n\n        if (numBidi === 0) {\n          isLTR = true;\n          return createBidiText(str, isLTR);\n        }\n\n        if (startLevel === -1) {\n          if (numBidi / strLength < 0.3) {\n            isLTR = true;\n            startLevel = 0;\n          } else {\n            isLTR = false;\n            startLevel = 1;\n          }\n        }\n\n        var levels = [];\n\n        for (i = 0; i < strLength; ++i) {\n          levels[i] = startLevel;\n        }\n\n        var e = isOdd(startLevel) ? \"R\" : \"L\";\n        var sor = e;\n        var eor = sor;\n        var lastType = sor;\n\n        for (i = 0; i < strLength; ++i) {\n          if (types[i] === \"NSM\") {\n            types[i] = lastType;\n          } else {\n            lastType = types[i];\n          }\n        }\n\n        lastType = sor;\n        var t;\n\n        for (i = 0; i < strLength; ++i) {\n          t = types[i];\n\n          if (t === \"EN\") {\n            types[i] = lastType === \"AL\" ? \"AN\" : \"EN\";\n          } else if (t === \"R\" || t === \"L\" || t === \"AL\") {\n            lastType = t;\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          t = types[i];\n\n          if (t === \"AL\") {\n            types[i] = \"R\";\n          }\n        }\n\n        for (i = 1; i < strLength - 1; ++i) {\n          if (types[i] === \"ES\" && types[i - 1] === \"EN\" && types[i + 1] === \"EN\") {\n            types[i] = \"EN\";\n          }\n\n          if (types[i] === \"CS\" && (types[i - 1] === \"EN\" || types[i - 1] === \"AN\") && types[i + 1] === types[i - 1]) {\n            types[i] = types[i - 1];\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          if (types[i] === \"EN\") {\n            var j;\n\n            for (j = i - 1; j >= 0; --j) {\n              if (types[j] !== \"ET\") {\n                break;\n              }\n\n              types[j] = \"EN\";\n            }\n\n            for (j = i + 1; j < strLength; ++j) {\n              if (types[j] !== \"ET\") {\n                break;\n              }\n\n              types[j] = \"EN\";\n            }\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          t = types[i];\n\n          if (t === \"WS\" || t === \"ES\" || t === \"ET\" || t === \"CS\") {\n            types[i] = \"ON\";\n          }\n        }\n\n        lastType = sor;\n\n        for (i = 0; i < strLength; ++i) {\n          t = types[i];\n\n          if (t === \"EN\") {\n            types[i] = lastType === \"L\" ? \"L\" : \"EN\";\n          } else if (t === \"R\" || t === \"L\") {\n            lastType = t;\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          if (types[i] === \"ON\") {\n            var end = findUnequal(types, i + 1, \"ON\");\n            var before = sor;\n\n            if (i > 0) {\n              before = types[i - 1];\n            }\n\n            var after = eor;\n\n            if (end + 1 < strLength) {\n              after = types[end + 1];\n            }\n\n            if (before !== \"L\") {\n              before = \"R\";\n            }\n\n            if (after !== \"L\") {\n              after = \"R\";\n            }\n\n            if (before === after) {\n              setValues(types, i, end, before);\n            }\n\n            i = end - 1;\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          if (types[i] === \"ON\") {\n            types[i] = e;\n          }\n        }\n\n        for (i = 0; i < strLength; ++i) {\n          t = types[i];\n\n          if (isEven(levels[i])) {\n            if (t === \"R\") {\n              levels[i] += 1;\n            } else if (t === \"AN\" || t === \"EN\") {\n              levels[i] += 2;\n            }\n          } else {\n            if (t === \"L\" || t === \"AN\" || t === \"EN\") {\n              levels[i] += 1;\n            }\n          }\n        }\n\n        var highestLevel = -1;\n        var lowestOddLevel = 99;\n        var level;\n\n        for (i = 0, ii = levels.length; i < ii; ++i) {\n          level = levels[i];\n\n          if (highestLevel < level) {\n            highestLevel = level;\n          }\n\n          if (lowestOddLevel > level && isOdd(level)) {\n            lowestOddLevel = level;\n          }\n        }\n\n        for (level = highestLevel; level >= lowestOddLevel; --level) {\n          var start = -1;\n\n          for (i = 0, ii = levels.length; i < ii; ++i) {\n            if (levels[i] < level) {\n              if (start >= 0) {\n                reverseValues(chars, start, i);\n                start = -1;\n              }\n            } else if (start < 0) {\n              start = i;\n            }\n          }\n\n          if (start >= 0) {\n            reverseValues(chars, start, levels.length);\n          }\n        }\n\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          var ch = chars[i];\n\n          if (ch === \"<\" || ch === \">\") {\n            chars[i] = \"\";\n          }\n        }\n\n        return createBidiText(chars.join(\"\"), isLTR);\n      }\n      /***/\n\n    },\n    /* 43 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getMetrics = void 0;\n\n      var _core_utils = __w_pdfjs_require__(8);\n\n      var getMetrics = (0, _core_utils.getLookupTableFactory)(function (t) {\n        t.Courier = 600;\n        t[\"Courier-Bold\"] = 600;\n        t[\"Courier-BoldOblique\"] = 600;\n        t[\"Courier-Oblique\"] = 600;\n        t.Helvetica = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 278;\n          t.exclam = 278;\n          t.quotedbl = 355;\n          t.numbersign = 556;\n          t.dollar = 556;\n          t.percent = 889;\n          t.ampersand = 667;\n          t.quoteright = 222;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 389;\n          t.plus = 584;\n          t.comma = 278;\n          t.hyphen = 333;\n          t.period = 278;\n          t.slash = 278;\n          t.zero = 556;\n          t.one = 556;\n          t.two = 556;\n          t.three = 556;\n          t.four = 556;\n          t.five = 556;\n          t.six = 556;\n          t.seven = 556;\n          t.eight = 556;\n          t.nine = 556;\n          t.colon = 278;\n          t.semicolon = 278;\n          t.less = 584;\n          t.equal = 584;\n          t.greater = 584;\n          t.question = 556;\n          t.at = 1015;\n          t.A = 667;\n          t.B = 667;\n          t.C = 722;\n          t.D = 722;\n          t.E = 667;\n          t.F = 611;\n          t.G = 778;\n          t.H = 722;\n          t.I = 278;\n          t.J = 500;\n          t.K = 667;\n          t.L = 556;\n          t.M = 833;\n          t.N = 722;\n          t.O = 778;\n          t.P = 667;\n          t.Q = 778;\n          t.R = 722;\n          t.S = 667;\n          t.T = 611;\n          t.U = 722;\n          t.V = 667;\n          t.W = 944;\n          t.X = 667;\n          t.Y = 667;\n          t.Z = 611;\n          t.bracketleft = 278;\n          t.backslash = 278;\n          t.bracketright = 278;\n          t.asciicircum = 469;\n          t.underscore = 556;\n          t.quoteleft = 222;\n          t.a = 556;\n          t.b = 556;\n          t.c = 500;\n          t.d = 556;\n          t.e = 556;\n          t.f = 278;\n          t.g = 556;\n          t.h = 556;\n          t.i = 222;\n          t.j = 222;\n          t.k = 500;\n          t.l = 222;\n          t.m = 833;\n          t.n = 556;\n          t.o = 556;\n          t.p = 556;\n          t.q = 556;\n          t.r = 333;\n          t.s = 500;\n          t.t = 278;\n          t.u = 556;\n          t.v = 500;\n          t.w = 722;\n          t.x = 500;\n          t.y = 500;\n          t.z = 500;\n          t.braceleft = 334;\n          t.bar = 260;\n          t.braceright = 334;\n          t.asciitilde = 584;\n          t.exclamdown = 333;\n          t.cent = 556;\n          t.sterling = 556;\n          t.fraction = 167;\n          t.yen = 556;\n          t.florin = 556;\n          t.section = 556;\n          t.currency = 556;\n          t.quotesingle = 191;\n          t.quotedblleft = 333;\n          t.guillemotleft = 556;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 500;\n          t.fl = 500;\n          t.endash = 556;\n          t.dagger = 556;\n          t.daggerdbl = 556;\n          t.periodcentered = 278;\n          t.paragraph = 537;\n          t.bullet = 350;\n          t.quotesinglbase = 222;\n          t.quotedblbase = 333;\n          t.quotedblright = 333;\n          t.guillemotright = 556;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 611;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 1000;\n          t.ordfeminine = 370;\n          t.Lslash = 556;\n          t.Oslash = 778;\n          t.OE = 1000;\n          t.ordmasculine = 365;\n          t.ae = 889;\n          t.dotlessi = 278;\n          t.lslash = 222;\n          t.oslash = 611;\n          t.oe = 944;\n          t.germandbls = 611;\n          t.Idieresis = 278;\n          t.eacute = 556;\n          t.abreve = 556;\n          t.uhungarumlaut = 556;\n          t.ecaron = 556;\n          t.Ydieresis = 667;\n          t.divide = 584;\n          t.Yacute = 667;\n          t.Acircumflex = 667;\n          t.aacute = 556;\n          t.Ucircumflex = 722;\n          t.yacute = 500;\n          t.scommaaccent = 500;\n          t.ecircumflex = 556;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 556;\n          t.Uacute = 722;\n          t.uogonek = 556;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 737;\n          t.Emacron = 667;\n          t.ccaron = 500;\n          t.aring = 556;\n          t.Ncommaaccent = 722;\n          t.lacute = 222;\n          t.agrave = 556;\n          t.Tcommaaccent = 611;\n          t.Cacute = 722;\n          t.atilde = 556;\n          t.Edotaccent = 667;\n          t.scaron = 500;\n          t.scedilla = 500;\n          t.iacute = 278;\n          t.lozenge = 471;\n          t.Rcaron = 722;\n          t.Gcommaaccent = 778;\n          t.ucircumflex = 556;\n          t.acircumflex = 556;\n          t.Amacron = 667;\n          t.rcaron = 333;\n          t.ccedilla = 500;\n          t.Zdotaccent = 611;\n          t.Thorn = 667;\n          t.Omacron = 778;\n          t.Racute = 722;\n          t.Sacute = 667;\n          t.dcaron = 643;\n          t.Umacron = 722;\n          t.uring = 556;\n          t.threesuperior = 333;\n          t.Ograve = 778;\n          t.Agrave = 667;\n          t.Abreve = 667;\n          t.multiply = 584;\n          t.uacute = 556;\n          t.Tcaron = 611;\n          t.partialdiff = 476;\n          t.ydieresis = 500;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 556;\n          t.edieresis = 556;\n          t.cacute = 500;\n          t.nacute = 556;\n          t.umacron = 556;\n          t.Ncaron = 722;\n          t.Iacute = 278;\n          t.plusminus = 584;\n          t.brokenbar = 260;\n          t.registered = 737;\n          t.Gbreve = 778;\n          t.Idotaccent = 278;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 333;\n          t.omacron = 556;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 722;\n          t.lcommaaccent = 222;\n          t.tcaron = 317;\n          t.eogonek = 556;\n          t.Uogonek = 722;\n          t.Aacute = 667;\n          t.Adieresis = 667;\n          t.egrave = 556;\n          t.zacute = 500;\n          t.iogonek = 222;\n          t.Oacute = 778;\n          t.oacute = 556;\n          t.amacron = 556;\n          t.sacute = 500;\n          t.idieresis = 278;\n          t.Ocircumflex = 778;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 556;\n          t.twosuperior = 333;\n          t.Odieresis = 778;\n          t.mu = 556;\n          t.igrave = 278;\n          t.ohungarumlaut = 556;\n          t.Eogonek = 667;\n          t.dcroat = 556;\n          t.threequarters = 834;\n          t.Scedilla = 667;\n          t.lcaron = 299;\n          t.Kcommaaccent = 667;\n          t.Lacute = 556;\n          t.trademark = 1000;\n          t.edotaccent = 556;\n          t.Igrave = 278;\n          t.Imacron = 278;\n          t.Lcaron = 556;\n          t.onehalf = 834;\n          t.lessequal = 549;\n          t.ocircumflex = 556;\n          t.ntilde = 556;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 556;\n          t.gbreve = 556;\n          t.onequarter = 834;\n          t.Scaron = 667;\n          t.Scommaaccent = 667;\n          t.Ohungarumlaut = 778;\n          t.degree = 400;\n          t.ograve = 556;\n          t.Ccaron = 722;\n          t.ugrave = 556;\n          t.radical = 453;\n          t.Dcaron = 722;\n          t.rcommaaccent = 333;\n          t.Ntilde = 722;\n          t.otilde = 556;\n          t.Rcommaaccent = 722;\n          t.Lcommaaccent = 556;\n          t.Atilde = 667;\n          t.Aogonek = 667;\n          t.Aring = 667;\n          t.Otilde = 778;\n          t.zdotaccent = 500;\n          t.Ecaron = 667;\n          t.Iogonek = 278;\n          t.kcommaaccent = 500;\n          t.minus = 584;\n          t.Icircumflex = 278;\n          t.ncaron = 556;\n          t.tcommaaccent = 278;\n          t.logicalnot = 584;\n          t.odieresis = 556;\n          t.udieresis = 556;\n          t.notequal = 549;\n          t.gcommaaccent = 556;\n          t.eth = 556;\n          t.zcaron = 500;\n          t.ncommaaccent = 556;\n          t.onesuperior = 333;\n          t.imacron = 278;\n          t.Euro = 556;\n        });\n        t[\"Helvetica-Bold\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 278;\n          t.exclam = 333;\n          t.quotedbl = 474;\n          t.numbersign = 556;\n          t.dollar = 556;\n          t.percent = 889;\n          t.ampersand = 722;\n          t.quoteright = 278;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 389;\n          t.plus = 584;\n          t.comma = 278;\n          t.hyphen = 333;\n          t.period = 278;\n          t.slash = 278;\n          t.zero = 556;\n          t.one = 556;\n          t.two = 556;\n          t.three = 556;\n          t.four = 556;\n          t.five = 556;\n          t.six = 556;\n          t.seven = 556;\n          t.eight = 556;\n          t.nine = 556;\n          t.colon = 333;\n          t.semicolon = 333;\n          t.less = 584;\n          t.equal = 584;\n          t.greater = 584;\n          t.question = 611;\n          t.at = 975;\n          t.A = 722;\n          t.B = 722;\n          t.C = 722;\n          t.D = 722;\n          t.E = 667;\n          t.F = 611;\n          t.G = 778;\n          t.H = 722;\n          t.I = 278;\n          t.J = 556;\n          t.K = 722;\n          t.L = 611;\n          t.M = 833;\n          t.N = 722;\n          t.O = 778;\n          t.P = 667;\n          t.Q = 778;\n          t.R = 722;\n          t.S = 667;\n          t.T = 611;\n          t.U = 722;\n          t.V = 667;\n          t.W = 944;\n          t.X = 667;\n          t.Y = 667;\n          t.Z = 611;\n          t.bracketleft = 333;\n          t.backslash = 278;\n          t.bracketright = 333;\n          t.asciicircum = 584;\n          t.underscore = 556;\n          t.quoteleft = 278;\n          t.a = 556;\n          t.b = 611;\n          t.c = 556;\n          t.d = 611;\n          t.e = 556;\n          t.f = 333;\n          t.g = 611;\n          t.h = 611;\n          t.i = 278;\n          t.j = 278;\n          t.k = 556;\n          t.l = 278;\n          t.m = 889;\n          t.n = 611;\n          t.o = 611;\n          t.p = 611;\n          t.q = 611;\n          t.r = 389;\n          t.s = 556;\n          t.t = 333;\n          t.u = 611;\n          t.v = 556;\n          t.w = 778;\n          t.x = 556;\n          t.y = 556;\n          t.z = 500;\n          t.braceleft = 389;\n          t.bar = 280;\n          t.braceright = 389;\n          t.asciitilde = 584;\n          t.exclamdown = 333;\n          t.cent = 556;\n          t.sterling = 556;\n          t.fraction = 167;\n          t.yen = 556;\n          t.florin = 556;\n          t.section = 556;\n          t.currency = 556;\n          t.quotesingle = 238;\n          t.quotedblleft = 500;\n          t.guillemotleft = 556;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 611;\n          t.fl = 611;\n          t.endash = 556;\n          t.dagger = 556;\n          t.daggerdbl = 556;\n          t.periodcentered = 278;\n          t.paragraph = 556;\n          t.bullet = 350;\n          t.quotesinglbase = 278;\n          t.quotedblbase = 500;\n          t.quotedblright = 500;\n          t.guillemotright = 556;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 611;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 1000;\n          t.ordfeminine = 370;\n          t.Lslash = 611;\n          t.Oslash = 778;\n          t.OE = 1000;\n          t.ordmasculine = 365;\n          t.ae = 889;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 611;\n          t.oe = 944;\n          t.germandbls = 611;\n          t.Idieresis = 278;\n          t.eacute = 556;\n          t.abreve = 556;\n          t.uhungarumlaut = 611;\n          t.ecaron = 556;\n          t.Ydieresis = 667;\n          t.divide = 584;\n          t.Yacute = 667;\n          t.Acircumflex = 722;\n          t.aacute = 556;\n          t.Ucircumflex = 722;\n          t.yacute = 556;\n          t.scommaaccent = 556;\n          t.ecircumflex = 556;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 556;\n          t.Uacute = 722;\n          t.uogonek = 611;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 737;\n          t.Emacron = 667;\n          t.ccaron = 556;\n          t.aring = 556;\n          t.Ncommaaccent = 722;\n          t.lacute = 278;\n          t.agrave = 556;\n          t.Tcommaaccent = 611;\n          t.Cacute = 722;\n          t.atilde = 556;\n          t.Edotaccent = 667;\n          t.scaron = 556;\n          t.scedilla = 556;\n          t.iacute = 278;\n          t.lozenge = 494;\n          t.Rcaron = 722;\n          t.Gcommaaccent = 778;\n          t.ucircumflex = 611;\n          t.acircumflex = 556;\n          t.Amacron = 722;\n          t.rcaron = 389;\n          t.ccedilla = 556;\n          t.Zdotaccent = 611;\n          t.Thorn = 667;\n          t.Omacron = 778;\n          t.Racute = 722;\n          t.Sacute = 667;\n          t.dcaron = 743;\n          t.Umacron = 722;\n          t.uring = 611;\n          t.threesuperior = 333;\n          t.Ograve = 778;\n          t.Agrave = 722;\n          t.Abreve = 722;\n          t.multiply = 584;\n          t.uacute = 611;\n          t.Tcaron = 611;\n          t.partialdiff = 494;\n          t.ydieresis = 556;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 556;\n          t.edieresis = 556;\n          t.cacute = 556;\n          t.nacute = 611;\n          t.umacron = 611;\n          t.Ncaron = 722;\n          t.Iacute = 278;\n          t.plusminus = 584;\n          t.brokenbar = 280;\n          t.registered = 737;\n          t.Gbreve = 778;\n          t.Idotaccent = 278;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 389;\n          t.omacron = 611;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 722;\n          t.lcommaaccent = 278;\n          t.tcaron = 389;\n          t.eogonek = 556;\n          t.Uogonek = 722;\n          t.Aacute = 722;\n          t.Adieresis = 722;\n          t.egrave = 556;\n          t.zacute = 500;\n          t.iogonek = 278;\n          t.Oacute = 778;\n          t.oacute = 611;\n          t.amacron = 556;\n          t.sacute = 556;\n          t.idieresis = 278;\n          t.Ocircumflex = 778;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 611;\n          t.twosuperior = 333;\n          t.Odieresis = 778;\n          t.mu = 611;\n          t.igrave = 278;\n          t.ohungarumlaut = 611;\n          t.Eogonek = 667;\n          t.dcroat = 611;\n          t.threequarters = 834;\n          t.Scedilla = 667;\n          t.lcaron = 400;\n          t.Kcommaaccent = 722;\n          t.Lacute = 611;\n          t.trademark = 1000;\n          t.edotaccent = 556;\n          t.Igrave = 278;\n          t.Imacron = 278;\n          t.Lcaron = 611;\n          t.onehalf = 834;\n          t.lessequal = 549;\n          t.ocircumflex = 611;\n          t.ntilde = 611;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 556;\n          t.gbreve = 611;\n          t.onequarter = 834;\n          t.Scaron = 667;\n          t.Scommaaccent = 667;\n          t.Ohungarumlaut = 778;\n          t.degree = 400;\n          t.ograve = 611;\n          t.Ccaron = 722;\n          t.ugrave = 611;\n          t.radical = 549;\n          t.Dcaron = 722;\n          t.rcommaaccent = 389;\n          t.Ntilde = 722;\n          t.otilde = 611;\n          t.Rcommaaccent = 722;\n          t.Lcommaaccent = 611;\n          t.Atilde = 722;\n          t.Aogonek = 722;\n          t.Aring = 722;\n          t.Otilde = 778;\n          t.zdotaccent = 500;\n          t.Ecaron = 667;\n          t.Iogonek = 278;\n          t.kcommaaccent = 556;\n          t.minus = 584;\n          t.Icircumflex = 278;\n          t.ncaron = 611;\n          t.tcommaaccent = 333;\n          t.logicalnot = 584;\n          t.odieresis = 611;\n          t.udieresis = 611;\n          t.notequal = 549;\n          t.gcommaaccent = 611;\n          t.eth = 611;\n          t.zcaron = 500;\n          t.ncommaaccent = 611;\n          t.onesuperior = 333;\n          t.imacron = 278;\n          t.Euro = 556;\n        });\n        t[\"Helvetica-BoldOblique\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 278;\n          t.exclam = 333;\n          t.quotedbl = 474;\n          t.numbersign = 556;\n          t.dollar = 556;\n          t.percent = 889;\n          t.ampersand = 722;\n          t.quoteright = 278;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 389;\n          t.plus = 584;\n          t.comma = 278;\n          t.hyphen = 333;\n          t.period = 278;\n          t.slash = 278;\n          t.zero = 556;\n          t.one = 556;\n          t.two = 556;\n          t.three = 556;\n          t.four = 556;\n          t.five = 556;\n          t.six = 556;\n          t.seven = 556;\n          t.eight = 556;\n          t.nine = 556;\n          t.colon = 333;\n          t.semicolon = 333;\n          t.less = 584;\n          t.equal = 584;\n          t.greater = 584;\n          t.question = 611;\n          t.at = 975;\n          t.A = 722;\n          t.B = 722;\n          t.C = 722;\n          t.D = 722;\n          t.E = 667;\n          t.F = 611;\n          t.G = 778;\n          t.H = 722;\n          t.I = 278;\n          t.J = 556;\n          t.K = 722;\n          t.L = 611;\n          t.M = 833;\n          t.N = 722;\n          t.O = 778;\n          t.P = 667;\n          t.Q = 778;\n          t.R = 722;\n          t.S = 667;\n          t.T = 611;\n          t.U = 722;\n          t.V = 667;\n          t.W = 944;\n          t.X = 667;\n          t.Y = 667;\n          t.Z = 611;\n          t.bracketleft = 333;\n          t.backslash = 278;\n          t.bracketright = 333;\n          t.asciicircum = 584;\n          t.underscore = 556;\n          t.quoteleft = 278;\n          t.a = 556;\n          t.b = 611;\n          t.c = 556;\n          t.d = 611;\n          t.e = 556;\n          t.f = 333;\n          t.g = 611;\n          t.h = 611;\n          t.i = 278;\n          t.j = 278;\n          t.k = 556;\n          t.l = 278;\n          t.m = 889;\n          t.n = 611;\n          t.o = 611;\n          t.p = 611;\n          t.q = 611;\n          t.r = 389;\n          t.s = 556;\n          t.t = 333;\n          t.u = 611;\n          t.v = 556;\n          t.w = 778;\n          t.x = 556;\n          t.y = 556;\n          t.z = 500;\n          t.braceleft = 389;\n          t.bar = 280;\n          t.braceright = 389;\n          t.asciitilde = 584;\n          t.exclamdown = 333;\n          t.cent = 556;\n          t.sterling = 556;\n          t.fraction = 167;\n          t.yen = 556;\n          t.florin = 556;\n          t.section = 556;\n          t.currency = 556;\n          t.quotesingle = 238;\n          t.quotedblleft = 500;\n          t.guillemotleft = 556;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 611;\n          t.fl = 611;\n          t.endash = 556;\n          t.dagger = 556;\n          t.daggerdbl = 556;\n          t.periodcentered = 278;\n          t.paragraph = 556;\n          t.bullet = 350;\n          t.quotesinglbase = 278;\n          t.quotedblbase = 500;\n          t.quotedblright = 500;\n          t.guillemotright = 556;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 611;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 1000;\n          t.ordfeminine = 370;\n          t.Lslash = 611;\n          t.Oslash = 778;\n          t.OE = 1000;\n          t.ordmasculine = 365;\n          t.ae = 889;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 611;\n          t.oe = 944;\n          t.germandbls = 611;\n          t.Idieresis = 278;\n          t.eacute = 556;\n          t.abreve = 556;\n          t.uhungarumlaut = 611;\n          t.ecaron = 556;\n          t.Ydieresis = 667;\n          t.divide = 584;\n          t.Yacute = 667;\n          t.Acircumflex = 722;\n          t.aacute = 556;\n          t.Ucircumflex = 722;\n          t.yacute = 556;\n          t.scommaaccent = 556;\n          t.ecircumflex = 556;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 556;\n          t.Uacute = 722;\n          t.uogonek = 611;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 737;\n          t.Emacron = 667;\n          t.ccaron = 556;\n          t.aring = 556;\n          t.Ncommaaccent = 722;\n          t.lacute = 278;\n          t.agrave = 556;\n          t.Tcommaaccent = 611;\n          t.Cacute = 722;\n          t.atilde = 556;\n          t.Edotaccent = 667;\n          t.scaron = 556;\n          t.scedilla = 556;\n          t.iacute = 278;\n          t.lozenge = 494;\n          t.Rcaron = 722;\n          t.Gcommaaccent = 778;\n          t.ucircumflex = 611;\n          t.acircumflex = 556;\n          t.Amacron = 722;\n          t.rcaron = 389;\n          t.ccedilla = 556;\n          t.Zdotaccent = 611;\n          t.Thorn = 667;\n          t.Omacron = 778;\n          t.Racute = 722;\n          t.Sacute = 667;\n          t.dcaron = 743;\n          t.Umacron = 722;\n          t.uring = 611;\n          t.threesuperior = 333;\n          t.Ograve = 778;\n          t.Agrave = 722;\n          t.Abreve = 722;\n          t.multiply = 584;\n          t.uacute = 611;\n          t.Tcaron = 611;\n          t.partialdiff = 494;\n          t.ydieresis = 556;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 556;\n          t.edieresis = 556;\n          t.cacute = 556;\n          t.nacute = 611;\n          t.umacron = 611;\n          t.Ncaron = 722;\n          t.Iacute = 278;\n          t.plusminus = 584;\n          t.brokenbar = 280;\n          t.registered = 737;\n          t.Gbreve = 778;\n          t.Idotaccent = 278;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 389;\n          t.omacron = 611;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 722;\n          t.lcommaaccent = 278;\n          t.tcaron = 389;\n          t.eogonek = 556;\n          t.Uogonek = 722;\n          t.Aacute = 722;\n          t.Adieresis = 722;\n          t.egrave = 556;\n          t.zacute = 500;\n          t.iogonek = 278;\n          t.Oacute = 778;\n          t.oacute = 611;\n          t.amacron = 556;\n          t.sacute = 556;\n          t.idieresis = 278;\n          t.Ocircumflex = 778;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 611;\n          t.twosuperior = 333;\n          t.Odieresis = 778;\n          t.mu = 611;\n          t.igrave = 278;\n          t.ohungarumlaut = 611;\n          t.Eogonek = 667;\n          t.dcroat = 611;\n          t.threequarters = 834;\n          t.Scedilla = 667;\n          t.lcaron = 400;\n          t.Kcommaaccent = 722;\n          t.Lacute = 611;\n          t.trademark = 1000;\n          t.edotaccent = 556;\n          t.Igrave = 278;\n          t.Imacron = 278;\n          t.Lcaron = 611;\n          t.onehalf = 834;\n          t.lessequal = 549;\n          t.ocircumflex = 611;\n          t.ntilde = 611;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 556;\n          t.gbreve = 611;\n          t.onequarter = 834;\n          t.Scaron = 667;\n          t.Scommaaccent = 667;\n          t.Ohungarumlaut = 778;\n          t.degree = 400;\n          t.ograve = 611;\n          t.Ccaron = 722;\n          t.ugrave = 611;\n          t.radical = 549;\n          t.Dcaron = 722;\n          t.rcommaaccent = 389;\n          t.Ntilde = 722;\n          t.otilde = 611;\n          t.Rcommaaccent = 722;\n          t.Lcommaaccent = 611;\n          t.Atilde = 722;\n          t.Aogonek = 722;\n          t.Aring = 722;\n          t.Otilde = 778;\n          t.zdotaccent = 500;\n          t.Ecaron = 667;\n          t.Iogonek = 278;\n          t.kcommaaccent = 556;\n          t.minus = 584;\n          t.Icircumflex = 278;\n          t.ncaron = 611;\n          t.tcommaaccent = 333;\n          t.logicalnot = 584;\n          t.odieresis = 611;\n          t.udieresis = 611;\n          t.notequal = 549;\n          t.gcommaaccent = 611;\n          t.eth = 611;\n          t.zcaron = 500;\n          t.ncommaaccent = 611;\n          t.onesuperior = 333;\n          t.imacron = 278;\n          t.Euro = 556;\n        });\n        t[\"Helvetica-Oblique\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 278;\n          t.exclam = 278;\n          t.quotedbl = 355;\n          t.numbersign = 556;\n          t.dollar = 556;\n          t.percent = 889;\n          t.ampersand = 667;\n          t.quoteright = 222;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 389;\n          t.plus = 584;\n          t.comma = 278;\n          t.hyphen = 333;\n          t.period = 278;\n          t.slash = 278;\n          t.zero = 556;\n          t.one = 556;\n          t.two = 556;\n          t.three = 556;\n          t.four = 556;\n          t.five = 556;\n          t.six = 556;\n          t.seven = 556;\n          t.eight = 556;\n          t.nine = 556;\n          t.colon = 278;\n          t.semicolon = 278;\n          t.less = 584;\n          t.equal = 584;\n          t.greater = 584;\n          t.question = 556;\n          t.at = 1015;\n          t.A = 667;\n          t.B = 667;\n          t.C = 722;\n          t.D = 722;\n          t.E = 667;\n          t.F = 611;\n          t.G = 778;\n          t.H = 722;\n          t.I = 278;\n          t.J = 500;\n          t.K = 667;\n          t.L = 556;\n          t.M = 833;\n          t.N = 722;\n          t.O = 778;\n          t.P = 667;\n          t.Q = 778;\n          t.R = 722;\n          t.S = 667;\n          t.T = 611;\n          t.U = 722;\n          t.V = 667;\n          t.W = 944;\n          t.X = 667;\n          t.Y = 667;\n          t.Z = 611;\n          t.bracketleft = 278;\n          t.backslash = 278;\n          t.bracketright = 278;\n          t.asciicircum = 469;\n          t.underscore = 556;\n          t.quoteleft = 222;\n          t.a = 556;\n          t.b = 556;\n          t.c = 500;\n          t.d = 556;\n          t.e = 556;\n          t.f = 278;\n          t.g = 556;\n          t.h = 556;\n          t.i = 222;\n          t.j = 222;\n          t.k = 500;\n          t.l = 222;\n          t.m = 833;\n          t.n = 556;\n          t.o = 556;\n          t.p = 556;\n          t.q = 556;\n          t.r = 333;\n          t.s = 500;\n          t.t = 278;\n          t.u = 556;\n          t.v = 500;\n          t.w = 722;\n          t.x = 500;\n          t.y = 500;\n          t.z = 500;\n          t.braceleft = 334;\n          t.bar = 260;\n          t.braceright = 334;\n          t.asciitilde = 584;\n          t.exclamdown = 333;\n          t.cent = 556;\n          t.sterling = 556;\n          t.fraction = 167;\n          t.yen = 556;\n          t.florin = 556;\n          t.section = 556;\n          t.currency = 556;\n          t.quotesingle = 191;\n          t.quotedblleft = 333;\n          t.guillemotleft = 556;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 500;\n          t.fl = 500;\n          t.endash = 556;\n          t.dagger = 556;\n          t.daggerdbl = 556;\n          t.periodcentered = 278;\n          t.paragraph = 537;\n          t.bullet = 350;\n          t.quotesinglbase = 222;\n          t.quotedblbase = 333;\n          t.quotedblright = 333;\n          t.guillemotright = 556;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 611;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 1000;\n          t.ordfeminine = 370;\n          t.Lslash = 556;\n          t.Oslash = 778;\n          t.OE = 1000;\n          t.ordmasculine = 365;\n          t.ae = 889;\n          t.dotlessi = 278;\n          t.lslash = 222;\n          t.oslash = 611;\n          t.oe = 944;\n          t.germandbls = 611;\n          t.Idieresis = 278;\n          t.eacute = 556;\n          t.abreve = 556;\n          t.uhungarumlaut = 556;\n          t.ecaron = 556;\n          t.Ydieresis = 667;\n          t.divide = 584;\n          t.Yacute = 667;\n          t.Acircumflex = 667;\n          t.aacute = 556;\n          t.Ucircumflex = 722;\n          t.yacute = 500;\n          t.scommaaccent = 500;\n          t.ecircumflex = 556;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 556;\n          t.Uacute = 722;\n          t.uogonek = 556;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 737;\n          t.Emacron = 667;\n          t.ccaron = 500;\n          t.aring = 556;\n          t.Ncommaaccent = 722;\n          t.lacute = 222;\n          t.agrave = 556;\n          t.Tcommaaccent = 611;\n          t.Cacute = 722;\n          t.atilde = 556;\n          t.Edotaccent = 667;\n          t.scaron = 500;\n          t.scedilla = 500;\n          t.iacute = 278;\n          t.lozenge = 471;\n          t.Rcaron = 722;\n          t.Gcommaaccent = 778;\n          t.ucircumflex = 556;\n          t.acircumflex = 556;\n          t.Amacron = 667;\n          t.rcaron = 333;\n          t.ccedilla = 500;\n          t.Zdotaccent = 611;\n          t.Thorn = 667;\n          t.Omacron = 778;\n          t.Racute = 722;\n          t.Sacute = 667;\n          t.dcaron = 643;\n          t.Umacron = 722;\n          t.uring = 556;\n          t.threesuperior = 333;\n          t.Ograve = 778;\n          t.Agrave = 667;\n          t.Abreve = 667;\n          t.multiply = 584;\n          t.uacute = 556;\n          t.Tcaron = 611;\n          t.partialdiff = 476;\n          t.ydieresis = 500;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 556;\n          t.edieresis = 556;\n          t.cacute = 500;\n          t.nacute = 556;\n          t.umacron = 556;\n          t.Ncaron = 722;\n          t.Iacute = 278;\n          t.plusminus = 584;\n          t.brokenbar = 260;\n          t.registered = 737;\n          t.Gbreve = 778;\n          t.Idotaccent = 278;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 333;\n          t.omacron = 556;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 722;\n          t.lcommaaccent = 222;\n          t.tcaron = 317;\n          t.eogonek = 556;\n          t.Uogonek = 722;\n          t.Aacute = 667;\n          t.Adieresis = 667;\n          t.egrave = 556;\n          t.zacute = 500;\n          t.iogonek = 222;\n          t.Oacute = 778;\n          t.oacute = 556;\n          t.amacron = 556;\n          t.sacute = 500;\n          t.idieresis = 278;\n          t.Ocircumflex = 778;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 556;\n          t.twosuperior = 333;\n          t.Odieresis = 778;\n          t.mu = 556;\n          t.igrave = 278;\n          t.ohungarumlaut = 556;\n          t.Eogonek = 667;\n          t.dcroat = 556;\n          t.threequarters = 834;\n          t.Scedilla = 667;\n          t.lcaron = 299;\n          t.Kcommaaccent = 667;\n          t.Lacute = 556;\n          t.trademark = 1000;\n          t.edotaccent = 556;\n          t.Igrave = 278;\n          t.Imacron = 278;\n          t.Lcaron = 556;\n          t.onehalf = 834;\n          t.lessequal = 549;\n          t.ocircumflex = 556;\n          t.ntilde = 556;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 556;\n          t.gbreve = 556;\n          t.onequarter = 834;\n          t.Scaron = 667;\n          t.Scommaaccent = 667;\n          t.Ohungarumlaut = 778;\n          t.degree = 400;\n          t.ograve = 556;\n          t.Ccaron = 722;\n          t.ugrave = 556;\n          t.radical = 453;\n          t.Dcaron = 722;\n          t.rcommaaccent = 333;\n          t.Ntilde = 722;\n          t.otilde = 556;\n          t.Rcommaaccent = 722;\n          t.Lcommaaccent = 556;\n          t.Atilde = 667;\n          t.Aogonek = 667;\n          t.Aring = 667;\n          t.Otilde = 778;\n          t.zdotaccent = 500;\n          t.Ecaron = 667;\n          t.Iogonek = 278;\n          t.kcommaaccent = 500;\n          t.minus = 584;\n          t.Icircumflex = 278;\n          t.ncaron = 556;\n          t.tcommaaccent = 278;\n          t.logicalnot = 584;\n          t.odieresis = 556;\n          t.udieresis = 556;\n          t.notequal = 549;\n          t.gcommaaccent = 556;\n          t.eth = 556;\n          t.zcaron = 500;\n          t.ncommaaccent = 556;\n          t.onesuperior = 333;\n          t.imacron = 278;\n          t.Euro = 556;\n        });\n        t.Symbol = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 250;\n          t.exclam = 333;\n          t.universal = 713;\n          t.numbersign = 500;\n          t.existential = 549;\n          t.percent = 833;\n          t.ampersand = 778;\n          t.suchthat = 439;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asteriskmath = 500;\n          t.plus = 549;\n          t.comma = 250;\n          t.minus = 549;\n          t.period = 250;\n          t.slash = 278;\n          t.zero = 500;\n          t.one = 500;\n          t.two = 500;\n          t.three = 500;\n          t.four = 500;\n          t.five = 500;\n          t.six = 500;\n          t.seven = 500;\n          t.eight = 500;\n          t.nine = 500;\n          t.colon = 278;\n          t.semicolon = 278;\n          t.less = 549;\n          t.equal = 549;\n          t.greater = 549;\n          t.question = 444;\n          t.congruent = 549;\n          t.Alpha = 722;\n          t.Beta = 667;\n          t.Chi = 722;\n          t.Delta = 612;\n          t.Epsilon = 611;\n          t.Phi = 763;\n          t.Gamma = 603;\n          t.Eta = 722;\n          t.Iota = 333;\n          t.theta1 = 631;\n          t.Kappa = 722;\n          t.Lambda = 686;\n          t.Mu = 889;\n          t.Nu = 722;\n          t.Omicron = 722;\n          t.Pi = 768;\n          t.Theta = 741;\n          t.Rho = 556;\n          t.Sigma = 592;\n          t.Tau = 611;\n          t.Upsilon = 690;\n          t.sigma1 = 439;\n          t.Omega = 768;\n          t.Xi = 645;\n          t.Psi = 795;\n          t.Zeta = 611;\n          t.bracketleft = 333;\n          t.therefore = 863;\n          t.bracketright = 333;\n          t.perpendicular = 658;\n          t.underscore = 500;\n          t.radicalex = 500;\n          t.alpha = 631;\n          t.beta = 549;\n          t.chi = 549;\n          t.delta = 494;\n          t.epsilon = 439;\n          t.phi = 521;\n          t.gamma = 411;\n          t.eta = 603;\n          t.iota = 329;\n          t.phi1 = 603;\n          t.kappa = 549;\n          t.lambda = 549;\n          t.mu = 576;\n          t.nu = 521;\n          t.omicron = 549;\n          t.pi = 549;\n          t.theta = 521;\n          t.rho = 549;\n          t.sigma = 603;\n          t.tau = 439;\n          t.upsilon = 576;\n          t.omega1 = 713;\n          t.omega = 686;\n          t.xi = 493;\n          t.psi = 686;\n          t.zeta = 494;\n          t.braceleft = 480;\n          t.bar = 200;\n          t.braceright = 480;\n          t.similar = 549;\n          t.Euro = 750;\n          t.Upsilon1 = 620;\n          t.minute = 247;\n          t.lessequal = 549;\n          t.fraction = 167;\n          t.infinity = 713;\n          t.florin = 500;\n          t.club = 753;\n          t.diamond = 753;\n          t.heart = 753;\n          t.spade = 753;\n          t.arrowboth = 1042;\n          t.arrowleft = 987;\n          t.arrowup = 603;\n          t.arrowright = 987;\n          t.arrowdown = 603;\n          t.degree = 400;\n          t.plusminus = 549;\n          t.second = 411;\n          t.greaterequal = 549;\n          t.multiply = 549;\n          t.proportional = 713;\n          t.partialdiff = 494;\n          t.bullet = 460;\n          t.divide = 549;\n          t.notequal = 549;\n          t.equivalence = 549;\n          t.approxequal = 549;\n          t.ellipsis = 1000;\n          t.arrowvertex = 603;\n          t.arrowhorizex = 1000;\n          t.carriagereturn = 658;\n          t.aleph = 823;\n          t.Ifraktur = 686;\n          t.Rfraktur = 795;\n          t.weierstrass = 987;\n          t.circlemultiply = 768;\n          t.circleplus = 768;\n          t.emptyset = 823;\n          t.intersection = 768;\n          t.union = 768;\n          t.propersuperset = 713;\n          t.reflexsuperset = 713;\n          t.notsubset = 713;\n          t.propersubset = 713;\n          t.reflexsubset = 713;\n          t.element = 713;\n          t.notelement = 713;\n          t.angle = 768;\n          t.gradient = 713;\n          t.registerserif = 790;\n          t.copyrightserif = 790;\n          t.trademarkserif = 890;\n          t.product = 823;\n          t.radical = 549;\n          t.dotmath = 250;\n          t.logicalnot = 713;\n          t.logicaland = 603;\n          t.logicalor = 603;\n          t.arrowdblboth = 1042;\n          t.arrowdblleft = 987;\n          t.arrowdblup = 603;\n          t.arrowdblright = 987;\n          t.arrowdbldown = 603;\n          t.lozenge = 494;\n          t.angleleft = 329;\n          t.registersans = 790;\n          t.copyrightsans = 790;\n          t.trademarksans = 786;\n          t.summation = 713;\n          t.parenlefttp = 384;\n          t.parenleftex = 384;\n          t.parenleftbt = 384;\n          t.bracketlefttp = 384;\n          t.bracketleftex = 384;\n          t.bracketleftbt = 384;\n          t.bracelefttp = 494;\n          t.braceleftmid = 494;\n          t.braceleftbt = 494;\n          t.braceex = 494;\n          t.angleright = 329;\n          t.integral = 274;\n          t.integraltp = 686;\n          t.integralex = 686;\n          t.integralbt = 686;\n          t.parenrighttp = 384;\n          t.parenrightex = 384;\n          t.parenrightbt = 384;\n          t.bracketrighttp = 384;\n          t.bracketrightex = 384;\n          t.bracketrightbt = 384;\n          t.bracerighttp = 494;\n          t.bracerightmid = 494;\n          t.bracerightbt = 494;\n          t.apple = 790;\n        });\n        t[\"Times-Roman\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 250;\n          t.exclam = 333;\n          t.quotedbl = 408;\n          t.numbersign = 500;\n          t.dollar = 500;\n          t.percent = 833;\n          t.ampersand = 778;\n          t.quoteright = 333;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 500;\n          t.plus = 564;\n          t.comma = 250;\n          t.hyphen = 333;\n          t.period = 250;\n          t.slash = 278;\n          t.zero = 500;\n          t.one = 500;\n          t.two = 500;\n          t.three = 500;\n          t.four = 500;\n          t.five = 500;\n          t.six = 500;\n          t.seven = 500;\n          t.eight = 500;\n          t.nine = 500;\n          t.colon = 278;\n          t.semicolon = 278;\n          t.less = 564;\n          t.equal = 564;\n          t.greater = 564;\n          t.question = 444;\n          t.at = 921;\n          t.A = 722;\n          t.B = 667;\n          t.C = 667;\n          t.D = 722;\n          t.E = 611;\n          t.F = 556;\n          t.G = 722;\n          t.H = 722;\n          t.I = 333;\n          t.J = 389;\n          t.K = 722;\n          t.L = 611;\n          t.M = 889;\n          t.N = 722;\n          t.O = 722;\n          t.P = 556;\n          t.Q = 722;\n          t.R = 667;\n          t.S = 556;\n          t.T = 611;\n          t.U = 722;\n          t.V = 722;\n          t.W = 944;\n          t.X = 722;\n          t.Y = 722;\n          t.Z = 611;\n          t.bracketleft = 333;\n          t.backslash = 278;\n          t.bracketright = 333;\n          t.asciicircum = 469;\n          t.underscore = 500;\n          t.quoteleft = 333;\n          t.a = 444;\n          t.b = 500;\n          t.c = 444;\n          t.d = 500;\n          t.e = 444;\n          t.f = 333;\n          t.g = 500;\n          t.h = 500;\n          t.i = 278;\n          t.j = 278;\n          t.k = 500;\n          t.l = 278;\n          t.m = 778;\n          t.n = 500;\n          t.o = 500;\n          t.p = 500;\n          t.q = 500;\n          t.r = 333;\n          t.s = 389;\n          t.t = 278;\n          t.u = 500;\n          t.v = 500;\n          t.w = 722;\n          t.x = 500;\n          t.y = 500;\n          t.z = 444;\n          t.braceleft = 480;\n          t.bar = 200;\n          t.braceright = 480;\n          t.asciitilde = 541;\n          t.exclamdown = 333;\n          t.cent = 500;\n          t.sterling = 500;\n          t.fraction = 167;\n          t.yen = 500;\n          t.florin = 500;\n          t.section = 500;\n          t.currency = 500;\n          t.quotesingle = 180;\n          t.quotedblleft = 444;\n          t.guillemotleft = 500;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 556;\n          t.fl = 556;\n          t.endash = 500;\n          t.dagger = 500;\n          t.daggerdbl = 500;\n          t.periodcentered = 250;\n          t.paragraph = 453;\n          t.bullet = 350;\n          t.quotesinglbase = 333;\n          t.quotedblbase = 444;\n          t.quotedblright = 444;\n          t.guillemotright = 500;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 444;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 889;\n          t.ordfeminine = 276;\n          t.Lslash = 611;\n          t.Oslash = 722;\n          t.OE = 889;\n          t.ordmasculine = 310;\n          t.ae = 667;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 500;\n          t.oe = 722;\n          t.germandbls = 500;\n          t.Idieresis = 333;\n          t.eacute = 444;\n          t.abreve = 444;\n          t.uhungarumlaut = 500;\n          t.ecaron = 444;\n          t.Ydieresis = 722;\n          t.divide = 564;\n          t.Yacute = 722;\n          t.Acircumflex = 722;\n          t.aacute = 444;\n          t.Ucircumflex = 722;\n          t.yacute = 500;\n          t.scommaaccent = 389;\n          t.ecircumflex = 444;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 444;\n          t.Uacute = 722;\n          t.uogonek = 500;\n          t.Edieresis = 611;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 760;\n          t.Emacron = 611;\n          t.ccaron = 444;\n          t.aring = 444;\n          t.Ncommaaccent = 722;\n          t.lacute = 278;\n          t.agrave = 444;\n          t.Tcommaaccent = 611;\n          t.Cacute = 667;\n          t.atilde = 444;\n          t.Edotaccent = 611;\n          t.scaron = 389;\n          t.scedilla = 389;\n          t.iacute = 278;\n          t.lozenge = 471;\n          t.Rcaron = 667;\n          t.Gcommaaccent = 722;\n          t.ucircumflex = 500;\n          t.acircumflex = 444;\n          t.Amacron = 722;\n          t.rcaron = 333;\n          t.ccedilla = 444;\n          t.Zdotaccent = 611;\n          t.Thorn = 556;\n          t.Omacron = 722;\n          t.Racute = 667;\n          t.Sacute = 556;\n          t.dcaron = 588;\n          t.Umacron = 722;\n          t.uring = 500;\n          t.threesuperior = 300;\n          t.Ograve = 722;\n          t.Agrave = 722;\n          t.Abreve = 722;\n          t.multiply = 564;\n          t.uacute = 500;\n          t.Tcaron = 611;\n          t.partialdiff = 476;\n          t.ydieresis = 500;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 611;\n          t.adieresis = 444;\n          t.edieresis = 444;\n          t.cacute = 444;\n          t.nacute = 500;\n          t.umacron = 500;\n          t.Ncaron = 722;\n          t.Iacute = 333;\n          t.plusminus = 564;\n          t.brokenbar = 200;\n          t.registered = 760;\n          t.Gbreve = 722;\n          t.Idotaccent = 333;\n          t.summation = 600;\n          t.Egrave = 611;\n          t.racute = 333;\n          t.omacron = 500;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 667;\n          t.lcommaaccent = 278;\n          t.tcaron = 326;\n          t.eogonek = 444;\n          t.Uogonek = 722;\n          t.Aacute = 722;\n          t.Adieresis = 722;\n          t.egrave = 444;\n          t.zacute = 444;\n          t.iogonek = 278;\n          t.Oacute = 722;\n          t.oacute = 500;\n          t.amacron = 444;\n          t.sacute = 389;\n          t.idieresis = 278;\n          t.Ocircumflex = 722;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 500;\n          t.twosuperior = 300;\n          t.Odieresis = 722;\n          t.mu = 500;\n          t.igrave = 278;\n          t.ohungarumlaut = 500;\n          t.Eogonek = 611;\n          t.dcroat = 500;\n          t.threequarters = 750;\n          t.Scedilla = 556;\n          t.lcaron = 344;\n          t.Kcommaaccent = 722;\n          t.Lacute = 611;\n          t.trademark = 980;\n          t.edotaccent = 444;\n          t.Igrave = 333;\n          t.Imacron = 333;\n          t.Lcaron = 611;\n          t.onehalf = 750;\n          t.lessequal = 549;\n          t.ocircumflex = 500;\n          t.ntilde = 500;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 611;\n          t.emacron = 444;\n          t.gbreve = 500;\n          t.onequarter = 750;\n          t.Scaron = 556;\n          t.Scommaaccent = 556;\n          t.Ohungarumlaut = 722;\n          t.degree = 400;\n          t.ograve = 500;\n          t.Ccaron = 667;\n          t.ugrave = 500;\n          t.radical = 453;\n          t.Dcaron = 722;\n          t.rcommaaccent = 333;\n          t.Ntilde = 722;\n          t.otilde = 500;\n          t.Rcommaaccent = 667;\n          t.Lcommaaccent = 611;\n          t.Atilde = 722;\n          t.Aogonek = 722;\n          t.Aring = 722;\n          t.Otilde = 722;\n          t.zdotaccent = 444;\n          t.Ecaron = 611;\n          t.Iogonek = 333;\n          t.kcommaaccent = 500;\n          t.minus = 564;\n          t.Icircumflex = 333;\n          t.ncaron = 500;\n          t.tcommaaccent = 278;\n          t.logicalnot = 564;\n          t.odieresis = 500;\n          t.udieresis = 500;\n          t.notequal = 549;\n          t.gcommaaccent = 500;\n          t.eth = 500;\n          t.zcaron = 444;\n          t.ncommaaccent = 500;\n          t.onesuperior = 300;\n          t.imacron = 278;\n          t.Euro = 500;\n        });\n        t[\"Times-Bold\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 250;\n          t.exclam = 333;\n          t.quotedbl = 555;\n          t.numbersign = 500;\n          t.dollar = 500;\n          t.percent = 1000;\n          t.ampersand = 833;\n          t.quoteright = 333;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 500;\n          t.plus = 570;\n          t.comma = 250;\n          t.hyphen = 333;\n          t.period = 250;\n          t.slash = 278;\n          t.zero = 500;\n          t.one = 500;\n          t.two = 500;\n          t.three = 500;\n          t.four = 500;\n          t.five = 500;\n          t.six = 500;\n          t.seven = 500;\n          t.eight = 500;\n          t.nine = 500;\n          t.colon = 333;\n          t.semicolon = 333;\n          t.less = 570;\n          t.equal = 570;\n          t.greater = 570;\n          t.question = 500;\n          t.at = 930;\n          t.A = 722;\n          t.B = 667;\n          t.C = 722;\n          t.D = 722;\n          t.E = 667;\n          t.F = 611;\n          t.G = 778;\n          t.H = 778;\n          t.I = 389;\n          t.J = 500;\n          t.K = 778;\n          t.L = 667;\n          t.M = 944;\n          t.N = 722;\n          t.O = 778;\n          t.P = 611;\n          t.Q = 778;\n          t.R = 722;\n          t.S = 556;\n          t.T = 667;\n          t.U = 722;\n          t.V = 722;\n          t.W = 1000;\n          t.X = 722;\n          t.Y = 722;\n          t.Z = 667;\n          t.bracketleft = 333;\n          t.backslash = 278;\n          t.bracketright = 333;\n          t.asciicircum = 581;\n          t.underscore = 500;\n          t.quoteleft = 333;\n          t.a = 500;\n          t.b = 556;\n          t.c = 444;\n          t.d = 556;\n          t.e = 444;\n          t.f = 333;\n          t.g = 500;\n          t.h = 556;\n          t.i = 278;\n          t.j = 333;\n          t.k = 556;\n          t.l = 278;\n          t.m = 833;\n          t.n = 556;\n          t.o = 500;\n          t.p = 556;\n          t.q = 556;\n          t.r = 444;\n          t.s = 389;\n          t.t = 333;\n          t.u = 556;\n          t.v = 500;\n          t.w = 722;\n          t.x = 500;\n          t.y = 500;\n          t.z = 444;\n          t.braceleft = 394;\n          t.bar = 220;\n          t.braceright = 394;\n          t.asciitilde = 520;\n          t.exclamdown = 333;\n          t.cent = 500;\n          t.sterling = 500;\n          t.fraction = 167;\n          t.yen = 500;\n          t.florin = 500;\n          t.section = 500;\n          t.currency = 500;\n          t.quotesingle = 278;\n          t.quotedblleft = 500;\n          t.guillemotleft = 500;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 556;\n          t.fl = 556;\n          t.endash = 500;\n          t.dagger = 500;\n          t.daggerdbl = 500;\n          t.periodcentered = 250;\n          t.paragraph = 540;\n          t.bullet = 350;\n          t.quotesinglbase = 333;\n          t.quotedblbase = 500;\n          t.quotedblright = 500;\n          t.guillemotright = 500;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 500;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 1000;\n          t.ordfeminine = 300;\n          t.Lslash = 667;\n          t.Oslash = 778;\n          t.OE = 1000;\n          t.ordmasculine = 330;\n          t.ae = 722;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 500;\n          t.oe = 722;\n          t.germandbls = 556;\n          t.Idieresis = 389;\n          t.eacute = 444;\n          t.abreve = 500;\n          t.uhungarumlaut = 556;\n          t.ecaron = 444;\n          t.Ydieresis = 722;\n          t.divide = 570;\n          t.Yacute = 722;\n          t.Acircumflex = 722;\n          t.aacute = 500;\n          t.Ucircumflex = 722;\n          t.yacute = 500;\n          t.scommaaccent = 389;\n          t.ecircumflex = 444;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 500;\n          t.Uacute = 722;\n          t.uogonek = 556;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 747;\n          t.Emacron = 667;\n          t.ccaron = 444;\n          t.aring = 500;\n          t.Ncommaaccent = 722;\n          t.lacute = 278;\n          t.agrave = 500;\n          t.Tcommaaccent = 667;\n          t.Cacute = 722;\n          t.atilde = 500;\n          t.Edotaccent = 667;\n          t.scaron = 389;\n          t.scedilla = 389;\n          t.iacute = 278;\n          t.lozenge = 494;\n          t.Rcaron = 722;\n          t.Gcommaaccent = 778;\n          t.ucircumflex = 556;\n          t.acircumflex = 500;\n          t.Amacron = 722;\n          t.rcaron = 444;\n          t.ccedilla = 444;\n          t.Zdotaccent = 667;\n          t.Thorn = 611;\n          t.Omacron = 778;\n          t.Racute = 722;\n          t.Sacute = 556;\n          t.dcaron = 672;\n          t.Umacron = 722;\n          t.uring = 556;\n          t.threesuperior = 300;\n          t.Ograve = 778;\n          t.Agrave = 722;\n          t.Abreve = 722;\n          t.multiply = 570;\n          t.uacute = 556;\n          t.Tcaron = 667;\n          t.partialdiff = 494;\n          t.ydieresis = 500;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 500;\n          t.edieresis = 444;\n          t.cacute = 444;\n          t.nacute = 556;\n          t.umacron = 556;\n          t.Ncaron = 722;\n          t.Iacute = 389;\n          t.plusminus = 570;\n          t.brokenbar = 220;\n          t.registered = 747;\n          t.Gbreve = 778;\n          t.Idotaccent = 389;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 444;\n          t.omacron = 500;\n          t.Zacute = 667;\n          t.Zcaron = 667;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 722;\n          t.lcommaaccent = 278;\n          t.tcaron = 416;\n          t.eogonek = 444;\n          t.Uogonek = 722;\n          t.Aacute = 722;\n          t.Adieresis = 722;\n          t.egrave = 444;\n          t.zacute = 444;\n          t.iogonek = 278;\n          t.Oacute = 778;\n          t.oacute = 500;\n          t.amacron = 500;\n          t.sacute = 389;\n          t.idieresis = 278;\n          t.Ocircumflex = 778;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 556;\n          t.twosuperior = 300;\n          t.Odieresis = 778;\n          t.mu = 556;\n          t.igrave = 278;\n          t.ohungarumlaut = 500;\n          t.Eogonek = 667;\n          t.dcroat = 556;\n          t.threequarters = 750;\n          t.Scedilla = 556;\n          t.lcaron = 394;\n          t.Kcommaaccent = 778;\n          t.Lacute = 667;\n          t.trademark = 1000;\n          t.edotaccent = 444;\n          t.Igrave = 389;\n          t.Imacron = 389;\n          t.Lcaron = 667;\n          t.onehalf = 750;\n          t.lessequal = 549;\n          t.ocircumflex = 500;\n          t.ntilde = 556;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 444;\n          t.gbreve = 500;\n          t.onequarter = 750;\n          t.Scaron = 556;\n          t.Scommaaccent = 556;\n          t.Ohungarumlaut = 778;\n          t.degree = 400;\n          t.ograve = 500;\n          t.Ccaron = 722;\n          t.ugrave = 556;\n          t.radical = 549;\n          t.Dcaron = 722;\n          t.rcommaaccent = 444;\n          t.Ntilde = 722;\n          t.otilde = 500;\n          t.Rcommaaccent = 722;\n          t.Lcommaaccent = 667;\n          t.Atilde = 722;\n          t.Aogonek = 722;\n          t.Aring = 722;\n          t.Otilde = 778;\n          t.zdotaccent = 444;\n          t.Ecaron = 667;\n          t.Iogonek = 389;\n          t.kcommaaccent = 556;\n          t.minus = 570;\n          t.Icircumflex = 389;\n          t.ncaron = 556;\n          t.tcommaaccent = 333;\n          t.logicalnot = 570;\n          t.odieresis = 500;\n          t.udieresis = 556;\n          t.notequal = 549;\n          t.gcommaaccent = 500;\n          t.eth = 500;\n          t.zcaron = 444;\n          t.ncommaaccent = 556;\n          t.onesuperior = 300;\n          t.imacron = 278;\n          t.Euro = 500;\n        });\n        t[\"Times-BoldItalic\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 250;\n          t.exclam = 389;\n          t.quotedbl = 555;\n          t.numbersign = 500;\n          t.dollar = 500;\n          t.percent = 833;\n          t.ampersand = 778;\n          t.quoteright = 333;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 500;\n          t.plus = 570;\n          t.comma = 250;\n          t.hyphen = 333;\n          t.period = 250;\n          t.slash = 278;\n          t.zero = 500;\n          t.one = 500;\n          t.two = 500;\n          t.three = 500;\n          t.four = 500;\n          t.five = 500;\n          t.six = 500;\n          t.seven = 500;\n          t.eight = 500;\n          t.nine = 500;\n          t.colon = 333;\n          t.semicolon = 333;\n          t.less = 570;\n          t.equal = 570;\n          t.greater = 570;\n          t.question = 500;\n          t.at = 832;\n          t.A = 667;\n          t.B = 667;\n          t.C = 667;\n          t.D = 722;\n          t.E = 667;\n          t.F = 667;\n          t.G = 722;\n          t.H = 778;\n          t.I = 389;\n          t.J = 500;\n          t.K = 667;\n          t.L = 611;\n          t.M = 889;\n          t.N = 722;\n          t.O = 722;\n          t.P = 611;\n          t.Q = 722;\n          t.R = 667;\n          t.S = 556;\n          t.T = 611;\n          t.U = 722;\n          t.V = 667;\n          t.W = 889;\n          t.X = 667;\n          t.Y = 611;\n          t.Z = 611;\n          t.bracketleft = 333;\n          t.backslash = 278;\n          t.bracketright = 333;\n          t.asciicircum = 570;\n          t.underscore = 500;\n          t.quoteleft = 333;\n          t.a = 500;\n          t.b = 500;\n          t.c = 444;\n          t.d = 500;\n          t.e = 444;\n          t.f = 333;\n          t.g = 500;\n          t.h = 556;\n          t.i = 278;\n          t.j = 278;\n          t.k = 500;\n          t.l = 278;\n          t.m = 778;\n          t.n = 556;\n          t.o = 500;\n          t.p = 500;\n          t.q = 500;\n          t.r = 389;\n          t.s = 389;\n          t.t = 278;\n          t.u = 556;\n          t.v = 444;\n          t.w = 667;\n          t.x = 500;\n          t.y = 444;\n          t.z = 389;\n          t.braceleft = 348;\n          t.bar = 220;\n          t.braceright = 348;\n          t.asciitilde = 570;\n          t.exclamdown = 389;\n          t.cent = 500;\n          t.sterling = 500;\n          t.fraction = 167;\n          t.yen = 500;\n          t.florin = 500;\n          t.section = 500;\n          t.currency = 500;\n          t.quotesingle = 278;\n          t.quotedblleft = 500;\n          t.guillemotleft = 500;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 556;\n          t.fl = 556;\n          t.endash = 500;\n          t.dagger = 500;\n          t.daggerdbl = 500;\n          t.periodcentered = 250;\n          t.paragraph = 500;\n          t.bullet = 350;\n          t.quotesinglbase = 333;\n          t.quotedblbase = 500;\n          t.quotedblright = 500;\n          t.guillemotright = 500;\n          t.ellipsis = 1000;\n          t.perthousand = 1000;\n          t.questiondown = 500;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 1000;\n          t.AE = 944;\n          t.ordfeminine = 266;\n          t.Lslash = 611;\n          t.Oslash = 722;\n          t.OE = 944;\n          t.ordmasculine = 300;\n          t.ae = 722;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 500;\n          t.oe = 722;\n          t.germandbls = 500;\n          t.Idieresis = 389;\n          t.eacute = 444;\n          t.abreve = 500;\n          t.uhungarumlaut = 556;\n          t.ecaron = 444;\n          t.Ydieresis = 611;\n          t.divide = 570;\n          t.Yacute = 611;\n          t.Acircumflex = 667;\n          t.aacute = 500;\n          t.Ucircumflex = 722;\n          t.yacute = 444;\n          t.scommaaccent = 389;\n          t.ecircumflex = 444;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 500;\n          t.Uacute = 722;\n          t.uogonek = 556;\n          t.Edieresis = 667;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 747;\n          t.Emacron = 667;\n          t.ccaron = 444;\n          t.aring = 500;\n          t.Ncommaaccent = 722;\n          t.lacute = 278;\n          t.agrave = 500;\n          t.Tcommaaccent = 611;\n          t.Cacute = 667;\n          t.atilde = 500;\n          t.Edotaccent = 667;\n          t.scaron = 389;\n          t.scedilla = 389;\n          t.iacute = 278;\n          t.lozenge = 494;\n          t.Rcaron = 667;\n          t.Gcommaaccent = 722;\n          t.ucircumflex = 556;\n          t.acircumflex = 500;\n          t.Amacron = 667;\n          t.rcaron = 389;\n          t.ccedilla = 444;\n          t.Zdotaccent = 611;\n          t.Thorn = 611;\n          t.Omacron = 722;\n          t.Racute = 667;\n          t.Sacute = 556;\n          t.dcaron = 608;\n          t.Umacron = 722;\n          t.uring = 556;\n          t.threesuperior = 300;\n          t.Ograve = 722;\n          t.Agrave = 667;\n          t.Abreve = 667;\n          t.multiply = 570;\n          t.uacute = 556;\n          t.Tcaron = 611;\n          t.partialdiff = 494;\n          t.ydieresis = 444;\n          t.Nacute = 722;\n          t.icircumflex = 278;\n          t.Ecircumflex = 667;\n          t.adieresis = 500;\n          t.edieresis = 444;\n          t.cacute = 444;\n          t.nacute = 556;\n          t.umacron = 556;\n          t.Ncaron = 722;\n          t.Iacute = 389;\n          t.plusminus = 570;\n          t.brokenbar = 220;\n          t.registered = 747;\n          t.Gbreve = 722;\n          t.Idotaccent = 389;\n          t.summation = 600;\n          t.Egrave = 667;\n          t.racute = 389;\n          t.omacron = 500;\n          t.Zacute = 611;\n          t.Zcaron = 611;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 667;\n          t.lcommaaccent = 278;\n          t.tcaron = 366;\n          t.eogonek = 444;\n          t.Uogonek = 722;\n          t.Aacute = 667;\n          t.Adieresis = 667;\n          t.egrave = 444;\n          t.zacute = 389;\n          t.iogonek = 278;\n          t.Oacute = 722;\n          t.oacute = 500;\n          t.amacron = 500;\n          t.sacute = 389;\n          t.idieresis = 278;\n          t.Ocircumflex = 722;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 500;\n          t.twosuperior = 300;\n          t.Odieresis = 722;\n          t.mu = 576;\n          t.igrave = 278;\n          t.ohungarumlaut = 500;\n          t.Eogonek = 667;\n          t.dcroat = 500;\n          t.threequarters = 750;\n          t.Scedilla = 556;\n          t.lcaron = 382;\n          t.Kcommaaccent = 667;\n          t.Lacute = 611;\n          t.trademark = 1000;\n          t.edotaccent = 444;\n          t.Igrave = 389;\n          t.Imacron = 389;\n          t.Lcaron = 611;\n          t.onehalf = 750;\n          t.lessequal = 549;\n          t.ocircumflex = 500;\n          t.ntilde = 556;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 667;\n          t.emacron = 444;\n          t.gbreve = 500;\n          t.onequarter = 750;\n          t.Scaron = 556;\n          t.Scommaaccent = 556;\n          t.Ohungarumlaut = 722;\n          t.degree = 400;\n          t.ograve = 500;\n          t.Ccaron = 667;\n          t.ugrave = 556;\n          t.radical = 549;\n          t.Dcaron = 722;\n          t.rcommaaccent = 389;\n          t.Ntilde = 722;\n          t.otilde = 500;\n          t.Rcommaaccent = 667;\n          t.Lcommaaccent = 611;\n          t.Atilde = 667;\n          t.Aogonek = 667;\n          t.Aring = 667;\n          t.Otilde = 722;\n          t.zdotaccent = 389;\n          t.Ecaron = 667;\n          t.Iogonek = 389;\n          t.kcommaaccent = 500;\n          t.minus = 606;\n          t.Icircumflex = 389;\n          t.ncaron = 556;\n          t.tcommaaccent = 278;\n          t.logicalnot = 606;\n          t.odieresis = 500;\n          t.udieresis = 556;\n          t.notequal = 549;\n          t.gcommaaccent = 500;\n          t.eth = 500;\n          t.zcaron = 389;\n          t.ncommaaccent = 556;\n          t.onesuperior = 300;\n          t.imacron = 278;\n          t.Euro = 500;\n        });\n        t[\"Times-Italic\"] = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 250;\n          t.exclam = 333;\n          t.quotedbl = 420;\n          t.numbersign = 500;\n          t.dollar = 500;\n          t.percent = 833;\n          t.ampersand = 778;\n          t.quoteright = 333;\n          t.parenleft = 333;\n          t.parenright = 333;\n          t.asterisk = 500;\n          t.plus = 675;\n          t.comma = 250;\n          t.hyphen = 333;\n          t.period = 250;\n          t.slash = 278;\n          t.zero = 500;\n          t.one = 500;\n          t.two = 500;\n          t.three = 500;\n          t.four = 500;\n          t.five = 500;\n          t.six = 500;\n          t.seven = 500;\n          t.eight = 500;\n          t.nine = 500;\n          t.colon = 333;\n          t.semicolon = 333;\n          t.less = 675;\n          t.equal = 675;\n          t.greater = 675;\n          t.question = 500;\n          t.at = 920;\n          t.A = 611;\n          t.B = 611;\n          t.C = 667;\n          t.D = 722;\n          t.E = 611;\n          t.F = 611;\n          t.G = 722;\n          t.H = 722;\n          t.I = 333;\n          t.J = 444;\n          t.K = 667;\n          t.L = 556;\n          t.M = 833;\n          t.N = 667;\n          t.O = 722;\n          t.P = 611;\n          t.Q = 722;\n          t.R = 611;\n          t.S = 500;\n          t.T = 556;\n          t.U = 722;\n          t.V = 611;\n          t.W = 833;\n          t.X = 611;\n          t.Y = 556;\n          t.Z = 556;\n          t.bracketleft = 389;\n          t.backslash = 278;\n          t.bracketright = 389;\n          t.asciicircum = 422;\n          t.underscore = 500;\n          t.quoteleft = 333;\n          t.a = 500;\n          t.b = 500;\n          t.c = 444;\n          t.d = 500;\n          t.e = 444;\n          t.f = 278;\n          t.g = 500;\n          t.h = 500;\n          t.i = 278;\n          t.j = 278;\n          t.k = 444;\n          t.l = 278;\n          t.m = 722;\n          t.n = 500;\n          t.o = 500;\n          t.p = 500;\n          t.q = 500;\n          t.r = 389;\n          t.s = 389;\n          t.t = 278;\n          t.u = 500;\n          t.v = 444;\n          t.w = 667;\n          t.x = 444;\n          t.y = 444;\n          t.z = 389;\n          t.braceleft = 400;\n          t.bar = 275;\n          t.braceright = 400;\n          t.asciitilde = 541;\n          t.exclamdown = 389;\n          t.cent = 500;\n          t.sterling = 500;\n          t.fraction = 167;\n          t.yen = 500;\n          t.florin = 500;\n          t.section = 500;\n          t.currency = 500;\n          t.quotesingle = 214;\n          t.quotedblleft = 556;\n          t.guillemotleft = 500;\n          t.guilsinglleft = 333;\n          t.guilsinglright = 333;\n          t.fi = 500;\n          t.fl = 500;\n          t.endash = 500;\n          t.dagger = 500;\n          t.daggerdbl = 500;\n          t.periodcentered = 250;\n          t.paragraph = 523;\n          t.bullet = 350;\n          t.quotesinglbase = 333;\n          t.quotedblbase = 556;\n          t.quotedblright = 556;\n          t.guillemotright = 500;\n          t.ellipsis = 889;\n          t.perthousand = 1000;\n          t.questiondown = 500;\n          t.grave = 333;\n          t.acute = 333;\n          t.circumflex = 333;\n          t.tilde = 333;\n          t.macron = 333;\n          t.breve = 333;\n          t.dotaccent = 333;\n          t.dieresis = 333;\n          t.ring = 333;\n          t.cedilla = 333;\n          t.hungarumlaut = 333;\n          t.ogonek = 333;\n          t.caron = 333;\n          t.emdash = 889;\n          t.AE = 889;\n          t.ordfeminine = 276;\n          t.Lslash = 556;\n          t.Oslash = 722;\n          t.OE = 944;\n          t.ordmasculine = 310;\n          t.ae = 667;\n          t.dotlessi = 278;\n          t.lslash = 278;\n          t.oslash = 500;\n          t.oe = 667;\n          t.germandbls = 500;\n          t.Idieresis = 333;\n          t.eacute = 444;\n          t.abreve = 500;\n          t.uhungarumlaut = 500;\n          t.ecaron = 444;\n          t.Ydieresis = 556;\n          t.divide = 675;\n          t.Yacute = 556;\n          t.Acircumflex = 611;\n          t.aacute = 500;\n          t.Ucircumflex = 722;\n          t.yacute = 444;\n          t.scommaaccent = 389;\n          t.ecircumflex = 444;\n          t.Uring = 722;\n          t.Udieresis = 722;\n          t.aogonek = 500;\n          t.Uacute = 722;\n          t.uogonek = 500;\n          t.Edieresis = 611;\n          t.Dcroat = 722;\n          t.commaaccent = 250;\n          t.copyright = 760;\n          t.Emacron = 611;\n          t.ccaron = 444;\n          t.aring = 500;\n          t.Ncommaaccent = 667;\n          t.lacute = 278;\n          t.agrave = 500;\n          t.Tcommaaccent = 556;\n          t.Cacute = 667;\n          t.atilde = 500;\n          t.Edotaccent = 611;\n          t.scaron = 389;\n          t.scedilla = 389;\n          t.iacute = 278;\n          t.lozenge = 471;\n          t.Rcaron = 611;\n          t.Gcommaaccent = 722;\n          t.ucircumflex = 500;\n          t.acircumflex = 500;\n          t.Amacron = 611;\n          t.rcaron = 389;\n          t.ccedilla = 444;\n          t.Zdotaccent = 556;\n          t.Thorn = 611;\n          t.Omacron = 722;\n          t.Racute = 611;\n          t.Sacute = 500;\n          t.dcaron = 544;\n          t.Umacron = 722;\n          t.uring = 500;\n          t.threesuperior = 300;\n          t.Ograve = 722;\n          t.Agrave = 611;\n          t.Abreve = 611;\n          t.multiply = 675;\n          t.uacute = 500;\n          t.Tcaron = 556;\n          t.partialdiff = 476;\n          t.ydieresis = 444;\n          t.Nacute = 667;\n          t.icircumflex = 278;\n          t.Ecircumflex = 611;\n          t.adieresis = 500;\n          t.edieresis = 444;\n          t.cacute = 444;\n          t.nacute = 500;\n          t.umacron = 500;\n          t.Ncaron = 667;\n          t.Iacute = 333;\n          t.plusminus = 675;\n          t.brokenbar = 275;\n          t.registered = 760;\n          t.Gbreve = 722;\n          t.Idotaccent = 333;\n          t.summation = 600;\n          t.Egrave = 611;\n          t.racute = 389;\n          t.omacron = 500;\n          t.Zacute = 556;\n          t.Zcaron = 556;\n          t.greaterequal = 549;\n          t.Eth = 722;\n          t.Ccedilla = 667;\n          t.lcommaaccent = 278;\n          t.tcaron = 300;\n          t.eogonek = 444;\n          t.Uogonek = 722;\n          t.Aacute = 611;\n          t.Adieresis = 611;\n          t.egrave = 444;\n          t.zacute = 389;\n          t.iogonek = 278;\n          t.Oacute = 722;\n          t.oacute = 500;\n          t.amacron = 500;\n          t.sacute = 389;\n          t.idieresis = 278;\n          t.Ocircumflex = 722;\n          t.Ugrave = 722;\n          t.Delta = 612;\n          t.thorn = 500;\n          t.twosuperior = 300;\n          t.Odieresis = 722;\n          t.mu = 500;\n          t.igrave = 278;\n          t.ohungarumlaut = 500;\n          t.Eogonek = 611;\n          t.dcroat = 500;\n          t.threequarters = 750;\n          t.Scedilla = 500;\n          t.lcaron = 300;\n          t.Kcommaaccent = 667;\n          t.Lacute = 556;\n          t.trademark = 980;\n          t.edotaccent = 444;\n          t.Igrave = 333;\n          t.Imacron = 333;\n          t.Lcaron = 611;\n          t.onehalf = 750;\n          t.lessequal = 549;\n          t.ocircumflex = 500;\n          t.ntilde = 500;\n          t.Uhungarumlaut = 722;\n          t.Eacute = 611;\n          t.emacron = 444;\n          t.gbreve = 500;\n          t.onequarter = 750;\n          t.Scaron = 500;\n          t.Scommaaccent = 500;\n          t.Ohungarumlaut = 722;\n          t.degree = 400;\n          t.ograve = 500;\n          t.Ccaron = 667;\n          t.ugrave = 500;\n          t.radical = 453;\n          t.Dcaron = 722;\n          t.rcommaaccent = 389;\n          t.Ntilde = 667;\n          t.otilde = 500;\n          t.Rcommaaccent = 611;\n          t.Lcommaaccent = 556;\n          t.Atilde = 611;\n          t.Aogonek = 611;\n          t.Aring = 611;\n          t.Otilde = 722;\n          t.zdotaccent = 389;\n          t.Ecaron = 611;\n          t.Iogonek = 333;\n          t.kcommaaccent = 444;\n          t.minus = 675;\n          t.Icircumflex = 333;\n          t.ncaron = 500;\n          t.tcommaaccent = 278;\n          t.logicalnot = 675;\n          t.odieresis = 500;\n          t.udieresis = 500;\n          t.notequal = 549;\n          t.gcommaaccent = 500;\n          t.eth = 500;\n          t.zcaron = 389;\n          t.ncommaaccent = 500;\n          t.onesuperior = 300;\n          t.imacron = 278;\n          t.Euro = 500;\n        });\n        t.ZapfDingbats = (0, _core_utils.getLookupTableFactory)(function (t) {\n          t.space = 278;\n          t.a1 = 974;\n          t.a2 = 961;\n          t.a202 = 974;\n          t.a3 = 980;\n          t.a4 = 719;\n          t.a5 = 789;\n          t.a119 = 790;\n          t.a118 = 791;\n          t.a117 = 690;\n          t.a11 = 960;\n          t.a12 = 939;\n          t.a13 = 549;\n          t.a14 = 855;\n          t.a15 = 911;\n          t.a16 = 933;\n          t.a105 = 911;\n          t.a17 = 945;\n          t.a18 = 974;\n          t.a19 = 755;\n          t.a20 = 846;\n          t.a21 = 762;\n          t.a22 = 761;\n          t.a23 = 571;\n          t.a24 = 677;\n          t.a25 = 763;\n          t.a26 = 760;\n          t.a27 = 759;\n          t.a28 = 754;\n          t.a6 = 494;\n          t.a7 = 552;\n          t.a8 = 537;\n          t.a9 = 577;\n          t.a10 = 692;\n          t.a29 = 786;\n          t.a30 = 788;\n          t.a31 = 788;\n          t.a32 = 790;\n          t.a33 = 793;\n          t.a34 = 794;\n          t.a35 = 816;\n          t.a36 = 823;\n          t.a37 = 789;\n          t.a38 = 841;\n          t.a39 = 823;\n          t.a40 = 833;\n          t.a41 = 816;\n          t.a42 = 831;\n          t.a43 = 923;\n          t.a44 = 744;\n          t.a45 = 723;\n          t.a46 = 749;\n          t.a47 = 790;\n          t.a48 = 792;\n          t.a49 = 695;\n          t.a50 = 776;\n          t.a51 = 768;\n          t.a52 = 792;\n          t.a53 = 759;\n          t.a54 = 707;\n          t.a55 = 708;\n          t.a56 = 682;\n          t.a57 = 701;\n          t.a58 = 826;\n          t.a59 = 815;\n          t.a60 = 789;\n          t.a61 = 789;\n          t.a62 = 707;\n          t.a63 = 687;\n          t.a64 = 696;\n          t.a65 = 689;\n          t.a66 = 786;\n          t.a67 = 787;\n          t.a68 = 713;\n          t.a69 = 791;\n          t.a70 = 785;\n          t.a71 = 791;\n          t.a72 = 873;\n          t.a73 = 761;\n          t.a74 = 762;\n          t.a203 = 762;\n          t.a75 = 759;\n          t.a204 = 759;\n          t.a76 = 892;\n          t.a77 = 892;\n          t.a78 = 788;\n          t.a79 = 784;\n          t.a81 = 438;\n          t.a82 = 138;\n          t.a83 = 277;\n          t.a84 = 415;\n          t.a97 = 392;\n          t.a98 = 392;\n          t.a99 = 668;\n          t.a100 = 668;\n          t.a89 = 390;\n          t.a90 = 390;\n          t.a93 = 317;\n          t.a94 = 317;\n          t.a91 = 276;\n          t.a92 = 276;\n          t.a205 = 509;\n          t.a85 = 509;\n          t.a206 = 410;\n          t.a86 = 410;\n          t.a87 = 234;\n          t.a88 = 234;\n          t.a95 = 334;\n          t.a96 = 334;\n          t.a101 = 732;\n          t.a102 = 544;\n          t.a103 = 544;\n          t.a104 = 910;\n          t.a106 = 667;\n          t.a107 = 760;\n          t.a108 = 760;\n          t.a112 = 776;\n          t.a111 = 595;\n          t.a110 = 694;\n          t.a109 = 626;\n          t.a120 = 788;\n          t.a121 = 788;\n          t.a122 = 788;\n          t.a123 = 788;\n          t.a124 = 788;\n          t.a125 = 788;\n          t.a126 = 788;\n          t.a127 = 788;\n          t.a128 = 788;\n          t.a129 = 788;\n          t.a130 = 788;\n          t.a131 = 788;\n          t.a132 = 788;\n          t.a133 = 788;\n          t.a134 = 788;\n          t.a135 = 788;\n          t.a136 = 788;\n          t.a137 = 788;\n          t.a138 = 788;\n          t.a139 = 788;\n          t.a140 = 788;\n          t.a141 = 788;\n          t.a142 = 788;\n          t.a143 = 788;\n          t.a144 = 788;\n          t.a145 = 788;\n          t.a146 = 788;\n          t.a147 = 788;\n          t.a148 = 788;\n          t.a149 = 788;\n          t.a150 = 788;\n          t.a151 = 788;\n          t.a152 = 788;\n          t.a153 = 788;\n          t.a154 = 788;\n          t.a155 = 788;\n          t.a156 = 788;\n          t.a157 = 788;\n          t.a158 = 788;\n          t.a159 = 788;\n          t.a160 = 894;\n          t.a161 = 838;\n          t.a163 = 1016;\n          t.a164 = 458;\n          t.a196 = 748;\n          t.a165 = 924;\n          t.a192 = 748;\n          t.a166 = 918;\n          t.a167 = 927;\n          t.a168 = 928;\n          t.a169 = 928;\n          t.a170 = 834;\n          t.a171 = 873;\n          t.a172 = 828;\n          t.a173 = 924;\n          t.a162 = 924;\n          t.a174 = 917;\n          t.a175 = 930;\n          t.a176 = 931;\n          t.a177 = 463;\n          t.a178 = 883;\n          t.a179 = 836;\n          t.a193 = 836;\n          t.a180 = 867;\n          t.a199 = 867;\n          t.a181 = 696;\n          t.a200 = 696;\n          t.a182 = 874;\n          t.a201 = 874;\n          t.a183 = 760;\n          t.a184 = 946;\n          t.a197 = 771;\n          t.a185 = 865;\n          t.a194 = 771;\n          t.a198 = 888;\n          t.a186 = 967;\n          t.a195 = 888;\n          t.a187 = 831;\n          t.a188 = 873;\n          t.a189 = 927;\n          t.a190 = 970;\n          t.a191 = 918;\n        });\n      });\n      exports.getMetrics = getMetrics;\n      /***/\n    },\n    /* 44 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MurmurHash3_64 = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var SEED = 0xc3d2e1f0;\n      var MASK_HIGH = 0xffff0000;\n      var MASK_LOW = 0xffff;\n\n      var MurmurHash3_64 = /*#__PURE__*/function () {\n        function MurmurHash3_64(seed) {\n          _classCallCheck(this, MurmurHash3_64);\n\n          this.h1 = seed ? seed & 0xffffffff : SEED;\n          this.h2 = seed ? seed & 0xffffffff : SEED;\n        }\n\n        _createClass(MurmurHash3_64, [{\n          key: \"update\",\n          value: function update(input) {\n            var data, length;\n\n            if ((0, _util.isString)(input)) {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n\n              for (var _i44 = 0, ii = input.length; _i44 < ii; _i44++) {\n                var code = input.charCodeAt(_i44);\n\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input;\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n\n            var blockCounts = length >> 2;\n            var tailLength = length - blockCounts * 4;\n            var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            var k1 = 0,\n                k2 = 0;\n            var h1 = this.h1,\n                h2 = this.h2;\n            var C1 = 0xcc9e2d51,\n                C2 = 0x1b873593;\n            var C1_LOW = C1 & MASK_LOW,\n                C2_LOW = C2 & MASK_LOW;\n\n            for (var _i45 = 0; _i45 < blockCounts; _i45++) {\n              if (_i45 & 1) {\n                k1 = dataUint32[_i45];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[_i45];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n\n            k1 = 0;\n\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n\n            }\n\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n        }, {\n          key: \"hexdigest\",\n          value: function hexdigest() {\n            var h1 = this.h1,\n                h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            var hex1 = (h1 >>> 0).toString(16),\n                hex2 = (h2 >>> 0).toString(16);\n            return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n          }\n        }]);\n\n        return MurmurHash3_64;\n      }();\n\n      exports.MurmurHash3_64 = MurmurHash3_64;\n      /***/\n    },\n    /* 45 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFImage = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _primitives = __w_pdfjs_require__(5);\n\n      var _colorspace = __w_pdfjs_require__(23);\n\n      var _stream = __w_pdfjs_require__(12);\n\n      var _jpeg_stream = __w_pdfjs_require__(18);\n\n      var _jpx = __w_pdfjs_require__(21);\n\n      function decodeAndClamp(value, addend, coefficient, max) {\n        value = addend + value * coefficient;\n\n        if (value < 0) {\n          value = 0;\n        } else if (value > max) {\n          value = max;\n        }\n\n        return value;\n      }\n\n      function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n        var length = w2 * h2;\n        var dest;\n\n        if (bpc <= 8) {\n          dest = new Uint8Array(length);\n        } else if (bpc <= 16) {\n          dest = new Uint16Array(length);\n        } else {\n          dest = new Uint32Array(length);\n        }\n\n        var xRatio = w1 / w2;\n        var yRatio = h1 / h2;\n        var i,\n            j,\n            py,\n            newIndex = 0,\n            oldIndex;\n        var xScaled = new Uint16Array(w2);\n        var w1Scanline = w1;\n\n        for (i = 0; i < w2; i++) {\n          xScaled[i] = Math.floor(i * xRatio);\n        }\n\n        for (i = 0; i < h2; i++) {\n          py = Math.floor(i * yRatio) * w1Scanline;\n\n          for (j = 0; j < w2; j++) {\n            oldIndex = py + xScaled[j];\n            dest[newIndex++] = src[oldIndex];\n          }\n        }\n\n        return dest;\n      }\n\n      var PDFImage = /*#__PURE__*/function () {\n        function PDFImage(_ref53) {\n          var xref = _ref53.xref,\n              res = _ref53.res,\n              image = _ref53.image,\n              _ref53$isInline = _ref53.isInline,\n              isInline = _ref53$isInline === void 0 ? false : _ref53$isInline,\n              _ref53$smask = _ref53.smask,\n              smask = _ref53$smask === void 0 ? null : _ref53$smask,\n              _ref53$mask = _ref53.mask,\n              mask = _ref53$mask === void 0 ? null : _ref53$mask,\n              _ref53$isMask = _ref53.isMask,\n              isMask = _ref53$isMask === void 0 ? false : _ref53$isMask,\n              pdfFunctionFactory = _ref53.pdfFunctionFactory,\n              localColorSpaceCache = _ref53.localColorSpaceCache;\n\n          _classCallCheck(this, PDFImage);\n\n          this.image = image;\n          var dict = image.dict;\n          var filter = dict.get(\"Filter\");\n\n          if ((0, _primitives.isName)(filter)) {\n            switch (filter.name) {\n              case \"JPXDecode\":\n                var jpxImage = new _jpx.JpxImage();\n                jpxImage.parseImageProperties(image.stream);\n                image.stream.reset();\n                image.width = jpxImage.width;\n                image.height = jpxImage.height;\n                image.bitsPerComponent = jpxImage.bitsPerComponent;\n                image.numComps = jpxImage.componentsCount;\n                break;\n\n              case \"JBIG2Decode\":\n                image.bitsPerComponent = 1;\n                image.numComps = 1;\n                break;\n            }\n          }\n\n          var width = dict.get(\"Width\", \"W\");\n          var height = dict.get(\"Height\", \"H\");\n\n          if (Number.isInteger(image.width) && image.width > 0 && Number.isInteger(image.height) && image.height > 0 && (image.width !== width || image.height !== height)) {\n            (0, _util.warn)(\"PDFImage - using the Width/Height of the image data, \" + \"rather than the image dictionary.\");\n            width = image.width;\n            height = image.height;\n          }\n\n          if (width < 1 || height < 1) {\n            throw new _util.FormatError(\"Invalid image width: \".concat(width, \" or height: \").concat(height));\n          }\n\n          this.width = width;\n          this.height = height;\n          this.interpolate = dict.get(\"Interpolate\", \"I\") || false;\n          this.imageMask = dict.get(\"ImageMask\", \"IM\") || false;\n          this.matte = dict.get(\"Matte\") || false;\n          var bitsPerComponent = image.bitsPerComponent;\n\n          if (!bitsPerComponent) {\n            bitsPerComponent = dict.get(\"BitsPerComponent\", \"BPC\");\n\n            if (!bitsPerComponent) {\n              if (this.imageMask) {\n                bitsPerComponent = 1;\n              } else {\n                throw new _util.FormatError(\"Bits per component missing in image: \".concat(this.imageMask));\n              }\n            }\n          }\n\n          this.bpc = bitsPerComponent;\n\n          if (!this.imageMask) {\n            var colorSpace = dict.getRaw(\"ColorSpace\") || dict.getRaw(\"CS\");\n\n            if (!colorSpace) {\n              (0, _util.info)(\"JPX images (which do not require color spaces)\");\n\n              switch (image.numComps) {\n                case 1:\n                  colorSpace = _primitives.Name.get(\"DeviceGray\");\n                  break;\n\n                case 3:\n                  colorSpace = _primitives.Name.get(\"DeviceRGB\");\n                  break;\n\n                case 4:\n                  colorSpace = _primitives.Name.get(\"DeviceCMYK\");\n                  break;\n\n                default:\n                  throw new Error(\"JPX images with \".concat(image.numComps, \" \") + \"color components not supported.\");\n              }\n            }\n\n            this.colorSpace = _colorspace.ColorSpace.parse({\n              cs: colorSpace,\n              xref: xref,\n              resources: isInline ? res : null,\n              pdfFunctionFactory: pdfFunctionFactory,\n              localColorSpaceCache: localColorSpaceCache\n            });\n            this.numComps = this.colorSpace.numComps;\n          }\n\n          this.decode = dict.getArray(\"Decode\", \"D\");\n          this.needsDecode = false;\n\n          if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode, bitsPerComponent) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n            this.needsDecode = true;\n            var max = (1 << bitsPerComponent) - 1;\n            this.decodeCoefficients = [];\n            this.decodeAddends = [];\n            var isIndexed = this.colorSpace && this.colorSpace.name === \"Indexed\";\n\n            for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n              var dmin = this.decode[i];\n              var dmax = this.decode[i + 1];\n              this.decodeCoefficients[j] = isIndexed ? (dmax - dmin) / max : dmax - dmin;\n              this.decodeAddends[j] = isIndexed ? dmin : max * dmin;\n            }\n          }\n\n          if (smask) {\n            this.smask = new PDFImage({\n              xref: xref,\n              res: res,\n              image: smask,\n              isInline: isInline,\n              pdfFunctionFactory: pdfFunctionFactory,\n              localColorSpaceCache: localColorSpaceCache\n            });\n          } else if (mask) {\n            if ((0, _primitives.isStream)(mask)) {\n              var maskDict = mask.dict,\n                  imageMask = maskDict.get(\"ImageMask\", \"IM\");\n\n              if (!imageMask) {\n                (0, _util.warn)(\"Ignoring /Mask in image without /ImageMask.\");\n              } else {\n                this.mask = new PDFImage({\n                  xref: xref,\n                  res: res,\n                  image: mask,\n                  isInline: isInline,\n                  isMask: true,\n                  pdfFunctionFactory: pdfFunctionFactory,\n                  localColorSpaceCache: localColorSpaceCache\n                });\n              }\n            } else {\n              this.mask = mask;\n            }\n          }\n        }\n\n        _createClass(PDFImage, [{\n          key: \"drawWidth\",\n          get: function get() {\n            return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n          }\n        }, {\n          key: \"drawHeight\",\n          get: function get() {\n            return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n          }\n        }, {\n          key: \"decodeBuffer\",\n          value: function decodeBuffer(buffer) {\n            var bpc = this.bpc;\n            var numComps = this.numComps;\n            var decodeAddends = this.decodeAddends;\n            var decodeCoefficients = this.decodeCoefficients;\n            var max = (1 << bpc) - 1;\n            var i, ii;\n\n            if (bpc === 1) {\n              for (i = 0, ii = buffer.length; i < ii; i++) {\n                buffer[i] = +!buffer[i];\n              }\n\n              return;\n            }\n\n            var index = 0;\n\n            for (i = 0, ii = this.width * this.height; i < ii; i++) {\n              for (var j = 0; j < numComps; j++) {\n                buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n                index++;\n              }\n            }\n          }\n        }, {\n          key: \"getComponents\",\n          value: function getComponents(buffer) {\n            var bpc = this.bpc;\n\n            if (bpc === 8) {\n              return buffer;\n            }\n\n            var width = this.width;\n            var height = this.height;\n            var numComps = this.numComps;\n            var length = width * height * numComps;\n            var bufferPos = 0;\n            var output;\n\n            if (bpc <= 8) {\n              output = new Uint8Array(length);\n            } else if (bpc <= 16) {\n              output = new Uint16Array(length);\n            } else {\n              output = new Uint32Array(length);\n            }\n\n            var rowComps = width * numComps;\n            var max = (1 << bpc) - 1;\n            var i = 0,\n                ii,\n                buf;\n\n            if (bpc === 1) {\n              var mask, loop1End, loop2End;\n\n              for (var j = 0; j < height; j++) {\n                loop1End = i + (rowComps & ~7);\n                loop2End = i + rowComps;\n\n                while (i < loop1End) {\n                  buf = buffer[bufferPos++];\n                  output[i] = buf >> 7 & 1;\n                  output[i + 1] = buf >> 6 & 1;\n                  output[i + 2] = buf >> 5 & 1;\n                  output[i + 3] = buf >> 4 & 1;\n                  output[i + 4] = buf >> 3 & 1;\n                  output[i + 5] = buf >> 2 & 1;\n                  output[i + 6] = buf >> 1 & 1;\n                  output[i + 7] = buf & 1;\n                  i += 8;\n                }\n\n                if (i < loop2End) {\n                  buf = buffer[bufferPos++];\n                  mask = 128;\n\n                  while (i < loop2End) {\n                    output[i++] = +!!(buf & mask);\n                    mask >>= 1;\n                  }\n                }\n              }\n            } else {\n              var bits = 0;\n              buf = 0;\n\n              for (i = 0, ii = length; i < ii; ++i) {\n                if (i % rowComps === 0) {\n                  buf = 0;\n                  bits = 0;\n                }\n\n                while (bits < bpc) {\n                  buf = buf << 8 | buffer[bufferPos++];\n                  bits += 8;\n                }\n\n                var remainingBits = bits - bpc;\n                var value = buf >> remainingBits;\n\n                if (value < 0) {\n                  value = 0;\n                } else if (value > max) {\n                  value = max;\n                }\n\n                output[i] = value;\n                buf = buf & (1 << remainingBits) - 1;\n                bits = remainingBits;\n              }\n            }\n\n            return output;\n          }\n        }, {\n          key: \"fillOpacity\",\n          value: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n            var smask = this.smask;\n            var mask = this.mask;\n            var alphaBuf, sw, sh, i, ii, j;\n\n            if (smask) {\n              sw = smask.width;\n              sh = smask.height;\n              alphaBuf = new Uint8ClampedArray(sw * sh);\n              smask.fillGrayBuffer(alphaBuf);\n\n              if (sw !== width || sh !== height) {\n                alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n              }\n            } else if (mask) {\n              if (mask instanceof PDFImage) {\n                sw = mask.width;\n                sh = mask.height;\n                alphaBuf = new Uint8ClampedArray(sw * sh);\n                mask.numComps = 1;\n                mask.fillGrayBuffer(alphaBuf);\n\n                for (i = 0, ii = sw * sh; i < ii; ++i) {\n                  alphaBuf[i] = 255 - alphaBuf[i];\n                }\n\n                if (sw !== width || sh !== height) {\n                  alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n                }\n              } else if (Array.isArray(mask)) {\n                alphaBuf = new Uint8ClampedArray(width * height);\n                var numComps = this.numComps;\n\n                for (i = 0, ii = width * height; i < ii; ++i) {\n                  var opacity = 0;\n                  var imageOffset = i * numComps;\n\n                  for (j = 0; j < numComps; ++j) {\n                    var color = image[imageOffset + j];\n                    var maskOffset = j * 2;\n\n                    if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                      opacity = 255;\n                      break;\n                    }\n                  }\n\n                  alphaBuf[i] = opacity;\n                }\n              } else {\n                throw new _util.FormatError(\"Unknown mask format.\");\n              }\n            }\n\n            if (alphaBuf) {\n              for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n                rgbaBuf[j] = alphaBuf[i];\n              }\n            } else {\n              for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n                rgbaBuf[j] = 255;\n              }\n            }\n          }\n        }, {\n          key: \"undoPreblend\",\n          value: function undoPreblend(buffer, width, height) {\n            var matte = this.smask && this.smask.matte;\n\n            if (!matte) {\n              return;\n            }\n\n            var matteRgb = this.colorSpace.getRgb(matte, 0);\n            var matteR = matteRgb[0];\n            var matteG = matteRgb[1];\n            var matteB = matteRgb[2];\n            var length = width * height * 4;\n\n            for (var i = 0; i < length; i += 4) {\n              var alpha = buffer[i + 3];\n\n              if (alpha === 0) {\n                buffer[i] = 255;\n                buffer[i + 1] = 255;\n                buffer[i + 2] = 255;\n                continue;\n              }\n\n              var k = 255 / alpha;\n              buffer[i] = (buffer[i] - matteR) * k + matteR;\n              buffer[i + 1] = (buffer[i + 1] - matteG) * k + matteG;\n              buffer[i + 2] = (buffer[i + 2] - matteB) * k + matteB;\n            }\n          }\n        }, {\n          key: \"createImageData\",\n          value: function createImageData() {\n            var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var drawWidth = this.drawWidth;\n            var drawHeight = this.drawHeight;\n            var imgData = {\n              width: drawWidth,\n              height: drawHeight,\n              kind: 0,\n              data: null\n            };\n            var numComps = this.numComps;\n            var originalWidth = this.width;\n            var originalHeight = this.height;\n            var bpc = this.bpc;\n            var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n            var imgArray;\n\n            if (!forceRGBA) {\n              var kind;\n\n              if (this.colorSpace.name === \"DeviceGray\" && bpc === 1) {\n                kind = _util.ImageKind.GRAYSCALE_1BPP;\n              } else if (this.colorSpace.name === \"DeviceRGB\" && bpc === 8 && !this.needsDecode) {\n                kind = _util.ImageKind.RGB_24BPP;\n              }\n\n              if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n                imgData.kind = kind;\n                imgArray = this.getImageBytes(originalHeight * rowBytes);\n\n                if (this.image instanceof _stream.DecodeStream) {\n                  imgData.data = imgArray;\n                } else {\n                  var newArray = new Uint8ClampedArray(imgArray.length);\n                  newArray.set(imgArray);\n                  imgData.data = newArray;\n                }\n\n                if (this.needsDecode) {\n                  (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP, \"PDFImage.createImageData: The image must be grayscale.\");\n                  var buffer = imgData.data;\n\n                  for (var i = 0, ii = buffer.length; i < ii; i++) {\n                    buffer[i] ^= 0xff;\n                  }\n                }\n\n                return imgData;\n              }\n\n              if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n                var imageLength = originalHeight * rowBytes;\n\n                switch (this.colorSpace.name) {\n                  case \"DeviceGray\":\n                    imageLength *= 3;\n\n                  case \"DeviceRGB\":\n                  case \"DeviceCMYK\":\n                    imgData.kind = _util.ImageKind.RGB_24BPP;\n                    imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n                    return imgData;\n                }\n              }\n            }\n\n            imgArray = this.getImageBytes(originalHeight * rowBytes);\n            var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n            var comps = this.getComponents(imgArray);\n            var alpha01, maybeUndoPreblend;\n\n            if (!forceRGBA && !this.smask && !this.mask) {\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = new Uint8ClampedArray(drawWidth * drawHeight * 3);\n              alpha01 = 0;\n              maybeUndoPreblend = false;\n            } else {\n              imgData.kind = _util.ImageKind.RGBA_32BPP;\n              imgData.data = new Uint8ClampedArray(drawWidth * drawHeight * 4);\n              alpha01 = 1;\n              maybeUndoPreblend = true;\n              this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n            }\n\n            if (this.needsDecode) {\n              this.decodeBuffer(comps);\n            }\n\n            this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\n            if (maybeUndoPreblend) {\n              this.undoPreblend(imgData.data, drawWidth, actualHeight);\n            }\n\n            return imgData;\n          }\n        }, {\n          key: \"fillGrayBuffer\",\n          value: function fillGrayBuffer(buffer) {\n            var numComps = this.numComps;\n\n            if (numComps !== 1) {\n              throw new _util.FormatError(\"Reading gray scale from a color image: \".concat(numComps));\n            }\n\n            var width = this.width;\n            var height = this.height;\n            var bpc = this.bpc;\n            var rowBytes = width * numComps * bpc + 7 >> 3;\n            var imgArray = this.getImageBytes(height * rowBytes);\n            var comps = this.getComponents(imgArray);\n            var i, length;\n\n            if (bpc === 1) {\n              length = width * height;\n\n              if (this.needsDecode) {\n                for (i = 0; i < length; ++i) {\n                  buffer[i] = comps[i] - 1 & 255;\n                }\n              } else {\n                for (i = 0; i < length; ++i) {\n                  buffer[i] = -comps[i] & 255;\n                }\n              }\n\n              return;\n            }\n\n            if (this.needsDecode) {\n              this.decodeBuffer(comps);\n            }\n\n            length = width * height;\n            var scale = 255 / ((1 << bpc) - 1);\n\n            for (i = 0; i < length; ++i) {\n              buffer[i] = scale * comps[i];\n            }\n          }\n        }, {\n          key: \"getImageBytes\",\n          value: function getImageBytes(length, drawWidth, drawHeight) {\n            var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            this.image.reset();\n            this.image.drawWidth = drawWidth || this.width;\n            this.image.drawHeight = drawHeight || this.height;\n            this.image.forceRGB = !!forceRGB;\n            return this.image.getBytes(length, true);\n          }\n        }], [{\n          key: \"buildImage\",\n          value: function () {\n            var _buildImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(_ref54) {\n              var xref, res, image, _ref54$isInline, isInline, pdfFunctionFactory, localColorSpaceCache, imageData, smaskData, maskData, smask, mask;\n\n              return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n                while (1) {\n                  switch (_context27.prev = _context27.next) {\n                    case 0:\n                      xref = _ref54.xref, res = _ref54.res, image = _ref54.image, _ref54$isInline = _ref54.isInline, isInline = _ref54$isInline === void 0 ? false : _ref54$isInline, pdfFunctionFactory = _ref54.pdfFunctionFactory, localColorSpaceCache = _ref54.localColorSpaceCache;\n                      imageData = image;\n                      smaskData = null;\n                      maskData = null;\n                      smask = image.dict.get(\"SMask\");\n                      mask = image.dict.get(\"Mask\");\n\n                      if (smask) {\n                        smaskData = smask;\n                      } else if (mask) {\n                        if ((0, _primitives.isStream)(mask) || Array.isArray(mask)) {\n                          maskData = mask;\n                        } else {\n                          (0, _util.warn)(\"Unsupported mask format.\");\n                        }\n                      }\n\n                      return _context27.abrupt(\"return\", new PDFImage({\n                        xref: xref,\n                        res: res,\n                        image: imageData,\n                        isInline: isInline,\n                        smask: smaskData,\n                        mask: maskData,\n                        pdfFunctionFactory: pdfFunctionFactory,\n                        localColorSpaceCache: localColorSpaceCache\n                      }));\n\n                    case 8:\n                    case \"end\":\n                      return _context27.stop();\n                  }\n                }\n              }, _callee27);\n            }));\n\n            function buildImage(_x53) {\n              return _buildImage.apply(this, arguments);\n            }\n\n            return buildImage;\n          }()\n        }, {\n          key: \"createMask\",\n          value: function createMask(_ref55) {\n            var imgArray = _ref55.imgArray,\n                width = _ref55.width,\n                height = _ref55.height,\n                imageIsFromDecodeStream = _ref55.imageIsFromDecodeStream,\n                inverseDecode = _ref55.inverseDecode;\n            var computedLength = (width + 7 >> 3) * height;\n            var actualLength = imgArray.byteLength;\n            var haveFullData = computedLength === actualLength;\n            var data, i;\n\n            if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n              data = imgArray;\n            } else if (!inverseDecode) {\n              data = new Uint8ClampedArray(actualLength);\n              data.set(imgArray);\n            } else {\n              data = new Uint8ClampedArray(computedLength);\n              data.set(imgArray);\n\n              for (i = actualLength; i < computedLength; i++) {\n                data[i] = 0xff;\n              }\n            }\n\n            if (inverseDecode) {\n              for (i = 0; i < actualLength; i++) {\n                data[i] ^= 0xff;\n              }\n            }\n\n            return {\n              data: data,\n              width: width,\n              height: height\n            };\n          }\n        }]);\n\n        return PDFImage;\n      }();\n\n      exports.PDFImage = PDFImage;\n      /***/\n    },\n    /* 46 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      var StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n\n      function wrapReason(reason) {\n        if (typeof reason !== \"object\" || reason === null) {\n          return reason;\n        }\n\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n\n      var MessageHandler = /*#__PURE__*/function () {\n        function MessageHandler(sourceName, targetName, comObj) {\n          var _this73 = this;\n\n          _classCallCheck(this, MessageHandler);\n\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n\n          this._onComObjOnMessage = function (event) {\n            var data = event.data;\n\n            if (data.targetName !== _this73.sourceName) {\n              return;\n            }\n\n            if (data.stream) {\n              _this73._processStreamMessage(data);\n\n              return;\n            }\n\n            if (data.callback) {\n              var callbackId = data.callbackId;\n              var capability = _this73.callbackCapabilities[callbackId];\n\n              if (!capability) {\n                throw new Error(\"Cannot resolve callback \".concat(callbackId));\n              }\n\n              delete _this73.callbackCapabilities[callbackId];\n\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n\n              return;\n            }\n\n            var action = _this73.actionHandler[data.action];\n\n            if (!action) {\n              throw new Error(\"Unknown action from worker: \".concat(data.action));\n            }\n\n            if (data.callbackId) {\n              var cbSourceName = _this73.sourceName;\n              var cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n\n            if (data.streamId) {\n              _this73._createStreamSink(data);\n\n              return;\n            }\n\n            action(data.data);\n          };\n\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n        _createClass(MessageHandler, [{\n          key: \"on\",\n          value: function on(actionName, handler) {\n            var ah = this.actionHandler;\n\n            if (ah[actionName]) {\n              throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n            }\n\n            ah[actionName] = handler;\n          }\n        }, {\n          key: \"send\",\n          value: function send(actionName, data, transfers) {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data: data\n            }, transfers);\n          }\n        }, {\n          key: \"sendWithPromise\",\n          value: function sendWithPromise(actionName, data, transfers) {\n            var callbackId = this.callbackId++;\n            var capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n\n            try {\n              this._postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId: callbackId,\n                data: data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n\n            return capability.promise;\n          }\n        }, {\n          key: \"sendWithStream\",\n          value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n            var _this74 = this;\n\n            var streamId = this.streamId++;\n            var sourceName = this.sourceName;\n            var targetName = this.targetName;\n            var comObj = this.comObj;\n            return new ReadableStream({\n              start: function start(controller) {\n                var startCapability = (0, _util.createPromiseCapability)();\n                _this74.streamControllers[streamId] = {\n                  controller: controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n\n                _this74._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  action: actionName,\n                  streamId: streamId,\n                  data: data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n\n                return startCapability.promise;\n              },\n              pull: function pull(controller) {\n                var pullCapability = (0, _util.createPromiseCapability)();\n                _this74.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.PULL,\n                  streamId: streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: function cancel(reason) {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                var cancelCapability = (0, _util.createPromiseCapability)();\n                _this74.streamControllers[streamId].cancelCall = cancelCapability;\n                _this74.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n        }, {\n          key: \"_createStreamSink\",\n          value: function _createStreamSink(data) {\n            var self = this;\n            var action = this.actionHandler[data.action];\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n            var streamSink = {\n              enqueue: function enqueue(chunk) {\n                var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                var lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n\n                self._postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId: streamId,\n                  chunk: chunk\n                }, transfers);\n              },\n              close: function close() {\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId: streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error: function error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.ERROR,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName: sourceName,\n                targetName: targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId: streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n        }, {\n          key: \"_processStreamMessage\",\n          value: function _processStreamMessage(data) {\n            var streamId = data.streamId;\n            var sourceName = this.sourceName;\n            var targetName = data.sourceName;\n            var comObj = this.comObj;\n\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].startCall.resolve();\n                } else {\n                  this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].pullCall.resolve();\n                } else {\n                  this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL:\n                if (!this.streamSinks[streamId]) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                  break;\n                }\n\n                if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                  this.streamSinks[streamId].sinkCapability.resolve();\n                }\n\n                this.streamSinks[streamId].desiredSize = data.desiredSize;\n                var onPull = this.streamSinks[data.streamId].onPull;\n                new Promise(function (resolve) {\n                  resolve(onPull && onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n\n                this.streamControllers[streamId].controller.enqueue(data.chunk);\n                break;\n\n              case StreamKind.CLOSE:\n                (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n                if (this.streamControllers[streamId].isClosed) {\n                  break;\n                }\n\n                this.streamControllers[streamId].isClosed = true;\n                this.streamControllers[streamId].controller.close();\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.ERROR:\n                (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n                this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  this.streamControllers[streamId].cancelCall.resolve();\n                } else {\n                  this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n                }\n\n                this._deleteStreamController(streamId);\n\n                break;\n\n              case StreamKind.CANCEL:\n                if (!this.streamSinks[streamId]) {\n                  break;\n                }\n\n                var onCancel = this.streamSinks[data.streamId].onCancel;\n                new Promise(function (resolve) {\n                  resolve(onCancel && onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n                this.streamSinks[streamId].isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n        }, {\n          key: \"_deleteStreamController\",\n          value: function () {\n            var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(streamId) {\n              return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n                while (1) {\n                  switch (_context28.prev = _context28.next) {\n                    case 0:\n                      _context28.next = 2;\n                      return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                        return capability && capability.promise;\n                      }));\n\n                    case 2:\n                      delete this.streamControllers[streamId];\n\n                    case 3:\n                    case \"end\":\n                      return _context28.stop();\n                  }\n                }\n              }, _callee28, this);\n            }));\n\n            function _deleteStreamController(_x54) {\n              return _deleteStreamController2.apply(this, arguments);\n            }\n\n            return _deleteStreamController;\n          }()\n        }, {\n          key: \"_postMessage\",\n          value: function _postMessage(message, transfers) {\n            if (transfers && this.postMessageTransfers) {\n              this.comObj.postMessage(message, transfers);\n            } else {\n              this.comObj.postMessage(message);\n            }\n          }\n        }, {\n          key: \"destroy\",\n          value: function destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }]);\n\n        return MessageHandler;\n      }();\n\n      exports.MessageHandler = MessageHandler;\n      /***/\n    },\n    /* 47 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFWorkerStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var PDFWorkerStream = /*#__PURE__*/function () {\n        function PDFWorkerStream(msgHandler) {\n          _classCallCheck(this, PDFWorkerStream);\n\n          this._msgHandler = msgHandler;\n          this._contentLength = null;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _createClass(PDFWorkerStream, [{\n          key: \"getFullReader\",\n          value: function getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFWorkerStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n            return this._fullRequestReader;\n          }\n        }, {\n          key: \"getRangeReader\",\n          value: function getRangeReader(begin, end) {\n            var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n        }, {\n          key: \"cancelAllRequests\",\n          value: function cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            var readers = this._rangeRequestReaders.slice(0);\n\n            readers.forEach(function (reader) {\n              reader.cancel(reason);\n            });\n          }\n        }]);\n\n        return PDFWorkerStream;\n      }();\n\n      exports.PDFWorkerStream = PDFWorkerStream;\n\n      var PDFWorkerStreamReader = /*#__PURE__*/function () {\n        function PDFWorkerStreamReader(msgHandler) {\n          var _this75 = this;\n\n          _classCallCheck(this, PDFWorkerStreamReader);\n\n          this._msgHandler = msgHandler;\n          this.onProgress = null;\n          this._contentLength = null;\n          this._isRangeSupported = false;\n          this._isStreamingSupported = false;\n\n          var readableStream = this._msgHandler.sendWithStream(\"GetReader\");\n\n          this._reader = readableStream.getReader();\n          this._headersReady = this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then(function (data) {\n            _this75._isStreamingSupported = data.isStreamingSupported;\n            _this75._isRangeSupported = data.isRangeSupported;\n            _this75._contentLength = data.contentLength;\n          });\n        }\n\n        _createClass(PDFWorkerStreamReader, [{\n          key: \"headersReady\",\n          get: function get() {\n            return this._headersReady;\n          }\n        }, {\n          key: \"contentLength\",\n          get: function get() {\n            return this._contentLength;\n          }\n        }, {\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return this._isStreamingSupported;\n          }\n        }, {\n          key: \"isRangeSupported\",\n          get: function get() {\n            return this._isRangeSupported;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29() {\n              var _yield$this$_reader$r, value, done;\n\n              return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n                while (1) {\n                  switch (_context29.prev = _context29.next) {\n                    case 0:\n                      _context29.next = 2;\n                      return this._reader.read();\n\n                    case 2:\n                      _yield$this$_reader$r = _context29.sent;\n                      value = _yield$this$_reader$r.value;\n                      done = _yield$this$_reader$r.done;\n\n                      if (!done) {\n                        _context29.next = 7;\n                        break;\n                      }\n\n                      return _context29.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 7:\n                      return _context29.abrupt(\"return\", {\n                        value: value.buffer,\n                        done: false\n                      });\n\n                    case 8:\n                    case \"end\":\n                      return _context29.stop();\n                  }\n                }\n              }, _callee29, this);\n            }));\n\n            function read() {\n              return _read.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._reader.cancel(reason);\n          }\n        }]);\n\n        return PDFWorkerStreamReader;\n      }();\n\n      var PDFWorkerStreamRangeReader = /*#__PURE__*/function () {\n        function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n          _classCallCheck(this, PDFWorkerStreamRangeReader);\n\n          this._msgHandler = msgHandler;\n          this.onProgress = null;\n\n          var readableStream = this._msgHandler.sendWithStream(\"GetRangeReader\", {\n            begin: begin,\n            end: end\n          });\n\n          this._reader = readableStream.getReader();\n        }\n\n        _createClass(PDFWorkerStreamRangeReader, [{\n          key: \"isStreamingSupported\",\n          get: function get() {\n            return false;\n          }\n        }, {\n          key: \"read\",\n          value: function () {\n            var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30() {\n              var _yield$this$_reader$r2, value, done;\n\n              return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n                while (1) {\n                  switch (_context30.prev = _context30.next) {\n                    case 0:\n                      _context30.next = 2;\n                      return this._reader.read();\n\n                    case 2:\n                      _yield$this$_reader$r2 = _context30.sent;\n                      value = _yield$this$_reader$r2.value;\n                      done = _yield$this$_reader$r2.done;\n\n                      if (!done) {\n                        _context30.next = 7;\n                        break;\n                      }\n\n                      return _context30.abrupt(\"return\", {\n                        value: undefined,\n                        done: true\n                      });\n\n                    case 7:\n                      return _context30.abrupt(\"return\", {\n                        value: value.buffer,\n                        done: false\n                      });\n\n                    case 8:\n                    case \"end\":\n                      return _context30.stop();\n                  }\n                }\n              }, _callee30, this);\n            }));\n\n            function read() {\n              return _read2.apply(this, arguments);\n            }\n\n            return read;\n          }()\n        }, {\n          key: \"cancel\",\n          value: function cancel(reason) {\n            this._reader.cancel(reason);\n          }\n        }]);\n\n        return PDFWorkerStreamRangeReader;\n      }();\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","banner":"For license information please see 3f3e86c466d5a4a1a520a86667ffda62.js.LICENSE.txt","extractedComments":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n","commentsFilename":"3f3e86c466d5a4a1a520a86667ffda62.js.LICENSE.txt"}